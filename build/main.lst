ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.global	ITsta
  20              		.section	.bss.ITsta,"aw",%nobits
  23              	ITsta:
  24 0000 00       		.space	1
  25              		.section	.text.main,"ax",%progbits
  26              		.align	1
  27              		.global	main
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	main:
  33              	.LFB152:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "fdcan.h"
  24:Core/Src/main.c **** #include "iwdg.h"
  25:Core/Src/main.c **** #include "memorymap.h"
  26:Core/Src/main.c **** #include "octospi.h"
  27:Core/Src/main.c **** #include "spi.h"
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 2


  28:Core/Src/main.c **** #include "tim.h"
  29:Core/Src/main.c **** #include "usart.h"
  30:Core/Src/main.c **** #include "usb_device.h"
  31:Core/Src/main.c **** #include "gpio.h"
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  35:Core/Src/main.c **** #include "UART_data_txrx.h"
  36:Core/Src/main.c **** #include "CAN_receive_send.h"
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** #include "motor.h"
  39:Core/Src/main.c **** #include "supercup.h"
  40:Core/Src/main.c **** #include "IMU_updata.h"
  41:Core/Src/main.c **** #include "LED.h"
  42:Core/Src/main.c **** #include "Power_switch.h"
  43:Core/Src/main.c **** #include "referee_system.h"
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** #include "music.h"
  46:Core/Src/main.c **** #include "Chassis.h"
  47:Core/Src/main.c **** #include "Gimbal.h"
  48:Core/Src/main.c **** #include "shoot.h"
  49:Core/Src/main.c **** #include "Auto_control.h"
  50:Core/Src/main.c **** #include "Global_status.h"
  51:Core/Src/main.c **** /* USER CODE END Includes */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PTD */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN PD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PM */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** static void MPU_Config(void);
  77:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** HAL_StatusTypeDef ITsta;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 3


  85:Core/Src/main.c **** extern DMA_HandleTypeDef hdma_uart7_rx;
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  34              		.loc 1 93 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
  45              		.cfi_def_cfa_register 7
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
 100:Core/Src/main.c ****   MPU_Config();
  46              		.loc 1 100 3
  47 0004 FFF7FEFF 		bl	MPU_Config
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
  48              		.loc 1 105 3
  49 0008 FFF7FEFF 		bl	HAL_Init
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Configure the system clock */
 112:Core/Src/main.c ****   SystemClock_Config();
  50              		.loc 1 112 3
  51 000c FFF7FEFF 		bl	SystemClock_Config
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Initialize all configured peripherals */
 119:Core/Src/main.c ****   MX_GPIO_Init();
  52              		.loc 1 119 3
  53 0010 FFF7FEFF 		bl	MX_GPIO_Init
 120:Core/Src/main.c ****   MX_DMA_Init();
  54              		.loc 1 120 3
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 4


  55 0014 FFF7FEFF 		bl	MX_DMA_Init
 121:Core/Src/main.c ****   MX_FDCAN1_Init();
  56              		.loc 1 121 3
  57 0018 FFF7FEFF 		bl	MX_FDCAN1_Init
 122:Core/Src/main.c ****   MX_FDCAN2_Init();
  58              		.loc 1 122 3
  59 001c FFF7FEFF 		bl	MX_FDCAN2_Init
 123:Core/Src/main.c ****   MX_SPI2_Init();
  60              		.loc 1 123 3
  61 0020 FFF7FEFF 		bl	MX_SPI2_Init
 124:Core/Src/main.c ****   MX_TIM3_Init();
  62              		.loc 1 124 3
  63 0024 FFF7FEFF 		bl	MX_TIM3_Init
 125:Core/Src/main.c ****   MX_TIM13_Init();
  64              		.loc 1 125 3
  65 0028 FFF7FEFF 		bl	MX_TIM13_Init
 126:Core/Src/main.c ****   MX_TIM14_Init();
  66              		.loc 1 126 3
  67 002c FFF7FEFF 		bl	MX_TIM14_Init
 127:Core/Src/main.c ****   MX_SPI6_Init();
  68              		.loc 1 127 3
  69 0030 FFF7FEFF 		bl	MX_SPI6_Init
 128:Core/Src/main.c ****   MX_UART5_Init();
  70              		.loc 1 128 3
  71 0034 FFF7FEFF 		bl	MX_UART5_Init
 129:Core/Src/main.c ****   MX_UART7_Init();
  72              		.loc 1 129 3
  73 0038 FFF7FEFF 		bl	MX_UART7_Init
 130:Core/Src/main.c ****   MX_USART10_UART_Init();
  74              		.loc 1 130 3
  75 003c FFF7FEFF 		bl	MX_USART10_UART_Init
 131:Core/Src/main.c ****   MX_FDCAN3_Init();
  76              		.loc 1 131 3
  77 0040 FFF7FEFF 		bl	MX_FDCAN3_Init
 132:Core/Src/main.c ****   MX_OCTOSPI2_Init();
  78              		.loc 1 132 3
  79 0044 FFF7FEFF 		bl	MX_OCTOSPI2_Init
 133:Core/Src/main.c ****   MX_IWDG1_Init();
  80              		.loc 1 133 3
  81 0048 FFF7FEFF 		bl	MX_IWDG1_Init
 134:Core/Src/main.c ****   MX_USART2_UART_Init();
  82              		.loc 1 134 3
  83 004c FFF7FEFF 		bl	MX_USART2_UART_Init
 135:Core/Src/main.c ****   MX_USART3_UART_Init();
  84              		.loc 1 135 3
  85 0050 FFF7FEFF 		bl	MX_USART3_UART_Init
 136:Core/Src/main.c ****   MX_USART1_UART_Init();
  86              		.loc 1 136 3
  87 0054 FFF7FEFF 		bl	MX_USART1_UART_Init
 137:Core/Src/main.c ****   MX_TIM12_Init();
  88              		.loc 1 137 3
  89 0058 FFF7FEFF 		bl	MX_TIM12_Init
 138:Core/Src/main.c ****   MX_TIM1_Init();
  90              		.loc 1 138 3
  91 005c FFF7FEFF 		bl	MX_TIM1_Init
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 140:Core/Src/main.c ****   HAL_IWDG_Refresh(&hiwdg1);
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 5


  92              		.loc 1 140 3
  93 0060 1048     		ldr	r0, .L3
  94 0062 FFF7FEFF 		bl	HAL_IWDG_Refresh
 141:Core/Src/main.c ****   /*INIT*/
 142:Core/Src/main.c ****   uart_init();
  95              		.loc 1 142 3
  96 0066 FFF7FEFF 		bl	uart_init
 143:Core/Src/main.c ****   can_init();
  97              		.loc 1 143 3
  98 006a FFF7FEFF 		bl	can_init
 144:Core/Src/main.c ****   Refree_system_init();
  99              		.loc 1 144 3
 100 006e FFF7FEFF 		bl	Refree_system_init
 145:Core/Src/main.c ****   
 146:Core/Src/main.c ****   IMU_init();
 101              		.loc 1 146 3
 102 0072 FFF7FEFF 		bl	IMU_init
 147:Core/Src/main.c ****   Music_init();
 103              		.loc 1 147 3
 104 0076 FFF7FEFF 		bl	Music_init
 148:Core/Src/main.c ****   Chassis_init();
 105              		.loc 1 148 3
 106 007a FFF7FEFF 		bl	Chassis_init
 149:Core/Src/main.c ****   Gimbal_init();
 107              		.loc 1 149 3
 108 007e FFF7FEFF 		bl	Gimbal_init
 150:Core/Src/main.c ****   Shoot_init();
 109              		.loc 1 150 3
 110 0082 FFF7FEFF 		bl	Shoot_init
 151:Core/Src/main.c ****   HAL_IWDG_Refresh(&hiwdg1);
 111              		.loc 1 151 3
 112 0086 0748     		ldr	r0, .L3
 113 0088 FFF7FEFF 		bl	HAL_IWDG_Refresh
 152:Core/Src/main.c ****   PWM_control_init();
 114              		.loc 1 152 3
 115 008c FFF7FEFF 		bl	PWM_control_init
 153:Core/Src/main.c ****   GPIO_init();
 116              		.loc 1 153 3
 117 0090 FFF7FEFF 		bl	GPIO_init
 154:Core/Src/main.c ****   // OSPI_W25Qxx_Init(); // 锟斤拷始锟斤拷OSPI锟斤拷W25Q64
 155:Core/Src/main.c ****   // OSPI_W25Qxx_Test(); // Flash锟斤拷写锟斤拷锟斤拷
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END 2 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Init scheduler */
 160:Core/Src/main.c ****   osKernelInitialize();
 118              		.loc 1 160 3
 119 0094 FFF7FEFF 		bl	osKernelInitialize
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 163:Core/Src/main.c ****   MX_FREERTOS_Init();
 120              		.loc 1 163 3
 121 0098 FFF7FEFF 		bl	MX_FREERTOS_Init
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Start scheduler */
 166:Core/Src/main.c ****   osKernelStart();
 122              		.loc 1 166 3
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 6


 123 009c FFF7FEFF 		bl	osKernelStart
 124              	.L2:
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* Infinite loop */
 171:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 172:Core/Src/main.c ****   while (1)
 125              		.loc 1 172 9
 126 00a0 00BF     		nop
 127 00a2 FDE7     		b	.L2
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 00a4 00000000 		.word	hiwdg1
 132              		.cfi_endproc
 133              	.LFE152:
 135              		.section	.text.SystemClock_Config,"ax",%progbits
 136              		.align	1
 137              		.global	SystemClock_Config
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SystemClock_Config:
 143              	.LFB153:
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     /* USER CODE END WHILE */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   /* USER CODE END 3 */
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief System Clock Configuration
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void SystemClock_Config(void)
 186:Core/Src/main.c **** {
 144              		.loc 1 186 1
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 112
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 9CB0     		sub	sp, sp, #112
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 120
 156 0004 00AF     		add	r7, sp, #0
 157              	.LCFI4:
 158              		.cfi_def_cfa_register 7
 187:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 159              		.loc 1 187 22
 160 0006 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 7


 161 000a 4C22     		movs	r2, #76
 162 000c 0021     		movs	r1, #0
 163 000e 1846     		mov	r0, r3
 164 0010 FFF7FEFF 		bl	memset
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165              		.loc 1 188 22
 166 0014 3B1D     		adds	r3, r7, #4
 167 0016 2022     		movs	r2, #32
 168 0018 0021     		movs	r1, #0
 169 001a 1846     		mov	r0, r3
 170 001c FFF7FEFF 		bl	memset
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /** Supply configuration update enable
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 171              		.loc 1 192 3
 172 0020 0220     		movs	r0, #2
 173 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 174              	.LBB4:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 175              		.loc 1 196 3
 176 0026 0023     		movs	r3, #0
 177 0028 3B60     		str	r3, [r7]
 178 002a 354B     		ldr	r3, .L9
 179 002c 9B69     		ldr	r3, [r3, #24]
 180 002e 344A     		ldr	r2, .L9
 181 0030 23F44043 		bic	r3, r3, #49152
 182 0034 9361     		str	r3, [r2, #24]
 183 0036 324B     		ldr	r3, .L9
 184 0038 9B69     		ldr	r3, [r3, #24]
 185 003a 03F44043 		and	r3, r3, #49152
 186 003e 3B60     		str	r3, [r7]
 187 0040 3B68     		ldr	r3, [r7]
 188              	.LBE4:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 189              		.loc 1 198 8
 190 0042 00BF     		nop
 191              	.L6:
 192              		.loc 1 198 10 discriminator 1
 193 0044 2E4B     		ldr	r3, .L9
 194 0046 9B69     		ldr	r3, [r3, #24]
 195 0048 03F40053 		and	r3, r3, #8192
 196              		.loc 1 198 9 discriminator 1
 197 004c B3F5005F 		cmp	r3, #8192
 198 0050 F8D1     		bne	.L6
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 201:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSI
 199              		.loc 1 203 36
 200 0052 2B23     		movs	r3, #43
 201 0054 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 8


 204:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 202              		.loc 1 205 30
 203 0056 4FF48033 		mov	r3, #65536
 204 005a BB62     		str	r3, [r7, #40]
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 205              		.loc 1 206 30
 206 005c 0123     		movs	r3, #1
 207 005e 3B63     		str	r3, [r7, #48]
 207:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 208              		.loc 1 207 41
 209 0060 4023     		movs	r3, #64
 210 0062 7B63     		str	r3, [r7, #52]
 208:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 211              		.loc 1 208 30
 212 0064 0123     		movs	r3, #1
 213 0066 BB63     		str	r3, [r7, #56]
 209:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 214              		.loc 1 209 32
 215 0068 0123     		movs	r3, #1
 216 006a FB63     		str	r3, [r7, #60]
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 217              		.loc 1 210 34
 218 006c 0223     		movs	r3, #2
 219 006e BB64     		str	r3, [r7, #72]
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 220              		.loc 1 211 35
 221 0070 0223     		movs	r3, #2
 222 0072 FB64     		str	r3, [r7, #76]
 212:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 223              		.loc 1 212 30
 224 0074 0223     		movs	r3, #2
 225 0076 3B65     		str	r3, [r7, #80]
 213:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 226              		.loc 1 213 30
 227 0078 2823     		movs	r3, #40
 228 007a 7B65     		str	r3, [r7, #84]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 229              		.loc 1 214 30
 230 007c 0123     		movs	r3, #1
 231 007e BB65     		str	r3, [r7, #88]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 232              		.loc 1 215 30
 233 0080 0423     		movs	r3, #4
 234 0082 FB65     		str	r3, [r7, #92]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 235              		.loc 1 216 30
 236 0084 0223     		movs	r3, #2
 237 0086 3B66     		str	r3, [r7, #96]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 238              		.loc 1 217 32
 239 0088 0C23     		movs	r3, #12
 240 008a 7B66     		str	r3, [r7, #100]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 241              		.loc 1 218 35
 242 008c 0023     		movs	r3, #0
 243 008e BB66     		str	r3, [r7, #104]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 9


 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 244              		.loc 1 219 34
 245 0090 0023     		movs	r3, #0
 246 0092 FB66     		str	r3, [r7, #108]
 220:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 247              		.loc 1 220 7
 248 0094 07F12403 		add	r3, r7, #36
 249 0098 1846     		mov	r0, r3
 250 009a FFF7FEFF 		bl	HAL_RCC_OscConfig
 251 009e 0346     		mov	r3, r0
 252              		.loc 1 220 6 discriminator 1
 253 00a0 002B     		cmp	r3, #0
 254 00a2 01D0     		beq	.L7
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 255              		.loc 1 222 5
 256 00a4 FFF7FEFF 		bl	Error_Handler
 257              	.L7:
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 258              		.loc 1 227 31
 259 00a8 3F23     		movs	r3, #63
 260 00aa 7B60     		str	r3, [r7, #4]
 228:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 229:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 230:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 261              		.loc 1 230 34
 262 00ac 0323     		movs	r3, #3
 263 00ae BB60     		str	r3, [r7, #8]
 231:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 264              		.loc 1 231 35
 265 00b0 0023     		movs	r3, #0
 266 00b2 FB60     		str	r3, [r7, #12]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 267              		.loc 1 232 35
 268 00b4 0823     		movs	r3, #8
 269 00b6 3B61     		str	r3, [r7, #16]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 270              		.loc 1 233 36
 271 00b8 4023     		movs	r3, #64
 272 00ba 7B61     		str	r3, [r7, #20]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 273              		.loc 1 234 36
 274 00bc 4023     		movs	r3, #64
 275 00be BB61     		str	r3, [r7, #24]
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 276              		.loc 1 235 36
 277 00c0 4FF48063 		mov	r3, #1024
 278 00c4 FB61     		str	r3, [r7, #28]
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 279              		.loc 1 236 36
 280 00c6 4023     		movs	r3, #64
 281 00c8 3B62     		str	r3, [r7, #32]
 237:Core/Src/main.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 10


 238:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 282              		.loc 1 238 7
 283 00ca 3B1D     		adds	r3, r7, #4
 284 00cc 0321     		movs	r1, #3
 285 00ce 1846     		mov	r0, r3
 286 00d0 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 287 00d4 0346     		mov	r3, r0
 288              		.loc 1 238 6 discriminator 1
 289 00d6 002B     		cmp	r3, #0
 290 00d8 01D0     		beq	.L8
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 291              		.loc 1 240 5
 292 00da FFF7FEFF 		bl	Error_Handler
 293              	.L8:
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 294              		.loc 1 242 3
 295 00de 4FF48022 		mov	r2, #262144
 296 00e2 0021     		movs	r1, #0
 297 00e4 0020     		movs	r0, #0
 298 00e6 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 243:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO2, RCC_MCO2SOURCE_SYSCLK, RCC_MCODIV_1);
 299              		.loc 1 243 3
 300 00ea 4FF48022 		mov	r2, #262144
 301 00ee 0021     		movs	r1, #0
 302 00f0 0120     		movs	r0, #1
 303 00f2 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 244:Core/Src/main.c **** }
 304              		.loc 1 244 1
 305 00f6 00BF     		nop
 306 00f8 7037     		adds	r7, r7, #112
 307              	.LCFI5:
 308              		.cfi_def_cfa_offset 8
 309 00fa BD46     		mov	sp, r7
 310              	.LCFI6:
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 00fc 80BD     		pop	{r7, pc}
 314              	.L10:
 315 00fe 00BF     		.align	2
 316              	.L9:
 317 0100 00480258 		.word	1476544512
 318              		.cfi_endproc
 319              	.LFE153:
 321              		.section	.text.MPU_Config,"ax",%progbits
 322              		.align	1
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	MPU_Config:
 328              	.LFB154:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /* USER CODE END 4 */
 249:Core/Src/main.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 11


 250:Core/Src/main.c ****  /* MPU Configuration */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** void MPU_Config(void)
 253:Core/Src/main.c **** {
 329              		.loc 1 253 1
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 16
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              	.LCFI7:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 84B0     		sub	sp, sp, #16
 339              	.LCFI8:
 340              		.cfi_def_cfa_offset 24
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI9:
 343              		.cfi_def_cfa_register 7
 254:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
 344              		.loc 1 254 26
 345 0006 3B46     		mov	r3, r7
 346 0008 0022     		movs	r2, #0
 347 000a 1A60     		str	r2, [r3]
 348 000c 5A60     		str	r2, [r3, #4]
 349 000e 9A60     		str	r2, [r3, #8]
 350 0010 DA60     		str	r2, [r3, #12]
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* Disables the MPU */
 257:Core/Src/main.c ****   HAL_MPU_Disable();
 351              		.loc 1 257 3
 352 0012 FFF7FEFF 		bl	HAL_MPU_Disable
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 260:Core/Src/main.c ****   */
 261:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 353              		.loc 1 261 25
 354 0016 0123     		movs	r3, #1
 355 0018 3B70     		strb	r3, [r7]
 262:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 356              		.loc 1 262 25
 357 001a 0023     		movs	r3, #0
 358 001c 7B70     		strb	r3, [r7, #1]
 263:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x08000000;
 359              		.loc 1 263 30
 360 001e 4FF00063 		mov	r3, #134217728
 361 0022 7B60     		str	r3, [r7, #4]
 264:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_1MB;
 362              		.loc 1 264 23
 363 0024 1323     		movs	r3, #19
 364 0026 3B72     		strb	r3, [r7, #8]
 265:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x0;
 365              		.loc 1 265 35
 366 0028 0023     		movs	r3, #0
 367 002a 7B72     		strb	r3, [r7, #9]
 266:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL1;
 368              		.loc 1 266 31
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 12


 369 002c 0123     		movs	r3, #1
 370 002e BB72     		strb	r3, [r7, #10]
 267:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_PRIV_RO;
 371              		.loc 1 267 35
 372 0030 0523     		movs	r3, #5
 373 0032 FB72     		strb	r3, [r7, #11]
 268:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 374              		.loc 1 268 30
 375 0034 0023     		movs	r3, #0
 376 0036 3B73     		strb	r3, [r7, #12]
 269:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 377              		.loc 1 269 30
 378 0038 0023     		movs	r3, #0
 379 003a 7B73     		strb	r3, [r7, #13]
 270:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 380              		.loc 1 270 30
 381 003c 0123     		movs	r3, #1
 382 003e BB73     		strb	r3, [r7, #14]
 271:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 383              		.loc 1 271 31
 384 0040 0023     		movs	r3, #0
 385 0042 FB73     		strb	r3, [r7, #15]
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 386              		.loc 1 273 3
 387 0044 3B46     		mov	r3, r7
 388 0046 1846     		mov	r0, r3
 389 0048 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 390              		.loc 1 277 25
 391 004c 0123     		movs	r3, #1
 392 004e 7B70     		strb	r3, [r7, #1]
 278:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x20000000;
 393              		.loc 1 278 30
 394 0050 4FF00053 		mov	r3, #536870912
 395 0054 7B60     		str	r3, [r7, #4]
 279:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
 396              		.loc 1 279 23
 397 0056 1A23     		movs	r3, #26
 398 0058 3B72     		strb	r3, [r7, #8]
 280:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0xEE;
 399              		.loc 1 280 35
 400 005a EE23     		movs	r3, #238
 401 005c 7B72     		strb	r3, [r7, #9]
 281:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 402              		.loc 1 281 35
 403 005e 0323     		movs	r3, #3
 404 0060 FB72     		strb	r3, [r7, #11]
 282:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 405              		.loc 1 282 30
 406 0062 0023     		movs	r3, #0
 407 0064 BB73     		strb	r3, [r7, #14]
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 13


 408              		.loc 1 284 3
 409 0066 3B46     		mov	r3, r7
 410 0068 1846     		mov	r0, r3
 411 006a FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 412              		.loc 1 288 25
 413 006e 0223     		movs	r3, #2
 414 0070 7B70     		strb	r3, [r7, #1]
 289:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 415              		.loc 1 289 3
 416 0072 3B46     		mov	r3, r7
 417 0074 1846     		mov	r0, r3
 418 0076 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 419              		.loc 1 293 25
 420 007a 0323     		movs	r3, #3
 421 007c 7B70     		strb	r3, [r7, #1]
 294:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 422              		.loc 1 294 3
 423 007e 3B46     		mov	r3, r7
 424 0080 1846     		mov	r0, r3
 425 0082 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 426              		.loc 1 298 25
 427 0086 0423     		movs	r3, #4
 428 0088 7B70     		strb	r3, [r7, #1]
 299:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 429              		.loc 1 299 3
 430 008a 3B46     		mov	r3, r7
 431 008c 1846     		mov	r0, r3
 432 008e FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 300:Core/Src/main.c ****   /* Enables the MPU */
 301:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 433              		.loc 1 301 3
 434 0092 0420     		movs	r0, #4
 435 0094 FFF7FEFF 		bl	HAL_MPU_Enable
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** }
 436              		.loc 1 303 1
 437 0098 00BF     		nop
 438 009a 1037     		adds	r7, r7, #16
 439              	.LCFI10:
 440              		.cfi_def_cfa_offset 8
 441 009c BD46     		mov	sp, r7
 442              	.LCFI11:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 009e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 14


 446              		.cfi_endproc
 447              	.LFE154:
 449              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 450              		.align	1
 451              		.global	HAL_TIM_PeriodElapsedCallback
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	HAL_TIM_PeriodElapsedCallback:
 457              	.LFB155:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 307:Core/Src/main.c ****   * @note   This function is called  when TIM23 interrupt took place, inside
 308:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 309:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 310:Core/Src/main.c ****   * @param  htim : TIM handle
 311:Core/Src/main.c ****   * @retval None
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 314:Core/Src/main.c **** {
 458              		.loc 1 314 1
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              	.LCFI12:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 82B0     		sub	sp, sp, #8
 468              	.LCFI13:
 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              	.LCFI14:
 472              		.cfi_def_cfa_register 7
 473 0006 7860     		str	r0, [r7, #4]
 315:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 318:Core/Src/main.c ****   if (htim->Instance == TIM23)
 474              		.loc 1 318 11
 475 0008 7B68     		ldr	r3, [r7, #4]
 476 000a 1B68     		ldr	r3, [r3]
 477              		.loc 1 318 6
 478 000c 0F4A     		ldr	r2, .L17
 479 000e 9342     		cmp	r3, r2
 480 0010 02D1     		bne	.L13
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     HAL_IncTick();
 481              		.loc 1 320 5
 482 0012 FFF7FEFF 		bl	HAL_IncTick
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 323:Core/Src/main.c ****   else if (htim->Instance == TIM13) // 1000HZ
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     static uint8_t i;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 15


 326:Core/Src/main.c ****     IMU_updata();
 327:Core/Src/main.c ****     if (i >= 5 )
 328:Core/Src/main.c ****     { // 降频至200hz
 329:Core/Src/main.c ****       STM32_to_MINIPC();
 330:Core/Src/main.c ****       i = 0;
 331:Core/Src/main.c ****     }
 332:Core/Src/main.c ****       i++;
 333:Core/Src/main.c ****   }
 334:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 335:Core/Src/main.c **** }
 483              		.loc 1 335 1
 484 0016 15E0     		b	.L16
 485              	.L13:
 323:Core/Src/main.c ****   {
 486              		.loc 1 323 16
 487 0018 7B68     		ldr	r3, [r7, #4]
 488 001a 1B68     		ldr	r3, [r3]
 323:Core/Src/main.c ****   {
 489              		.loc 1 323 11
 490 001c 0C4A     		ldr	r2, .L17+4
 491 001e 9342     		cmp	r3, r2
 492 0020 10D1     		bne	.L16
 493              	.LBB5:
 326:Core/Src/main.c ****     if (i >= 5 )
 494              		.loc 1 326 5
 495 0022 FFF7FEFF 		bl	IMU_updata
 327:Core/Src/main.c ****     { // 降频至200hz
 496              		.loc 1 327 11
 497 0026 0B4B     		ldr	r3, .L17+8
 498 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 327:Core/Src/main.c ****     { // 降频至200hz
 499              		.loc 1 327 8
 500 002a 042B     		cmp	r3, #4
 501 002c 04D9     		bls	.L15
 329:Core/Src/main.c ****       i = 0;
 502              		.loc 1 329 7
 503 002e FFF7FEFF 		bl	STM32_to_MINIPC
 330:Core/Src/main.c ****     }
 504              		.loc 1 330 9
 505 0032 084B     		ldr	r3, .L17+8
 506 0034 0022     		movs	r2, #0
 507 0036 1A70     		strb	r2, [r3]
 508              	.L15:
 332:Core/Src/main.c ****   }
 509              		.loc 1 332 8
 510 0038 064B     		ldr	r3, .L17+8
 511 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 003c 0133     		adds	r3, r3, #1
 513 003e DAB2     		uxtb	r2, r3
 514 0040 044B     		ldr	r3, .L17+8
 515 0042 1A70     		strb	r2, [r3]
 516              	.L16:
 517              	.LBE5:
 518              		.loc 1 335 1
 519 0044 00BF     		nop
 520 0046 0837     		adds	r7, r7, #8
 521              	.LCFI15:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 16


 522              		.cfi_def_cfa_offset 8
 523 0048 BD46     		mov	sp, r7
 524              	.LCFI16:
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 004a 80BD     		pop	{r7, pc}
 528              	.L18:
 529              		.align	2
 530              	.L17:
 531 004c 00E00040 		.word	1073799168
 532 0050 001C0040 		.word	1073748992
 533 0054 00000000 		.word	i.0
 534              		.cfi_endproc
 535              	.LFE155:
 537              		.section	.text.Error_Handler,"ax",%progbits
 538              		.align	1
 539              		.global	Error_Handler
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 544              	Error_Handler:
 545              	.LFB156:
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 339:Core/Src/main.c ****   * @retval None
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c **** void Error_Handler(void)
 342:Core/Src/main.c **** {
 546              		.loc 1 342 1
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              	.LCFI17:
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 00AF     		add	r7, sp, #0
 556              	.LCFI18:
 557              		.cfi_def_cfa_register 7
 558              	.LBB6:
 559              	.LBB7:
 560              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 17


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 18


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 19


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 20


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 561              		.loc 2 209 3
 562              		.syntax unified
 563              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 564 0004 72B6     		cpsid i
 565              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 566              		.loc 2 210 1
 567              		.thumb
 568              		.syntax unified
 569 0006 00BF     		nop
 570              	.L20:
 571              	.LBE7:
 572              	.LBE6:
 343:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 344:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 345:Core/Src/main.c ****   __disable_irq();
 346:Core/Src/main.c ****   while (1)
 573              		.loc 1 346 9
 574 0008 00BF     		nop
 575 000a FDE7     		b	.L20
 576              		.cfi_endproc
 577              	.LFE156:
 579              		.section	.bss.i.0,"aw",%nobits
 582              	i.0:
 583 0000 00       		.space	1
 584              		.text
 585              	.Letext0:
 586              		.file 3 "C:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 587              		.file 4 "C:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 588              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 589              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 590              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 21


 591              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 592              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 593              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_iwdg.h"
 594              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 595              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 596              		.file 13 "Core/Inc/iwdg.h"
 597              		.file 14 "User/Hardware/IMU_updata.h"
 598              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 599              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 600              		.file 17 "User/Software/Auto_control.h"
 601              		.file 18 "User/Software/shoot.h"
 602              		.file 19 "User/Software/Gimbal.h"
 603              		.file 20 "User/Software/Chassis.h"
 604              		.file 21 "User/Software/music.h"
 605              		.file 22 "User/Hardware/referee_system.h"
 606              		.file 23 "User/BSP/CAN_receive_send.h"
 607              		.file 24 "User/BSP/UART_data_txrx.h"
 608              		.file 25 "Core/Inc/tim.h"
 609              		.file 26 "Core/Inc/usart.h"
 610              		.file 27 "Core/Inc/octospi.h"
 611              		.file 28 "Core/Inc/fdcan.h"
 612              		.file 29 "Core/Inc/spi.h"
 613              		.file 30 "Core/Inc/dma.h"
 614              		.file 31 "Core/Inc/gpio.h"
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:23     .bss.ITsta:00000000 ITsta
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:24     .bss.ITsta:00000000 $d
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:26     .text.main:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:32     .text.main:00000000 main
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:327    .text.MPU_Config:00000000 MPU_Config
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:142    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:131    .text.main:000000a4 $d
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:136    .text.SystemClock_Config:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:544    .text.Error_Handler:00000000 Error_Handler
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:317    .text.SystemClock_Config:00000100 $d
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:322    .text.MPU_Config:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:450    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:456    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:531    .text.HAL_TIM_PeriodElapsedCallback:0000004c $d
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:582    .bss.i.0:00000000 i.0
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:538    .text.Error_Handler:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s:583    .bss.i.0:00000000 $d

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_FDCAN1_Init
MX_FDCAN2_Init
MX_SPI2_Init
MX_TIM3_Init
MX_TIM13_Init
MX_TIM14_Init
MX_SPI6_Init
MX_UART5_Init
MX_UART7_Init
MX_USART10_UART_Init
MX_FDCAN3_Init
MX_OCTOSPI2_Init
MX_IWDG1_Init
MX_USART2_UART_Init
MX_USART3_UART_Init
MX_USART1_UART_Init
MX_TIM12_Init
MX_TIM1_Init
HAL_IWDG_Refresh
uart_init
can_init
Refree_system_init
IMU_init
Music_init
Chassis_init
Gimbal_init
Shoot_init
PWM_control_init
GPIO_init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
hiwdg1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccrVTxD6.s 			page 23


memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_IncTick
IMU_updata
STM32_to_MINIPC
