ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"
  19              		.global	UARTPrescTable
  20              		.section	.rodata.UARTPrescTable,"a"
  21              		.align	2
  24              	UARTPrescTable:
  25 0000 0100     		.short	1
  26 0002 0200     		.short	2
  27 0004 0400     		.short	4
  28 0006 0600     		.short	6
  29 0008 0800     		.short	8
  30 000a 0A00     		.short	10
  31 000c 0C00     		.short	12
  32 000e 1000     		.short	16
  33 0010 2000     		.short	32
  34 0012 4000     		.short	64
  35 0014 8000     		.short	128
  36 0016 0001     		.short	256
  37              		.section	.text.HAL_UART_Init,"ax",%progbits
  38              		.align	1
  39              		.global	HAL_UART_Init
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	HAL_UART_Init:
  45              	.LFB144:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @file    stm32h7xx_hal_uart.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @attention
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 2


  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   [..]
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 3


  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ==================================
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and a pointer to the user callback function.
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     weak function.
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and the Callback ID.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This function allows to reset following callbacks:
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 4


 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     all callbacks are set to the corresponding weak functions:
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     reset to the legacy weak functions in the HAL_UART_Init()
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     or HAL_UART_Init() function.
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     not defined, the callback registration feature is not available
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and weak callbacks are used.
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @endverbatim
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #include "stm32h7xx_hal.h"
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART UART
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief HAL UART module driver
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 5


 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 6


 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** ===============================================================================
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in asynchronous mode.
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Baud Rate
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Word Length
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Stop Bit
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Hardware flow control
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Over Sampling Method
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) data logical level inversion
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX and TX pins swap
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX overrun detection disabling
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA disabling on RX error
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) MSB first on communication line
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) auto Baud rate detection
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     are available in reference manual).
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   following table.
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Table 1. UART frame format.
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 7


 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  46              		.loc 1 308 1
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 8
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 82B0     		sub	sp, sp, #8
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 16
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  61 0006 7860     		str	r0, [r7, #4]
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
  62              		.loc 1 310 6
  63 0008 7B68     		ldr	r3, [r7, #4]
  64 000a 002B     		cmp	r3, #0
  65 000c 01D1     		bne	.L2
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
  66              		.loc 1 312 12
  67 000e 0123     		movs	r3, #1
  68 0010 42E0     		b	.L3
  69              	.L2:
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  70              		.loc 1 326 12
  71 0012 7B68     		ldr	r3, [r7, #4]
  72 0014 D3F88830 		ldr	r3, [r3, #136]
  73              		.loc 1 326 6
  74 0018 002B     		cmp	r3, #0
  75 001a 06D1     		bne	.L4
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 8


 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  76              		.loc 1 329 17
  77 001c 7B68     		ldr	r3, [r7, #4]
  78 001e 0022     		movs	r2, #0
  79 0020 83F88420 		strb	r2, [r3, #132]
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  80              		.loc 1 343 5
  81 0024 7868     		ldr	r0, [r7, #4]
  82 0026 FFF7FEFF 		bl	HAL_UART_MspInit
  83              	.L4:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  84              		.loc 1 347 17
  85 002a 7B68     		ldr	r3, [r7, #4]
  86 002c 2422     		movs	r2, #36
  87 002e C3F88820 		str	r2, [r3, #136]
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  88              		.loc 1 349 3
  89 0032 7B68     		ldr	r3, [r7, #4]
  90 0034 1B68     		ldr	r3, [r3]
  91 0036 1A68     		ldr	r2, [r3]
  92 0038 7B68     		ldr	r3, [r7, #4]
  93 003a 1B68     		ldr	r3, [r3]
  94 003c 22F00102 		bic	r2, r2, #1
  95 0040 1A60     		str	r2, [r3]
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Perform advanced settings configuration */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  96              		.loc 1 353 26
  97 0042 7B68     		ldr	r3, [r7, #4]
  98 0044 9B6A     		ldr	r3, [r3, #40]
  99              		.loc 1 353 6
 100 0046 002B     		cmp	r3, #0
 101 0048 02D0     		beq	.L5
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 102              		.loc 1 355 5
 103 004a 7868     		ldr	r0, [r7, #4]
 104 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 9


 105              	.L5:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 106              		.loc 1 359 7
 107 0050 7868     		ldr	r0, [r7, #4]
 108 0052 FFF7FEFF 		bl	UART_SetConfig
 109 0056 0346     		mov	r3, r0
 110              		.loc 1 359 6 discriminator 1
 111 0058 012B     		cmp	r3, #1
 112 005a 01D1     		bne	.L6
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 113              		.loc 1 361 12
 114 005c 0123     		movs	r3, #1
 115 005e 1BE0     		b	.L3
 116              	.L6:
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 117              		.loc 1 367 3
 118 0060 7B68     		ldr	r3, [r7, #4]
 119 0062 1B68     		ldr	r3, [r3]
 120 0064 5A68     		ldr	r2, [r3, #4]
 121 0066 7B68     		ldr	r3, [r7, #4]
 122 0068 1B68     		ldr	r3, [r3]
 123 006a 22F49042 		bic	r2, r2, #18432
 124 006e 5A60     		str	r2, [r3, #4]
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 125              		.loc 1 368 3
 126 0070 7B68     		ldr	r3, [r7, #4]
 127 0072 1B68     		ldr	r3, [r3]
 128 0074 9A68     		ldr	r2, [r3, #8]
 129 0076 7B68     		ldr	r3, [r7, #4]
 130 0078 1B68     		ldr	r3, [r3]
 131 007a 22F02A02 		bic	r2, r2, #42
 132 007e 9A60     		str	r2, [r3, #8]
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 133              		.loc 1 370 3
 134 0080 7B68     		ldr	r3, [r7, #4]
 135 0082 1B68     		ldr	r3, [r3]
 136 0084 1A68     		ldr	r2, [r3]
 137 0086 7B68     		ldr	r3, [r7, #4]
 138 0088 1B68     		ldr	r3, [r3]
 139 008a 42F00102 		orr	r2, r2, #1
 140 008e 1A60     		str	r2, [r3]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 141              		.loc 1 373 11
 142 0090 7868     		ldr	r0, [r7, #4]
 143 0092 FFF7FEFF 		bl	UART_CheckIdleState
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 10


 144 0096 0346     		mov	r3, r0
 145              	.L3:
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 146              		.loc 1 374 1
 147 0098 1846     		mov	r0, r3
 148 009a 0837     		adds	r7, r7, #8
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 8
 151 009c BD46     		mov	sp, r7
 152              	.LCFI4:
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 009e 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE144:
 159              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_HalfDuplex_Init
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	HAL_HalfDuplex_Init:
 167              	.LFB145:
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 168              		.loc 1 383 1
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 8
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              	.LCFI5:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 82B0     		sub	sp, sp, #8
 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 16
 180 0004 00AF     		add	r7, sp, #0
 181              	.LCFI7:
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 184              		.loc 1 385 6
 185 0008 7B68     		ldr	r3, [r7, #4]
 186 000a 002B     		cmp	r3, #0
 187 000c 01D1     		bne	.L8
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 188              		.loc 1 387 12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 11


 189 000e 0123     		movs	r3, #1
 190 0010 4AE0     		b	.L9
 191              	.L8:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART instance */
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 192              		.loc 1 393 12
 193 0012 7B68     		ldr	r3, [r7, #4]
 194 0014 D3F88830 		ldr	r3, [r3, #136]
 195              		.loc 1 393 6
 196 0018 002B     		cmp	r3, #0
 197 001a 06D1     		bne	.L10
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 198              		.loc 1 396 17
 199 001c 7B68     		ldr	r3, [r7, #4]
 200 001e 0022     		movs	r2, #0
 201 0020 83F88420 		strb	r2, [r3, #132]
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 202              		.loc 1 410 5
 203 0024 7868     		ldr	r0, [r7, #4]
 204 0026 FFF7FEFF 		bl	HAL_UART_MspInit
 205              	.L10:
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 206              		.loc 1 414 17
 207 002a 7B68     		ldr	r3, [r7, #4]
 208 002c 2422     		movs	r2, #36
 209 002e C3F88820 		str	r2, [r3, #136]
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 210              		.loc 1 416 3
 211 0032 7B68     		ldr	r3, [r7, #4]
 212 0034 1B68     		ldr	r3, [r3]
 213 0036 1A68     		ldr	r2, [r3]
 214 0038 7B68     		ldr	r3, [r7, #4]
 215 003a 1B68     		ldr	r3, [r3]
 216 003c 22F00102 		bic	r2, r2, #1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 12


 217 0040 1A60     		str	r2, [r3]
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Perform advanced settings configuration */
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 218              		.loc 1 420 26
 219 0042 7B68     		ldr	r3, [r7, #4]
 220 0044 9B6A     		ldr	r3, [r3, #40]
 221              		.loc 1 420 6
 222 0046 002B     		cmp	r3, #0
 223 0048 02D0     		beq	.L11
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 224              		.loc 1 422 5
 225 004a 7868     		ldr	r0, [r7, #4]
 226 004c FFF7FEFF 		bl	UART_AdvFeatureConfig
 227              	.L11:
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 228              		.loc 1 426 7
 229 0050 7868     		ldr	r0, [r7, #4]
 230 0052 FFF7FEFF 		bl	UART_SetConfig
 231 0056 0346     		mov	r3, r0
 232              		.loc 1 426 6 discriminator 1
 233 0058 012B     		cmp	r3, #1
 234 005a 01D1     		bne	.L12
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 235              		.loc 1 428 12
 236 005c 0123     		movs	r3, #1
 237 005e 23E0     		b	.L9
 238              	.L12:
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 239              		.loc 1 434 3
 240 0060 7B68     		ldr	r3, [r7, #4]
 241 0062 1B68     		ldr	r3, [r3]
 242 0064 5A68     		ldr	r2, [r3, #4]
 243 0066 7B68     		ldr	r3, [r7, #4]
 244 0068 1B68     		ldr	r3, [r3]
 245 006a 22F49042 		bic	r2, r2, #18432
 246 006e 5A60     		str	r2, [r3, #4]
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 247              		.loc 1 435 3
 248 0070 7B68     		ldr	r3, [r7, #4]
 249 0072 1B68     		ldr	r3, [r3]
 250 0074 9A68     		ldr	r2, [r3, #8]
 251 0076 7B68     		ldr	r3, [r7, #4]
 252 0078 1B68     		ldr	r3, [r3]
 253 007a 22F02202 		bic	r2, r2, #34
 254 007e 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 13


 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 255              		.loc 1 438 3
 256 0080 7B68     		ldr	r3, [r7, #4]
 257 0082 1B68     		ldr	r3, [r3]
 258 0084 9A68     		ldr	r2, [r3, #8]
 259 0086 7B68     		ldr	r3, [r7, #4]
 260 0088 1B68     		ldr	r3, [r3]
 261 008a 42F00802 		orr	r2, r2, #8
 262 008e 9A60     		str	r2, [r3, #8]
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 263              		.loc 1 440 3
 264 0090 7B68     		ldr	r3, [r7, #4]
 265 0092 1B68     		ldr	r3, [r3]
 266 0094 1A68     		ldr	r2, [r3]
 267 0096 7B68     		ldr	r3, [r7, #4]
 268 0098 1B68     		ldr	r3, [r3]
 269 009a 42F00102 		orr	r2, r2, #1
 270 009e 1A60     		str	r2, [r3]
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 271              		.loc 1 443 11
 272 00a0 7868     		ldr	r0, [r7, #4]
 273 00a2 FFF7FEFF 		bl	UART_CheckIdleState
 274 00a6 0346     		mov	r3, r0
 275              	.L9:
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 276              		.loc 1 444 1
 277 00a8 1846     		mov	r0, r3
 278 00aa 0837     		adds	r7, r7, #8
 279              	.LCFI8:
 280              		.cfi_def_cfa_offset 8
 281 00ac BD46     		mov	sp, r7
 282              	.LCFI9:
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 00ae 80BD     		pop	{r7, pc}
 286              		.cfi_endproc
 287              	.LFE145:
 289              		.section	.text.HAL_LIN_Init,"ax",%progbits
 290              		.align	1
 291              		.global	HAL_LIN_Init
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	HAL_LIN_Init:
 297              	.LFB146:
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart             UART handle.
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 14


 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 298              		.loc 1 458 1
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              	.LCFI10:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              	.LCFI11:
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI12:
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
 314 0008 3960     		str	r1, [r7]
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 315              		.loc 1 460 6
 316 000a 7B68     		ldr	r3, [r7, #4]
 317 000c 002B     		cmp	r3, #0
 318 000e 01D1     		bne	.L14
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 319              		.loc 1 462 12
 320 0010 0123     		movs	r3, #1
 321 0012 61E0     		b	.L15
 322              	.L14:
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the LIN UART instance */
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 323              		.loc 1 471 18
 324 0014 7B68     		ldr	r3, [r7, #4]
 325 0016 DB69     		ldr	r3, [r3, #28]
 326              		.loc 1 471 6
 327 0018 B3F5004F 		cmp	r3, #32768
 328 001c 01D1     		bne	.L16
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 329              		.loc 1 473 12
 330 001e 0123     		movs	r3, #1
 331 0020 5AE0     		b	.L15
 332              	.L16:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 15


 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 333              		.loc 1 476 18
 334 0022 7B68     		ldr	r3, [r7, #4]
 335 0024 9B68     		ldr	r3, [r3, #8]
 336              		.loc 1 476 6
 337 0026 002B     		cmp	r3, #0
 338 0028 01D0     		beq	.L17
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 339              		.loc 1 478 12
 340 002a 0123     		movs	r3, #1
 341 002c 54E0     		b	.L15
 342              	.L17:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 343              		.loc 1 481 12
 344 002e 7B68     		ldr	r3, [r7, #4]
 345 0030 D3F88830 		ldr	r3, [r3, #136]
 346              		.loc 1 481 6
 347 0034 002B     		cmp	r3, #0
 348 0036 06D1     		bne	.L18
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 349              		.loc 1 484 17
 350 0038 7B68     		ldr	r3, [r7, #4]
 351 003a 0022     		movs	r2, #0
 352 003c 83F88420 		strb	r2, [r3, #132]
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 353              		.loc 1 498 5
 354 0040 7868     		ldr	r0, [r7, #4]
 355 0042 FFF7FEFF 		bl	HAL_UART_MspInit
 356              	.L18:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 357              		.loc 1 502 17
 358 0046 7B68     		ldr	r3, [r7, #4]
 359 0048 2422     		movs	r2, #36
 360 004a C3F88820 		str	r2, [r3, #136]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 16


 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 361              		.loc 1 504 3
 362 004e 7B68     		ldr	r3, [r7, #4]
 363 0050 1B68     		ldr	r3, [r3]
 364 0052 1A68     		ldr	r2, [r3]
 365 0054 7B68     		ldr	r3, [r7, #4]
 366 0056 1B68     		ldr	r3, [r3]
 367 0058 22F00102 		bic	r2, r2, #1
 368 005c 1A60     		str	r2, [r3]
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Perform advanced settings configuration */
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 369              		.loc 1 508 26
 370 005e 7B68     		ldr	r3, [r7, #4]
 371 0060 9B6A     		ldr	r3, [r3, #40]
 372              		.loc 1 508 6
 373 0062 002B     		cmp	r3, #0
 374 0064 02D0     		beq	.L19
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 375              		.loc 1 510 5
 376 0066 7868     		ldr	r0, [r7, #4]
 377 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 378              	.L19:
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 379              		.loc 1 514 7
 380 006c 7868     		ldr	r0, [r7, #4]
 381 006e FFF7FEFF 		bl	UART_SetConfig
 382 0072 0346     		mov	r3, r0
 383              		.loc 1 514 6 discriminator 1
 384 0074 012B     		cmp	r3, #1
 385 0076 01D1     		bne	.L20
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 386              		.loc 1 516 12
 387 0078 0123     		movs	r3, #1
 388 007a 2DE0     		b	.L15
 389              	.L20:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 390              		.loc 1 522 3
 391 007c 7B68     		ldr	r3, [r7, #4]
 392 007e 1B68     		ldr	r3, [r3]
 393 0080 5A68     		ldr	r2, [r3, #4]
 394 0082 7B68     		ldr	r3, [r7, #4]
 395 0084 1B68     		ldr	r3, [r3]
 396 0086 22F40062 		bic	r2, r2, #2048
 397 008a 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 17


 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 398              		.loc 1 523 3
 399 008c 7B68     		ldr	r3, [r7, #4]
 400 008e 1B68     		ldr	r3, [r3]
 401 0090 9A68     		ldr	r2, [r3, #8]
 402 0092 7B68     		ldr	r3, [r7, #4]
 403 0094 1B68     		ldr	r3, [r3]
 404 0096 22F02A02 		bic	r2, r2, #42
 405 009a 9A60     		str	r2, [r3, #8]
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 406              		.loc 1 526 3
 407 009c 7B68     		ldr	r3, [r7, #4]
 408 009e 1B68     		ldr	r3, [r3]
 409 00a0 5A68     		ldr	r2, [r3, #4]
 410 00a2 7B68     		ldr	r3, [r7, #4]
 411 00a4 1B68     		ldr	r3, [r3]
 412 00a6 42F48042 		orr	r2, r2, #16384
 413 00aa 5A60     		str	r2, [r3, #4]
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 414              		.loc 1 529 3
 415 00ac 7B68     		ldr	r3, [r7, #4]
 416 00ae 1B68     		ldr	r3, [r3]
 417 00b0 5B68     		ldr	r3, [r3, #4]
 418 00b2 23F02001 		bic	r1, r3, #32
 419 00b6 7B68     		ldr	r3, [r7, #4]
 420 00b8 1B68     		ldr	r3, [r3]
 421 00ba 3A68     		ldr	r2, [r7]
 422 00bc 0A43     		orrs	r2, r2, r1
 423 00be 5A60     		str	r2, [r3, #4]
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 424              		.loc 1 531 3
 425 00c0 7B68     		ldr	r3, [r7, #4]
 426 00c2 1B68     		ldr	r3, [r3]
 427 00c4 1A68     		ldr	r2, [r3]
 428 00c6 7B68     		ldr	r3, [r7, #4]
 429 00c8 1B68     		ldr	r3, [r3]
 430 00ca 42F00102 		orr	r2, r2, #1
 431 00ce 1A60     		str	r2, [r3]
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 432              		.loc 1 534 11
 433 00d0 7868     		ldr	r0, [r7, #4]
 434 00d2 FFF7FEFF 		bl	UART_CheckIdleState
 435 00d6 0346     		mov	r3, r0
 436              	.L15:
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 437              		.loc 1 535 1
 438 00d8 1846     		mov	r0, r3
 439 00da 0837     		adds	r7, r7, #8
 440              	.LCFI13:
 441              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 18


 442 00dc BD46     		mov	sp, r7
 443              	.LCFI14:
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 00de 80BD     		pop	{r7, pc}
 447              		.cfi_endproc
 448              	.LFE146:
 450              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 451              		.align	1
 452              		.global	HAL_MultiProcessor_Init
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	HAL_MultiProcessor_Init:
 458              	.LFB147:
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart        UART handle.
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 459              		.loc 1 557 1
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 16
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              	.LCFI15:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 84B0     		sub	sp, sp, #16
 469              	.LCFI16:
 470              		.cfi_def_cfa_offset 24
 471 0004 00AF     		add	r7, sp, #0
 472              	.LCFI17:
 473              		.cfi_def_cfa_register 7
 474 0006 F860     		str	r0, [r7, #12]
 475 0008 0B46     		mov	r3, r1
 476 000a 7A60     		str	r2, [r7, #4]
 477 000c FB72     		strb	r3, [r7, #11]
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 19


 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 478              		.loc 1 559 6
 479 000e FB68     		ldr	r3, [r7, #12]
 480 0010 002B     		cmp	r3, #0
 481 0012 01D1     		bne	.L22
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 482              		.loc 1 561 12
 483 0014 0123     		movs	r3, #1
 484 0016 5BE0     		b	.L23
 485              	.L22:
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the wake up method parameter */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 486              		.loc 1 567 12
 487 0018 FB68     		ldr	r3, [r7, #12]
 488 001a D3F88830 		ldr	r3, [r3, #136]
 489              		.loc 1 567 6
 490 001e 002B     		cmp	r3, #0
 491 0020 06D1     		bne	.L24
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 492              		.loc 1 570 17
 493 0022 FB68     		ldr	r3, [r7, #12]
 494 0024 0022     		movs	r2, #0
 495 0026 83F88420 		strb	r2, [r3, #132]
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware */
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspInitCallback(huart);
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 496              		.loc 1 584 5
 497 002a F868     		ldr	r0, [r7, #12]
 498 002c FFF7FEFF 		bl	HAL_UART_MspInit
 499              	.L24:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 500              		.loc 1 588 17
 501 0030 FB68     		ldr	r3, [r7, #12]
 502 0032 2422     		movs	r2, #36
 503 0034 C3F88820 		str	r2, [r3, #136]
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 20


 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 504              		.loc 1 590 3
 505 0038 FB68     		ldr	r3, [r7, #12]
 506 003a 1B68     		ldr	r3, [r3]
 507 003c 1A68     		ldr	r2, [r3]
 508 003e FB68     		ldr	r3, [r7, #12]
 509 0040 1B68     		ldr	r3, [r3]
 510 0042 22F00102 		bic	r2, r2, #1
 511 0046 1A60     		str	r2, [r3]
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Perform advanced settings configuration */
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 512              		.loc 1 594 26
 513 0048 FB68     		ldr	r3, [r7, #12]
 514 004a 9B6A     		ldr	r3, [r3, #40]
 515              		.loc 1 594 6
 516 004c 002B     		cmp	r3, #0
 517 004e 02D0     		beq	.L25
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 518              		.loc 1 596 5
 519 0050 F868     		ldr	r0, [r7, #12]
 520 0052 FFF7FEFF 		bl	UART_AdvFeatureConfig
 521              	.L25:
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 522              		.loc 1 600 7
 523 0056 F868     		ldr	r0, [r7, #12]
 524 0058 FFF7FEFF 		bl	UART_SetConfig
 525 005c 0346     		mov	r3, r0
 526              		.loc 1 600 6 discriminator 1
 527 005e 012B     		cmp	r3, #1
 528 0060 01D1     		bne	.L26
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 529              		.loc 1 602 12
 530 0062 0123     		movs	r3, #1
 531 0064 34E0     		b	.L23
 532              	.L26:
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 533              		.loc 1 608 3
 534 0066 FB68     		ldr	r3, [r7, #12]
 535 0068 1B68     		ldr	r3, [r3]
 536 006a 5A68     		ldr	r2, [r3, #4]
 537 006c FB68     		ldr	r3, [r7, #12]
 538 006e 1B68     		ldr	r3, [r3]
 539 0070 22F49042 		bic	r2, r2, #18432
 540 0074 5A60     		str	r2, [r3, #4]
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 21


 541              		.loc 1 609 3
 542 0076 FB68     		ldr	r3, [r7, #12]
 543 0078 1B68     		ldr	r3, [r3]
 544 007a 9A68     		ldr	r2, [r3, #8]
 545 007c FB68     		ldr	r3, [r7, #12]
 546 007e 1B68     		ldr	r3, [r3]
 547 0080 22F02A02 		bic	r2, r2, #42
 548 0084 9A60     		str	r2, [r3, #8]
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 549              		.loc 1 611 6
 550 0086 7B68     		ldr	r3, [r7, #4]
 551 0088 B3F5006F 		cmp	r3, #2048
 552 008c 0AD1     		bne	.L27
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 553              		.loc 1 614 5
 554 008e FB68     		ldr	r3, [r7, #12]
 555 0090 1B68     		ldr	r3, [r3]
 556 0092 5B68     		ldr	r3, [r3, #4]
 557 0094 23F07F41 		bic	r1, r3, #-16777216
 558 0098 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 559 009a 1A06     		lsls	r2, r3, #24
 560 009c FB68     		ldr	r3, [r7, #12]
 561 009e 1B68     		ldr	r3, [r3]
 562 00a0 0A43     		orrs	r2, r2, r1
 563 00a2 5A60     		str	r2, [r3, #4]
 564              	.L27:
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 565              		.loc 1 618 3
 566 00a4 FB68     		ldr	r3, [r7, #12]
 567 00a6 1B68     		ldr	r3, [r3]
 568 00a8 1B68     		ldr	r3, [r3]
 569 00aa 23F40061 		bic	r1, r3, #2048
 570 00ae FB68     		ldr	r3, [r7, #12]
 571 00b0 1B68     		ldr	r3, [r3]
 572 00b2 7A68     		ldr	r2, [r7, #4]
 573 00b4 0A43     		orrs	r2, r2, r1
 574 00b6 1A60     		str	r2, [r3]
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 575              		.loc 1 620 3
 576 00b8 FB68     		ldr	r3, [r7, #12]
 577 00ba 1B68     		ldr	r3, [r3]
 578 00bc 1A68     		ldr	r2, [r3]
 579 00be FB68     		ldr	r3, [r7, #12]
 580 00c0 1B68     		ldr	r3, [r3]
 581 00c2 42F00102 		orr	r2, r2, #1
 582 00c6 1A60     		str	r2, [r3]
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 583              		.loc 1 623 11
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 22


 584 00c8 F868     		ldr	r0, [r7, #12]
 585 00ca FFF7FEFF 		bl	UART_CheckIdleState
 586 00ce 0346     		mov	r3, r0
 587              	.L23:
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 588              		.loc 1 624 1
 589 00d0 1846     		mov	r0, r3
 590 00d2 1037     		adds	r7, r7, #16
 591              	.LCFI18:
 592              		.cfi_def_cfa_offset 8
 593 00d4 BD46     		mov	sp, r7
 594              	.LCFI19:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 00d6 80BD     		pop	{r7, pc}
 598              		.cfi_endproc
 599              	.LFE147:
 601              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 602              		.align	1
 603              		.global	HAL_UART_DeInit
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	HAL_UART_DeInit:
 609              	.LFB148:
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 610              		.loc 1 633 1
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 8
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              	.LCFI20:
 616              		.cfi_def_cfa_offset 8
 617              		.cfi_offset 7, -8
 618              		.cfi_offset 14, -4
 619 0002 82B0     		sub	sp, sp, #8
 620              	.LCFI21:
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              	.LCFI22:
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart == NULL)
 626              		.loc 1 635 6
 627 0008 7B68     		ldr	r3, [r7, #4]
 628 000a 002B     		cmp	r3, #0
 629 000c 01D1     		bne	.L29
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 23


 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 630              		.loc 1 637 12
 631 000e 0123     		movs	r3, #1
 632 0010 31E0     		b	.L30
 633              	.L29:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 634              		.loc 1 643 17
 635 0012 7B68     		ldr	r3, [r7, #4]
 636 0014 2422     		movs	r2, #36
 637 0016 C3F88820 		str	r2, [r3, #136]
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 638              		.loc 1 645 3
 639 001a 7B68     		ldr	r3, [r7, #4]
 640 001c 1B68     		ldr	r3, [r3]
 641 001e 1A68     		ldr	r2, [r3]
 642 0020 7B68     		ldr	r3, [r7, #4]
 643 0022 1B68     		ldr	r3, [r3]
 644 0024 22F00102 		bic	r2, r2, #1
 645 0028 1A60     		str	r2, [r3]
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 646              		.loc 1 647 8
 647 002a 7B68     		ldr	r3, [r7, #4]
 648 002c 1B68     		ldr	r3, [r3]
 649              		.loc 1 647 24
 650 002e 0022     		movs	r2, #0
 651 0030 1A60     		str	r2, [r3]
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 652              		.loc 1 648 8
 653 0032 7B68     		ldr	r3, [r7, #4]
 654 0034 1B68     		ldr	r3, [r3]
 655              		.loc 1 648 24
 656 0036 0022     		movs	r2, #0
 657 0038 5A60     		str	r2, [r3, #4]
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 658              		.loc 1 649 8
 659 003a 7B68     		ldr	r3, [r7, #4]
 660 003c 1B68     		ldr	r3, [r3]
 661              		.loc 1 649 24
 662 003e 0022     		movs	r2, #0
 663 0040 9A60     		str	r2, [r3, #8]
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 24


 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 664              		.loc 1 660 3
 665 0042 7868     		ldr	r0, [r7, #4]
 666 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 667              		.loc 1 663 20
 668 0048 7B68     		ldr	r3, [r7, #4]
 669 004a 0022     		movs	r2, #0
 670 004c C3F89020 		str	r2, [r3, #144]
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 671              		.loc 1 664 17
 672 0050 7B68     		ldr	r3, [r7, #4]
 673 0052 0022     		movs	r2, #0
 674 0054 C3F88820 		str	r2, [r3, #136]
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 675              		.loc 1 665 18
 676 0058 7B68     		ldr	r3, [r7, #4]
 677 005a 0022     		movs	r2, #0
 678 005c C3F88C20 		str	r2, [r3, #140]
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 679              		.loc 1 666 24
 680 0060 7B68     		ldr	r3, [r7, #4]
 681 0062 0022     		movs	r2, #0
 682 0064 DA66     		str	r2, [r3, #108]
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 683              		.loc 1 667 22
 684 0066 7B68     		ldr	r3, [r7, #4]
 685 0068 0022     		movs	r2, #0
 686 006a 1A67     		str	r2, [r3, #112]
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 687              		.loc 1 669 3
 688 006c 7B68     		ldr	r3, [r7, #4]
 689 006e 0022     		movs	r2, #0
 690 0070 83F88420 		strb	r2, [r3, #132]
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 691              		.loc 1 671 10
 692 0074 0023     		movs	r3, #0
 693              	.L30:
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 694              		.loc 1 672 1
 695 0076 1846     		mov	r0, r3
 696 0078 0837     		adds	r7, r7, #8
 697              	.LCFI23:
 698              		.cfi_def_cfa_offset 8
 699 007a BD46     		mov	sp, r7
 700              	.LCFI24:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 007c 80BD     		pop	{r7, pc}
 704              		.cfi_endproc
 705              	.LFE148:
 707              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 708              		.align	1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 25


 709              		.weak	HAL_UART_MspInit
 710              		.syntax unified
 711              		.thumb
 712              		.thumb_func
 714              	HAL_UART_MspInit:
 715              	.LFB149:
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 716              		.loc 1 680 1
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              	.LCFI25:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 83B0     		sub	sp, sp, #12
 726              	.LCFI26:
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI27:
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 732              		.loc 1 687 1
 733 0008 00BF     		nop
 734 000a 0C37     		adds	r7, r7, #12
 735              	.LCFI28:
 736              		.cfi_def_cfa_offset 4
 737 000c BD46     		mov	sp, r7
 738              	.LCFI29:
 739              		.cfi_def_cfa_register 13
 740              		@ sp needed
 741 000e 5DF8047B 		ldr	r7, [sp], #4
 742              	.LCFI30:
 743              		.cfi_restore 7
 744              		.cfi_def_cfa_offset 0
 745 0012 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE149:
 749              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 750              		.align	1
 751              		.weak	HAL_UART_MspDeInit
 752              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 26


 753              		.thumb
 754              		.thumb_func
 756              	HAL_UART_MspDeInit:
 757              	.LFB150:
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 758              		.loc 1 695 1
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763 0000 80B4     		push	{r7}
 764              	.LCFI31:
 765              		.cfi_def_cfa_offset 4
 766              		.cfi_offset 7, -4
 767 0002 83B0     		sub	sp, sp, #12
 768              	.LCFI32:
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              	.LCFI33:
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 774              		.loc 1 702 1
 775 0008 00BF     		nop
 776 000a 0C37     		adds	r7, r7, #12
 777              	.LCFI34:
 778              		.cfi_def_cfa_offset 4
 779 000c BD46     		mov	sp, r7
 780              	.LCFI35:
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 000e 5DF8047B 		ldr	r7, [sp], #4
 784              	.LCFI36:
 785              		.cfi_restore 7
 786              		.cfi_def_cfa_offset 0
 787 0012 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE150:
 791              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 792              		.align	1
 793              		.global	HAL_UART_Transmit
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 27


 798              	HAL_UART_Transmit:
 799              	.LFB151:
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Callback
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used to override the weak predefined callback
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 28


 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 29


 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() or HAL_RS485Ex_Init() in HAL_UART_STATE_RESET
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART_MSPDEINIT_CB_ID
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart uart handle
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This parameter can be one of the following values:
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 30


 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 31


 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (CallbackID)
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default :
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         status =  HAL_ERROR;
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart     Uart handle
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (pCallback == NULL)
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 32


 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart     Uart handle
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     status =  HAL_ERROR;
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return status;
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### IO operation functions #####
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and Half duplex data transfers.
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) There are two mode of transfer:
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            after finishing transfer.
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The end of the data processing will be indicated through the
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            using DMA mode.
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Blocking mode API's are :
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 33


1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive()
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort()
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         reception services:
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Wakeup from Stop mode Callback:
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UARTEx_WakeupCallback()
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         Errors are handled as follows :
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            in Interrupt mode reception .
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            user callback is executed.
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 34


1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 800              		.loc 1 1121 1
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 32
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              	.LCFI37:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 8AB0     		sub	sp, sp, #40
 810              	.LCFI38:
 811              		.cfi_def_cfa_offset 48
 812 0004 02AF     		add	r7, sp, #8
 813              	.LCFI39:
 814              		.cfi_def_cfa 7, 40
 815 0006 F860     		str	r0, [r7, #12]
 816 0008 B960     		str	r1, [r7, #8]
 817 000a 3B60     		str	r3, [r7]
 818 000c 1346     		mov	r3, r2	@ movhi
 819 000e FB80     		strh	r3, [r7, #6]	@ movhi
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const uint16_t *pdata16bits;
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 820              		.loc 1 1127 12
 821 0010 FB68     		ldr	r3, [r7, #12]
 822 0012 D3F88830 		ldr	r3, [r3, #136]
 823              		.loc 1 1127 6
 824 0016 202B     		cmp	r3, #32
 825 0018 7BD1     		bne	.L34
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 826              		.loc 1 1129 8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 35


 827 001a BB68     		ldr	r3, [r7, #8]
 828 001c 002B     		cmp	r3, #0
 829 001e 02D0     		beq	.L35
 830              		.loc 1 1129 25 discriminator 1
 831 0020 FB88     		ldrh	r3, [r7, #6]
 832 0022 002B     		cmp	r3, #0
 833 0024 01D1     		bne	.L36
 834              	.L35:
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 835              		.loc 1 1131 15
 836 0026 0123     		movs	r3, #1
 837 0028 74E0     		b	.L37
 838              	.L36:
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 839              		.loc 1 1134 22
 840 002a FB68     		ldr	r3, [r7, #12]
 841 002c 0022     		movs	r2, #0
 842 002e C3F89020 		str	r2, [r3, #144]
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 843              		.loc 1 1135 19
 844 0032 FB68     		ldr	r3, [r7, #12]
 845 0034 2122     		movs	r2, #33
 846 0036 C3F88820 		str	r2, [r3, #136]
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 847              		.loc 1 1138 17
 848 003a FFF7FEFF 		bl	HAL_GetTick
 849 003e 7861     		str	r0, [r7, #20]
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 850              		.loc 1 1140 24
 851 0040 FB68     		ldr	r3, [r7, #12]
 852 0042 FA88     		ldrh	r2, [r7, #6]	@ movhi
 853 0044 A3F85420 		strh	r2, [r3, #84]	@ movhi
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 854              		.loc 1 1141 24
 855 0048 FB68     		ldr	r3, [r7, #12]
 856 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 857 004c A3F85620 		strh	r2, [r3, #86]	@ movhi
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 858              		.loc 1 1144 21
 859 0050 FB68     		ldr	r3, [r7, #12]
 860 0052 9B68     		ldr	r3, [r3, #8]
 861              		.loc 1 1144 8
 862 0054 B3F5805F 		cmp	r3, #4096
 863 0058 08D1     		bne	.L38
 864              		.loc 1 1144 71 discriminator 1
 865 005a FB68     		ldr	r3, [r7, #12]
 866 005c 1B69     		ldr	r3, [r3, #16]
 867              		.loc 1 1144 56 discriminator 1
 868 005e 002B     		cmp	r3, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 36


 869 0060 04D1     		bne	.L38
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
 870              		.loc 1 1146 19
 871 0062 0023     		movs	r3, #0
 872 0064 FB61     		str	r3, [r7, #28]
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 873              		.loc 1 1147 19
 874 0066 BB68     		ldr	r3, [r7, #8]
 875 0068 BB61     		str	r3, [r7, #24]
 876 006a 03E0     		b	.L39
 877              	.L38:
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
 878              		.loc 1 1151 19
 879 006c BB68     		ldr	r3, [r7, #8]
 880 006e FB61     		str	r3, [r7, #28]
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
 881              		.loc 1 1152 19
 882 0070 0023     		movs	r3, #0
 883 0072 BB61     		str	r3, [r7, #24]
 884              	.L39:
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 885              		.loc 1 1155 11
 886 0074 30E0     		b	.L40
 887              	.L44:
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 888              		.loc 1 1157 11
 889 0076 3B68     		ldr	r3, [r7]
 890 0078 0093     		str	r3, [sp]
 891 007a 7B69     		ldr	r3, [r7, #20]
 892 007c 0022     		movs	r2, #0
 893 007e 8021     		movs	r1, #128
 894 0080 F868     		ldr	r0, [r7, #12]
 895 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 896 0086 0346     		mov	r3, r0
 897              		.loc 1 1157 10 discriminator 1
 898 0088 002B     		cmp	r3, #0
 899 008a 05D0     		beq	.L41
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 900              		.loc 1 1160 23
 901 008c FB68     		ldr	r3, [r7, #12]
 902 008e 2022     		movs	r2, #32
 903 0090 C3F88820 		str	r2, [r3, #136]
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 904              		.loc 1 1162 16
 905 0094 0323     		movs	r3, #3
 906 0096 3DE0     		b	.L37
 907              	.L41:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 37


1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
 908              		.loc 1 1164 10
 909 0098 FB69     		ldr	r3, [r7, #28]
 910 009a 002B     		cmp	r3, #0
 911 009c 0BD1     		bne	.L42
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 912              		.loc 1 1166 43
 913 009e BB69     		ldr	r3, [r7, #24]
 914 00a0 1B88     		ldrh	r3, [r3]
 915              		.loc 1 1166 32
 916 00a2 1A46     		mov	r2, r3
 917              		.loc 1 1166 14
 918 00a4 FB68     		ldr	r3, [r7, #12]
 919 00a6 1B68     		ldr	r3, [r3]
 920              		.loc 1 1166 32
 921 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 922              		.loc 1 1166 30
 923 00ac 9A62     		str	r2, [r3, #40]
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 924              		.loc 1 1167 20
 925 00ae BB69     		ldr	r3, [r7, #24]
 926 00b0 0233     		adds	r3, r3, #2
 927 00b2 BB61     		str	r3, [r7, #24]
 928 00b4 07E0     		b	.L43
 929              	.L42:
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 930              		.loc 1 1171 42
 931 00b6 FB69     		ldr	r3, [r7, #28]
 932 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 933              		.loc 1 1171 14
 934 00ba FB68     		ldr	r3, [r7, #12]
 935 00bc 1B68     		ldr	r3, [r3]
 936              		.loc 1 1171 30
 937 00be 9A62     		str	r2, [r3, #40]
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 938              		.loc 1 1172 19
 939 00c0 FB69     		ldr	r3, [r7, #28]
 940 00c2 0133     		adds	r3, r3, #1
 941 00c4 FB61     		str	r3, [r7, #28]
 942              	.L43:
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 943              		.loc 1 1174 12
 944 00c6 FB68     		ldr	r3, [r7, #12]
 945 00c8 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 946 00cc 9BB2     		uxth	r3, r3
 947              		.loc 1 1174 25
 948 00ce 013B     		subs	r3, r3, #1
 949 00d0 9AB2     		uxth	r2, r3
 950 00d2 FB68     		ldr	r3, [r7, #12]
 951 00d4 A3F85620 		strh	r2, [r3, #86]	@ movhi
 952              	.L40:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 38


1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 953              		.loc 1 1155 17
 954 00d8 FB68     		ldr	r3, [r7, #12]
 955 00da B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 956 00de 9BB2     		uxth	r3, r3
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 957              		.loc 1 1155 31
 958 00e0 002B     		cmp	r3, #0
 959 00e2 C8D1     		bne	.L44
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 960              		.loc 1 1177 9
 961 00e4 3B68     		ldr	r3, [r7]
 962 00e6 0093     		str	r3, [sp]
 963 00e8 7B69     		ldr	r3, [r7, #20]
 964 00ea 0022     		movs	r2, #0
 965 00ec 4021     		movs	r1, #64
 966 00ee F868     		ldr	r0, [r7, #12]
 967 00f0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 968 00f4 0346     		mov	r3, r0
 969              		.loc 1 1177 8 discriminator 1
 970 00f6 002B     		cmp	r3, #0
 971 00f8 05D0     		beq	.L45
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 972              		.loc 1 1179 21
 973 00fa FB68     		ldr	r3, [r7, #12]
 974 00fc 2022     		movs	r2, #32
 975 00fe C3F88820 		str	r2, [r3, #136]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 976              		.loc 1 1181 14
 977 0102 0323     		movs	r3, #3
 978 0104 06E0     		b	.L37
 979              	.L45:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 980              		.loc 1 1185 19
 981 0106 FB68     		ldr	r3, [r7, #12]
 982 0108 2022     		movs	r2, #32
 983 010a C3F88820 		str	r2, [r3, #136]
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 984              		.loc 1 1187 12
 985 010e 0023     		movs	r3, #0
 986 0110 00E0     		b	.L37
 987              	.L34:
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 988              		.loc 1 1191 12
 989 0112 0223     		movs	r3, #2
 990              	.L37:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 39


1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 991              		.loc 1 1193 1
 992 0114 1846     		mov	r0, r3
 993 0116 2037     		adds	r7, r7, #32
 994              	.LCFI40:
 995              		.cfi_def_cfa_offset 8
 996 0118 BD46     		mov	sp, r7
 997              	.LCFI41:
 998              		.cfi_def_cfa_register 13
 999              		@ sp needed
 1000 011a 80BD     		pop	{r7, pc}
 1001              		.cfi_endproc
 1002              	.LFE151:
 1004              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1005              		.align	1
 1006              		.global	HAL_UART_Receive
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1011              	HAL_UART_Receive:
 1012              	.LFB152:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart   UART handle.
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout Timeout duration.
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1013              		.loc 1 1211 1
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 32
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017 0000 80B5     		push	{r7, lr}
 1018              	.LCFI42:
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 8AB0     		sub	sp, sp, #40
 1023              	.LCFI43:
 1024              		.cfi_def_cfa_offset 48
 1025 0004 02AF     		add	r7, sp, #8
 1026              	.LCFI44:
 1027              		.cfi_def_cfa 7, 40
 1028 0006 F860     		str	r0, [r7, #12]
 1029 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 40


 1030 000a 3B60     		str	r3, [r7]
 1031 000c 1346     		mov	r3, r2	@ movhi
 1032 000e FB80     		strh	r3, [r7, #6]	@ movhi
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint8_t  *pdata8bits;
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *pdata16bits;
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask;
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1033              		.loc 1 1218 12
 1034 0010 FB68     		ldr	r3, [r7, #12]
 1035 0012 D3F88C30 		ldr	r3, [r3, #140]
 1036              		.loc 1 1218 6
 1037 0016 202B     		cmp	r3, #32
 1038 0018 40F0B580 		bne	.L47
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1039              		.loc 1 1220 8
 1040 001c BB68     		ldr	r3, [r7, #8]
 1041 001e 002B     		cmp	r3, #0
 1042 0020 02D0     		beq	.L48
 1043              		.loc 1 1220 25 discriminator 1
 1044 0022 FB88     		ldrh	r3, [r7, #6]
 1045 0024 002B     		cmp	r3, #0
 1046 0026 01D1     		bne	.L49
 1047              	.L48:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 1048              		.loc 1 1222 15
 1049 0028 0123     		movs	r3, #1
 1050 002a ADE0     		b	.L50
 1051              	.L49:
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1052              		.loc 1 1225 22
 1053 002c FB68     		ldr	r3, [r7, #12]
 1054 002e 0022     		movs	r2, #0
 1055 0030 C3F89020 		str	r2, [r3, #144]
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1056              		.loc 1 1226 20
 1057 0034 FB68     		ldr	r3, [r7, #12]
 1058 0036 2222     		movs	r2, #34
 1059 0038 C3F88C20 		str	r2, [r3, #140]
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1060              		.loc 1 1227 26
 1061 003c FB68     		ldr	r3, [r7, #12]
 1062 003e 0022     		movs	r2, #0
 1063 0040 DA66     		str	r2, [r3, #108]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout management */
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1064              		.loc 1 1230 17
 1065 0042 FFF7FEFF 		bl	HAL_GetTick
 1066 0046 7861     		str	r0, [r7, #20]
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 41


1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1067              		.loc 1 1232 24
 1068 0048 FB68     		ldr	r3, [r7, #12]
 1069 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1070 004c A3F85C20 		strh	r2, [r3, #92]	@ movhi
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 1071              		.loc 1 1233 24
 1072 0050 FB68     		ldr	r3, [r7, #12]
 1073 0052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1074 0054 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1075              		.loc 1 1236 5
 1076 0058 FB68     		ldr	r3, [r7, #12]
 1077 005a 9B68     		ldr	r3, [r3, #8]
 1078 005c B3F5805F 		cmp	r3, #4096
 1079 0060 0ED1     		bne	.L51
 1080              		.loc 1 1236 5 is_stmt 0 discriminator 1
 1081 0062 FB68     		ldr	r3, [r7, #12]
 1082 0064 1B69     		ldr	r3, [r3, #16]
 1083 0066 002B     		cmp	r3, #0
 1084 0068 05D1     		bne	.L52
 1085              		.loc 1 1236 5 discriminator 3
 1086 006a FB68     		ldr	r3, [r7, #12]
 1087 006c 40F2FF12 		movw	r2, #511
 1088 0070 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1089 0074 2DE0     		b	.L53
 1090              	.L52:
 1091              		.loc 1 1236 5 discriminator 4
 1092 0076 FB68     		ldr	r3, [r7, #12]
 1093 0078 FF22     		movs	r2, #255
 1094 007a A3F86020 		strh	r2, [r3, #96]	@ movhi
 1095 007e 28E0     		b	.L53
 1096              	.L51:
 1097              		.loc 1 1236 5 discriminator 2
 1098 0080 FB68     		ldr	r3, [r7, #12]
 1099 0082 9B68     		ldr	r3, [r3, #8]
 1100 0084 002B     		cmp	r3, #0
 1101 0086 0DD1     		bne	.L54
 1102              		.loc 1 1236 5 discriminator 5
 1103 0088 FB68     		ldr	r3, [r7, #12]
 1104 008a 1B69     		ldr	r3, [r3, #16]
 1105 008c 002B     		cmp	r3, #0
 1106 008e 04D1     		bne	.L55
 1107              		.loc 1 1236 5 discriminator 7
 1108 0090 FB68     		ldr	r3, [r7, #12]
 1109 0092 FF22     		movs	r2, #255
 1110 0094 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1111 0098 1BE0     		b	.L53
 1112              	.L55:
 1113              		.loc 1 1236 5 discriminator 8
 1114 009a FB68     		ldr	r3, [r7, #12]
 1115 009c 7F22     		movs	r2, #127
 1116 009e A3F86020 		strh	r2, [r3, #96]	@ movhi
 1117 00a2 16E0     		b	.L53
 1118              	.L54:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 42


 1119              		.loc 1 1236 5 discriminator 6
 1120 00a4 FB68     		ldr	r3, [r7, #12]
 1121 00a6 9B68     		ldr	r3, [r3, #8]
 1122 00a8 B3F1805F 		cmp	r3, #268435456
 1123 00ac 0DD1     		bne	.L56
 1124              		.loc 1 1236 5 discriminator 9
 1125 00ae FB68     		ldr	r3, [r7, #12]
 1126 00b0 1B69     		ldr	r3, [r3, #16]
 1127 00b2 002B     		cmp	r3, #0
 1128 00b4 04D1     		bne	.L57
 1129              		.loc 1 1236 5 discriminator 11
 1130 00b6 FB68     		ldr	r3, [r7, #12]
 1131 00b8 7F22     		movs	r2, #127
 1132 00ba A3F86020 		strh	r2, [r3, #96]	@ movhi
 1133 00be 08E0     		b	.L53
 1134              	.L57:
 1135              		.loc 1 1236 5 discriminator 12
 1136 00c0 FB68     		ldr	r3, [r7, #12]
 1137 00c2 3F22     		movs	r2, #63
 1138 00c4 A3F86020 		strh	r2, [r3, #96]	@ movhi
 1139 00c8 03E0     		b	.L53
 1140              	.L56:
 1141              		.loc 1 1236 5 discriminator 10
 1142 00ca FB68     		ldr	r3, [r7, #12]
 1143 00cc 0022     		movs	r2, #0
 1144 00ce A3F86020 		strh	r2, [r3, #96]	@ movhi
 1145              	.L53:
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 1146              		.loc 1 1237 12 is_stmt 1
 1147 00d2 FB68     		ldr	r3, [r7, #12]
 1148 00d4 B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 1149 00d8 7B82     		strh	r3, [r7, #18]	@ movhi
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1150              		.loc 1 1240 21
 1151 00da FB68     		ldr	r3, [r7, #12]
 1152 00dc 9B68     		ldr	r3, [r3, #8]
 1153              		.loc 1 1240 8
 1154 00de B3F5805F 		cmp	r3, #4096
 1155 00e2 08D1     		bne	.L58
 1156              		.loc 1 1240 71 discriminator 1
 1157 00e4 FB68     		ldr	r3, [r7, #12]
 1158 00e6 1B69     		ldr	r3, [r3, #16]
 1159              		.loc 1 1240 56 discriminator 1
 1160 00e8 002B     		cmp	r3, #0
 1161 00ea 04D1     		bne	.L58
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = NULL;
 1162              		.loc 1 1242 19
 1163 00ec 0023     		movs	r3, #0
 1164 00ee FB61     		str	r3, [r7, #28]
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1165              		.loc 1 1243 19
 1166 00f0 BB68     		ldr	r3, [r7, #8]
 1167 00f2 BB61     		str	r3, [r7, #24]
 1168 00f4 03E0     		b	.L59
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 43


 1169              	.L58:
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata8bits  = pData;
 1170              		.loc 1 1247 19
 1171 00f6 BB68     		ldr	r3, [r7, #8]
 1172 00f8 FB61     		str	r3, [r7, #28]
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       pdata16bits = NULL;
 1173              		.loc 1 1248 19
 1174 00fa 0023     		movs	r3, #0
 1175 00fc BB61     		str	r3, [r7, #24]
 1176              	.L59:
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* as long as data have to be received */
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1177              		.loc 1 1252 11
 1178 00fe 36E0     		b	.L60
 1179              	.L64:
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1180              		.loc 1 1254 11
 1181 0100 3B68     		ldr	r3, [r7]
 1182 0102 0093     		str	r3, [sp]
 1183 0104 7B69     		ldr	r3, [r7, #20]
 1184 0106 0022     		movs	r2, #0
 1185 0108 2021     		movs	r1, #32
 1186 010a F868     		ldr	r0, [r7, #12]
 1187 010c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1188 0110 0346     		mov	r3, r0
 1189              		.loc 1 1254 10 discriminator 1
 1190 0112 002B     		cmp	r3, #0
 1191 0114 05D0     		beq	.L61
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1192              		.loc 1 1256 24
 1193 0116 FB68     		ldr	r3, [r7, #12]
 1194 0118 2022     		movs	r2, #32
 1195 011a C3F88C20 		str	r2, [r3, #140]
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 1196              		.loc 1 1258 16
 1197 011e 0323     		movs	r3, #3
 1198 0120 32E0     		b	.L50
 1199              	.L61:
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (pdata8bits == NULL)
 1200              		.loc 1 1260 10
 1201 0122 FB69     		ldr	r3, [r7, #28]
 1202 0124 002B     		cmp	r3, #0
 1203 0126 0CD1     		bne	.L62
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1204              		.loc 1 1262 40
 1205 0128 FB68     		ldr	r3, [r7, #12]
 1206 012a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 44


 1207              		.loc 1 1262 50
 1208 012c 5B6A     		ldr	r3, [r3, #36]
 1209              		.loc 1 1262 24
 1210 012e 9AB2     		uxth	r2, r3
 1211 0130 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1212 0132 1340     		ands	r3, r3, r2
 1213 0134 9AB2     		uxth	r2, r3
 1214              		.loc 1 1262 22
 1215 0136 BB69     		ldr	r3, [r7, #24]
 1216 0138 1A80     		strh	r2, [r3]	@ movhi
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata16bits++;
 1217              		.loc 1 1263 20
 1218 013a BB69     		ldr	r3, [r7, #24]
 1219 013c 0233     		adds	r3, r3, #2
 1220 013e BB61     		str	r3, [r7, #24]
 1221 0140 0CE0     		b	.L63
 1222              	.L62:
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1223              		.loc 1 1267 38
 1224 0142 FB68     		ldr	r3, [r7, #12]
 1225 0144 1B68     		ldr	r3, [r3]
 1226              		.loc 1 1267 48
 1227 0146 5B6A     		ldr	r3, [r3, #36]
 1228              		.loc 1 1267 23
 1229 0148 DAB2     		uxtb	r2, r3
 1230              		.loc 1 1267 56
 1231 014a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1232 014c DBB2     		uxtb	r3, r3
 1233              		.loc 1 1267 23
 1234 014e 1340     		ands	r3, r3, r2
 1235 0150 DAB2     		uxtb	r2, r3
 1236              		.loc 1 1267 21
 1237 0152 FB69     		ldr	r3, [r7, #28]
 1238 0154 1A70     		strb	r2, [r3]
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pdata8bits++;
 1239              		.loc 1 1268 19
 1240 0156 FB69     		ldr	r3, [r7, #28]
 1241 0158 0133     		adds	r3, r3, #1
 1242 015a FB61     		str	r3, [r7, #28]
 1243              	.L63:
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 1244              		.loc 1 1270 12
 1245 015c FB68     		ldr	r3, [r7, #12]
 1246 015e B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1247 0162 9BB2     		uxth	r3, r3
 1248              		.loc 1 1270 25
 1249 0164 013B     		subs	r3, r3, #1
 1250 0166 9AB2     		uxth	r2, r3
 1251 0168 FB68     		ldr	r3, [r7, #12]
 1252 016a A3F85E20 		strh	r2, [r3, #94]	@ movhi
 1253              	.L60:
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1254              		.loc 1 1252 17
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 45


 1255 016e FB68     		ldr	r3, [r7, #12]
 1256 0170 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 1257 0174 9BB2     		uxth	r3, r3
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1258              		.loc 1 1252 31
 1259 0176 002B     		cmp	r3, #0
 1260 0178 C2D1     		bne	.L64
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1261              		.loc 1 1274 20
 1262 017a FB68     		ldr	r3, [r7, #12]
 1263 017c 2022     		movs	r2, #32
 1264 017e C3F88C20 		str	r2, [r3, #140]
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1265              		.loc 1 1276 12
 1266 0182 0023     		movs	r3, #0
 1267 0184 00E0     		b	.L50
 1268              	.L47:
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1269              		.loc 1 1280 12
 1270 0186 0223     		movs	r3, #2
 1271              	.L50:
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1272              		.loc 1 1282 1
 1273 0188 1846     		mov	r0, r3
 1274 018a 2037     		adds	r7, r7, #32
 1275              	.LCFI45:
 1276              		.cfi_def_cfa_offset 8
 1277 018c BD46     		mov	sp, r7
 1278              	.LCFI46:
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
 1281 018e 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE152:
 1285              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1286              		.align	1
 1287              		.global	HAL_UART_Transmit_IT
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1292              	HAL_UART_Transmit_IT:
 1293              	.LFB153:
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 46


1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1294              		.loc 1 1295 1
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 64
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299 0000 80B4     		push	{r7}
 1300              	.LCFI47:
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 7, -4
 1303 0002 91B0     		sub	sp, sp, #68
 1304              	.LCFI48:
 1305              		.cfi_def_cfa_offset 72
 1306 0004 00AF     		add	r7, sp, #0
 1307              	.LCFI49:
 1308              		.cfi_def_cfa_register 7
 1309 0006 F860     		str	r0, [r7, #12]
 1310 0008 B960     		str	r1, [r7, #8]
 1311 000a 1346     		mov	r3, r2
 1312 000c FB80     		strh	r3, [r7, #6]	@ movhi
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1313              		.loc 1 1297 12
 1314 000e FB68     		ldr	r3, [r7, #12]
 1315 0010 D3F88830 		ldr	r3, [r3, #136]
 1316              		.loc 1 1297 6
 1317 0014 202B     		cmp	r3, #32
 1318 0016 78D1     		bne	.L66
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1319              		.loc 1 1299 8
 1320 0018 BB68     		ldr	r3, [r7, #8]
 1321 001a 002B     		cmp	r3, #0
 1322 001c 02D0     		beq	.L67
 1323              		.loc 1 1299 25 discriminator 1
 1324 001e FB88     		ldrh	r3, [r7, #6]
 1325 0020 002B     		cmp	r3, #0
 1326 0022 01D1     		bne	.L68
 1327              	.L67:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1328              		.loc 1 1301 14
 1329 0024 0123     		movs	r3, #1
 1330 0026 71E0     		b	.L69
 1331              	.L68:
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1332              		.loc 1 1304 24
 1333 0028 FB68     		ldr	r3, [r7, #12]
 1334 002a BA68     		ldr	r2, [r7, #8]
 1335 002c 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 47


1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1336              		.loc 1 1305 24
 1337 002e FB68     		ldr	r3, [r7, #12]
 1338 0030 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1339 0032 A3F85420 		strh	r2, [r3, #84]	@ movhi
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1340              		.loc 1 1306 24
 1341 0036 FB68     		ldr	r3, [r7, #12]
 1342 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1343 003a A3F85620 		strh	r2, [r3, #86]	@ movhi
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR       = NULL;
 1344              		.loc 1 1307 24
 1345 003e FB68     		ldr	r3, [r7, #12]
 1346 0040 0022     		movs	r2, #0
 1347 0042 9A67     		str	r2, [r3, #120]
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1348              		.loc 1 1309 22
 1349 0044 FB68     		ldr	r3, [r7, #12]
 1350 0046 0022     		movs	r2, #0
 1351 0048 C3F89020 		str	r2, [r3, #144]
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1352              		.loc 1 1310 19
 1353 004c FB68     		ldr	r3, [r7, #12]
 1354 004e 2122     		movs	r2, #33
 1355 0050 C3F88820 		str	r2, [r3, #136]
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 1356              		.loc 1 1313 14
 1357 0054 FB68     		ldr	r3, [r7, #12]
 1358 0056 5B6E     		ldr	r3, [r3, #100]
 1359              		.loc 1 1313 8
 1360 0058 B3F1005F 		cmp	r3, #536870912
 1361 005c 2AD1     		bne	.L70
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1362              		.loc 1 1316 23
 1363 005e FB68     		ldr	r3, [r7, #12]
 1364 0060 9B68     		ldr	r3, [r3, #8]
 1365              		.loc 1 1316 10
 1366 0062 B3F5805F 		cmp	r3, #4096
 1367 0066 07D1     		bne	.L71
 1368              		.loc 1 1316 73 discriminator 1
 1369 0068 FB68     		ldr	r3, [r7, #12]
 1370 006a 1B69     		ldr	r3, [r3, #16]
 1371              		.loc 1 1316 58 discriminator 1
 1372 006c 002B     		cmp	r3, #0
 1373 006e 03D1     		bne	.L71
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 1374              		.loc 1 1318 22
 1375 0070 FB68     		ldr	r3, [r7, #12]
 1376 0072 294A     		ldr	r2, .L82
 1377 0074 9A67     		str	r2, [r3, #120]
 1378 0076 02E0     		b	.L75
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 48


 1379              	.L71:
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 1380              		.loc 1 1322 22
 1381 0078 FB68     		ldr	r3, [r7, #12]
 1382 007a 284A     		ldr	r2, .L82+4
 1383 007c 9A67     		str	r2, [r3, #120]
 1384              	.L75:
 1385              	.LBB524:
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1386              		.loc 1 1326 7 discriminator 1
 1387 007e FB68     		ldr	r3, [r7, #12]
 1388 0080 1B68     		ldr	r3, [r3]
 1389 0082 0833     		adds	r3, r3, #8
 1390 0084 BB62     		str	r3, [r7, #40]
 1391              	.LBB525:
 1392              	.LBB526:
 1393              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 49


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 50


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 51


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 52


 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 53


 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 54


 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 55


 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 56


 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 57


 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 58


 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 59


 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 60


 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 61


 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 62


 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 63


 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 64


 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 65


 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 66


1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 67


1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 68


1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1394              		.loc 2 1155 4
 1395 0086 BB6A     		ldr	r3, [r7, #40]
 1396              		.syntax unified
 1397              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1398 0088 53E8003F 		ldrex r3, [r3]
 1399              	@ 0 "" 2
 1400              		.thumb
 1401              		.syntax unified
 1402 008c 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1403              		.loc 2 1156 10
 1404 008e 7B6A     		ldr	r3, [r7, #36]
 1405              	.LBE526:
 1406              	.LBE525:
 1407              		.loc 1 1326 7 discriminator 1
 1408 0090 43F40003 		orr	r3, r3, #8388608
 1409 0094 BB63     		str	r3, [r7, #56]
 1410 0096 FB68     		ldr	r3, [r7, #12]
 1411 0098 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 69


 1412 009a 0833     		adds	r3, r3, #8
 1413 009c BA6B     		ldr	r2, [r7, #56]
 1414 009e 7A63     		str	r2, [r7, #52]
 1415 00a0 3B63     		str	r3, [r7, #48]
 1416              	.LBB527:
 1417              	.LBB528:
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1418              		.loc 2 1206 4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 70


 1419 00a2 396B     		ldr	r1, [r7, #48]
 1420 00a4 7A6B     		ldr	r2, [r7, #52]
 1421              		.syntax unified
 1422              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1423 00a6 41E80023 		strex r3, r2, [r1]
 1424              	@ 0 "" 2
 1425              		.thumb
 1426              		.syntax unified
 1427 00aa FB62     		str	r3, [r7, #44]
1207:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1428              		.loc 2 1207 10
 1429 00ac FB6A     		ldr	r3, [r7, #44]
 1430              	.LBE528:
 1431              	.LBE527:
 1432              		.loc 1 1326 7 discriminator 1
 1433 00ae 002B     		cmp	r3, #0
 1434 00b0 E5D1     		bne	.L75
 1435 00b2 28E0     		b	.L76
 1436              	.L70:
 1437              	.LBE524:
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1438              		.loc 1 1331 23
 1439 00b4 FB68     		ldr	r3, [r7, #12]
 1440 00b6 9B68     		ldr	r3, [r3, #8]
 1441              		.loc 1 1331 10
 1442 00b8 B3F5805F 		cmp	r3, #4096
 1443 00bc 07D1     		bne	.L77
 1444              		.loc 1 1331 73 discriminator 1
 1445 00be FB68     		ldr	r3, [r7, #12]
 1446 00c0 1B69     		ldr	r3, [r3, #16]
 1447              		.loc 1 1331 58 discriminator 1
 1448 00c2 002B     		cmp	r3, #0
 1449 00c4 03D1     		bne	.L77
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
 1450              		.loc 1 1333 22
 1451 00c6 FB68     		ldr	r3, [r7, #12]
 1452 00c8 154A     		ldr	r2, .L82+8
 1453 00ca 9A67     		str	r2, [r3, #120]
 1454 00cc 02E0     		b	.L81
 1455              	.L77:
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
 1456              		.loc 1 1337 22
 1457 00ce FB68     		ldr	r3, [r7, #12]
 1458 00d0 144A     		ldr	r2, .L82+12
 1459 00d2 9A67     		str	r2, [r3, #120]
 1460              	.L81:
 1461              	.LBB529:
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 71


1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 1462              		.loc 1 1341 7 discriminator 1
 1463 00d4 FB68     		ldr	r3, [r7, #12]
 1464 00d6 1B68     		ldr	r3, [r3]
 1465 00d8 7B61     		str	r3, [r7, #20]
 1466              	.LBB530:
 1467              	.LBB531:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1468              		.loc 2 1155 4
 1469 00da 7B69     		ldr	r3, [r7, #20]
 1470              		.syntax unified
 1471              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1472 00dc 53E8003F 		ldrex r3, [r3]
 1473              	@ 0 "" 2
 1474              		.thumb
 1475              		.syntax unified
 1476 00e0 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1477              		.loc 2 1156 10
 1478 00e2 3B69     		ldr	r3, [r7, #16]
 1479              	.LBE531:
 1480              	.LBE530:
 1481              		.loc 1 1341 7 discriminator 1
 1482 00e4 43F08003 		orr	r3, r3, #128
 1483 00e8 FB63     		str	r3, [r7, #60]
 1484 00ea FB68     		ldr	r3, [r7, #12]
 1485 00ec 1B68     		ldr	r3, [r3]
 1486 00ee 1A46     		mov	r2, r3
 1487 00f0 FB6B     		ldr	r3, [r7, #60]
 1488 00f2 3B62     		str	r3, [r7, #32]
 1489 00f4 FA61     		str	r2, [r7, #28]
 1490              	.LBB532:
 1491              	.LBB533:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1492              		.loc 2 1206 4
 1493 00f6 F969     		ldr	r1, [r7, #28]
 1494 00f8 3A6A     		ldr	r2, [r7, #32]
 1495              		.syntax unified
 1496              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1497 00fa 41E80023 		strex r3, r2, [r1]
 1498              	@ 0 "" 2
 1499              		.thumb
 1500              		.syntax unified
 1501 00fe BB61     		str	r3, [r7, #24]
 1502              		.loc 2 1207 10
 1503 0100 BB69     		ldr	r3, [r7, #24]
 1504              	.LBE533:
 1505              	.LBE532:
 1506              		.loc 1 1341 7 discriminator 1
 1507 0102 002B     		cmp	r3, #0
 1508 0104 E6D1     		bne	.L81
 1509              	.L76:
 1510              	.LBE529:
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 72


 1511              		.loc 1 1344 12
 1512 0106 0023     		movs	r3, #0
 1513 0108 00E0     		b	.L69
 1514              	.L66:
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1515              		.loc 1 1348 12
 1516 010a 0223     		movs	r3, #2
 1517              	.L69:
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1518              		.loc 1 1350 1
 1519 010c 1846     		mov	r0, r3
 1520 010e 4437     		adds	r7, r7, #68
 1521              	.LCFI50:
 1522              		.cfi_def_cfa_offset 4
 1523 0110 BD46     		mov	sp, r7
 1524              	.LCFI51:
 1525              		.cfi_def_cfa_register 13
 1526              		@ sp needed
 1527 0112 5DF8047B 		ldr	r7, [sp], #4
 1528              	.LCFI52:
 1529              		.cfi_restore 7
 1530              		.cfi_def_cfa_offset 0
 1531 0116 7047     		bx	lr
 1532              	.L83:
 1533              		.align	2
 1534              	.L82:
 1535 0118 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 1536 011c 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 1537 0120 00000000 		.word	UART_TxISR_16BIT
 1538 0124 00000000 		.word	UART_TxISR_8BIT
 1539              		.cfi_endproc
 1540              	.LFE153:
 1542              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1543              		.align	1
 1544              		.global	HAL_UART_Receive_IT
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1549              	HAL_UART_Receive_IT:
 1550              	.LFB154:
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 73


 1551              		.loc 1 1363 1
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 40
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI53:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 8AB0     		sub	sp, sp, #40
 1561              	.LCFI54:
 1562              		.cfi_def_cfa_offset 48
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI55:
 1565              		.cfi_def_cfa_register 7
 1566 0006 F860     		str	r0, [r7, #12]
 1567 0008 B960     		str	r1, [r7, #8]
 1568 000a 1346     		mov	r3, r2
 1569 000c FB80     		strh	r3, [r7, #6]	@ movhi
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1570              		.loc 1 1365 12
 1571 000e FB68     		ldr	r3, [r7, #12]
 1572 0010 D3F88C30 		ldr	r3, [r3, #140]
 1573              		.loc 1 1365 6
 1574 0014 202B     		cmp	r3, #32
 1575 0016 37D1     		bne	.L85
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1576              		.loc 1 1367 8
 1577 0018 BB68     		ldr	r3, [r7, #8]
 1578 001a 002B     		cmp	r3, #0
 1579 001c 02D0     		beq	.L86
 1580              		.loc 1 1367 25 discriminator 1
 1581 001e FB88     		ldrh	r3, [r7, #6]
 1582 0020 002B     		cmp	r3, #0
 1583 0022 01D1     		bne	.L87
 1584              	.L86:
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1585              		.loc 1 1369 14
 1586 0024 0123     		movs	r3, #1
 1587 0026 30E0     		b	.L88
 1588              	.L87:
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1589              		.loc 1 1373 26
 1590 0028 FB68     		ldr	r3, [r7, #12]
 1591 002a 0022     		movs	r2, #0
 1592 002c DA66     		str	r2, [r3, #108]
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1593              		.loc 1 1375 11
 1594 002e FB68     		ldr	r3, [r7, #12]
 1595 0030 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 74


 1596              		.loc 1 1375 8
 1597 0032 184A     		ldr	r2, .L93
 1598 0034 9342     		cmp	r3, r2
 1599 0036 1FD0     		beq	.L89
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1600              		.loc 1 1378 11
 1601 0038 FB68     		ldr	r3, [r7, #12]
 1602 003a 1B68     		ldr	r3, [r3]
 1603 003c 5B68     		ldr	r3, [r3, #4]
 1604 003e 03F40003 		and	r3, r3, #8388608
 1605              		.loc 1 1378 10
 1606 0042 002B     		cmp	r3, #0
 1607 0044 18D0     		beq	.L89
 1608              	.L92:
 1609              	.LBB534:
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1610              		.loc 1 1381 9 discriminator 1
 1611 0046 FB68     		ldr	r3, [r7, #12]
 1612 0048 1B68     		ldr	r3, [r3]
 1613 004a 7B61     		str	r3, [r7, #20]
 1614              	.LBB535:
 1615              	.LBB536:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1616              		.loc 2 1155 4
 1617 004c 7B69     		ldr	r3, [r7, #20]
 1618              		.syntax unified
 1619              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1620 004e 53E8003F 		ldrex r3, [r3]
 1621              	@ 0 "" 2
 1622              		.thumb
 1623              		.syntax unified
 1624 0052 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1625              		.loc 2 1156 10
 1626 0054 3B69     		ldr	r3, [r7, #16]
 1627              	.LBE536:
 1628              	.LBE535:
 1629              		.loc 1 1381 9 discriminator 1
 1630 0056 43F08063 		orr	r3, r3, #67108864
 1631 005a 7B62     		str	r3, [r7, #36]
 1632 005c FB68     		ldr	r3, [r7, #12]
 1633 005e 1B68     		ldr	r3, [r3]
 1634 0060 1A46     		mov	r2, r3
 1635 0062 7B6A     		ldr	r3, [r7, #36]
 1636 0064 3B62     		str	r3, [r7, #32]
 1637 0066 FA61     		str	r2, [r7, #28]
 1638              	.LBB537:
 1639              	.LBB538:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1640              		.loc 2 1206 4
 1641 0068 F969     		ldr	r1, [r7, #28]
 1642 006a 3A6A     		ldr	r2, [r7, #32]
 1643              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 75


 1644              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1645 006c 41E80023 		strex r3, r2, [r1]
 1646              	@ 0 "" 2
 1647              		.thumb
 1648              		.syntax unified
 1649 0070 BB61     		str	r3, [r7, #24]
 1650              		.loc 2 1207 10
 1651 0072 BB69     		ldr	r3, [r7, #24]
 1652              	.LBE538:
 1653              	.LBE537:
 1654              		.loc 1 1381 9 discriminator 1
 1655 0074 002B     		cmp	r3, #0
 1656 0076 E6D1     		bne	.L92
 1657              	.L89:
 1658              	.LBE534:
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1659              		.loc 1 1385 13
 1660 0078 FB88     		ldrh	r3, [r7, #6]
 1661 007a 1A46     		mov	r2, r3
 1662 007c B968     		ldr	r1, [r7, #8]
 1663 007e F868     		ldr	r0, [r7, #12]
 1664 0080 FFF7FEFF 		bl	UART_Start_Receive_IT
 1665 0084 0346     		mov	r3, r0
 1666 0086 00E0     		b	.L88
 1667              	.L85:
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1668              		.loc 1 1389 12
 1669 0088 0223     		movs	r3, #2
 1670              	.L88:
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1671              		.loc 1 1391 1
 1672 008a 1846     		mov	r0, r3
 1673 008c 2837     		adds	r7, r7, #40
 1674              	.LCFI56:
 1675              		.cfi_def_cfa_offset 8
 1676 008e BD46     		mov	sp, r7
 1677              	.LCFI57:
 1678              		.cfi_def_cfa_register 13
 1679              		@ sp needed
 1680 0090 80BD     		pop	{r7, pc}
 1681              	.L94:
 1682 0092 00BF     		.align	2
 1683              	.L93:
 1684 0094 000C0058 		.word	1476398080
 1685              		.cfi_endproc
 1686              	.LFE154:
 1688              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1689              		.align	1
 1690              		.global	HAL_UART_Transmit_DMA
 1691              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 76


 1692              		.thumb
 1693              		.thumb_func
 1695              	HAL_UART_Transmit_DMA:
 1696              	.LFB155:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 provided through pData.
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1697              		.loc 1 1404 1
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 40
 1700              		@ frame_needed = 1, uses_anonymous_args = 0
 1701 0000 80B5     		push	{r7, lr}
 1702              	.LCFI58:
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
 1705              		.cfi_offset 14, -4
 1706 0002 8AB0     		sub	sp, sp, #40
 1707              	.LCFI59:
 1708              		.cfi_def_cfa_offset 48
 1709 0004 00AF     		add	r7, sp, #0
 1710              	.LCFI60:
 1711              		.cfi_def_cfa_register 7
 1712 0006 F860     		str	r0, [r7, #12]
 1713 0008 B960     		str	r1, [r7, #8]
 1714 000a 1346     		mov	r3, r2
 1715 000c FB80     		strh	r3, [r7, #6]	@ movhi
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1716              		.loc 1 1406 12
 1717 000e FB68     		ldr	r3, [r7, #12]
 1718 0010 D3F88830 		ldr	r3, [r3, #136]
 1719              		.loc 1 1406 6
 1720 0014 202B     		cmp	r3, #32
 1721 0016 67D1     		bne	.L96
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1722              		.loc 1 1408 8
 1723 0018 BB68     		ldr	r3, [r7, #8]
 1724 001a 002B     		cmp	r3, #0
 1725 001c 02D0     		beq	.L97
 1726              		.loc 1 1408 25 discriminator 1
 1727 001e FB88     		ldrh	r3, [r7, #6]
 1728 0020 002B     		cmp	r3, #0
 1729 0022 01D1     		bne	.L98
 1730              	.L97:
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 77


 1731              		.loc 1 1410 14
 1732 0024 0123     		movs	r3, #1
 1733 0026 60E0     		b	.L99
 1734              	.L98:
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1735              		.loc 1 1413 24
 1736 0028 FB68     		ldr	r3, [r7, #12]
 1737 002a BA68     		ldr	r2, [r7, #8]
 1738 002c 1A65     		str	r2, [r3, #80]
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1739              		.loc 1 1414 24
 1740 002e FB68     		ldr	r3, [r7, #12]
 1741 0030 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1742 0032 A3F85420 		strh	r2, [r3, #84]	@ movhi
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 1743              		.loc 1 1415 24
 1744 0036 FB68     		ldr	r3, [r7, #12]
 1745 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1746 003a A3F85620 		strh	r2, [r3, #86]	@ movhi
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1747              		.loc 1 1417 22
 1748 003e FB68     		ldr	r3, [r7, #12]
 1749 0040 0022     		movs	r2, #0
 1750 0042 C3F89020 		str	r2, [r3, #144]
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1751              		.loc 1 1418 19
 1752 0046 FB68     		ldr	r3, [r7, #12]
 1753 0048 2122     		movs	r2, #33
 1754 004a C3F88820 		str	r2, [r3, #136]
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1755              		.loc 1 1420 14
 1756 004e FB68     		ldr	r3, [r7, #12]
 1757 0050 DB6F     		ldr	r3, [r3, #124]
 1758              		.loc 1 1420 8
 1759 0052 002B     		cmp	r3, #0
 1760 0054 28D0     		beq	.L100
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1761              		.loc 1 1423 12
 1762 0056 FB68     		ldr	r3, [r7, #12]
 1763 0058 DB6F     		ldr	r3, [r3, #124]
 1764              		.loc 1 1423 39
 1765 005a 264A     		ldr	r2, .L104
 1766 005c DA63     		str	r2, [r3, #60]
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1767              		.loc 1 1426 12
 1768 005e FB68     		ldr	r3, [r7, #12]
 1769 0060 DB6F     		ldr	r3, [r3, #124]
 1770              		.loc 1 1426 43
 1771 0062 254A     		ldr	r2, .L104+4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 78


 1772 0064 1A64     		str	r2, [r3, #64]
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA error callback */
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1773              		.loc 1 1429 12
 1774 0066 FB68     		ldr	r3, [r7, #12]
 1775 0068 DB6F     		ldr	r3, [r3, #124]
 1776              		.loc 1 1429 40
 1777 006a 244A     		ldr	r2, .L104+8
 1778 006c DA64     		str	r2, [r3, #76]
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the DMA abort callback */
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1779              		.loc 1 1432 12
 1780 006e FB68     		ldr	r3, [r7, #12]
 1781 0070 DB6F     		ldr	r3, [r3, #124]
 1782              		.loc 1 1432 40
 1783 0072 0022     		movs	r2, #0
 1784 0074 1A65     		str	r2, [r3, #80]
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1785              		.loc 1 1435 11
 1786 0076 FB68     		ldr	r3, [r7, #12]
 1787 0078 D86F     		ldr	r0, [r3, #124]
 1788              		.loc 1 1435 58
 1789 007a FB68     		ldr	r3, [r7, #12]
 1790 007c 1B6D     		ldr	r3, [r3, #80]
 1791              		.loc 1 1435 11
 1792 007e 1946     		mov	r1, r3
 1793              		.loc 1 1435 88
 1794 0080 FB68     		ldr	r3, [r7, #12]
 1795 0082 1B68     		ldr	r3, [r3]
 1796              		.loc 1 1435 82
 1797 0084 2833     		adds	r3, r3, #40
 1798              		.loc 1 1435 11
 1799 0086 1A46     		mov	r2, r3
 1800 0088 FB88     		ldrh	r3, [r7, #6]
 1801 008a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1802 008e 0346     		mov	r3, r0
 1803              		.loc 1 1435 10 discriminator 1
 1804 0090 002B     		cmp	r3, #0
 1805 0092 09D0     		beq	.L100
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set error code to DMA */
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1806              		.loc 1 1438 26
 1807 0094 FB68     		ldr	r3, [r7, #12]
 1808 0096 1022     		movs	r2, #16
 1809 0098 C3F89020 		str	r2, [r3, #144]
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Restore huart->gState to ready */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1810              		.loc 1 1441 23
 1811 009c FB68     		ldr	r3, [r7, #12]
 1812 009e 2022     		movs	r2, #32
 1813 00a0 C3F88820 		str	r2, [r3, #136]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 79


1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_ERROR;
 1814              		.loc 1 1443 16
 1815 00a4 0123     		movs	r3, #1
 1816 00a6 20E0     		b	.L99
 1817              	.L100:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1818              		.loc 1 1447 5
 1819 00a8 FB68     		ldr	r3, [r7, #12]
 1820 00aa 1B68     		ldr	r3, [r3]
 1821 00ac 4022     		movs	r2, #64
 1822 00ae 1A62     		str	r2, [r3, #32]
 1823              	.L103:
 1824              	.LBB539:
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in the UART CR3 register */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1825              		.loc 1 1451 5 discriminator 1
 1826 00b0 FB68     		ldr	r3, [r7, #12]
 1827 00b2 1B68     		ldr	r3, [r3]
 1828 00b4 0833     		adds	r3, r3, #8
 1829 00b6 7B61     		str	r3, [r7, #20]
 1830              	.LBB540:
 1831              	.LBB541:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1832              		.loc 2 1155 4
 1833 00b8 7B69     		ldr	r3, [r7, #20]
 1834              		.syntax unified
 1835              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1836 00ba 53E8003F 		ldrex r3, [r3]
 1837              	@ 0 "" 2
 1838              		.thumb
 1839              		.syntax unified
 1840 00be 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1841              		.loc 2 1156 10
 1842 00c0 3B69     		ldr	r3, [r7, #16]
 1843              	.LBE541:
 1844              	.LBE540:
 1845              		.loc 1 1451 5 discriminator 1
 1846 00c2 43F08003 		orr	r3, r3, #128
 1847 00c6 7B62     		str	r3, [r7, #36]
 1848 00c8 FB68     		ldr	r3, [r7, #12]
 1849 00ca 1B68     		ldr	r3, [r3]
 1850 00cc 0833     		adds	r3, r3, #8
 1851 00ce 7A6A     		ldr	r2, [r7, #36]
 1852 00d0 3A62     		str	r2, [r7, #32]
 1853 00d2 FB61     		str	r3, [r7, #28]
 1854              	.LBB542:
 1855              	.LBB543:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1856              		.loc 2 1206 4
 1857 00d4 F969     		ldr	r1, [r7, #28]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 80


 1858 00d6 3A6A     		ldr	r2, [r7, #32]
 1859              		.syntax unified
 1860              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1861 00d8 41E80023 		strex r3, r2, [r1]
 1862              	@ 0 "" 2
 1863              		.thumb
 1864              		.syntax unified
 1865 00dc BB61     		str	r3, [r7, #24]
 1866              		.loc 2 1207 10
 1867 00de BB69     		ldr	r3, [r7, #24]
 1868              	.LBE543:
 1869              	.LBE542:
 1870              		.loc 1 1451 5 discriminator 1
 1871 00e0 002B     		cmp	r3, #0
 1872 00e2 E5D1     		bne	.L103
 1873              	.LBE539:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1874              		.loc 1 1453 12
 1875 00e4 0023     		movs	r3, #0
 1876 00e6 00E0     		b	.L99
 1877              	.L96:
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 1878              		.loc 1 1457 12
 1879 00e8 0223     		movs	r3, #2
 1880              	.L99:
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1881              		.loc 1 1459 1
 1882 00ea 1846     		mov	r0, r3
 1883 00ec 2837     		adds	r7, r7, #40
 1884              	.LCFI61:
 1885              		.cfi_def_cfa_offset 8
 1886 00ee BD46     		mov	sp, r7
 1887              	.LCFI62:
 1888              		.cfi_def_cfa_register 13
 1889              		@ sp needed
 1890 00f0 80BD     		pop	{r7, pc}
 1891              	.L105:
 1892 00f2 00BF     		.align	2
 1893              	.L104:
 1894 00f4 00000000 		.word	UART_DMATransmitCplt
 1895 00f8 00000000 		.word	UART_DMATxHalfCplt
 1896 00fc 00000000 		.word	UART_DMAError
 1897              		.cfi_endproc
 1898              	.LFE155:
 1900              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1901              		.align	1
 1902              		.global	HAL_UART_Receive_DMA
 1903              		.syntax unified
 1904              		.thumb
 1905              		.thumb_func
 1907              	HAL_UART_Receive_DMA:
 1908              	.LFB156:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 81


1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the parity bit (MSB position).
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         of u16 available through pData.
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1909              		.loc 1 1474 1
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 40
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913 0000 80B5     		push	{r7, lr}
 1914              	.LCFI63:
 1915              		.cfi_def_cfa_offset 8
 1916              		.cfi_offset 7, -8
 1917              		.cfi_offset 14, -4
 1918 0002 8AB0     		sub	sp, sp, #40
 1919              	.LCFI64:
 1920              		.cfi_def_cfa_offset 48
 1921 0004 00AF     		add	r7, sp, #0
 1922              	.LCFI65:
 1923              		.cfi_def_cfa_register 7
 1924 0006 F860     		str	r0, [r7, #12]
 1925 0008 B960     		str	r1, [r7, #8]
 1926 000a 1346     		mov	r3, r2
 1927 000c FB80     		strh	r3, [r7, #6]	@ movhi
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1928              		.loc 1 1476 12
 1929 000e FB68     		ldr	r3, [r7, #12]
 1930 0010 D3F88C30 		ldr	r3, [r3, #140]
 1931              		.loc 1 1476 6
 1932 0014 202B     		cmp	r3, #32
 1933 0016 37D1     		bne	.L107
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1934              		.loc 1 1478 8
 1935 0018 BB68     		ldr	r3, [r7, #8]
 1936 001a 002B     		cmp	r3, #0
 1937 001c 02D0     		beq	.L108
 1938              		.loc 1 1478 25 discriminator 1
 1939 001e FB88     		ldrh	r3, [r7, #6]
 1940 0020 002B     		cmp	r3, #0
 1941 0022 01D1     		bne	.L109
 1942              	.L108:
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 1943              		.loc 1 1480 14
 1944 0024 0123     		movs	r3, #1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 82


 1945 0026 30E0     		b	.L110
 1946              	.L109:
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1947              		.loc 1 1484 26
 1948 0028 FB68     		ldr	r3, [r7, #12]
 1949 002a 0022     		movs	r2, #0
 1950 002c DA66     		str	r2, [r3, #108]
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1951              		.loc 1 1486 11
 1952 002e FB68     		ldr	r3, [r7, #12]
 1953 0030 1B68     		ldr	r3, [r3]
 1954              		.loc 1 1486 8
 1955 0032 184A     		ldr	r2, .L115
 1956 0034 9342     		cmp	r3, r2
 1957 0036 1FD0     		beq	.L111
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1958              		.loc 1 1489 11
 1959 0038 FB68     		ldr	r3, [r7, #12]
 1960 003a 1B68     		ldr	r3, [r3]
 1961 003c 5B68     		ldr	r3, [r3, #4]
 1962 003e 03F40003 		and	r3, r3, #8388608
 1963              		.loc 1 1489 10
 1964 0042 002B     		cmp	r3, #0
 1965 0044 18D0     		beq	.L111
 1966              	.L114:
 1967              	.LBB544:
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1968              		.loc 1 1492 9 discriminator 1
 1969 0046 FB68     		ldr	r3, [r7, #12]
 1970 0048 1B68     		ldr	r3, [r3]
 1971 004a 7B61     		str	r3, [r7, #20]
 1972              	.LBB545:
 1973              	.LBB546:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1974              		.loc 2 1155 4
 1975 004c 7B69     		ldr	r3, [r7, #20]
 1976              		.syntax unified
 1977              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1978 004e 53E8003F 		ldrex r3, [r3]
 1979              	@ 0 "" 2
 1980              		.thumb
 1981              		.syntax unified
 1982 0052 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1983              		.loc 2 1156 10
 1984 0054 3B69     		ldr	r3, [r7, #16]
 1985              	.LBE546:
 1986              	.LBE545:
 1987              		.loc 1 1492 9 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 83


 1988 0056 43F08063 		orr	r3, r3, #67108864
 1989 005a 7B62     		str	r3, [r7, #36]
 1990 005c FB68     		ldr	r3, [r7, #12]
 1991 005e 1B68     		ldr	r3, [r3]
 1992 0060 1A46     		mov	r2, r3
 1993 0062 7B6A     		ldr	r3, [r7, #36]
 1994 0064 3B62     		str	r3, [r7, #32]
 1995 0066 FA61     		str	r2, [r7, #28]
 1996              	.LBB547:
 1997              	.LBB548:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1998              		.loc 2 1206 4
 1999 0068 F969     		ldr	r1, [r7, #28]
 2000 006a 3A6A     		ldr	r2, [r7, #32]
 2001              		.syntax unified
 2002              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2003 006c 41E80023 		strex r3, r2, [r1]
 2004              	@ 0 "" 2
 2005              		.thumb
 2006              		.syntax unified
 2007 0070 BB61     		str	r3, [r7, #24]
 2008              		.loc 2 1207 10
 2009 0072 BB69     		ldr	r3, [r7, #24]
 2010              	.LBE548:
 2011              	.LBE547:
 2012              		.loc 1 1492 9 discriminator 1
 2013 0074 002B     		cmp	r3, #0
 2014 0076 E6D1     		bne	.L114
 2015              	.L111:
 2016              	.LBE544:
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 2017              		.loc 1 1496 13
 2018 0078 FB88     		ldrh	r3, [r7, #6]
 2019 007a 1A46     		mov	r2, r3
 2020 007c B968     		ldr	r1, [r7, #8]
 2021 007e F868     		ldr	r0, [r7, #12]
 2022 0080 FFF7FEFF 		bl	UART_Start_Receive_DMA
 2023 0084 0346     		mov	r3, r0
 2024 0086 00E0     		b	.L110
 2025              	.L107:
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 2026              		.loc 1 1500 12
 2027 0088 0223     		movs	r3, #2
 2028              	.L110:
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2029              		.loc 1 1502 1
 2030 008a 1846     		mov	r0, r3
 2031 008c 2837     		adds	r7, r7, #40
 2032              	.LCFI66:
 2033              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 84


 2034 008e BD46     		mov	sp, r7
 2035              	.LCFI67:
 2036              		.cfi_def_cfa_register 13
 2037              		@ sp needed
 2038 0090 80BD     		pop	{r7, pc}
 2039              	.L116:
 2040 0092 00BF     		.align	2
 2041              	.L115:
 2042 0094 000C0058 		.word	1476398080
 2043              		.cfi_endproc
 2044              	.LFE156:
 2046              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2047              		.align	1
 2048              		.global	HAL_UART_DMAPause
 2049              		.syntax unified
 2050              		.thumb
 2051              		.thumb_func
 2053              	HAL_UART_DMAPause:
 2054              	.LFB157:
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2055              		.loc 1 1510 1
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 112
 2058              		@ frame_needed = 1, uses_anonymous_args = 0
 2059              		@ link register save eliminated.
 2060 0000 80B4     		push	{r7}
 2061              	.LCFI68:
 2062              		.cfi_def_cfa_offset 4
 2063              		.cfi_offset 7, -4
 2064 0002 9DB0     		sub	sp, sp, #116
 2065              	.LCFI69:
 2066              		.cfi_def_cfa_offset 120
 2067 0004 00AF     		add	r7, sp, #0
 2068              	.LCFI70:
 2069              		.cfi_def_cfa_register 7
 2070 0006 7860     		str	r0, [r7, #4]
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2071              		.loc 1 1511 31
 2072 0008 7B68     		ldr	r3, [r7, #4]
 2073 000a D3F88830 		ldr	r3, [r3, #136]
 2074 000e FB66     		str	r3, [r7, #108]
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2075              		.loc 1 1512 31
 2076 0010 7B68     		ldr	r3, [r7, #4]
 2077 0012 D3F88C30 		ldr	r3, [r3, #140]
 2078 0016 BB66     		str	r3, [r7, #104]
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2079              		.loc 1 1514 8
 2080 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 85


 2081 001a 1B68     		ldr	r3, [r3]
 2082 001c 9B68     		ldr	r3, [r3, #8]
 2083 001e 03F08003 		and	r3, r3, #128
 2084              		.loc 1 1514 6
 2085 0022 802B     		cmp	r3, #128
 2086 0024 1CD1     		bne	.L118
 2087              		.loc 1 1514 62 discriminator 1
 2088 0026 FB6E     		ldr	r3, [r7, #108]
 2089 0028 212B     		cmp	r3, #33
 2090 002a 19D1     		bne	.L118
 2091              	.L121:
 2092              	.LBB549:
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2093              		.loc 1 1518 5 discriminator 1
 2094 002c 7B68     		ldr	r3, [r7, #4]
 2095 002e 1B68     		ldr	r3, [r3]
 2096 0030 0833     		adds	r3, r3, #8
 2097 0032 BB64     		str	r3, [r7, #72]
 2098              	.LBB550:
 2099              	.LBB551:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2100              		.loc 2 1155 4
 2101 0034 BB6C     		ldr	r3, [r7, #72]
 2102              		.syntax unified
 2103              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2104 0036 53E8003F 		ldrex r3, [r3]
 2105              	@ 0 "" 2
 2106              		.thumb
 2107              		.syntax unified
 2108 003a 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2109              		.loc 2 1156 10
 2110 003c 7B6C     		ldr	r3, [r7, #68]
 2111              	.LBE551:
 2112              	.LBE550:
 2113              		.loc 1 1518 5 discriminator 1
 2114 003e 23F08003 		bic	r3, r3, #128
 2115 0042 7B66     		str	r3, [r7, #100]
 2116 0044 7B68     		ldr	r3, [r7, #4]
 2117 0046 1B68     		ldr	r3, [r3]
 2118 0048 0833     		adds	r3, r3, #8
 2119 004a 7A6E     		ldr	r2, [r7, #100]
 2120 004c 7A65     		str	r2, [r7, #84]
 2121 004e 3B65     		str	r3, [r7, #80]
 2122              	.LBB552:
 2123              	.LBB553:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2124              		.loc 2 1206 4
 2125 0050 396D     		ldr	r1, [r7, #80]
 2126 0052 7A6D     		ldr	r2, [r7, #84]
 2127              		.syntax unified
 2128              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2129 0054 41E80023 		strex r3, r2, [r1]
 2130              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 86


 2131              		.thumb
 2132              		.syntax unified
 2133 0058 FB64     		str	r3, [r7, #76]
 2134              		.loc 2 1207 10
 2135 005a FB6C     		ldr	r3, [r7, #76]
 2136              	.LBE553:
 2137              	.LBE552:
 2138              		.loc 1 1518 5 discriminator 1
 2139 005c 002B     		cmp	r3, #0
 2140 005e E5D1     		bne	.L121
 2141              	.L118:
 2142              	.LBE549:
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2143              		.loc 1 1520 8
 2144 0060 7B68     		ldr	r3, [r7, #4]
 2145 0062 1B68     		ldr	r3, [r3]
 2146 0064 9B68     		ldr	r3, [r3, #8]
 2147 0066 03F04003 		and	r3, r3, #64
 2148              		.loc 1 1520 6
 2149 006a 402B     		cmp	r3, #64
 2150 006c 4FD1     		bne	.L122
 2151              		.loc 1 1520 62 discriminator 1
 2152 006e BB6E     		ldr	r3, [r7, #104]
 2153 0070 222B     		cmp	r3, #34
 2154 0072 4CD1     		bne	.L122
 2155              	.L125:
 2156              	.LBB554:
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2157              		.loc 1 1524 5 discriminator 1
 2158 0074 7B68     		ldr	r3, [r7, #4]
 2159 0076 1B68     		ldr	r3, [r3]
 2160 0078 7B63     		str	r3, [r7, #52]
 2161              	.LBB555:
 2162              	.LBB556:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2163              		.loc 2 1155 4
 2164 007a 7B6B     		ldr	r3, [r7, #52]
 2165              		.syntax unified
 2166              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2167 007c 53E8003F 		ldrex r3, [r3]
 2168              	@ 0 "" 2
 2169              		.thumb
 2170              		.syntax unified
 2171 0080 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2172              		.loc 2 1156 10
 2173 0082 3B6B     		ldr	r3, [r7, #48]
 2174              	.LBE556:
 2175              	.LBE555:
 2176              		.loc 1 1524 5 discriminator 1
 2177 0084 23F48073 		bic	r3, r3, #256
 2178 0088 3B66     		str	r3, [r7, #96]
 2179 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 87


 2180 008c 1B68     		ldr	r3, [r3]
 2181 008e 1A46     		mov	r2, r3
 2182 0090 3B6E     		ldr	r3, [r7, #96]
 2183 0092 3B64     		str	r3, [r7, #64]
 2184 0094 FA63     		str	r2, [r7, #60]
 2185              	.LBB557:
 2186              	.LBB558:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2187              		.loc 2 1206 4
 2188 0096 F96B     		ldr	r1, [r7, #60]
 2189 0098 3A6C     		ldr	r2, [r7, #64]
 2190              		.syntax unified
 2191              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2192 009a 41E80023 		strex r3, r2, [r1]
 2193              	@ 0 "" 2
 2194              		.thumb
 2195              		.syntax unified
 2196 009e BB63     		str	r3, [r7, #56]
 2197              		.loc 2 1207 10
 2198 00a0 BB6B     		ldr	r3, [r7, #56]
 2199              	.LBE558:
 2200              	.LBE557:
 2201              		.loc 1 1524 5 discriminator 1
 2202 00a2 002B     		cmp	r3, #0
 2203 00a4 E6D1     		bne	.L125
 2204              	.L128:
 2205              	.LBE554:
 2206              	.LBB559:
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2207              		.loc 1 1525 5 discriminator 1
 2208 00a6 7B68     		ldr	r3, [r7, #4]
 2209 00a8 1B68     		ldr	r3, [r3]
 2210 00aa 0833     		adds	r3, r3, #8
 2211 00ac 3B62     		str	r3, [r7, #32]
 2212              	.LBB560:
 2213              	.LBB561:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2214              		.loc 2 1155 4
 2215 00ae 3B6A     		ldr	r3, [r7, #32]
 2216              		.syntax unified
 2217              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2218 00b0 53E8003F 		ldrex r3, [r3]
 2219              	@ 0 "" 2
 2220              		.thumb
 2221              		.syntax unified
 2222 00b4 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2223              		.loc 2 1156 10
 2224 00b6 FB69     		ldr	r3, [r7, #28]
 2225              	.LBE561:
 2226              	.LBE560:
 2227              		.loc 1 1525 5 discriminator 1
 2228 00b8 23F00103 		bic	r3, r3, #1
 2229 00bc FB65     		str	r3, [r7, #92]
 2230 00be 7B68     		ldr	r3, [r7, #4]
 2231 00c0 1B68     		ldr	r3, [r3]
 2232 00c2 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 88


 2233 00c4 FA6D     		ldr	r2, [r7, #92]
 2234 00c6 FA62     		str	r2, [r7, #44]
 2235 00c8 BB62     		str	r3, [r7, #40]
 2236              	.LBB562:
 2237              	.LBB563:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2238              		.loc 2 1206 4
 2239 00ca B96A     		ldr	r1, [r7, #40]
 2240 00cc FA6A     		ldr	r2, [r7, #44]
 2241              		.syntax unified
 2242              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2243 00ce 41E80023 		strex r3, r2, [r1]
 2244              	@ 0 "" 2
 2245              		.thumb
 2246              		.syntax unified
 2247 00d2 7B62     		str	r3, [r7, #36]
 2248              		.loc 2 1207 10
 2249 00d4 7B6A     		ldr	r3, [r7, #36]
 2250              	.LBE563:
 2251              	.LBE562:
 2252              		.loc 1 1525 5 discriminator 1
 2253 00d6 002B     		cmp	r3, #0
 2254 00d8 E5D1     		bne	.L128
 2255              	.L131:
 2256              	.LBE559:
 2257              	.LBB564:
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2258              		.loc 1 1528 5 discriminator 1
 2259 00da 7B68     		ldr	r3, [r7, #4]
 2260 00dc 1B68     		ldr	r3, [r3]
 2261 00de 0833     		adds	r3, r3, #8
 2262 00e0 FB60     		str	r3, [r7, #12]
 2263              	.LBB565:
 2264              	.LBB566:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2265              		.loc 2 1155 4
 2266 00e2 FB68     		ldr	r3, [r7, #12]
 2267              		.syntax unified
 2268              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2269 00e4 53E8003F 		ldrex r3, [r3]
 2270              	@ 0 "" 2
 2271              		.thumb
 2272              		.syntax unified
 2273 00e8 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2274              		.loc 2 1156 10
 2275 00ea BB68     		ldr	r3, [r7, #8]
 2276              	.LBE566:
 2277              	.LBE565:
 2278              		.loc 1 1528 5 discriminator 1
 2279 00ec 23F04003 		bic	r3, r3, #64
 2280 00f0 BB65     		str	r3, [r7, #88]
 2281 00f2 7B68     		ldr	r3, [r7, #4]
 2282 00f4 1B68     		ldr	r3, [r3]
 2283 00f6 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 89


 2284 00f8 BA6D     		ldr	r2, [r7, #88]
 2285 00fa BA61     		str	r2, [r7, #24]
 2286 00fc 7B61     		str	r3, [r7, #20]
 2287              	.LBB567:
 2288              	.LBB568:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2289              		.loc 2 1206 4
 2290 00fe 7969     		ldr	r1, [r7, #20]
 2291 0100 BA69     		ldr	r2, [r7, #24]
 2292              		.syntax unified
 2293              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2294 0102 41E80023 		strex r3, r2, [r1]
 2295              	@ 0 "" 2
 2296              		.thumb
 2297              		.syntax unified
 2298 0106 3B61     		str	r3, [r7, #16]
 2299              		.loc 2 1207 10
 2300 0108 3B69     		ldr	r3, [r7, #16]
 2301              	.LBE568:
 2302              	.LBE567:
 2303              		.loc 1 1528 5 discriminator 1
 2304 010a 002B     		cmp	r3, #0
 2305 010c E5D1     		bne	.L131
 2306              	.L122:
 2307              	.LBE564:
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2308              		.loc 1 1531 10
 2309 010e 0023     		movs	r3, #0
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2310              		.loc 1 1532 1
 2311 0110 1846     		mov	r0, r3
 2312 0112 7437     		adds	r7, r7, #116
 2313              	.LCFI71:
 2314              		.cfi_def_cfa_offset 4
 2315 0114 BD46     		mov	sp, r7
 2316              	.LCFI72:
 2317              		.cfi_def_cfa_register 13
 2318              		@ sp needed
 2319 0116 5DF8047B 		ldr	r7, [sp], #4
 2320              	.LCFI73:
 2321              		.cfi_restore 7
 2322              		.cfi_def_cfa_offset 0
 2323 011a 7047     		bx	lr
 2324              		.cfi_endproc
 2325              	.LFE157:
 2327              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2328              		.align	1
 2329              		.global	HAL_UART_DMAResume
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2334              	HAL_UART_DMAResume:
 2335              	.LFB158:
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 90


1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2336              		.loc 1 1540 1
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 104
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341 0000 80B4     		push	{r7}
 2342              	.LCFI74:
 2343              		.cfi_def_cfa_offset 4
 2344              		.cfi_offset 7, -4
 2345 0002 9BB0     		sub	sp, sp, #108
 2346              	.LCFI75:
 2347              		.cfi_def_cfa_offset 112
 2348 0004 00AF     		add	r7, sp, #0
 2349              	.LCFI76:
 2350              		.cfi_def_cfa_register 7
 2351 0006 7860     		str	r0, [r7, #4]
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2352              		.loc 1 1541 12
 2353 0008 7B68     		ldr	r3, [r7, #4]
 2354 000a D3F88830 		ldr	r3, [r3, #136]
 2355              		.loc 1 1541 6
 2356 000e 212B     		cmp	r3, #33
 2357 0010 19D1     		bne	.L134
 2358              	.L137:
 2359              	.LBB569:
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2360              		.loc 1 1544 5 discriminator 1
 2361 0012 7B68     		ldr	r3, [r7, #4]
 2362 0014 1B68     		ldr	r3, [r3]
 2363 0016 0833     		adds	r3, r3, #8
 2364 0018 BB64     		str	r3, [r7, #72]
 2365              	.LBB570:
 2366              	.LBB571:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2367              		.loc 2 1155 4
 2368 001a BB6C     		ldr	r3, [r7, #72]
 2369              		.syntax unified
 2370              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2371 001c 53E8003F 		ldrex r3, [r3]
 2372              	@ 0 "" 2
 2373              		.thumb
 2374              		.syntax unified
 2375 0020 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2376              		.loc 2 1156 10
 2377 0022 7B6C     		ldr	r3, [r7, #68]
 2378              	.LBE571:
 2379              	.LBE570:
 2380              		.loc 1 1544 5 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 91


 2381 0024 43F08003 		orr	r3, r3, #128
 2382 0028 7B66     		str	r3, [r7, #100]
 2383 002a 7B68     		ldr	r3, [r7, #4]
 2384 002c 1B68     		ldr	r3, [r3]
 2385 002e 0833     		adds	r3, r3, #8
 2386 0030 7A6E     		ldr	r2, [r7, #100]
 2387 0032 7A65     		str	r2, [r7, #84]
 2388 0034 3B65     		str	r3, [r7, #80]
 2389              	.LBB572:
 2390              	.LBB573:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2391              		.loc 2 1206 4
 2392 0036 396D     		ldr	r1, [r7, #80]
 2393 0038 7A6D     		ldr	r2, [r7, #84]
 2394              		.syntax unified
 2395              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2396 003a 41E80023 		strex r3, r2, [r1]
 2397              	@ 0 "" 2
 2398              		.thumb
 2399              		.syntax unified
 2400 003e FB64     		str	r3, [r7, #76]
 2401              		.loc 2 1207 10
 2402 0040 FB6C     		ldr	r3, [r7, #76]
 2403              	.LBE573:
 2404              	.LBE572:
 2405              		.loc 1 1544 5 discriminator 1
 2406 0042 002B     		cmp	r3, #0
 2407 0044 E5D1     		bne	.L137
 2408              	.L134:
 2409              	.LBE569:
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2410              		.loc 1 1546 12
 2411 0046 7B68     		ldr	r3, [r7, #4]
 2412 0048 D3F88C30 		ldr	r3, [r3, #140]
 2413              		.loc 1 1546 6
 2414 004c 222B     		cmp	r3, #34
 2415 004e 54D1     		bne	.L138
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2416              		.loc 1 1549 5
 2417 0050 7B68     		ldr	r3, [r7, #4]
 2418 0052 1B68     		ldr	r3, [r3]
 2419 0054 0822     		movs	r2, #8
 2420 0056 1A62     		str	r2, [r3, #32]
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2421              		.loc 1 1552 20
 2422 0058 7B68     		ldr	r3, [r7, #4]
 2423 005a 1B69     		ldr	r3, [r3, #16]
 2424              		.loc 1 1552 8
 2425 005c 002B     		cmp	r3, #0
 2426 005e 18D0     		beq	.L145
 2427              	.L142:
 2428              	.LBB574:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 92


1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2429              		.loc 1 1554 7 discriminator 1
 2430 0060 7B68     		ldr	r3, [r7, #4]
 2431 0062 1B68     		ldr	r3, [r3]
 2432 0064 7B63     		str	r3, [r7, #52]
 2433              	.LBB575:
 2434              	.LBB576:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2435              		.loc 2 1155 4
 2436 0066 7B6B     		ldr	r3, [r7, #52]
 2437              		.syntax unified
 2438              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2439 0068 53E8003F 		ldrex r3, [r3]
 2440              	@ 0 "" 2
 2441              		.thumb
 2442              		.syntax unified
 2443 006c 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2444              		.loc 2 1156 10
 2445 006e 3B6B     		ldr	r3, [r7, #48]
 2446              	.LBE576:
 2447              	.LBE575:
 2448              		.loc 1 1554 7 discriminator 1
 2449 0070 43F48073 		orr	r3, r3, #256
 2450 0074 3B66     		str	r3, [r7, #96]
 2451 0076 7B68     		ldr	r3, [r7, #4]
 2452 0078 1B68     		ldr	r3, [r3]
 2453 007a 1A46     		mov	r2, r3
 2454 007c 3B6E     		ldr	r3, [r7, #96]
 2455 007e 3B64     		str	r3, [r7, #64]
 2456 0080 FA63     		str	r2, [r7, #60]
 2457              	.LBB577:
 2458              	.LBB578:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2459              		.loc 2 1206 4
 2460 0082 F96B     		ldr	r1, [r7, #60]
 2461 0084 3A6C     		ldr	r2, [r7, #64]
 2462              		.syntax unified
 2463              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2464 0086 41E80023 		strex r3, r2, [r1]
 2465              	@ 0 "" 2
 2466              		.thumb
 2467              		.syntax unified
 2468 008a BB63     		str	r3, [r7, #56]
 2469              		.loc 2 1207 10
 2470 008c BB6B     		ldr	r3, [r7, #56]
 2471              	.LBE578:
 2472              	.LBE577:
 2473              		.loc 1 1554 7 discriminator 1
 2474 008e 002B     		cmp	r3, #0
 2475 0090 E6D1     		bne	.L142
 2476              	.L145:
 2477              	.LBE574:
 2478              	.LBB579:
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 93


 2479              		.loc 1 1556 5 discriminator 1
 2480 0092 7B68     		ldr	r3, [r7, #4]
 2481 0094 1B68     		ldr	r3, [r3]
 2482 0096 0833     		adds	r3, r3, #8
 2483 0098 3B62     		str	r3, [r7, #32]
 2484              	.LBB580:
 2485              	.LBB581:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2486              		.loc 2 1155 4
 2487 009a 3B6A     		ldr	r3, [r7, #32]
 2488              		.syntax unified
 2489              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2490 009c 53E8003F 		ldrex r3, [r3]
 2491              	@ 0 "" 2
 2492              		.thumb
 2493              		.syntax unified
 2494 00a0 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2495              		.loc 2 1156 10
 2496 00a2 FB69     		ldr	r3, [r7, #28]
 2497              	.LBE581:
 2498              	.LBE580:
 2499              		.loc 1 1556 5 discriminator 1
 2500 00a4 43F00103 		orr	r3, r3, #1
 2501 00a8 FB65     		str	r3, [r7, #92]
 2502 00aa 7B68     		ldr	r3, [r7, #4]
 2503 00ac 1B68     		ldr	r3, [r3]
 2504 00ae 0833     		adds	r3, r3, #8
 2505 00b0 FA6D     		ldr	r2, [r7, #92]
 2506 00b2 FA62     		str	r2, [r7, #44]
 2507 00b4 BB62     		str	r3, [r7, #40]
 2508              	.LBB582:
 2509              	.LBB583:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2510              		.loc 2 1206 4
 2511 00b6 B96A     		ldr	r1, [r7, #40]
 2512 00b8 FA6A     		ldr	r2, [r7, #44]
 2513              		.syntax unified
 2514              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2515 00ba 41E80023 		strex r3, r2, [r1]
 2516              	@ 0 "" 2
 2517              		.thumb
 2518              		.syntax unified
 2519 00be 7B62     		str	r3, [r7, #36]
 2520              		.loc 2 1207 10
 2521 00c0 7B6A     		ldr	r3, [r7, #36]
 2522              	.LBE583:
 2523              	.LBE582:
 2524              		.loc 1 1556 5 discriminator 1
 2525 00c2 002B     		cmp	r3, #0
 2526 00c4 E5D1     		bne	.L145
 2527              	.L148:
 2528              	.LBE579:
 2529              	.LBB584:
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 94


 2530              		.loc 1 1559 5 discriminator 1
 2531 00c6 7B68     		ldr	r3, [r7, #4]
 2532 00c8 1B68     		ldr	r3, [r3]
 2533 00ca 0833     		adds	r3, r3, #8
 2534 00cc FB60     		str	r3, [r7, #12]
 2535              	.LBB585:
 2536              	.LBB586:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2537              		.loc 2 1155 4
 2538 00ce FB68     		ldr	r3, [r7, #12]
 2539              		.syntax unified
 2540              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2541 00d0 53E8003F 		ldrex r3, [r3]
 2542              	@ 0 "" 2
 2543              		.thumb
 2544              		.syntax unified
 2545 00d4 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2546              		.loc 2 1156 10
 2547 00d6 BB68     		ldr	r3, [r7, #8]
 2548              	.LBE586:
 2549              	.LBE585:
 2550              		.loc 1 1559 5 discriminator 1
 2551 00d8 43F04003 		orr	r3, r3, #64
 2552 00dc BB65     		str	r3, [r7, #88]
 2553 00de 7B68     		ldr	r3, [r7, #4]
 2554 00e0 1B68     		ldr	r3, [r3]
 2555 00e2 0833     		adds	r3, r3, #8
 2556 00e4 BA6D     		ldr	r2, [r7, #88]
 2557 00e6 BA61     		str	r2, [r7, #24]
 2558 00e8 7B61     		str	r3, [r7, #20]
 2559              	.LBB587:
 2560              	.LBB588:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2561              		.loc 2 1206 4
 2562 00ea 7969     		ldr	r1, [r7, #20]
 2563 00ec BA69     		ldr	r2, [r7, #24]
 2564              		.syntax unified
 2565              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2566 00ee 41E80023 		strex r3, r2, [r1]
 2567              	@ 0 "" 2
 2568              		.thumb
 2569              		.syntax unified
 2570 00f2 3B61     		str	r3, [r7, #16]
 2571              		.loc 2 1207 10
 2572 00f4 3B69     		ldr	r3, [r7, #16]
 2573              	.LBE588:
 2574              	.LBE587:
 2575              		.loc 1 1559 5 discriminator 1
 2576 00f6 002B     		cmp	r3, #0
 2577 00f8 E5D1     		bne	.L148
 2578              	.L138:
 2579              	.LBE584:
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2580              		.loc 1 1562 10
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 95


 2581 00fa 0023     		movs	r3, #0
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2582              		.loc 1 1563 1
 2583 00fc 1846     		mov	r0, r3
 2584 00fe 6C37     		adds	r7, r7, #108
 2585              	.LCFI77:
 2586              		.cfi_def_cfa_offset 4
 2587 0100 BD46     		mov	sp, r7
 2588              	.LCFI78:
 2589              		.cfi_def_cfa_register 13
 2590              		@ sp needed
 2591 0102 5DF8047B 		ldr	r7, [sp], #4
 2592              	.LCFI79:
 2593              		.cfi_restore 7
 2594              		.cfi_def_cfa_offset 0
 2595 0106 7047     		bx	lr
 2596              		.cfi_endproc
 2597              	.LFE158:
 2599              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2600              		.align	1
 2601              		.global	HAL_UART_DMAStop
 2602              		.syntax unified
 2603              		.thumb
 2604              		.thumb_func
 2606              	HAL_UART_DMAStop:
 2607              	.LFB159:
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2608              		.loc 1 1571 1
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 64
 2611              		@ frame_needed = 1, uses_anonymous_args = 0
 2612 0000 80B5     		push	{r7, lr}
 2613              	.LCFI80:
 2614              		.cfi_def_cfa_offset 8
 2615              		.cfi_offset 7, -8
 2616              		.cfi_offset 14, -4
 2617 0002 90B0     		sub	sp, sp, #64
 2618              	.LCFI81:
 2619              		.cfi_def_cfa_offset 72
 2620 0004 00AF     		add	r7, sp, #0
 2621              	.LCFI82:
 2622              		.cfi_def_cfa_register 7
 2623 0006 7860     		str	r0, [r7, #4]
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 96


1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2624              		.loc 1 1579 31
 2625 0008 7B68     		ldr	r3, [r7, #4]
 2626 000a D3F88830 		ldr	r3, [r3, #136]
 2627 000e FB63     		str	r3, [r7, #60]
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2628              		.loc 1 1580 31
 2629 0010 7B68     		ldr	r3, [r7, #4]
 2630 0012 D3F88C30 		ldr	r3, [r3, #140]
 2631 0016 BB63     		str	r3, [r7, #56]
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2632              		.loc 1 1583 8
 2633 0018 7B68     		ldr	r3, [r7, #4]
 2634 001a 1B68     		ldr	r3, [r3]
 2635 001c 9B68     		ldr	r3, [r3, #8]
 2636 001e 03F08003 		and	r3, r3, #128
 2637              		.loc 1 1583 6
 2638 0022 802B     		cmp	r3, #128
 2639 0024 39D1     		bne	.L151
 2640              		.loc 1 1583 62 discriminator 1
 2641 0026 FB6B     		ldr	r3, [r7, #60]
 2642 0028 212B     		cmp	r3, #33
 2643 002a 36D1     		bne	.L151
 2644              	.L154:
 2645              	.LBB589:
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2646              		.loc 1 1586 5 discriminator 1
 2647 002c 7B68     		ldr	r3, [r7, #4]
 2648 002e 1B68     		ldr	r3, [r3]
 2649 0030 0833     		adds	r3, r3, #8
 2650 0032 3B62     		str	r3, [r7, #32]
 2651              	.LBB590:
 2652              	.LBB591:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2653              		.loc 2 1155 4
 2654 0034 3B6A     		ldr	r3, [r7, #32]
 2655              		.syntax unified
 2656              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2657 0036 53E8003F 		ldrex r3, [r3]
 2658              	@ 0 "" 2
 2659              		.thumb
 2660              		.syntax unified
 2661 003a FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2662              		.loc 2 1156 10
 2663 003c FB69     		ldr	r3, [r7, #28]
 2664              	.LBE591:
 2665              	.LBE590:
 2666              		.loc 1 1586 5 discriminator 1
 2667 003e 23F08003 		bic	r3, r3, #128
 2668 0042 7B63     		str	r3, [r7, #52]
 2669 0044 7B68     		ldr	r3, [r7, #4]
 2670 0046 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 97


 2671 0048 0833     		adds	r3, r3, #8
 2672 004a 7A6B     		ldr	r2, [r7, #52]
 2673 004c FA62     		str	r2, [r7, #44]
 2674 004e BB62     		str	r3, [r7, #40]
 2675              	.LBB592:
 2676              	.LBB593:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2677              		.loc 2 1206 4
 2678 0050 B96A     		ldr	r1, [r7, #40]
 2679 0052 FA6A     		ldr	r2, [r7, #44]
 2680              		.syntax unified
 2681              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2682 0054 41E80023 		strex r3, r2, [r1]
 2683              	@ 0 "" 2
 2684              		.thumb
 2685              		.syntax unified
 2686 0058 7B62     		str	r3, [r7, #36]
 2687              		.loc 2 1207 10
 2688 005a 7B6A     		ldr	r3, [r7, #36]
 2689              	.LBE593:
 2690              	.LBE592:
 2691              		.loc 1 1586 5 discriminator 1
 2692 005c 002B     		cmp	r3, #0
 2693 005e E5D1     		bne	.L154
 2694              	.LBE589:
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2695              		.loc 1 1589 14
 2696 0060 7B68     		ldr	r3, [r7, #4]
 2697 0062 DB6F     		ldr	r3, [r3, #124]
 2698              		.loc 1 1589 8
 2699 0064 002B     		cmp	r3, #0
 2700 0066 15D0     		beq	.L155
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2701              		.loc 1 1591 11
 2702 0068 7B68     		ldr	r3, [r7, #4]
 2703 006a DB6F     		ldr	r3, [r3, #124]
 2704 006c 1846     		mov	r0, r3
 2705 006e FFF7FEFF 		bl	HAL_DMA_Abort
 2706 0072 0346     		mov	r3, r0
 2707              		.loc 1 1591 10 discriminator 1
 2708 0074 002B     		cmp	r3, #0
 2709 0076 0DD0     		beq	.L155
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2710              		.loc 1 1593 35
 2711 0078 7B68     		ldr	r3, [r7, #4]
 2712 007a DB6F     		ldr	r3, [r3, #124]
 2713              		.loc 1 1593 13
 2714 007c 1846     		mov	r0, r3
 2715 007e FFF7FEFF 		bl	HAL_DMA_GetError
 2716 0082 0346     		mov	r3, r0
 2717              		.loc 1 1593 12 discriminator 1
 2718 0084 202B     		cmp	r3, #32
 2719 0086 05D1     		bne	.L155
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 98


1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2720              		.loc 1 1596 28
 2721 0088 7B68     		ldr	r3, [r7, #4]
 2722 008a 1022     		movs	r2, #16
 2723 008c C3F89020 		str	r2, [r3, #144]
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2724              		.loc 1 1598 18
 2725 0090 0323     		movs	r3, #3
 2726 0092 47E0     		b	.L156
 2727              	.L155:
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2728              		.loc 1 1603 5
 2729 0094 7868     		ldr	r0, [r7, #4]
 2730 0096 FFF7FEFF 		bl	UART_EndTxTransfer
 2731              	.L151:
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2732              		.loc 1 1607 8
 2733 009a 7B68     		ldr	r3, [r7, #4]
 2734 009c 1B68     		ldr	r3, [r3]
 2735 009e 9B68     		ldr	r3, [r3, #8]
 2736 00a0 03F04003 		and	r3, r3, #64
 2737              		.loc 1 1607 6
 2738 00a4 402B     		cmp	r3, #64
 2739 00a6 3CD1     		bne	.L157
 2740              		.loc 1 1607 62 discriminator 1
 2741 00a8 BB6B     		ldr	r3, [r7, #56]
 2742 00aa 222B     		cmp	r3, #34
 2743 00ac 39D1     		bne	.L157
 2744              	.L160:
 2745              	.LBB594:
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2746              		.loc 1 1610 5 discriminator 1
 2747 00ae 7B68     		ldr	r3, [r7, #4]
 2748 00b0 1B68     		ldr	r3, [r3]
 2749 00b2 0833     		adds	r3, r3, #8
 2750 00b4 FB60     		str	r3, [r7, #12]
 2751              	.LBB595:
 2752              	.LBB596:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2753              		.loc 2 1155 4
 2754 00b6 FB68     		ldr	r3, [r7, #12]
 2755              		.syntax unified
 2756              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2757 00b8 53E8003F 		ldrex r3, [r3]
 2758              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 99


 2759              		.thumb
 2760              		.syntax unified
 2761 00bc BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2762              		.loc 2 1156 10
 2763 00be BB68     		ldr	r3, [r7, #8]
 2764              	.LBE596:
 2765              	.LBE595:
 2766              		.loc 1 1610 5 discriminator 1
 2767 00c0 23F04003 		bic	r3, r3, #64
 2768 00c4 3B63     		str	r3, [r7, #48]
 2769 00c6 7B68     		ldr	r3, [r7, #4]
 2770 00c8 1B68     		ldr	r3, [r3]
 2771 00ca 0833     		adds	r3, r3, #8
 2772 00cc 3A6B     		ldr	r2, [r7, #48]
 2773 00ce BA61     		str	r2, [r7, #24]
 2774 00d0 7B61     		str	r3, [r7, #20]
 2775              	.LBB597:
 2776              	.LBB598:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2777              		.loc 2 1206 4
 2778 00d2 7969     		ldr	r1, [r7, #20]
 2779 00d4 BA69     		ldr	r2, [r7, #24]
 2780              		.syntax unified
 2781              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2782 00d6 41E80023 		strex r3, r2, [r1]
 2783              	@ 0 "" 2
 2784              		.thumb
 2785              		.syntax unified
 2786 00da 3B61     		str	r3, [r7, #16]
 2787              		.loc 2 1207 10
 2788 00dc 3B69     		ldr	r3, [r7, #16]
 2789              	.LBE598:
 2790              	.LBE597:
 2791              		.loc 1 1610 5 discriminator 1
 2792 00de 002B     		cmp	r3, #0
 2793 00e0 E5D1     		bne	.L160
 2794              	.LBE594:
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2795              		.loc 1 1613 14
 2796 00e2 7B68     		ldr	r3, [r7, #4]
 2797 00e4 D3F88030 		ldr	r3, [r3, #128]
 2798              		.loc 1 1613 8
 2799 00e8 002B     		cmp	r3, #0
 2800 00ea 17D0     		beq	.L161
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2801              		.loc 1 1615 11
 2802 00ec 7B68     		ldr	r3, [r7, #4]
 2803 00ee D3F88030 		ldr	r3, [r3, #128]
 2804 00f2 1846     		mov	r0, r3
 2805 00f4 FFF7FEFF 		bl	HAL_DMA_Abort
 2806 00f8 0346     		mov	r3, r0
 2807              		.loc 1 1615 10 discriminator 1
 2808 00fa 002B     		cmp	r3, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 100


 2809 00fc 0ED0     		beq	.L161
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2810              		.loc 1 1617 35
 2811 00fe 7B68     		ldr	r3, [r7, #4]
 2812 0100 D3F88030 		ldr	r3, [r3, #128]
 2813              		.loc 1 1617 13
 2814 0104 1846     		mov	r0, r3
 2815 0106 FFF7FEFF 		bl	HAL_DMA_GetError
 2816 010a 0346     		mov	r3, r0
 2817              		.loc 1 1617 12 discriminator 1
 2818 010c 202B     		cmp	r3, #32
 2819 010e 05D1     		bne	.L161
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2820              		.loc 1 1620 28
 2821 0110 7B68     		ldr	r3, [r7, #4]
 2822 0112 1022     		movs	r2, #16
 2823 0114 C3F89020 		str	r2, [r3, #144]
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 2824              		.loc 1 1622 18
 2825 0118 0323     		movs	r3, #3
 2826 011a 03E0     		b	.L156
 2827              	.L161:
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2828              		.loc 1 1627 5
 2829 011c 7868     		ldr	r0, [r7, #4]
 2830 011e FFF7FEFF 		bl	UART_EndRxTransfer
 2831              	.L157:
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 2832              		.loc 1 1630 10
 2833 0122 0023     		movs	r3, #0
 2834              	.L156:
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2835              		.loc 1 1631 1
 2836 0124 1846     		mov	r0, r3
 2837 0126 4037     		adds	r7, r7, #64
 2838              	.LCFI83:
 2839              		.cfi_def_cfa_offset 8
 2840 0128 BD46     		mov	sp, r7
 2841              	.LCFI84:
 2842              		.cfi_def_cfa_register 13
 2843              		@ sp needed
 2844 012a 80BD     		pop	{r7, pc}
 2845              		.cfi_endproc
 2846              	.LFE159:
 2848              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2849              		.align	1
 2850              		.global	HAL_UART_Abort
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 101


 2851              		.syntax unified
 2852              		.thumb
 2853              		.thumb_func
 2855              	HAL_UART_Abort:
 2856              	.LFB160:
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 2857              		.loc 1 1646 1
 2858              		.cfi_startproc
 2859              		@ args = 0, pretend = 0, frame = 128
 2860              		@ frame_needed = 1, uses_anonymous_args = 0
 2861 0000 80B5     		push	{r7, lr}
 2862              	.LCFI85:
 2863              		.cfi_def_cfa_offset 8
 2864              		.cfi_offset 7, -8
 2865              		.cfi_offset 14, -4
 2866 0002 A0B0     		sub	sp, sp, #128
 2867              	.LCFI86:
 2868              		.cfi_def_cfa_offset 136
 2869 0004 00AF     		add	r7, sp, #0
 2870              	.LCFI87:
 2871              		.cfi_def_cfa_register 7
 2872 0006 7860     		str	r0, [r7, #4]
 2873              	.L165:
 2874              	.LBB599:
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
 2875              		.loc 1 1648 3 discriminator 1
 2876 0008 7B68     		ldr	r3, [r7, #4]
 2877 000a 1B68     		ldr	r3, [r3]
 2878 000c FB65     		str	r3, [r7, #92]
 2879              	.LBB600:
 2880              	.LBB601:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2881              		.loc 2 1155 4
 2882 000e FB6D     		ldr	r3, [r7, #92]
 2883              		.syntax unified
 2884              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2885 0010 53E8003F 		ldrex r3, [r3]
 2886              	@ 0 "" 2
 2887              		.thumb
 2888              		.syntax unified
 2889 0014 BB65     		str	r3, [r7, #88]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 102


 2890              		.loc 2 1156 10
 2891 0016 BB6D     		ldr	r3, [r7, #88]
 2892              	.LBE601:
 2893              	.LBE600:
 2894              		.loc 1 1648 3 discriminator 1
 2895 0018 23F4F073 		bic	r3, r3, #480
 2896 001c FB67     		str	r3, [r7, #124]
 2897 001e 7B68     		ldr	r3, [r7, #4]
 2898 0020 1B68     		ldr	r3, [r3]
 2899 0022 1A46     		mov	r2, r3
 2900 0024 FB6F     		ldr	r3, [r7, #124]
 2901 0026 BB66     		str	r3, [r7, #104]
 2902 0028 7A66     		str	r2, [r7, #100]
 2903              	.LBB602:
 2904              	.LBB603:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2905              		.loc 2 1206 4
 2906 002a 796E     		ldr	r1, [r7, #100]
 2907 002c BA6E     		ldr	r2, [r7, #104]
 2908              		.syntax unified
 2909              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2910 002e 41E80023 		strex r3, r2, [r1]
 2911              	@ 0 "" 2
 2912              		.thumb
 2913              		.syntax unified
 2914 0032 3B66     		str	r3, [r7, #96]
 2915              		.loc 2 1207 10
 2916 0034 3B6E     		ldr	r3, [r7, #96]
 2917              	.LBE603:
 2918              	.LBE602:
 2919              		.loc 1 1648 3 discriminator 1
 2920 0036 002B     		cmp	r3, #0
 2921 0038 E6D1     		bne	.L165
 2922              	.L168:
 2923              	.LBE599:
 2924              	.LBB604:
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 2925              		.loc 1 1650 3 discriminator 1
 2926 003a 7B68     		ldr	r3, [r7, #4]
 2927 003c 1B68     		ldr	r3, [r3]
 2928 003e 0833     		adds	r3, r3, #8
 2929 0040 BB64     		str	r3, [r7, #72]
 2930              	.LBB605:
 2931              	.LBB606:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2932              		.loc 2 1155 4
 2933 0042 BB6C     		ldr	r3, [r7, #72]
 2934              		.syntax unified
 2935              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2936 0044 53E8003F 		ldrex r3, [r3]
 2937              	@ 0 "" 2
 2938              		.thumb
 2939              		.syntax unified
 2940 0048 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2941              		.loc 2 1156 10
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 103


 2942 004a 7A6C     		ldr	r2, [r7, #68]
 2943              	.LBE606:
 2944              	.LBE605:
 2945              		.loc 1 1650 3 discriminator 1
 2946 004c 724B     		ldr	r3, .L183
 2947 004e 1340     		ands	r3, r3, r2
 2948 0050 BB67     		str	r3, [r7, #120]
 2949 0052 7B68     		ldr	r3, [r7, #4]
 2950 0054 1B68     		ldr	r3, [r3]
 2951 0056 0833     		adds	r3, r3, #8
 2952 0058 BA6F     		ldr	r2, [r7, #120]
 2953 005a 7A65     		str	r2, [r7, #84]
 2954 005c 3B65     		str	r3, [r7, #80]
 2955              	.LBB607:
 2956              	.LBB608:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2957              		.loc 2 1206 4
 2958 005e 396D     		ldr	r1, [r7, #80]
 2959 0060 7A6D     		ldr	r2, [r7, #84]
 2960              		.syntax unified
 2961              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2962 0062 41E80023 		strex r3, r2, [r1]
 2963              	@ 0 "" 2
 2964              		.thumb
 2965              		.syntax unified
 2966 0066 FB64     		str	r3, [r7, #76]
 2967              		.loc 2 1207 10
 2968 0068 FB6C     		ldr	r3, [r7, #76]
 2969              	.LBE608:
 2970              	.LBE607:
 2971              		.loc 1 1650 3 discriminator 1
 2972 006a 002B     		cmp	r3, #0
 2973 006c E5D1     		bne	.L168
 2974              	.LBE604:
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2975              		.loc 1 1653 12
 2976 006e 7B68     		ldr	r3, [r7, #4]
 2977 0070 DB6E     		ldr	r3, [r3, #108]
 2978              		.loc 1 1653 6
 2979 0072 012B     		cmp	r3, #1
 2980 0074 18D1     		bne	.L169
 2981              	.L172:
 2982              	.LBB609:
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 2983              		.loc 1 1655 5 discriminator 1
 2984 0076 7B68     		ldr	r3, [r7, #4]
 2985 0078 1B68     		ldr	r3, [r3]
 2986 007a 7B63     		str	r3, [r7, #52]
 2987              	.LBB610:
 2988              	.LBB611:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2989              		.loc 2 1155 4
 2990 007c 7B6B     		ldr	r3, [r7, #52]
 2991              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 104


 2992              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2993 007e 53E8003F 		ldrex r3, [r3]
 2994              	@ 0 "" 2
 2995              		.thumb
 2996              		.syntax unified
 2997 0082 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2998              		.loc 2 1156 10
 2999 0084 3B6B     		ldr	r3, [r7, #48]
 3000              	.LBE611:
 3001              	.LBE610:
 3002              		.loc 1 1655 5 discriminator 1
 3003 0086 23F01003 		bic	r3, r3, #16
 3004 008a 7B67     		str	r3, [r7, #116]
 3005 008c 7B68     		ldr	r3, [r7, #4]
 3006 008e 1B68     		ldr	r3, [r3]
 3007 0090 1A46     		mov	r2, r3
 3008 0092 7B6F     		ldr	r3, [r7, #116]
 3009 0094 3B64     		str	r3, [r7, #64]
 3010 0096 FA63     		str	r2, [r7, #60]
 3011              	.LBB612:
 3012              	.LBB613:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3013              		.loc 2 1206 4
 3014 0098 F96B     		ldr	r1, [r7, #60]
 3015 009a 3A6C     		ldr	r2, [r7, #64]
 3016              		.syntax unified
 3017              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3018 009c 41E80023 		strex r3, r2, [r1]
 3019              	@ 0 "" 2
 3020              		.thumb
 3021              		.syntax unified
 3022 00a0 BB63     		str	r3, [r7, #56]
 3023              		.loc 2 1207 10
 3024 00a2 BB6B     		ldr	r3, [r7, #56]
 3025              	.LBE613:
 3026              	.LBE612:
 3027              		.loc 1 1655 5 discriminator 1
 3028 00a4 002B     		cmp	r3, #0
 3029 00a6 E6D1     		bne	.L172
 3030              	.L169:
 3031              	.LBE609:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3032              		.loc 1 1659 7
 3033 00a8 7B68     		ldr	r3, [r7, #4]
 3034 00aa 1B68     		ldr	r3, [r3]
 3035 00ac 9B68     		ldr	r3, [r3, #8]
 3036 00ae 03F08003 		and	r3, r3, #128
 3037              		.loc 1 1659 6
 3038 00b2 802B     		cmp	r3, #128
 3039 00b4 37D1     		bne	.L173
 3040              	.L176:
 3041              	.LBB614:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 105


1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3042              		.loc 1 1662 5 discriminator 1
 3043 00b6 7B68     		ldr	r3, [r7, #4]
 3044 00b8 1B68     		ldr	r3, [r3]
 3045 00ba 0833     		adds	r3, r3, #8
 3046 00bc 3B62     		str	r3, [r7, #32]
 3047              	.LBB615:
 3048              	.LBB616:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3049              		.loc 2 1155 4
 3050 00be 3B6A     		ldr	r3, [r7, #32]
 3051              		.syntax unified
 3052              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3053 00c0 53E8003F 		ldrex r3, [r3]
 3054              	@ 0 "" 2
 3055              		.thumb
 3056              		.syntax unified
 3057 00c4 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3058              		.loc 2 1156 10
 3059 00c6 FB69     		ldr	r3, [r7, #28]
 3060              	.LBE616:
 3061              	.LBE615:
 3062              		.loc 1 1662 5 discriminator 1
 3063 00c8 23F08003 		bic	r3, r3, #128
 3064 00cc 3B67     		str	r3, [r7, #112]
 3065 00ce 7B68     		ldr	r3, [r7, #4]
 3066 00d0 1B68     		ldr	r3, [r3]
 3067 00d2 0833     		adds	r3, r3, #8
 3068 00d4 3A6F     		ldr	r2, [r7, #112]
 3069 00d6 FA62     		str	r2, [r7, #44]
 3070 00d8 BB62     		str	r3, [r7, #40]
 3071              	.LBB617:
 3072              	.LBB618:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3073              		.loc 2 1206 4
 3074 00da B96A     		ldr	r1, [r7, #40]
 3075 00dc FA6A     		ldr	r2, [r7, #44]
 3076              		.syntax unified
 3077              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3078 00de 41E80023 		strex r3, r2, [r1]
 3079              	@ 0 "" 2
 3080              		.thumb
 3081              		.syntax unified
 3082 00e2 7B62     		str	r3, [r7, #36]
 3083              		.loc 2 1207 10
 3084 00e4 7B6A     		ldr	r3, [r7, #36]
 3085              	.LBE618:
 3086              	.LBE617:
 3087              		.loc 1 1662 5 discriminator 1
 3088 00e6 002B     		cmp	r3, #0
 3089 00e8 E5D1     		bne	.L176
 3090              	.LBE614:
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 106


 3091              		.loc 1 1665 14
 3092 00ea 7B68     		ldr	r3, [r7, #4]
 3093 00ec DB6F     		ldr	r3, [r3, #124]
 3094              		.loc 1 1665 8
 3095 00ee 002B     		cmp	r3, #0
 3096 00f0 19D0     		beq	.L173
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3097              		.loc 1 1669 12
 3098 00f2 7B68     		ldr	r3, [r7, #4]
 3099 00f4 DB6F     		ldr	r3, [r3, #124]
 3100              		.loc 1 1669 40
 3101 00f6 0022     		movs	r2, #0
 3102 00f8 1A65     		str	r2, [r3, #80]
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3103              		.loc 1 1671 11
 3104 00fa 7B68     		ldr	r3, [r7, #4]
 3105 00fc DB6F     		ldr	r3, [r3, #124]
 3106 00fe 1846     		mov	r0, r3
 3107 0100 FFF7FEFF 		bl	HAL_DMA_Abort
 3108 0104 0346     		mov	r3, r0
 3109              		.loc 1 1671 10 discriminator 1
 3110 0106 002B     		cmp	r3, #0
 3111 0108 0DD0     		beq	.L173
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3112              		.loc 1 1673 35
 3113 010a 7B68     		ldr	r3, [r7, #4]
 3114 010c DB6F     		ldr	r3, [r3, #124]
 3115              		.loc 1 1673 13
 3116 010e 1846     		mov	r0, r3
 3117 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 3118 0114 0346     		mov	r3, r0
 3119              		.loc 1 1673 12 discriminator 1
 3120 0116 202B     		cmp	r3, #32
 3121 0118 05D1     		bne	.L173
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3122              		.loc 1 1676 28
 3123 011a 7B68     		ldr	r3, [r7, #4]
 3124 011c 1022     		movs	r2, #16
 3125 011e C3F89020 		str	r2, [r3, #144]
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3126              		.loc 1 1678 18
 3127 0122 0323     		movs	r3, #3
 3128 0124 73E0     		b	.L177
 3129              	.L173:
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 107


1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3130              		.loc 1 1685 7
 3131 0126 7B68     		ldr	r3, [r7, #4]
 3132 0128 1B68     		ldr	r3, [r3]
 3133 012a 9B68     		ldr	r3, [r3, #8]
 3134 012c 03F04003 		and	r3, r3, #64
 3135              		.loc 1 1685 6
 3136 0130 402B     		cmp	r3, #64
 3137 0132 3BD1     		bne	.L178
 3138              	.L181:
 3139              	.LBB619:
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3140              		.loc 1 1688 5 discriminator 1
 3141 0134 7B68     		ldr	r3, [r7, #4]
 3142 0136 1B68     		ldr	r3, [r3]
 3143 0138 0833     		adds	r3, r3, #8
 3144 013a FB60     		str	r3, [r7, #12]
 3145              	.LBB620:
 3146              	.LBB621:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3147              		.loc 2 1155 4
 3148 013c FB68     		ldr	r3, [r7, #12]
 3149              		.syntax unified
 3150              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3151 013e 53E8003F 		ldrex r3, [r3]
 3152              	@ 0 "" 2
 3153              		.thumb
 3154              		.syntax unified
 3155 0142 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3156              		.loc 2 1156 10
 3157 0144 BB68     		ldr	r3, [r7, #8]
 3158              	.LBE621:
 3159              	.LBE620:
 3160              		.loc 1 1688 5 discriminator 1
 3161 0146 23F04003 		bic	r3, r3, #64
 3162 014a FB66     		str	r3, [r7, #108]
 3163 014c 7B68     		ldr	r3, [r7, #4]
 3164 014e 1B68     		ldr	r3, [r3]
 3165 0150 0833     		adds	r3, r3, #8
 3166 0152 FA6E     		ldr	r2, [r7, #108]
 3167 0154 BA61     		str	r2, [r7, #24]
 3168 0156 7B61     		str	r3, [r7, #20]
 3169              	.LBB622:
 3170              	.LBB623:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3171              		.loc 2 1206 4
 3172 0158 7969     		ldr	r1, [r7, #20]
 3173 015a BA69     		ldr	r2, [r7, #24]
 3174              		.syntax unified
 3175              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3176 015c 41E80023 		strex r3, r2, [r1]
 3177              	@ 0 "" 2
 3178              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 108


 3179              		.syntax unified
 3180 0160 3B61     		str	r3, [r7, #16]
 3181              		.loc 2 1207 10
 3182 0162 3B69     		ldr	r3, [r7, #16]
 3183              	.LBE623:
 3184              	.LBE622:
 3185              		.loc 1 1688 5 discriminator 1
 3186 0164 002B     		cmp	r3, #0
 3187 0166 E5D1     		bne	.L181
 3188              	.LBE619:
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3189              		.loc 1 1691 14
 3190 0168 7B68     		ldr	r3, [r7, #4]
 3191 016a D3F88030 		ldr	r3, [r3, #128]
 3192              		.loc 1 1691 8
 3193 016e 002B     		cmp	r3, #0
 3194 0170 1CD0     		beq	.L178
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3195              		.loc 1 1695 12
 3196 0172 7B68     		ldr	r3, [r7, #4]
 3197 0174 D3F88030 		ldr	r3, [r3, #128]
 3198              		.loc 1 1695 40
 3199 0178 0022     		movs	r2, #0
 3200 017a 1A65     		str	r2, [r3, #80]
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3201              		.loc 1 1697 11
 3202 017c 7B68     		ldr	r3, [r7, #4]
 3203 017e D3F88030 		ldr	r3, [r3, #128]
 3204 0182 1846     		mov	r0, r3
 3205 0184 FFF7FEFF 		bl	HAL_DMA_Abort
 3206 0188 0346     		mov	r3, r0
 3207              		.loc 1 1697 10 discriminator 1
 3208 018a 002B     		cmp	r3, #0
 3209 018c 0ED0     		beq	.L178
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3210              		.loc 1 1699 35
 3211 018e 7B68     		ldr	r3, [r7, #4]
 3212 0190 D3F88030 		ldr	r3, [r3, #128]
 3213              		.loc 1 1699 13
 3214 0194 1846     		mov	r0, r3
 3215 0196 FFF7FEFF 		bl	HAL_DMA_GetError
 3216 019a 0346     		mov	r3, r0
 3217              		.loc 1 1699 12 discriminator 1
 3218 019c 202B     		cmp	r3, #32
 3219 019e 05D1     		bne	.L178
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3220              		.loc 1 1702 28
 3221 01a0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 109


 3222 01a2 1022     		movs	r2, #16
 3223 01a4 C3F89020 		str	r2, [r3, #144]
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3224              		.loc 1 1704 18
 3225 01a8 0323     		movs	r3, #3
 3226 01aa 30E0     		b	.L177
 3227              	.L178:
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3228              		.loc 1 1711 22
 3229 01ac 7B68     		ldr	r3, [r7, #4]
 3230 01ae 0022     		movs	r2, #0
 3231 01b0 A3F85620 		strh	r2, [r3, #86]	@ movhi
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3232              		.loc 1 1712 22
 3233 01b4 7B68     		ldr	r3, [r7, #4]
 3234 01b6 0022     		movs	r2, #0
 3235 01b8 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3236              		.loc 1 1715 3
 3237 01bc 7B68     		ldr	r3, [r7, #4]
 3238 01be 1B68     		ldr	r3, [r3]
 3239 01c0 0F22     		movs	r2, #15
 3240 01c2 1A62     		str	r2, [r3, #32]
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3241              		.loc 1 1718 12
 3242 01c4 7B68     		ldr	r3, [r7, #4]
 3243 01c6 5B6E     		ldr	r3, [r3, #100]
 3244              		.loc 1 1718 6
 3245 01c8 B3F1005F 		cmp	r3, #536870912
 3246 01cc 07D1     		bne	.L182
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3247              		.loc 1 1720 5
 3248 01ce 7B68     		ldr	r3, [r7, #4]
 3249 01d0 1B68     		ldr	r3, [r3]
 3250 01d2 9A69     		ldr	r2, [r3, #24]
 3251 01d4 7B68     		ldr	r3, [r7, #4]
 3252 01d6 1B68     		ldr	r3, [r3]
 3253 01d8 42F01002 		orr	r2, r2, #16
 3254 01dc 9A61     		str	r2, [r3, #24]
 3255              	.L182:
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3256              		.loc 1 1724 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 110


 3257 01de 7B68     		ldr	r3, [r7, #4]
 3258 01e0 1B68     		ldr	r3, [r3]
 3259 01e2 9A69     		ldr	r2, [r3, #24]
 3260 01e4 7B68     		ldr	r3, [r7, #4]
 3261 01e6 1B68     		ldr	r3, [r3]
 3262 01e8 42F00802 		orr	r2, r2, #8
 3263 01ec 9A61     		str	r2, [r3, #24]
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 3264              		.loc 1 1727 18
 3265 01ee 7B68     		ldr	r3, [r7, #4]
 3266 01f0 2022     		movs	r2, #32
 3267 01f2 C3F88820 		str	r2, [r3, #136]
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3268              		.loc 1 1728 18
 3269 01f6 7B68     		ldr	r3, [r7, #4]
 3270 01f8 2022     		movs	r2, #32
 3271 01fa C3F88C20 		str	r2, [r3, #140]
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3272              		.loc 1 1729 24
 3273 01fe 7B68     		ldr	r3, [r7, #4]
 3274 0200 0022     		movs	r2, #0
 3275 0202 DA66     		str	r2, [r3, #108]
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3276              		.loc 1 1731 20
 3277 0204 7B68     		ldr	r3, [r7, #4]
 3278 0206 0022     		movs	r2, #0
 3279 0208 C3F89020 		str	r2, [r3, #144]
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3280              		.loc 1 1733 10
 3281 020c 0023     		movs	r3, #0
 3282              	.L177:
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3283              		.loc 1 1734 1
 3284 020e 1846     		mov	r0, r3
 3285 0210 8037     		adds	r7, r7, #128
 3286              	.LCFI88:
 3287              		.cfi_def_cfa_offset 8
 3288 0212 BD46     		mov	sp, r7
 3289              	.LCFI89:
 3290              		.cfi_def_cfa_register 13
 3291              		@ sp needed
 3292 0214 80BD     		pop	{r7, pc}
 3293              	.L184:
 3294 0216 00BF     		.align	2
 3295              	.L183:
 3296 0218 FEFF7FEF 		.word	-276824066
 3297              		.cfi_endproc
 3298              	.LFE160:
 3300              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3301              		.align	1
 3302              		.global	HAL_UART_AbortTransmit
 3303              		.syntax unified
 3304              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 111


 3305              		.thumb_func
 3307              	HAL_UART_AbortTransmit:
 3308              	.LFB161:
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3309              		.loc 1 1749 1
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 80
 3312              		@ frame_needed = 1, uses_anonymous_args = 0
 3313 0000 80B5     		push	{r7, lr}
 3314              	.LCFI90:
 3315              		.cfi_def_cfa_offset 8
 3316              		.cfi_offset 7, -8
 3317              		.cfi_offset 14, -4
 3318 0002 94B0     		sub	sp, sp, #80
 3319              	.LCFI91:
 3320              		.cfi_def_cfa_offset 88
 3321 0004 00AF     		add	r7, sp, #0
 3322              	.LCFI92:
 3323              		.cfi_def_cfa_register 7
 3324 0006 7860     		str	r0, [r7, #4]
 3325              	.L188:
 3326              	.LBB624:
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 3327              		.loc 1 1751 3 discriminator 1
 3328 0008 7B68     		ldr	r3, [r7, #4]
 3329 000a 1B68     		ldr	r3, [r3]
 3330 000c 7B63     		str	r3, [r7, #52]
 3331              	.LBB625:
 3332              	.LBB626:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3333              		.loc 2 1155 4
 3334 000e 7B6B     		ldr	r3, [r7, #52]
 3335              		.syntax unified
 3336              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3337 0010 53E8003F 		ldrex r3, [r3]
 3338              	@ 0 "" 2
 3339              		.thumb
 3340              		.syntax unified
 3341 0014 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3342              		.loc 2 1156 10
 3343 0016 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 112


 3344              	.LBE626:
 3345              	.LBE625:
 3346              		.loc 1 1751 3 discriminator 1
 3347 0018 23F0C003 		bic	r3, r3, #192
 3348 001c FB64     		str	r3, [r7, #76]
 3349 001e 7B68     		ldr	r3, [r7, #4]
 3350 0020 1B68     		ldr	r3, [r3]
 3351 0022 1A46     		mov	r2, r3
 3352 0024 FB6C     		ldr	r3, [r7, #76]
 3353 0026 3B64     		str	r3, [r7, #64]
 3354 0028 FA63     		str	r2, [r7, #60]
 3355              	.LBB627:
 3356              	.LBB628:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3357              		.loc 2 1206 4
 3358 002a F96B     		ldr	r1, [r7, #60]
 3359 002c 3A6C     		ldr	r2, [r7, #64]
 3360              		.syntax unified
 3361              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3362 002e 41E80023 		strex r3, r2, [r1]
 3363              	@ 0 "" 2
 3364              		.thumb
 3365              		.syntax unified
 3366 0032 BB63     		str	r3, [r7, #56]
 3367              		.loc 2 1207 10
 3368 0034 BB6B     		ldr	r3, [r7, #56]
 3369              	.LBE628:
 3370              	.LBE627:
 3371              		.loc 1 1751 3 discriminator 1
 3372 0036 002B     		cmp	r3, #0
 3373 0038 E6D1     		bne	.L188
 3374              	.L191:
 3375              	.LBE624:
 3376              	.LBB629:
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3377              		.loc 1 1752 3 discriminator 1
 3378 003a 7B68     		ldr	r3, [r7, #4]
 3379 003c 1B68     		ldr	r3, [r3]
 3380 003e 0833     		adds	r3, r3, #8
 3381 0040 3B62     		str	r3, [r7, #32]
 3382              	.LBB630:
 3383              	.LBB631:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3384              		.loc 2 1155 4
 3385 0042 3B6A     		ldr	r3, [r7, #32]
 3386              		.syntax unified
 3387              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3388 0044 53E8003F 		ldrex r3, [r3]
 3389              	@ 0 "" 2
 3390              		.thumb
 3391              		.syntax unified
 3392 0048 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3393              		.loc 2 1156 10
 3394 004a FB69     		ldr	r3, [r7, #28]
 3395              	.LBE631:
 3396              	.LBE630:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 113


 3397              		.loc 1 1752 3 discriminator 1
 3398 004c 23F40003 		bic	r3, r3, #8388608
 3399 0050 BB64     		str	r3, [r7, #72]
 3400 0052 7B68     		ldr	r3, [r7, #4]
 3401 0054 1B68     		ldr	r3, [r3]
 3402 0056 0833     		adds	r3, r3, #8
 3403 0058 BA6C     		ldr	r2, [r7, #72]
 3404 005a FA62     		str	r2, [r7, #44]
 3405 005c BB62     		str	r3, [r7, #40]
 3406              	.LBB632:
 3407              	.LBB633:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3408              		.loc 2 1206 4
 3409 005e B96A     		ldr	r1, [r7, #40]
 3410 0060 FA6A     		ldr	r2, [r7, #44]
 3411              		.syntax unified
 3412              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3413 0062 41E80023 		strex r3, r2, [r1]
 3414              	@ 0 "" 2
 3415              		.thumb
 3416              		.syntax unified
 3417 0066 7B62     		str	r3, [r7, #36]
 3418              		.loc 2 1207 10
 3419 0068 7B6A     		ldr	r3, [r7, #36]
 3420              	.LBE633:
 3421              	.LBE632:
 3422              		.loc 1 1752 3 discriminator 1
 3423 006a 002B     		cmp	r3, #0
 3424 006c E5D1     		bne	.L191
 3425              	.LBE629:
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3426              		.loc 1 1755 7
 3427 006e 7B68     		ldr	r3, [r7, #4]
 3428 0070 1B68     		ldr	r3, [r3]
 3429 0072 9B68     		ldr	r3, [r3, #8]
 3430 0074 03F08003 		and	r3, r3, #128
 3431              		.loc 1 1755 6
 3432 0078 802B     		cmp	r3, #128
 3433 007a 37D1     		bne	.L192
 3434              	.L195:
 3435              	.LBB634:
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3436              		.loc 1 1758 5 discriminator 1
 3437 007c 7B68     		ldr	r3, [r7, #4]
 3438 007e 1B68     		ldr	r3, [r3]
 3439 0080 0833     		adds	r3, r3, #8
 3440 0082 FB60     		str	r3, [r7, #12]
 3441              	.LBB635:
 3442              	.LBB636:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3443              		.loc 2 1155 4
 3444 0084 FB68     		ldr	r3, [r7, #12]
 3445              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 114


 3446              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3447 0086 53E8003F 		ldrex r3, [r3]
 3448              	@ 0 "" 2
 3449              		.thumb
 3450              		.syntax unified
 3451 008a BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3452              		.loc 2 1156 10
 3453 008c BB68     		ldr	r3, [r7, #8]
 3454              	.LBE636:
 3455              	.LBE635:
 3456              		.loc 1 1758 5 discriminator 1
 3457 008e 23F08003 		bic	r3, r3, #128
 3458 0092 7B64     		str	r3, [r7, #68]
 3459 0094 7B68     		ldr	r3, [r7, #4]
 3460 0096 1B68     		ldr	r3, [r3]
 3461 0098 0833     		adds	r3, r3, #8
 3462 009a 7A6C     		ldr	r2, [r7, #68]
 3463 009c BA61     		str	r2, [r7, #24]
 3464 009e 7B61     		str	r3, [r7, #20]
 3465              	.LBB637:
 3466              	.LBB638:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3467              		.loc 2 1206 4
 3468 00a0 7969     		ldr	r1, [r7, #20]
 3469 00a2 BA69     		ldr	r2, [r7, #24]
 3470              		.syntax unified
 3471              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3472 00a4 41E80023 		strex r3, r2, [r1]
 3473              	@ 0 "" 2
 3474              		.thumb
 3475              		.syntax unified
 3476 00a8 3B61     		str	r3, [r7, #16]
 3477              		.loc 2 1207 10
 3478 00aa 3B69     		ldr	r3, [r7, #16]
 3479              	.LBE638:
 3480              	.LBE637:
 3481              		.loc 1 1758 5 discriminator 1
 3482 00ac 002B     		cmp	r3, #0
 3483 00ae E5D1     		bne	.L195
 3484              	.LBE634:
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3485              		.loc 1 1761 14
 3486 00b0 7B68     		ldr	r3, [r7, #4]
 3487 00b2 DB6F     		ldr	r3, [r3, #124]
 3488              		.loc 1 1761 8
 3489 00b4 002B     		cmp	r3, #0
 3490 00b6 19D0     		beq	.L192
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3491              		.loc 1 1765 12
 3492 00b8 7B68     		ldr	r3, [r7, #4]
 3493 00ba DB6F     		ldr	r3, [r3, #124]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 115


 3494              		.loc 1 1765 40
 3495 00bc 0022     		movs	r2, #0
 3496 00be 1A65     		str	r2, [r3, #80]
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3497              		.loc 1 1767 11
 3498 00c0 7B68     		ldr	r3, [r7, #4]
 3499 00c2 DB6F     		ldr	r3, [r3, #124]
 3500 00c4 1846     		mov	r0, r3
 3501 00c6 FFF7FEFF 		bl	HAL_DMA_Abort
 3502 00ca 0346     		mov	r3, r0
 3503              		.loc 1 1767 10 discriminator 1
 3504 00cc 002B     		cmp	r3, #0
 3505 00ce 0DD0     		beq	.L192
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3506              		.loc 1 1769 35
 3507 00d0 7B68     		ldr	r3, [r7, #4]
 3508 00d2 DB6F     		ldr	r3, [r3, #124]
 3509              		.loc 1 1769 13
 3510 00d4 1846     		mov	r0, r3
 3511 00d6 FFF7FEFF 		bl	HAL_DMA_GetError
 3512 00da 0346     		mov	r3, r0
 3513              		.loc 1 1769 12 discriminator 1
 3514 00dc 202B     		cmp	r3, #32
 3515 00de 05D1     		bne	.L192
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3516              		.loc 1 1772 28
 3517 00e0 7B68     		ldr	r3, [r7, #4]
 3518 00e2 1022     		movs	r2, #16
 3519 00e4 C3F89020 		str	r2, [r3, #144]
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3520              		.loc 1 1774 18
 3521 00e8 0323     		movs	r3, #3
 3522 00ea 15E0     		b	.L196
 3523              	.L192:
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3524              		.loc 1 1781 22
 3525 00ec 7B68     		ldr	r3, [r7, #4]
 3526 00ee 0022     		movs	r2, #0
 3527 00f0 A3F85620 		strh	r2, [r3, #86]	@ movhi
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 3528              		.loc 1 1784 12
 3529 00f4 7B68     		ldr	r3, [r7, #4]
 3530 00f6 5B6E     		ldr	r3, [r3, #100]
 3531              		.loc 1 1784 6
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 116


 3532 00f8 B3F1005F 		cmp	r3, #536870912
 3533 00fc 07D1     		bne	.L197
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 3534              		.loc 1 1786 5
 3535 00fe 7B68     		ldr	r3, [r7, #4]
 3536 0100 1B68     		ldr	r3, [r3]
 3537 0102 9A69     		ldr	r2, [r3, #24]
 3538 0104 7B68     		ldr	r3, [r7, #4]
 3539 0106 1B68     		ldr	r3, [r3]
 3540 0108 42F01002 		orr	r2, r2, #16
 3541 010c 9A61     		str	r2, [r3, #24]
 3542              	.L197:
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3543              		.loc 1 1790 17
 3544 010e 7B68     		ldr	r3, [r7, #4]
 3545 0110 2022     		movs	r2, #32
 3546 0112 C3F88820 		str	r2, [r3, #136]
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3547              		.loc 1 1792 10
 3548 0116 0023     		movs	r3, #0
 3549              	.L196:
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3550              		.loc 1 1793 1
 3551 0118 1846     		mov	r0, r3
 3552 011a 5037     		adds	r7, r7, #80
 3553              	.LCFI93:
 3554              		.cfi_def_cfa_offset 8
 3555 011c BD46     		mov	sp, r7
 3556              	.LCFI94:
 3557              		.cfi_def_cfa_register 13
 3558              		@ sp needed
 3559 011e 80BD     		pop	{r7, pc}
 3560              		.cfi_endproc
 3561              	.LFE161:
 3563              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3564              		.align	1
 3565              		.global	HAL_UART_AbortReceive
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3570              	HAL_UART_AbortReceive:
 3571              	.LFB162:
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 117


1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3572              		.loc 1 1808 1
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 104
 3575              		@ frame_needed = 1, uses_anonymous_args = 0
 3576 0000 80B5     		push	{r7, lr}
 3577              	.LCFI95:
 3578              		.cfi_def_cfa_offset 8
 3579              		.cfi_offset 7, -8
 3580              		.cfi_offset 14, -4
 3581 0002 9AB0     		sub	sp, sp, #104
 3582              	.LCFI96:
 3583              		.cfi_def_cfa_offset 112
 3584 0004 00AF     		add	r7, sp, #0
 3585              	.LCFI97:
 3586              		.cfi_def_cfa_register 7
 3587 0006 7860     		str	r0, [r7, #4]
 3588              	.L201:
 3589              	.LBB639:
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 3590              		.loc 1 1810 3 discriminator 1
 3591 0008 7B68     		ldr	r3, [r7, #4]
 3592 000a 1B68     		ldr	r3, [r3]
 3593 000c BB64     		str	r3, [r7, #72]
 3594              	.LBB640:
 3595              	.LBB641:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3596              		.loc 2 1155 4
 3597 000e BB6C     		ldr	r3, [r7, #72]
 3598              		.syntax unified
 3599              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3600 0010 53E8003F 		ldrex r3, [r3]
 3601              	@ 0 "" 2
 3602              		.thumb
 3603              		.syntax unified
 3604 0014 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3605              		.loc 2 1156 10
 3606 0016 7B6C     		ldr	r3, [r7, #68]
 3607              	.LBE641:
 3608              	.LBE640:
 3609              		.loc 1 1810 3 discriminator 1
 3610 0018 23F49073 		bic	r3, r3, #288
 3611 001c 7B66     		str	r3, [r7, #100]
 3612 001e 7B68     		ldr	r3, [r7, #4]
 3613 0020 1B68     		ldr	r3, [r3]
 3614 0022 1A46     		mov	r2, r3
 3615 0024 7B6E     		ldr	r3, [r7, #100]
 3616 0026 7B65     		str	r3, [r7, #84]
 3617 0028 3A65     		str	r2, [r7, #80]
 3618              	.LBB642:
 3619              	.LBB643:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 118


1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3620              		.loc 2 1206 4
 3621 002a 396D     		ldr	r1, [r7, #80]
 3622 002c 7A6D     		ldr	r2, [r7, #84]
 3623              		.syntax unified
 3624              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3625 002e 41E80023 		strex r3, r2, [r1]
 3626              	@ 0 "" 2
 3627              		.thumb
 3628              		.syntax unified
 3629 0032 FB64     		str	r3, [r7, #76]
 3630              		.loc 2 1207 10
 3631 0034 FB6C     		ldr	r3, [r7, #76]
 3632              	.LBE643:
 3633              	.LBE642:
 3634              		.loc 1 1810 3 discriminator 1
 3635 0036 002B     		cmp	r3, #0
 3636 0038 E6D1     		bne	.L201
 3637              	.L204:
 3638              	.LBE639:
 3639              	.LBB644:
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 3640              		.loc 1 1811 3 discriminator 1
 3641 003a 7B68     		ldr	r3, [r7, #4]
 3642 003c 1B68     		ldr	r3, [r3]
 3643 003e 0833     		adds	r3, r3, #8
 3644 0040 7B63     		str	r3, [r7, #52]
 3645              	.LBB645:
 3646              	.LBB646:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3647              		.loc 2 1155 4
 3648 0042 7B6B     		ldr	r3, [r7, #52]
 3649              		.syntax unified
 3650              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3651 0044 53E8003F 		ldrex r3, [r3]
 3652              	@ 0 "" 2
 3653              		.thumb
 3654              		.syntax unified
 3655 0048 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3656              		.loc 2 1156 10
 3657 004a 3A6B     		ldr	r2, [r7, #48]
 3658              	.LBE646:
 3659              	.LBE645:
 3660              		.loc 1 1811 3 discriminator 1
 3661 004c 464B     		ldr	r3, .L214
 3662 004e 1340     		ands	r3, r3, r2
 3663 0050 3B66     		str	r3, [r7, #96]
 3664 0052 7B68     		ldr	r3, [r7, #4]
 3665 0054 1B68     		ldr	r3, [r3]
 3666 0056 0833     		adds	r3, r3, #8
 3667 0058 3A6E     		ldr	r2, [r7, #96]
 3668 005a 3A64     		str	r2, [r7, #64]
 3669 005c FB63     		str	r3, [r7, #60]
 3670              	.LBB647:
 3671              	.LBB648:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 119


 3672              		.loc 2 1206 4
 3673 005e F96B     		ldr	r1, [r7, #60]
 3674 0060 3A6C     		ldr	r2, [r7, #64]
 3675              		.syntax unified
 3676              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3677 0062 41E80023 		strex r3, r2, [r1]
 3678              	@ 0 "" 2
 3679              		.thumb
 3680              		.syntax unified
 3681 0066 BB63     		str	r3, [r7, #56]
 3682              		.loc 2 1207 10
 3683 0068 BB6B     		ldr	r3, [r7, #56]
 3684              	.LBE648:
 3685              	.LBE647:
 3686              		.loc 1 1811 3 discriminator 1
 3687 006a 002B     		cmp	r3, #0
 3688 006c E5D1     		bne	.L204
 3689              	.LBE644:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3690              		.loc 1 1814 12
 3691 006e 7B68     		ldr	r3, [r7, #4]
 3692 0070 DB6E     		ldr	r3, [r3, #108]
 3693              		.loc 1 1814 6
 3694 0072 012B     		cmp	r3, #1
 3695 0074 18D1     		bne	.L205
 3696              	.L208:
 3697              	.LBB649:
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3698              		.loc 1 1816 5 discriminator 1
 3699 0076 7B68     		ldr	r3, [r7, #4]
 3700 0078 1B68     		ldr	r3, [r3]
 3701 007a 3B62     		str	r3, [r7, #32]
 3702              	.LBB650:
 3703              	.LBB651:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3704              		.loc 2 1155 4
 3705 007c 3B6A     		ldr	r3, [r7, #32]
 3706              		.syntax unified
 3707              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3708 007e 53E8003F 		ldrex r3, [r3]
 3709              	@ 0 "" 2
 3710              		.thumb
 3711              		.syntax unified
 3712 0082 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3713              		.loc 2 1156 10
 3714 0084 FB69     		ldr	r3, [r7, #28]
 3715              	.LBE651:
 3716              	.LBE650:
 3717              		.loc 1 1816 5 discriminator 1
 3718 0086 23F01003 		bic	r3, r3, #16
 3719 008a FB65     		str	r3, [r7, #92]
 3720 008c 7B68     		ldr	r3, [r7, #4]
 3721 008e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 120


 3722 0090 1A46     		mov	r2, r3
 3723 0092 FB6D     		ldr	r3, [r7, #92]
 3724 0094 FB62     		str	r3, [r7, #44]
 3725 0096 BA62     		str	r2, [r7, #40]
 3726              	.LBB652:
 3727              	.LBB653:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3728              		.loc 2 1206 4
 3729 0098 B96A     		ldr	r1, [r7, #40]
 3730 009a FA6A     		ldr	r2, [r7, #44]
 3731              		.syntax unified
 3732              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3733 009c 41E80023 		strex r3, r2, [r1]
 3734              	@ 0 "" 2
 3735              		.thumb
 3736              		.syntax unified
 3737 00a0 7B62     		str	r3, [r7, #36]
 3738              		.loc 2 1207 10
 3739 00a2 7B6A     		ldr	r3, [r7, #36]
 3740              	.LBE653:
 3741              	.LBE652:
 3742              		.loc 1 1816 5 discriminator 1
 3743 00a4 002B     		cmp	r3, #0
 3744 00a6 E6D1     		bne	.L208
 3745              	.L205:
 3746              	.LBE649:
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3747              		.loc 1 1820 7
 3748 00a8 7B68     		ldr	r3, [r7, #4]
 3749 00aa 1B68     		ldr	r3, [r3]
 3750 00ac 9B68     		ldr	r3, [r3, #8]
 3751 00ae 03F04003 		and	r3, r3, #64
 3752              		.loc 1 1820 6
 3753 00b2 402B     		cmp	r3, #64
 3754 00b4 3BD1     		bne	.L209
 3755              	.L212:
 3756              	.LBB654:
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3757              		.loc 1 1823 5 discriminator 1
 3758 00b6 7B68     		ldr	r3, [r7, #4]
 3759 00b8 1B68     		ldr	r3, [r3]
 3760 00ba 0833     		adds	r3, r3, #8
 3761 00bc FB60     		str	r3, [r7, #12]
 3762              	.LBB655:
 3763              	.LBB656:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3764              		.loc 2 1155 4
 3765 00be FB68     		ldr	r3, [r7, #12]
 3766              		.syntax unified
 3767              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3768 00c0 53E8003F 		ldrex r3, [r3]
 3769              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 121


 3770              		.thumb
 3771              		.syntax unified
 3772 00c4 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3773              		.loc 2 1156 10
 3774 00c6 BB68     		ldr	r3, [r7, #8]
 3775              	.LBE656:
 3776              	.LBE655:
 3777              		.loc 1 1823 5 discriminator 1
 3778 00c8 23F04003 		bic	r3, r3, #64
 3779 00cc BB65     		str	r3, [r7, #88]
 3780 00ce 7B68     		ldr	r3, [r7, #4]
 3781 00d0 1B68     		ldr	r3, [r3]
 3782 00d2 0833     		adds	r3, r3, #8
 3783 00d4 BA6D     		ldr	r2, [r7, #88]
 3784 00d6 BA61     		str	r2, [r7, #24]
 3785 00d8 7B61     		str	r3, [r7, #20]
 3786              	.LBB657:
 3787              	.LBB658:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3788              		.loc 2 1206 4
 3789 00da 7969     		ldr	r1, [r7, #20]
 3790 00dc BA69     		ldr	r2, [r7, #24]
 3791              		.syntax unified
 3792              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3793 00de 41E80023 		strex r3, r2, [r1]
 3794              	@ 0 "" 2
 3795              		.thumb
 3796              		.syntax unified
 3797 00e2 3B61     		str	r3, [r7, #16]
 3798              		.loc 2 1207 10
 3799 00e4 3B69     		ldr	r3, [r7, #16]
 3800              	.LBE658:
 3801              	.LBE657:
 3802              		.loc 1 1823 5 discriminator 1
 3803 00e6 002B     		cmp	r3, #0
 3804 00e8 E5D1     		bne	.L212
 3805              	.LBE654:
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3806              		.loc 1 1826 14
 3807 00ea 7B68     		ldr	r3, [r7, #4]
 3808 00ec D3F88030 		ldr	r3, [r3, #128]
 3809              		.loc 1 1826 8
 3810 00f0 002B     		cmp	r3, #0
 3811 00f2 1CD0     		beq	.L209
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3812              		.loc 1 1830 12
 3813 00f4 7B68     		ldr	r3, [r7, #4]
 3814 00f6 D3F88030 		ldr	r3, [r3, #128]
 3815              		.loc 1 1830 40
 3816 00fa 0022     		movs	r2, #0
 3817 00fc 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 122


1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3818              		.loc 1 1832 11
 3819 00fe 7B68     		ldr	r3, [r7, #4]
 3820 0100 D3F88030 		ldr	r3, [r3, #128]
 3821 0104 1846     		mov	r0, r3
 3822 0106 FFF7FEFF 		bl	HAL_DMA_Abort
 3823 010a 0346     		mov	r3, r0
 3824              		.loc 1 1832 10 discriminator 1
 3825 010c 002B     		cmp	r3, #0
 3826 010e 0ED0     		beq	.L209
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3827              		.loc 1 1834 35
 3828 0110 7B68     		ldr	r3, [r7, #4]
 3829 0112 D3F88030 		ldr	r3, [r3, #128]
 3830              		.loc 1 1834 13
 3831 0116 1846     		mov	r0, r3
 3832 0118 FFF7FEFF 		bl	HAL_DMA_GetError
 3833 011c 0346     		mov	r3, r0
 3834              		.loc 1 1834 12 discriminator 1
 3835 011e 202B     		cmp	r3, #32
 3836 0120 05D1     		bne	.L209
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set error code to DMA */
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3837              		.loc 1 1837 28
 3838 0122 7B68     		ldr	r3, [r7, #4]
 3839 0124 1022     		movs	r2, #16
 3840 0126 C3F89020 		str	r2, [r3, #144]
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 3841              		.loc 1 1839 18
 3842 012a 0323     		movs	r3, #3
 3843 012c 17E0     		b	.L213
 3844              	.L209:
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3845              		.loc 1 1846 22
 3846 012e 7B68     		ldr	r3, [r7, #4]
 3847 0130 0022     		movs	r2, #0
 3848 0132 A3F85E20 		strh	r2, [r3, #94]	@ movhi
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3849              		.loc 1 1849 3
 3850 0136 7B68     		ldr	r3, [r7, #4]
 3851 0138 1B68     		ldr	r3, [r3]
 3852 013a 0F22     		movs	r2, #15
 3853 013c 1A62     		str	r2, [r3, #32]
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 123


1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3854              		.loc 1 1852 3
 3855 013e 7B68     		ldr	r3, [r7, #4]
 3856 0140 1B68     		ldr	r3, [r3]
 3857 0142 9A69     		ldr	r2, [r3, #24]
 3858 0144 7B68     		ldr	r3, [r7, #4]
 3859 0146 1B68     		ldr	r3, [r3]
 3860 0148 42F00802 		orr	r2, r2, #8
 3861 014c 9A61     		str	r2, [r3, #24]
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3862              		.loc 1 1855 18
 3863 014e 7B68     		ldr	r3, [r7, #4]
 3864 0150 2022     		movs	r2, #32
 3865 0152 C3F88C20 		str	r2, [r3, #140]
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3866              		.loc 1 1856 24
 3867 0156 7B68     		ldr	r3, [r7, #4]
 3868 0158 0022     		movs	r2, #0
 3869 015a DA66     		str	r2, [r3, #108]
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 3870              		.loc 1 1858 10
 3871 015c 0023     		movs	r3, #0
 3872              	.L213:
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 3873              		.loc 1 1859 1
 3874 015e 1846     		mov	r0, r3
 3875 0160 6837     		adds	r7, r7, #104
 3876              	.LCFI98:
 3877              		.cfi_def_cfa_offset 8
 3878 0162 BD46     		mov	sp, r7
 3879              	.LCFI99:
 3880              		.cfi_def_cfa_register 13
 3881              		@ sp needed
 3882 0164 80BD     		pop	{r7, pc}
 3883              	.L215:
 3884 0166 00BF     		.align	2
 3885              	.L214:
 3886 0168 FEFFFFEF 		.word	-268435458
 3887              		.cfi_endproc
 3888              	.LFE162:
 3890              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3891              		.align	1
 3892              		.global	HAL_UART_Abort_IT
 3893              		.syntax unified
 3894              		.thumb
 3895              		.thumb_func
 3897              	HAL_UART_Abort_IT:
 3898              	.LFB163:
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 124


1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 3899              		.loc 1 1876 1
 3900              		.cfi_startproc
 3901              		@ args = 0, pretend = 0, frame = 136
 3902              		@ frame_needed = 1, uses_anonymous_args = 0
 3903 0000 80B5     		push	{r7, lr}
 3904              	.LCFI100:
 3905              		.cfi_def_cfa_offset 8
 3906              		.cfi_offset 7, -8
 3907              		.cfi_offset 14, -4
 3908 0002 A2B0     		sub	sp, sp, #136
 3909              	.LCFI101:
 3910              		.cfi_def_cfa_offset 144
 3911 0004 00AF     		add	r7, sp, #0
 3912              	.LCFI102:
 3913              		.cfi_def_cfa_register 7
 3914 0006 7860     		str	r0, [r7, #4]
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3915              		.loc 1 1877 12
 3916 0008 0123     		movs	r3, #1
 3917 000a C7F88430 		str	r3, [r7, #132]
 3918              	.L219:
 3919              	.LBB659:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
 3920              		.loc 1 1880 3 discriminator 1
 3921 000e 7B68     		ldr	r3, [r7, #4]
 3922 0010 1B68     		ldr	r3, [r3]
 3923 0012 3B66     		str	r3, [r7, #96]
 3924              	.LBB660:
 3925              	.LBB661:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3926              		.loc 2 1155 4
 3927 0014 3B6E     		ldr	r3, [r7, #96]
 3928              		.syntax unified
 3929              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3930 0016 53E8003F 		ldrex r3, [r3]
 3931              	@ 0 "" 2
 3932              		.thumb
 3933              		.syntax unified
 3934 001a FB65     		str	r3, [r7, #92]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3935              		.loc 2 1156 10
 3936 001c FB6D     		ldr	r3, [r7, #92]
 3937              	.LBE661:
 3938              	.LBE660:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 125


 3939              		.loc 1 1880 3 discriminator 1
 3940 001e 23F4F073 		bic	r3, r3, #480
 3941 0022 C7F88030 		str	r3, [r7, #128]
 3942 0026 7B68     		ldr	r3, [r7, #4]
 3943 0028 1B68     		ldr	r3, [r3]
 3944 002a 1A46     		mov	r2, r3
 3945 002c D7F88030 		ldr	r3, [r7, #128]
 3946 0030 FB66     		str	r3, [r7, #108]
 3947 0032 BA66     		str	r2, [r7, #104]
 3948              	.LBB662:
 3949              	.LBB663:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3950              		.loc 2 1206 4
 3951 0034 B96E     		ldr	r1, [r7, #104]
 3952 0036 FA6E     		ldr	r2, [r7, #108]
 3953              		.syntax unified
 3954              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3955 0038 41E80023 		strex r3, r2, [r1]
 3956              	@ 0 "" 2
 3957              		.thumb
 3958              		.syntax unified
 3959 003c 7B66     		str	r3, [r7, #100]
 3960              		.loc 2 1207 10
 3961 003e 7B6E     		ldr	r3, [r7, #100]
 3962              	.LBE663:
 3963              	.LBE662:
 3964              		.loc 1 1880 3 discriminator 1
 3965 0040 002B     		cmp	r3, #0
 3966 0042 E4D1     		bne	.L219
 3967              	.L222:
 3968              	.LBE659:
 3969              	.LBB664:
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3970              		.loc 1 1882 3 discriminator 1
 3971 0044 7B68     		ldr	r3, [r7, #4]
 3972 0046 1B68     		ldr	r3, [r3]
 3973 0048 0833     		adds	r3, r3, #8
 3974 004a FB64     		str	r3, [r7, #76]
 3975              	.LBB665:
 3976              	.LBB666:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3977              		.loc 2 1155 4
 3978 004c FB6C     		ldr	r3, [r7, #76]
 3979              		.syntax unified
 3980              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3981 004e 53E8003F 		ldrex r3, [r3]
 3982              	@ 0 "" 2
 3983              		.thumb
 3984              		.syntax unified
 3985 0052 BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3986              		.loc 2 1156 10
 3987 0054 BA6C     		ldr	r2, [r7, #72]
 3988              	.LBE666:
 3989              	.LBE665:
 3990              		.loc 1 1882 3 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 126


 3991 0056 854B     		ldr	r3, .L244
 3992 0058 1340     		ands	r3, r3, r2
 3993 005a FB67     		str	r3, [r7, #124]
 3994 005c 7B68     		ldr	r3, [r7, #4]
 3995 005e 1B68     		ldr	r3, [r3]
 3996 0060 0833     		adds	r3, r3, #8
 3997 0062 FA6F     		ldr	r2, [r7, #124]
 3998 0064 BA65     		str	r2, [r7, #88]
 3999 0066 7B65     		str	r3, [r7, #84]
 4000              	.LBB667:
 4001              	.LBB668:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4002              		.loc 2 1206 4
 4003 0068 796D     		ldr	r1, [r7, #84]
 4004 006a BA6D     		ldr	r2, [r7, #88]
 4005              		.syntax unified
 4006              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4007 006c 41E80023 		strex r3, r2, [r1]
 4008              	@ 0 "" 2
 4009              		.thumb
 4010              		.syntax unified
 4011 0070 3B65     		str	r3, [r7, #80]
 4012              		.loc 2 1207 10
 4013 0072 3B6D     		ldr	r3, [r7, #80]
 4014              	.LBE668:
 4015              	.LBE667:
 4016              		.loc 1 1882 3 discriminator 1
 4017 0074 002B     		cmp	r3, #0
 4018 0076 E5D1     		bne	.L222
 4019              	.LBE664:
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4020              		.loc 1 1885 12
 4021 0078 7B68     		ldr	r3, [r7, #4]
 4022 007a DB6E     		ldr	r3, [r3, #108]
 4023              		.loc 1 1885 6
 4024 007c 012B     		cmp	r3, #1
 4025 007e 18D1     		bne	.L223
 4026              	.L226:
 4027              	.LBB669:
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4028              		.loc 1 1887 5 discriminator 1
 4029 0080 7B68     		ldr	r3, [r7, #4]
 4030 0082 1B68     		ldr	r3, [r3]
 4031 0084 BB63     		str	r3, [r7, #56]
 4032              	.LBB670:
 4033              	.LBB671:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4034              		.loc 2 1155 4
 4035 0086 BB6B     		ldr	r3, [r7, #56]
 4036              		.syntax unified
 4037              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4038 0088 53E8003F 		ldrex r3, [r3]
 4039              	@ 0 "" 2
 4040              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 127


 4041              		.syntax unified
 4042 008c 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4043              		.loc 2 1156 10
 4044 008e 7B6B     		ldr	r3, [r7, #52]
 4045              	.LBE671:
 4046              	.LBE670:
 4047              		.loc 1 1887 5 discriminator 1
 4048 0090 23F01003 		bic	r3, r3, #16
 4049 0094 BB67     		str	r3, [r7, #120]
 4050 0096 7B68     		ldr	r3, [r7, #4]
 4051 0098 1B68     		ldr	r3, [r3]
 4052 009a 1A46     		mov	r2, r3
 4053 009c BB6F     		ldr	r3, [r7, #120]
 4054 009e 7B64     		str	r3, [r7, #68]
 4055 00a0 3A64     		str	r2, [r7, #64]
 4056              	.LBB672:
 4057              	.LBB673:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4058              		.loc 2 1206 4
 4059 00a2 396C     		ldr	r1, [r7, #64]
 4060 00a4 7A6C     		ldr	r2, [r7, #68]
 4061              		.syntax unified
 4062              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4063 00a6 41E80023 		strex r3, r2, [r1]
 4064              	@ 0 "" 2
 4065              		.thumb
 4066              		.syntax unified
 4067 00aa FB63     		str	r3, [r7, #60]
 4068              		.loc 2 1207 10
 4069 00ac FB6B     		ldr	r3, [r7, #60]
 4070              	.LBE673:
 4071              	.LBE672:
 4072              		.loc 1 1887 5 discriminator 1
 4073 00ae 002B     		cmp	r3, #0
 4074 00b0 E6D1     		bne	.L226
 4075              	.L223:
 4076              	.LBE669:
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      before any call to DMA Abort functions */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4077              		.loc 1 1893 12
 4078 00b2 7B68     		ldr	r3, [r7, #4]
 4079 00b4 DB6F     		ldr	r3, [r3, #124]
 4080              		.loc 1 1893 6
 4081 00b6 002B     		cmp	r3, #0
 4082 00b8 0FD0     		beq	.L227
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4083              		.loc 1 1897 9
 4084 00ba 7B68     		ldr	r3, [r7, #4]
 4085 00bc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 128


 4086 00be 9B68     		ldr	r3, [r3, #8]
 4087 00c0 03F08003 		and	r3, r3, #128
 4088              		.loc 1 1897 8
 4089 00c4 802B     		cmp	r3, #128
 4090 00c6 04D1     		bne	.L228
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4091              		.loc 1 1899 12
 4092 00c8 7B68     		ldr	r3, [r7, #4]
 4093 00ca DB6F     		ldr	r3, [r3, #124]
 4094              		.loc 1 1899 40
 4095 00cc 684A     		ldr	r2, .L244+4
 4096 00ce 1A65     		str	r2, [r3, #80]
 4097 00d0 03E0     		b	.L227
 4098              	.L228:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4099              		.loc 1 1903 12
 4100 00d2 7B68     		ldr	r3, [r7, #4]
 4101 00d4 DB6F     		ldr	r3, [r3, #124]
 4102              		.loc 1 1903 40
 4103 00d6 0022     		movs	r2, #0
 4104 00d8 1A65     		str	r2, [r3, #80]
 4105              	.L227:
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4106              		.loc 1 1907 12
 4107 00da 7B68     		ldr	r3, [r7, #4]
 4108 00dc D3F88030 		ldr	r3, [r3, #128]
 4109              		.loc 1 1907 6
 4110 00e0 002B     		cmp	r3, #0
 4111 00e2 11D0     		beq	.L229
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4112              		.loc 1 1911 9
 4113 00e4 7B68     		ldr	r3, [r7, #4]
 4114 00e6 1B68     		ldr	r3, [r3]
 4115 00e8 9B68     		ldr	r3, [r3, #8]
 4116 00ea 03F04003 		and	r3, r3, #64
 4117              		.loc 1 1911 8
 4118 00ee 402B     		cmp	r3, #64
 4119 00f0 05D1     		bne	.L230
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4120              		.loc 1 1913 12
 4121 00f2 7B68     		ldr	r3, [r7, #4]
 4122 00f4 D3F88030 		ldr	r3, [r3, #128]
 4123              		.loc 1 1913 40
 4124 00f8 5E4A     		ldr	r2, .L244+8
 4125 00fa 1A65     		str	r2, [r3, #80]
 4126 00fc 04E0     		b	.L229
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 129


 4127              	.L230:
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4128              		.loc 1 1917 12
 4129 00fe 7B68     		ldr	r3, [r7, #4]
 4130 0100 D3F88030 		ldr	r3, [r3, #128]
 4131              		.loc 1 1917 40
 4132 0104 0022     		movs	r2, #0
 4133 0106 1A65     		str	r2, [r3, #80]
 4134              	.L229:
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4135              		.loc 1 1922 7
 4136 0108 7B68     		ldr	r3, [r7, #4]
 4137 010a 1B68     		ldr	r3, [r3]
 4138 010c 9B68     		ldr	r3, [r3, #8]
 4139 010e 03F08003 		and	r3, r3, #128
 4140              		.loc 1 1922 6
 4141 0112 802B     		cmp	r3, #128
 4142 0114 2DD1     		bne	.L231
 4143              	.L234:
 4144              	.LBB674:
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4145              		.loc 1 1925 5 discriminator 1
 4146 0116 7B68     		ldr	r3, [r7, #4]
 4147 0118 1B68     		ldr	r3, [r3]
 4148 011a 0833     		adds	r3, r3, #8
 4149 011c 7B62     		str	r3, [r7, #36]
 4150              	.LBB675:
 4151              	.LBB676:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4152              		.loc 2 1155 4
 4153 011e 7B6A     		ldr	r3, [r7, #36]
 4154              		.syntax unified
 4155              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4156 0120 53E8003F 		ldrex r3, [r3]
 4157              	@ 0 "" 2
 4158              		.thumb
 4159              		.syntax unified
 4160 0124 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4161              		.loc 2 1156 10
 4162 0126 3B6A     		ldr	r3, [r7, #32]
 4163              	.LBE676:
 4164              	.LBE675:
 4165              		.loc 1 1925 5 discriminator 1
 4166 0128 23F08003 		bic	r3, r3, #128
 4167 012c 7B67     		str	r3, [r7, #116]
 4168 012e 7B68     		ldr	r3, [r7, #4]
 4169 0130 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 130


 4170 0132 0833     		adds	r3, r3, #8
 4171 0134 7A6F     		ldr	r2, [r7, #116]
 4172 0136 3A63     		str	r2, [r7, #48]
 4173 0138 FB62     		str	r3, [r7, #44]
 4174              	.LBB677:
 4175              	.LBB678:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4176              		.loc 2 1206 4
 4177 013a F96A     		ldr	r1, [r7, #44]
 4178 013c 3A6B     		ldr	r2, [r7, #48]
 4179              		.syntax unified
 4180              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4181 013e 41E80023 		strex r3, r2, [r1]
 4182              	@ 0 "" 2
 4183              		.thumb
 4184              		.syntax unified
 4185 0142 BB62     		str	r3, [r7, #40]
 4186              		.loc 2 1207 10
 4187 0144 BB6A     		ldr	r3, [r7, #40]
 4188              	.LBE678:
 4189              	.LBE677:
 4190              		.loc 1 1925 5 discriminator 1
 4191 0146 002B     		cmp	r3, #0
 4192 0148 E5D1     		bne	.L234
 4193              	.LBE674:
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4194              		.loc 1 1928 14
 4195 014a 7B68     		ldr	r3, [r7, #4]
 4196 014c DB6F     		ldr	r3, [r3, #124]
 4197              		.loc 1 1928 8
 4198 014e 002B     		cmp	r3, #0
 4199 0150 0FD0     		beq	.L231
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4200              		.loc 1 1934 11
 4201 0152 7B68     		ldr	r3, [r7, #4]
 4202 0154 DB6F     		ldr	r3, [r3, #124]
 4203 0156 1846     		mov	r0, r3
 4204 0158 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4205 015c 0346     		mov	r3, r0
 4206              		.loc 1 1934 10 discriminator 1
 4207 015e 002B     		cmp	r3, #0
 4208 0160 04D0     		beq	.L235
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4209              		.loc 1 1936 14
 4210 0162 7B68     		ldr	r3, [r7, #4]
 4211 0164 DB6F     		ldr	r3, [r3, #124]
 4212              		.loc 1 1936 42
 4213 0166 0022     		movs	r2, #0
 4214 0168 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 131


 4215 016a 02E0     		b	.L231
 4216              	.L235:
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
 4217              		.loc 1 1940 19
 4218 016c 0023     		movs	r3, #0
 4219 016e C7F88430 		str	r3, [r7, #132]
 4220              	.L231:
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4221              		.loc 1 1946 7
 4222 0172 7B68     		ldr	r3, [r7, #4]
 4223 0174 1B68     		ldr	r3, [r3]
 4224 0176 9B68     		ldr	r3, [r3, #8]
 4225 0178 03F04003 		and	r3, r3, #64
 4226              		.loc 1 1946 6
 4227 017c 402B     		cmp	r3, #64
 4228 017e 33D1     		bne	.L236
 4229              	.L239:
 4230              	.LBB679:
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4231              		.loc 1 1949 5 discriminator 1
 4232 0180 7B68     		ldr	r3, [r7, #4]
 4233 0182 1B68     		ldr	r3, [r3]
 4234 0184 0833     		adds	r3, r3, #8
 4235 0186 3B61     		str	r3, [r7, #16]
 4236              	.LBB680:
 4237              	.LBB681:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4238              		.loc 2 1155 4
 4239 0188 3B69     		ldr	r3, [r7, #16]
 4240              		.syntax unified
 4241              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4242 018a 53E8003F 		ldrex r3, [r3]
 4243              	@ 0 "" 2
 4244              		.thumb
 4245              		.syntax unified
 4246 018e FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4247              		.loc 2 1156 10
 4248 0190 FB68     		ldr	r3, [r7, #12]
 4249              	.LBE681:
 4250              	.LBE680:
 4251              		.loc 1 1949 5 discriminator 1
 4252 0192 23F04003 		bic	r3, r3, #64
 4253 0196 3B67     		str	r3, [r7, #112]
 4254 0198 7B68     		ldr	r3, [r7, #4]
 4255 019a 1B68     		ldr	r3, [r3]
 4256 019c 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 132


 4257 019e 3A6F     		ldr	r2, [r7, #112]
 4258 01a0 FA61     		str	r2, [r7, #28]
 4259 01a2 BB61     		str	r3, [r7, #24]
 4260              	.LBB682:
 4261              	.LBB683:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4262              		.loc 2 1206 4
 4263 01a4 B969     		ldr	r1, [r7, #24]
 4264 01a6 FA69     		ldr	r2, [r7, #28]
 4265              		.syntax unified
 4266              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4267 01a8 41E80023 		strex r3, r2, [r1]
 4268              	@ 0 "" 2
 4269              		.thumb
 4270              		.syntax unified
 4271 01ac 7B61     		str	r3, [r7, #20]
 4272              		.loc 2 1207 10
 4273 01ae 7B69     		ldr	r3, [r7, #20]
 4274              	.LBE683:
 4275              	.LBE682:
 4276              		.loc 1 1949 5 discriminator 1
 4277 01b0 002B     		cmp	r3, #0
 4278 01b2 E5D1     		bne	.L239
 4279              	.LBE679:
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4280              		.loc 1 1952 14
 4281 01b4 7B68     		ldr	r3, [r7, #4]
 4282 01b6 D3F88030 		ldr	r3, [r3, #128]
 4283              		.loc 1 1952 8
 4284 01ba 002B     		cmp	r3, #0
 4285 01bc 14D0     		beq	.L236
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4286              		.loc 1 1958 11
 4287 01be 7B68     		ldr	r3, [r7, #4]
 4288 01c0 D3F88030 		ldr	r3, [r3, #128]
 4289 01c4 1846     		mov	r0, r3
 4290 01c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4291 01ca 0346     		mov	r3, r0
 4292              		.loc 1 1958 10 discriminator 1
 4293 01cc 002B     		cmp	r3, #0
 4294 01ce 08D0     		beq	.L240
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4295              		.loc 1 1960 14
 4296 01d0 7B68     		ldr	r3, [r7, #4]
 4297 01d2 D3F88030 		ldr	r3, [r3, #128]
 4298              		.loc 1 1960 42
 4299 01d6 0022     		movs	r2, #0
 4300 01d8 1A65     		str	r2, [r3, #80]
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 133


 4301              		.loc 1 1961 19
 4302 01da 0123     		movs	r3, #1
 4303 01dc C7F88430 		str	r3, [r7, #132]
 4304 01e0 02E0     		b	.L236
 4305              	.L240:
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
 4306              		.loc 1 1965 19
 4307 01e2 0023     		movs	r3, #0
 4308 01e4 C7F88430 		str	r3, [r7, #132]
 4309              	.L236:
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (abortcplt == 1U)
 4310              		.loc 1 1971 6
 4311 01e8 D7F88430 		ldr	r3, [r7, #132]
 4312 01ec 012B     		cmp	r3, #1
 4313 01ee 38D1     		bne	.L241
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4314              		.loc 1 1974 24
 4315 01f0 7B68     		ldr	r3, [r7, #4]
 4316 01f2 0022     		movs	r2, #0
 4317 01f4 A3F85620 		strh	r2, [r3, #86]	@ movhi
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4318              		.loc 1 1975 24
 4319 01f8 7B68     		ldr	r3, [r7, #4]
 4320 01fa 0022     		movs	r2, #0
 4321 01fc A3F85E20 		strh	r2, [r3, #94]	@ movhi
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear ISR function pointers */
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxISR = NULL;
 4322              		.loc 1 1978 18
 4323 0200 7B68     		ldr	r3, [r7, #4]
 4324 0202 0022     		movs	r2, #0
 4325 0204 5A67     		str	r2, [r3, #116]
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 4326              		.loc 1 1979 18
 4327 0206 7B68     		ldr	r3, [r7, #4]
 4328 0208 0022     		movs	r2, #0
 4329 020a 9A67     		str	r2, [r3, #120]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset errorCode */
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4330              		.loc 1 1982 22
 4331 020c 7B68     		ldr	r3, [r7, #4]
 4332 020e 0022     		movs	r2, #0
 4333 0210 C3F89020 		str	r2, [r3, #144]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 134


 4334              		.loc 1 1985 5
 4335 0214 7B68     		ldr	r3, [r7, #4]
 4336 0216 1B68     		ldr	r3, [r3]
 4337 0218 0F22     		movs	r2, #15
 4338 021a 1A62     		str	r2, [r3, #32]
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 4339              		.loc 1 1988 14
 4340 021c 7B68     		ldr	r3, [r7, #4]
 4341 021e 5B6E     		ldr	r3, [r3, #100]
 4342              		.loc 1 1988 8
 4343 0220 B3F1005F 		cmp	r3, #536870912
 4344 0224 07D1     		bne	.L242
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 4345              		.loc 1 1990 7
 4346 0226 7B68     		ldr	r3, [r7, #4]
 4347 0228 1B68     		ldr	r3, [r3]
 4348 022a 9A69     		ldr	r2, [r3, #24]
 4349 022c 7B68     		ldr	r3, [r7, #4]
 4350 022e 1B68     		ldr	r3, [r3]
 4351 0230 42F01002 		orr	r2, r2, #16
 4352 0234 9A61     		str	r2, [r3, #24]
 4353              	.L242:
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Discard the received data */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4354              		.loc 1 1994 5
 4355 0236 7B68     		ldr	r3, [r7, #4]
 4356 0238 1B68     		ldr	r3, [r3]
 4357 023a 9A69     		ldr	r2, [r3, #24]
 4358 023c 7B68     		ldr	r3, [r7, #4]
 4359 023e 1B68     		ldr	r3, [r3]
 4360 0240 42F00802 		orr	r2, r2, #8
 4361 0244 9A61     		str	r2, [r3, #24]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4362              		.loc 1 1997 20
 4363 0246 7B68     		ldr	r3, [r7, #4]
 4364 0248 2022     		movs	r2, #32
 4365 024a C3F88820 		str	r2, [r3, #136]
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4366              		.loc 1 1998 20
 4367 024e 7B68     		ldr	r3, [r7, #4]
 4368 0250 2022     		movs	r2, #32
 4369 0252 C3F88C20 		str	r2, [r3, #140]
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4370              		.loc 1 1999 26
 4371 0256 7B68     		ldr	r3, [r7, #4]
 4372 0258 0022     		movs	r2, #0
 4373 025a DA66     		str	r2, [r3, #108]
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 135


2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort complete callback */
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4374              		.loc 1 2007 5
 4375 025c 7868     		ldr	r0, [r7, #4]
 4376 025e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4377              	.L241:
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 4378              		.loc 1 2011 10
 4379 0262 0023     		movs	r3, #0
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4380              		.loc 1 2012 1
 4381 0264 1846     		mov	r0, r3
 4382 0266 8837     		adds	r7, r7, #136
 4383              	.LCFI103:
 4384              		.cfi_def_cfa_offset 8
 4385 0268 BD46     		mov	sp, r7
 4386              	.LCFI104:
 4387              		.cfi_def_cfa_register 13
 4388              		@ sp needed
 4389 026a 80BD     		pop	{r7, pc}
 4390              	.L245:
 4391              		.align	2
 4392              	.L244:
 4393 026c FEFF7FEF 		.word	-276824066
 4394 0270 00000000 		.word	UART_DMATxAbortCallback
 4395 0274 00000000 		.word	UART_DMARxAbortCallback
 4396              		.cfi_endproc
 4397              	.LFE163:
 4399              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4400              		.align	1
 4401              		.global	HAL_UART_AbortTransmit_IT
 4402              		.syntax unified
 4403              		.thumb
 4404              		.thumb_func
 4406              	HAL_UART_AbortTransmit_IT:
 4407              	.LFB164:
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 136


2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4408              		.loc 1 2029 1
 4409              		.cfi_startproc
 4410              		@ args = 0, pretend = 0, frame = 80
 4411              		@ frame_needed = 1, uses_anonymous_args = 0
 4412 0000 80B5     		push	{r7, lr}
 4413              	.LCFI105:
 4414              		.cfi_def_cfa_offset 8
 4415              		.cfi_offset 7, -8
 4416              		.cfi_offset 14, -4
 4417 0002 94B0     		sub	sp, sp, #80
 4418              	.LCFI106:
 4419              		.cfi_def_cfa_offset 88
 4420 0004 00AF     		add	r7, sp, #0
 4421              	.LCFI107:
 4422              		.cfi_def_cfa_register 7
 4423 0006 7860     		str	r0, [r7, #4]
 4424              	.L249:
 4425              	.LBB684:
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
 4426              		.loc 1 2031 3 discriminator 1
 4427 0008 7B68     		ldr	r3, [r7, #4]
 4428 000a 1B68     		ldr	r3, [r3]
 4429 000c 7B63     		str	r3, [r7, #52]
 4430              	.LBB685:
 4431              	.LBB686:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4432              		.loc 2 1155 4
 4433 000e 7B6B     		ldr	r3, [r7, #52]
 4434              		.syntax unified
 4435              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4436 0010 53E8003F 		ldrex r3, [r3]
 4437              	@ 0 "" 2
 4438              		.thumb
 4439              		.syntax unified
 4440 0014 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4441              		.loc 2 1156 10
 4442 0016 3B6B     		ldr	r3, [r7, #48]
 4443              	.LBE686:
 4444              	.LBE685:
 4445              		.loc 1 2031 3 discriminator 1
 4446 0018 23F0C003 		bic	r3, r3, #192
 4447 001c FB64     		str	r3, [r7, #76]
 4448 001e 7B68     		ldr	r3, [r7, #4]
 4449 0020 1B68     		ldr	r3, [r3]
 4450 0022 1A46     		mov	r2, r3
 4451 0024 FB6C     		ldr	r3, [r7, #76]
 4452 0026 3B64     		str	r3, [r7, #64]
 4453 0028 FA63     		str	r2, [r7, #60]
 4454              	.LBB687:
 4455              	.LBB688:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4456              		.loc 2 1206 4
 4457 002a F96B     		ldr	r1, [r7, #60]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 137


 4458 002c 3A6C     		ldr	r2, [r7, #64]
 4459              		.syntax unified
 4460              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4461 002e 41E80023 		strex r3, r2, [r1]
 4462              	@ 0 "" 2
 4463              		.thumb
 4464              		.syntax unified
 4465 0032 BB63     		str	r3, [r7, #56]
 4466              		.loc 2 1207 10
 4467 0034 BB6B     		ldr	r3, [r7, #56]
 4468              	.LBE688:
 4469              	.LBE687:
 4470              		.loc 1 2031 3 discriminator 1
 4471 0036 002B     		cmp	r3, #0
 4472 0038 E6D1     		bne	.L249
 4473              	.L252:
 4474              	.LBE684:
 4475              	.LBB689:
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 4476              		.loc 1 2032 3 discriminator 1
 4477 003a 7B68     		ldr	r3, [r7, #4]
 4478 003c 1B68     		ldr	r3, [r3]
 4479 003e 0833     		adds	r3, r3, #8
 4480 0040 3B62     		str	r3, [r7, #32]
 4481              	.LBB690:
 4482              	.LBB691:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4483              		.loc 2 1155 4
 4484 0042 3B6A     		ldr	r3, [r7, #32]
 4485              		.syntax unified
 4486              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4487 0044 53E8003F 		ldrex r3, [r3]
 4488              	@ 0 "" 2
 4489              		.thumb
 4490              		.syntax unified
 4491 0048 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4492              		.loc 2 1156 10
 4493 004a FB69     		ldr	r3, [r7, #28]
 4494              	.LBE691:
 4495              	.LBE690:
 4496              		.loc 1 2032 3 discriminator 1
 4497 004c 23F40003 		bic	r3, r3, #8388608
 4498 0050 BB64     		str	r3, [r7, #72]
 4499 0052 7B68     		ldr	r3, [r7, #4]
 4500 0054 1B68     		ldr	r3, [r3]
 4501 0056 0833     		adds	r3, r3, #8
 4502 0058 BA6C     		ldr	r2, [r7, #72]
 4503 005a FA62     		str	r2, [r7, #44]
 4504 005c BB62     		str	r3, [r7, #40]
 4505              	.LBB692:
 4506              	.LBB693:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4507              		.loc 2 1206 4
 4508 005e B96A     		ldr	r1, [r7, #40]
 4509 0060 FA6A     		ldr	r2, [r7, #44]
 4510              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 138


 4511              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4512 0062 41E80023 		strex r3, r2, [r1]
 4513              	@ 0 "" 2
 4514              		.thumb
 4515              		.syntax unified
 4516 0066 7B62     		str	r3, [r7, #36]
 4517              		.loc 2 1207 10
 4518 0068 7B6A     		ldr	r3, [r7, #36]
 4519              	.LBE693:
 4520              	.LBE692:
 4521              		.loc 1 2032 3 discriminator 1
 4522 006a 002B     		cmp	r3, #0
 4523 006c E5D1     		bne	.L252
 4524              	.LBE689:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4525              		.loc 1 2035 7
 4526 006e 7B68     		ldr	r3, [r7, #4]
 4527 0070 1B68     		ldr	r3, [r3]
 4528 0072 9B68     		ldr	r3, [r3, #8]
 4529 0074 03F08003 		and	r3, r3, #128
 4530              		.loc 1 2035 6
 4531 0078 802B     		cmp	r3, #128
 4532 007a 40D1     		bne	.L253
 4533              	.L256:
 4534              	.LBB694:
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4535              		.loc 1 2038 5 discriminator 1
 4536 007c 7B68     		ldr	r3, [r7, #4]
 4537 007e 1B68     		ldr	r3, [r3]
 4538 0080 0833     		adds	r3, r3, #8
 4539 0082 FB60     		str	r3, [r7, #12]
 4540              	.LBB695:
 4541              	.LBB696:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4542              		.loc 2 1155 4
 4543 0084 FB68     		ldr	r3, [r7, #12]
 4544              		.syntax unified
 4545              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4546 0086 53E8003F 		ldrex r3, [r3]
 4547              	@ 0 "" 2
 4548              		.thumb
 4549              		.syntax unified
 4550 008a BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4551              		.loc 2 1156 10
 4552 008c BB68     		ldr	r3, [r7, #8]
 4553              	.LBE696:
 4554              	.LBE695:
 4555              		.loc 1 2038 5 discriminator 1
 4556 008e 23F08003 		bic	r3, r3, #128
 4557 0092 7B64     		str	r3, [r7, #68]
 4558 0094 7B68     		ldr	r3, [r7, #4]
 4559 0096 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 139


 4560 0098 0833     		adds	r3, r3, #8
 4561 009a 7A6C     		ldr	r2, [r7, #68]
 4562 009c BA61     		str	r2, [r7, #24]
 4563 009e 7B61     		str	r3, [r7, #20]
 4564              	.LBB697:
 4565              	.LBB698:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4566              		.loc 2 1206 4
 4567 00a0 7969     		ldr	r1, [r7, #20]
 4568 00a2 BA69     		ldr	r2, [r7, #24]
 4569              		.syntax unified
 4570              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4571 00a4 41E80023 		strex r3, r2, [r1]
 4572              	@ 0 "" 2
 4573              		.thumb
 4574              		.syntax unified
 4575 00a8 3B61     		str	r3, [r7, #16]
 4576              		.loc 2 1207 10
 4577 00aa 3B69     		ldr	r3, [r7, #16]
 4578              	.LBE698:
 4579              	.LBE697:
 4580              		.loc 1 2038 5 discriminator 1
 4581 00ac 002B     		cmp	r3, #0
 4582 00ae E5D1     		bne	.L256
 4583              	.LBE694:
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4584              		.loc 1 2041 14
 4585 00b0 7B68     		ldr	r3, [r7, #4]
 4586 00b2 DB6F     		ldr	r3, [r3, #124]
 4587              		.loc 1 2041 8
 4588 00b4 002B     		cmp	r3, #0
 4589 00b6 13D0     		beq	.L257
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4590              		.loc 1 2045 12
 4591 00b8 7B68     		ldr	r3, [r7, #4]
 4592 00ba DB6F     		ldr	r3, [r3, #124]
 4593              		.loc 1 2045 40
 4594 00bc 204A     		ldr	r2, .L261
 4595 00be 1A65     		str	r2, [r3, #80]
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4596              		.loc 1 2048 11
 4597 00c0 7B68     		ldr	r3, [r7, #4]
 4598 00c2 DB6F     		ldr	r3, [r3, #124]
 4599 00c4 1846     		mov	r0, r3
 4600 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4601 00ca 0346     		mov	r3, r0
 4602              		.loc 1 2048 10 discriminator 1
 4603 00cc 002B     		cmp	r3, #0
 4604 00ce 31D0     		beq	.L258
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 140


2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4605              		.loc 1 2051 14
 4606 00d0 7B68     		ldr	r3, [r7, #4]
 4607 00d2 DB6F     		ldr	r3, [r3, #124]
 4608              		.loc 1 2051 22
 4609 00d4 1B6D     		ldr	r3, [r3, #80]
 4610              		.loc 1 2051 47
 4611 00d6 7A68     		ldr	r2, [r7, #4]
 4612 00d8 D26F     		ldr	r2, [r2, #124]
 4613              		.loc 1 2051 9
 4614 00da 1046     		mov	r0, r2
 4615 00dc 9847     		blx	r3
 4616              	.LVL0:
 4617 00de 29E0     		b	.L258
 4618              	.L257:
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Tx transfer counter */
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
 4619              		.loc 1 2057 26
 4620 00e0 7B68     		ldr	r3, [r7, #4]
 4621 00e2 0022     		movs	r2, #0
 4622 00e4 A3F85620 		strh	r2, [r3, #86]	@ movhi
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear TxISR function pointers */
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR = NULL;
 4623              		.loc 1 2060 20
 4624 00e8 7B68     		ldr	r3, [r7, #4]
 4625 00ea 0022     		movs	r2, #0
 4626 00ec 9A67     		str	r2, [r3, #120]
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4627              		.loc 1 2063 21
 4628 00ee 7B68     		ldr	r3, [r7, #4]
 4629 00f0 2022     		movs	r2, #32
 4630 00f2 C3F88820 		str	r2, [r3, #136]
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4631              		.loc 1 2071 7
 4632 00f6 7868     		ldr	r0, [r7, #4]
 4633 00f8 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4634 00fc 1AE0     		b	.L258
 4635              	.L253:
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 141


2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx transfer counter */
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4636              		.loc 1 2078 24
 4637 00fe 7B68     		ldr	r3, [r7, #4]
 4638 0100 0022     		movs	r2, #0
 4639 0102 A3F85620 		strh	r2, [r3, #86]	@ movhi
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear TxISR function pointers */
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxISR = NULL;
 4640              		.loc 1 2081 18
 4641 0106 7B68     		ldr	r3, [r7, #4]
 4642 0108 0022     		movs	r2, #0
 4643 010a 9A67     		str	r2, [r3, #120]
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 4644              		.loc 1 2084 14
 4645 010c 7B68     		ldr	r3, [r7, #4]
 4646 010e 5B6E     		ldr	r3, [r3, #100]
 4647              		.loc 1 2084 8
 4648 0110 B3F1005F 		cmp	r3, #536870912
 4649 0114 07D1     		bne	.L259
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 4650              		.loc 1 2086 7
 4651 0116 7B68     		ldr	r3, [r7, #4]
 4652 0118 1B68     		ldr	r3, [r3]
 4653 011a 9A69     		ldr	r2, [r3, #24]
 4654 011c 7B68     		ldr	r3, [r7, #4]
 4655 011e 1B68     		ldr	r3, [r3]
 4656 0120 42F01002 		orr	r2, r2, #16
 4657 0124 9A61     		str	r2, [r3, #24]
 4658              	.L259:
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4659              		.loc 1 2090 19
 4660 0126 7B68     		ldr	r3, [r7, #4]
 4661 0128 2022     		movs	r2, #32
 4662 012a C3F88820 		str	r2, [r3, #136]
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4663              		.loc 1 2098 5
 4664 012e 7868     		ldr	r0, [r7, #4]
 4665 0130 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4666              	.L258:
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 142


2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 4667              		.loc 1 2102 10
 4668 0134 0023     		movs	r3, #0
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4669              		.loc 1 2103 1
 4670 0136 1846     		mov	r0, r3
 4671 0138 5037     		adds	r7, r7, #80
 4672              	.LCFI108:
 4673              		.cfi_def_cfa_offset 8
 4674 013a BD46     		mov	sp, r7
 4675              	.LCFI109:
 4676              		.cfi_def_cfa_register 13
 4677              		@ sp needed
 4678 013c 80BD     		pop	{r7, pc}
 4679              	.L262:
 4680 013e 00BF     		.align	2
 4681              	.L261:
 4682 0140 00000000 		.word	UART_DMATxOnlyAbortCallback
 4683              		.cfi_endproc
 4684              	.LFE164:
 4686              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4687              		.align	1
 4688              		.global	HAL_UART_AbortReceive_IT
 4689              		.syntax unified
 4690              		.thumb
 4691              		.thumb_func
 4693              	HAL_UART_AbortReceive_IT:
 4694              	.LFB165:
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 4695              		.loc 1 2120 1
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 104
 4698              		@ frame_needed = 1, uses_anonymous_args = 0
 4699 0000 80B5     		push	{r7, lr}
 4700              	.LCFI110:
 4701              		.cfi_def_cfa_offset 8
 4702              		.cfi_offset 7, -8
 4703              		.cfi_offset 14, -4
 4704 0002 9AB0     		sub	sp, sp, #104
 4705              	.LCFI111:
 4706              		.cfi_def_cfa_offset 112
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 143


 4707 0004 00AF     		add	r7, sp, #0
 4708              	.LCFI112:
 4709              		.cfi_def_cfa_register 7
 4710 0006 7860     		str	r0, [r7, #4]
 4711              	.L266:
 4712              	.LBB699:
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
 4713              		.loc 1 2122 3 discriminator 1
 4714 0008 7B68     		ldr	r3, [r7, #4]
 4715 000a 1B68     		ldr	r3, [r3]
 4716 000c BB64     		str	r3, [r7, #72]
 4717              	.LBB700:
 4718              	.LBB701:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4719              		.loc 2 1155 4
 4720 000e BB6C     		ldr	r3, [r7, #72]
 4721              		.syntax unified
 4722              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4723 0010 53E8003F 		ldrex r3, [r3]
 4724              	@ 0 "" 2
 4725              		.thumb
 4726              		.syntax unified
 4727 0014 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4728              		.loc 2 1156 10
 4729 0016 7B6C     		ldr	r3, [r7, #68]
 4730              	.LBE701:
 4731              	.LBE700:
 4732              		.loc 1 2122 3 discriminator 1
 4733 0018 23F49073 		bic	r3, r3, #288
 4734 001c 7B66     		str	r3, [r7, #100]
 4735 001e 7B68     		ldr	r3, [r7, #4]
 4736 0020 1B68     		ldr	r3, [r3]
 4737 0022 1A46     		mov	r2, r3
 4738 0024 7B6E     		ldr	r3, [r7, #100]
 4739 0026 7B65     		str	r3, [r7, #84]
 4740 0028 3A65     		str	r2, [r7, #80]
 4741              	.LBB702:
 4742              	.LBB703:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4743              		.loc 2 1206 4
 4744 002a 396D     		ldr	r1, [r7, #80]
 4745 002c 7A6D     		ldr	r2, [r7, #84]
 4746              		.syntax unified
 4747              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4748 002e 41E80023 		strex r3, r2, [r1]
 4749              	@ 0 "" 2
 4750              		.thumb
 4751              		.syntax unified
 4752 0032 FB64     		str	r3, [r7, #76]
 4753              		.loc 2 1207 10
 4754 0034 FB6C     		ldr	r3, [r7, #76]
 4755              	.LBE703:
 4756              	.LBE702:
 4757              		.loc 1 2122 3 discriminator 1
 4758 0036 002B     		cmp	r3, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 144


 4759 0038 E6D1     		bne	.L266
 4760              	.L269:
 4761              	.LBE699:
 4762              	.LBB704:
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 4763              		.loc 1 2123 3 discriminator 1
 4764 003a 7B68     		ldr	r3, [r7, #4]
 4765 003c 1B68     		ldr	r3, [r3]
 4766 003e 0833     		adds	r3, r3, #8
 4767 0040 7B63     		str	r3, [r7, #52]
 4768              	.LBB705:
 4769              	.LBB706:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4770              		.loc 2 1155 4
 4771 0042 7B6B     		ldr	r3, [r7, #52]
 4772              		.syntax unified
 4773              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4774 0044 53E8003F 		ldrex r3, [r3]
 4775              	@ 0 "" 2
 4776              		.thumb
 4777              		.syntax unified
 4778 0048 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4779              		.loc 2 1156 10
 4780 004a 3A6B     		ldr	r2, [r7, #48]
 4781              	.LBE706:
 4782              	.LBE705:
 4783              		.loc 1 2123 3 discriminator 1
 4784 004c 514B     		ldr	r3, .L281
 4785 004e 1340     		ands	r3, r3, r2
 4786 0050 3B66     		str	r3, [r7, #96]
 4787 0052 7B68     		ldr	r3, [r7, #4]
 4788 0054 1B68     		ldr	r3, [r3]
 4789 0056 0833     		adds	r3, r3, #8
 4790 0058 3A6E     		ldr	r2, [r7, #96]
 4791 005a 3A64     		str	r2, [r7, #64]
 4792 005c FB63     		str	r3, [r7, #60]
 4793              	.LBB707:
 4794              	.LBB708:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4795              		.loc 2 1206 4
 4796 005e F96B     		ldr	r1, [r7, #60]
 4797 0060 3A6C     		ldr	r2, [r7, #64]
 4798              		.syntax unified
 4799              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4800 0062 41E80023 		strex r3, r2, [r1]
 4801              	@ 0 "" 2
 4802              		.thumb
 4803              		.syntax unified
 4804 0066 BB63     		str	r3, [r7, #56]
 4805              		.loc 2 1207 10
 4806 0068 BB6B     		ldr	r3, [r7, #56]
 4807              	.LBE708:
 4808              	.LBE707:
 4809              		.loc 1 2123 3 discriminator 1
 4810 006a 002B     		cmp	r3, #0
 4811 006c E5D1     		bne	.L269
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 145


 4812              	.LBE704:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4813              		.loc 1 2126 12
 4814 006e 7B68     		ldr	r3, [r7, #4]
 4815 0070 DB6E     		ldr	r3, [r3, #108]
 4816              		.loc 1 2126 6
 4817 0072 012B     		cmp	r3, #1
 4818 0074 18D1     		bne	.L270
 4819              	.L273:
 4820              	.LBB709:
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4821              		.loc 1 2128 5 discriminator 1
 4822 0076 7B68     		ldr	r3, [r7, #4]
 4823 0078 1B68     		ldr	r3, [r3]
 4824 007a 3B62     		str	r3, [r7, #32]
 4825              	.LBB710:
 4826              	.LBB711:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4827              		.loc 2 1155 4
 4828 007c 3B6A     		ldr	r3, [r7, #32]
 4829              		.syntax unified
 4830              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4831 007e 53E8003F 		ldrex r3, [r3]
 4832              	@ 0 "" 2
 4833              		.thumb
 4834              		.syntax unified
 4835 0082 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4836              		.loc 2 1156 10
 4837 0084 FB69     		ldr	r3, [r7, #28]
 4838              	.LBE711:
 4839              	.LBE710:
 4840              		.loc 1 2128 5 discriminator 1
 4841 0086 23F01003 		bic	r3, r3, #16
 4842 008a FB65     		str	r3, [r7, #92]
 4843 008c 7B68     		ldr	r3, [r7, #4]
 4844 008e 1B68     		ldr	r3, [r3]
 4845 0090 1A46     		mov	r2, r3
 4846 0092 FB6D     		ldr	r3, [r7, #92]
 4847 0094 FB62     		str	r3, [r7, #44]
 4848 0096 BA62     		str	r2, [r7, #40]
 4849              	.LBB712:
 4850              	.LBB713:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4851              		.loc 2 1206 4
 4852 0098 B96A     		ldr	r1, [r7, #40]
 4853 009a FA6A     		ldr	r2, [r7, #44]
 4854              		.syntax unified
 4855              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4856 009c 41E80023 		strex r3, r2, [r1]
 4857              	@ 0 "" 2
 4858              		.thumb
 4859              		.syntax unified
 4860 00a0 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 146


 4861              		.loc 2 1207 10
 4862 00a2 7B6A     		ldr	r3, [r7, #36]
 4863              	.LBE713:
 4864              	.LBE712:
 4865              		.loc 1 2128 5 discriminator 1
 4866 00a4 002B     		cmp	r3, #0
 4867 00a6 E6D1     		bne	.L273
 4868              	.L270:
 4869              	.LBE709:
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4870              		.loc 1 2132 7
 4871 00a8 7B68     		ldr	r3, [r7, #4]
 4872 00aa 1B68     		ldr	r3, [r3]
 4873 00ac 9B68     		ldr	r3, [r3, #8]
 4874 00ae 03F04003 		and	r3, r3, #64
 4875              		.loc 1 2132 6
 4876 00b2 402B     		cmp	r3, #64
 4877 00b4 54D1     		bne	.L274
 4878              	.L277:
 4879              	.LBB714:
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4880              		.loc 1 2135 5 discriminator 1
 4881 00b6 7B68     		ldr	r3, [r7, #4]
 4882 00b8 1B68     		ldr	r3, [r3]
 4883 00ba 0833     		adds	r3, r3, #8
 4884 00bc FB60     		str	r3, [r7, #12]
 4885              	.LBB715:
 4886              	.LBB716:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4887              		.loc 2 1155 4
 4888 00be FB68     		ldr	r3, [r7, #12]
 4889              		.syntax unified
 4890              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4891 00c0 53E8003F 		ldrex r3, [r3]
 4892              	@ 0 "" 2
 4893              		.thumb
 4894              		.syntax unified
 4895 00c4 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4896              		.loc 2 1156 10
 4897 00c6 BB68     		ldr	r3, [r7, #8]
 4898              	.LBE716:
 4899              	.LBE715:
 4900              		.loc 1 2135 5 discriminator 1
 4901 00c8 23F04003 		bic	r3, r3, #64
 4902 00cc BB65     		str	r3, [r7, #88]
 4903 00ce 7B68     		ldr	r3, [r7, #4]
 4904 00d0 1B68     		ldr	r3, [r3]
 4905 00d2 0833     		adds	r3, r3, #8
 4906 00d4 BA6D     		ldr	r2, [r7, #88]
 4907 00d6 BA61     		str	r2, [r7, #24]
 4908 00d8 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 147


 4909              	.LBB717:
 4910              	.LBB718:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4911              		.loc 2 1206 4
 4912 00da 7969     		ldr	r1, [r7, #20]
 4913 00dc BA69     		ldr	r2, [r7, #24]
 4914              		.syntax unified
 4915              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4916 00de 41E80023 		strex r3, r2, [r1]
 4917              	@ 0 "" 2
 4918              		.thumb
 4919              		.syntax unified
 4920 00e2 3B61     		str	r3, [r7, #16]
 4921              		.loc 2 1207 10
 4922 00e4 3B69     		ldr	r3, [r7, #16]
 4923              	.LBE718:
 4924              	.LBE717:
 4925              		.loc 1 2135 5 discriminator 1
 4926 00e6 002B     		cmp	r3, #0
 4927 00e8 E5D1     		bne	.L277
 4928              	.LBE714:
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4929              		.loc 1 2138 14
 4930 00ea 7B68     		ldr	r3, [r7, #4]
 4931 00ec D3F88030 		ldr	r3, [r3, #128]
 4932              		.loc 1 2138 8
 4933 00f0 002B     		cmp	r3, #0
 4934 00f2 17D0     		beq	.L278
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 4935              		.loc 1 2142 12
 4936 00f4 7B68     		ldr	r3, [r7, #4]
 4937 00f6 D3F88030 		ldr	r3, [r3, #128]
 4938              		.loc 1 2142 40
 4939 00fa 274A     		ldr	r2, .L281+4
 4940 00fc 1A65     		str	r2, [r3, #80]
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4941              		.loc 1 2145 11
 4942 00fe 7B68     		ldr	r3, [r7, #4]
 4943 0100 D3F88030 		ldr	r3, [r3, #128]
 4944 0104 1846     		mov	r0, r3
 4945 0106 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4946 010a 0346     		mov	r3, r0
 4947              		.loc 1 2145 10 discriminator 1
 4948 010c 002B     		cmp	r3, #0
 4949 010e 3CD0     		beq	.L279
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4950              		.loc 1 2148 14
 4951 0110 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 148


 4952 0112 D3F88030 		ldr	r3, [r3, #128]
 4953              		.loc 1 2148 22
 4954 0116 1B6D     		ldr	r3, [r3, #80]
 4955              		.loc 1 2148 47
 4956 0118 7A68     		ldr	r2, [r7, #4]
 4957 011a D2F88020 		ldr	r2, [r2, #128]
 4958              		.loc 1 2148 9
 4959 011e 1046     		mov	r0, r2
 4960 0120 9847     		blx	r3
 4961              	.LVL1:
 4962 0122 32E0     		b	.L279
 4963              	.L278:
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Rx transfer counter */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
 4964              		.loc 1 2154 26
 4965 0124 7B68     		ldr	r3, [r7, #4]
 4966 0126 0022     		movs	r2, #0
 4967 0128 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 4968              		.loc 1 2157 25
 4969 012c 7B68     		ldr	r3, [r7, #4]
 4970 012e 0022     		movs	r2, #0
 4971 0130 9A65     		str	r2, [r3, #88]
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 4972              		.loc 1 2160 7
 4973 0132 7B68     		ldr	r3, [r7, #4]
 4974 0134 1B68     		ldr	r3, [r3]
 4975 0136 0F22     		movs	r2, #15
 4976 0138 1A62     		str	r2, [r3, #32]
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Discard the received data */
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4977              		.loc 1 2163 7
 4978 013a 7B68     		ldr	r3, [r7, #4]
 4979 013c 1B68     		ldr	r3, [r3]
 4980 013e 9A69     		ldr	r2, [r3, #24]
 4981 0140 7B68     		ldr	r3, [r7, #4]
 4982 0142 1B68     		ldr	r3, [r3]
 4983 0144 42F00802 		orr	r2, r2, #8
 4984 0148 9A61     		str	r2, [r3, #24]
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4985              		.loc 1 2166 22
 4986 014a 7B68     		ldr	r3, [r7, #4]
 4987 014c 2022     		movs	r2, #32
 4988 014e C3F88C20 		str	r2, [r3, #140]
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4989              		.loc 1 2167 28
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 149


 4990 0152 7B68     		ldr	r3, [r7, #4]
 4991 0154 0022     		movs	r2, #0
 4992 0156 DA66     		str	r2, [r3, #108]
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 4993              		.loc 1 2175 7
 4994 0158 7868     		ldr	r0, [r7, #4]
 4995 015a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4996 015e 14E0     		b	.L279
 4997              	.L274:
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Rx transfer counter */
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4998              		.loc 1 2182 24
 4999 0160 7B68     		ldr	r3, [r7, #4]
 5000 0162 0022     		movs	r2, #0
 5001 0164 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RxISR function pointer */
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 5002              		.loc 1 2185 23
 5003 0168 7B68     		ldr	r3, [r7, #4]
 5004 016a 0022     		movs	r2, #0
 5005 016c 9A65     		str	r2, [r3, #88]
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 5006              		.loc 1 2188 5
 5007 016e 7B68     		ldr	r3, [r7, #4]
 5008 0170 1B68     		ldr	r3, [r3]
 5009 0172 0F22     		movs	r2, #15
 5010 0174 1A62     		str	r2, [r3, #32]
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5011              		.loc 1 2191 20
 5012 0176 7B68     		ldr	r3, [r7, #4]
 5013 0178 2022     		movs	r2, #32
 5014 017a C3F88C20 		str	r2, [r3, #140]
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5015              		.loc 1 2192 26
 5016 017e 7B68     		ldr	r3, [r7, #4]
 5017 0180 0022     		movs	r2, #0
 5018 0182 DA66     		str	r2, [r3, #108]
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 150


2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5019              		.loc 1 2200 5
 5020 0184 7868     		ldr	r0, [r7, #4]
 5021 0186 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5022              	.L279:
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 5023              		.loc 1 2204 10
 5024 018a 0023     		movs	r3, #0
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5025              		.loc 1 2205 1
 5026 018c 1846     		mov	r0, r3
 5027 018e 6837     		adds	r7, r7, #104
 5028              	.LCFI113:
 5029              		.cfi_def_cfa_offset 8
 5030 0190 BD46     		mov	sp, r7
 5031              	.LCFI114:
 5032              		.cfi_def_cfa_register 13
 5033              		@ sp needed
 5034 0192 80BD     		pop	{r7, pc}
 5035              	.L282:
 5036              		.align	2
 5037              	.L281:
 5038 0194 FEFFFFEF 		.word	-268435458
 5039 0198 00000000 		.word	UART_DMARxOnlyAbortCallback
 5040              		.cfi_endproc
 5041              	.LFE165:
 5043              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5044              		.align	1
 5045              		.global	HAL_UART_IRQHandler
 5046              		.syntax unified
 5047              		.thumb
 5048              		.thumb_func
 5050              	HAL_UART_IRQHandler:
 5051              	.LFB166:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 5052              		.loc 1 2213 1
 5053              		.cfi_startproc
 5054              		@ args = 0, pretend = 0, frame = 232
 5055              		@ frame_needed = 1, uses_anonymous_args = 0
 5056 0000 80B5     		push	{r7, lr}
 5057              	.LCFI115:
 5058              		.cfi_def_cfa_offset 8
 5059              		.cfi_offset 7, -8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 151


 5060              		.cfi_offset 14, -4
 5061 0002 BAB0     		sub	sp, sp, #232
 5062              	.LCFI116:
 5063              		.cfi_def_cfa_offset 240
 5064 0004 00AF     		add	r7, sp, #0
 5065              	.LCFI117:
 5066              		.cfi_def_cfa_register 7
 5067 0006 7860     		str	r0, [r7, #4]
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 5068              		.loc 1 2214 25
 5069 0008 7B68     		ldr	r3, [r7, #4]
 5070 000a 1B68     		ldr	r3, [r3]
 5071              		.loc 1 2214 12
 5072 000c DB69     		ldr	r3, [r3, #28]
 5073 000e C7F8E430 		str	r3, [r7, #228]
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5074              		.loc 1 2215 25
 5075 0012 7B68     		ldr	r3, [r7, #4]
 5076 0014 1B68     		ldr	r3, [r3]
 5077              		.loc 1 2215 12
 5078 0016 1B68     		ldr	r3, [r3]
 5079 0018 C7F8E030 		str	r3, [r7, #224]
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5080              		.loc 1 2216 25
 5081 001c 7B68     		ldr	r3, [r7, #4]
 5082 001e 1B68     		ldr	r3, [r3]
 5083              		.loc 1 2216 12
 5084 0020 9B68     		ldr	r3, [r3, #8]
 5085 0022 C7F8DC30 		str	r3, [r7, #220]
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorcode;
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If no error occurs */
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 5086              		.loc 1 2222 14
 5087 0026 D7F8E420 		ldr	r2, [r7, #228]
 5088 002a 40F60F03 		movw	r3, #2063
 5089 002e 1340     		ands	r3, r3, r2
 5090 0030 C7F8D830 		str	r3, [r7, #216]
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == 0U)
 5091              		.loc 1 2223 6
 5092 0034 D7F8D830 		ldr	r3, [r7, #216]
 5093 0038 002B     		cmp	r3, #0
 5094 003a 1BD1     		bne	.L284
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 5095              		.loc 1 2226 20
 5096 003c D7F8E430 		ldr	r3, [r7, #228]
 5097 0040 03F02003 		and	r3, r3, #32
 5098              		.loc 1 2226 8
 5099 0044 002B     		cmp	r3, #0
 5100 0046 15D0     		beq	.L284
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 5101              		.loc 1 2227 22
 5102 0048 D7F8E030 		ldr	r3, [r7, #224]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 152


 5103 004c 03F02003 		and	r3, r3, #32
 5104              		.loc 1 2227 9
 5105 0050 002B     		cmp	r3, #0
 5106 0052 05D1     		bne	.L285
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 5107              		.loc 1 2228 25
 5108 0054 D7F8DC30 		ldr	r3, [r7, #220]
 5109 0058 03F08053 		and	r3, r3, #268435456
 5110              		.loc 1 2228 13
 5111 005c 002B     		cmp	r3, #0
 5112 005e 09D0     		beq	.L284
 5113              	.L285:
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxISR != NULL)
 5114              		.loc 1 2230 16
 5115 0060 7B68     		ldr	r3, [r7, #4]
 5116 0062 5B6F     		ldr	r3, [r3, #116]
 5117              		.loc 1 2230 10
 5118 0064 002B     		cmp	r3, #0
 5119 0066 00F09383 		beq	.L343
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR(huart);
 5120              		.loc 1 2232 14
 5121 006a 7B68     		ldr	r3, [r7, #4]
 5122 006c 5B6F     		ldr	r3, [r3, #116]
 5123              		.loc 1 2232 9
 5124 006e 7868     		ldr	r0, [r7, #4]
 5125 0070 9847     		blx	r3
 5126              	.LVL2:
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 5127              		.loc 1 2234 7
 5128 0072 8DE3     		b	.L343
 5129              	.L284:
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If some errors occur */
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((errorflags != 0U)
 5130              		.loc 1 2239 6
 5131 0074 D7F8D830 		ldr	r3, [r7, #216]
 5132 0078 002B     		cmp	r3, #0
 5133 007a 00F02381 		beq	.L288
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 5134              		.loc 1 2240 21
 5135 007e D7F8DC20 		ldr	r2, [r7, #220]
 5136 0082 8D4B     		ldr	r3, .L349
 5137 0084 1340     		ands	r3, r3, r2
 5138              		.loc 1 2240 7
 5139 0086 002B     		cmp	r3, #0
 5140 0088 06D1     		bne	.L289
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 5141              		.loc 1 2241 24
 5142 008a D7F8E020 		ldr	r2, [r7, #224]
 5143 008e 8B4B     		ldr	r3, .L349+4
 5144 0090 1340     		ands	r3, r3, r2
 5145              		.loc 1 2241 12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 153


 5146 0092 002B     		cmp	r3, #0
 5147 0094 00F01681 		beq	.L288
 5148              	.L289:
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 5149              		.loc 1 2244 20
 5150 0098 D7F8E430 		ldr	r3, [r7, #228]
 5151 009c 03F00103 		and	r3, r3, #1
 5152              		.loc 1 2244 8
 5153 00a0 002B     		cmp	r3, #0
 5154 00a2 11D0     		beq	.L290
 5155              		.loc 1 2244 55 discriminator 1
 5156 00a4 D7F8E030 		ldr	r3, [r7, #224]
 5157 00a8 03F48073 		and	r3, r3, #256
 5158              		.loc 1 2244 43 discriminator 1
 5159 00ac 002B     		cmp	r3, #0
 5160 00ae 0BD0     		beq	.L290
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 5161              		.loc 1 2246 7
 5162 00b0 7B68     		ldr	r3, [r7, #4]
 5163 00b2 1B68     		ldr	r3, [r3]
 5164 00b4 0122     		movs	r2, #1
 5165 00b6 1A62     		str	r2, [r3, #32]
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5166              		.loc 1 2248 12
 5167 00b8 7B68     		ldr	r3, [r7, #4]
 5168 00ba D3F89030 		ldr	r3, [r3, #144]
 5169              		.loc 1 2248 24
 5170 00be 43F00102 		orr	r2, r3, #1
 5171 00c2 7B68     		ldr	r3, [r7, #4]
 5172 00c4 C3F89020 		str	r2, [r3, #144]
 5173              	.L290:
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5174              		.loc 1 2252 20
 5175 00c8 D7F8E430 		ldr	r3, [r7, #228]
 5176 00cc 03F00203 		and	r3, r3, #2
 5177              		.loc 1 2252 8
 5178 00d0 002B     		cmp	r3, #0
 5179 00d2 11D0     		beq	.L291
 5180              		.loc 1 2252 55 discriminator 1
 5181 00d4 D7F8DC30 		ldr	r3, [r7, #220]
 5182 00d8 03F00103 		and	r3, r3, #1
 5183              		.loc 1 2252 43 discriminator 1
 5184 00dc 002B     		cmp	r3, #0
 5185 00de 0BD0     		beq	.L291
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 5186              		.loc 1 2254 7
 5187 00e0 7B68     		ldr	r3, [r7, #4]
 5188 00e2 1B68     		ldr	r3, [r3]
 5189 00e4 0222     		movs	r2, #2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 154


 5190 00e6 1A62     		str	r2, [r3, #32]
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5191              		.loc 1 2256 12
 5192 00e8 7B68     		ldr	r3, [r7, #4]
 5193 00ea D3F89030 		ldr	r3, [r3, #144]
 5194              		.loc 1 2256 24
 5195 00ee 43F00402 		orr	r2, r3, #4
 5196 00f2 7B68     		ldr	r3, [r7, #4]
 5197 00f4 C3F89020 		str	r2, [r3, #144]
 5198              	.L291:
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5199              		.loc 1 2260 20
 5200 00f8 D7F8E430 		ldr	r3, [r7, #228]
 5201 00fc 03F00403 		and	r3, r3, #4
 5202              		.loc 1 2260 8
 5203 0100 002B     		cmp	r3, #0
 5204 0102 11D0     		beq	.L292
 5205              		.loc 1 2260 55 discriminator 1
 5206 0104 D7F8DC30 		ldr	r3, [r7, #220]
 5207 0108 03F00103 		and	r3, r3, #1
 5208              		.loc 1 2260 43 discriminator 1
 5209 010c 002B     		cmp	r3, #0
 5210 010e 0BD0     		beq	.L292
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 5211              		.loc 1 2262 7
 5212 0110 7B68     		ldr	r3, [r7, #4]
 5213 0112 1B68     		ldr	r3, [r3]
 5214 0114 0422     		movs	r2, #4
 5215 0116 1A62     		str	r2, [r3, #32]
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5216              		.loc 1 2264 12
 5217 0118 7B68     		ldr	r3, [r7, #4]
 5218 011a D3F89030 		ldr	r3, [r3, #144]
 5219              		.loc 1 2264 24
 5220 011e 43F00202 		orr	r2, r3, #2
 5221 0122 7B68     		ldr	r3, [r7, #4]
 5222 0124 C3F89020 		str	r2, [r3, #144]
 5223              	.L292:
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 5224              		.loc 1 2268 20
 5225 0128 D7F8E430 		ldr	r3, [r7, #228]
 5226 012c 03F00803 		and	r3, r3, #8
 5227              		.loc 1 2268 8
 5228 0130 002B     		cmp	r3, #0
 5229 0132 17D0     		beq	.L293
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 5230              		.loc 1 2269 22
 5231 0134 D7F8E030 		ldr	r3, [r7, #224]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 155


 5232 0138 03F02003 		and	r3, r3, #32
 5233              		.loc 1 2269 9
 5234 013c 002B     		cmp	r3, #0
 5235 013e 05D1     		bne	.L294
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 5236              		.loc 1 2270 22
 5237 0140 D7F8DC20 		ldr	r2, [r7, #220]
 5238 0144 5C4B     		ldr	r3, .L349
 5239 0146 1340     		ands	r3, r3, r2
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 5240              		.loc 1 2269 57 discriminator 1
 5241 0148 002B     		cmp	r3, #0
 5242 014a 0BD0     		beq	.L293
 5243              	.L294:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 5244              		.loc 1 2272 7
 5245 014c 7B68     		ldr	r3, [r7, #4]
 5246 014e 1B68     		ldr	r3, [r3]
 5247 0150 0822     		movs	r2, #8
 5248 0152 1A62     		str	r2, [r3, #32]
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5249              		.loc 1 2274 12
 5250 0154 7B68     		ldr	r3, [r7, #4]
 5251 0156 D3F89030 		ldr	r3, [r3, #144]
 5252              		.loc 1 2274 24
 5253 015a 43F00802 		orr	r2, r3, #8
 5254 015e 7B68     		ldr	r3, [r7, #4]
 5255 0160 C3F89020 		str	r2, [r3, #144]
 5256              	.L293:
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 5257              		.loc 1 2278 20
 5258 0164 D7F8E430 		ldr	r3, [r7, #228]
 5259 0168 03F40063 		and	r3, r3, #2048
 5260              		.loc 1 2278 8
 5261 016c 002B     		cmp	r3, #0
 5262 016e 12D0     		beq	.L295
 5263              		.loc 1 2278 57 discriminator 1
 5264 0170 D7F8E030 		ldr	r3, [r7, #224]
 5265 0174 03F08063 		and	r3, r3, #67108864
 5266              		.loc 1 2278 45 discriminator 1
 5267 0178 002B     		cmp	r3, #0
 5268 017a 0CD0     		beq	.L295
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 5269              		.loc 1 2280 7
 5270 017c 7B68     		ldr	r3, [r7, #4]
 5271 017e 1B68     		ldr	r3, [r3]
 5272 0180 4FF40062 		mov	r2, #2048
 5273 0184 1A62     		str	r2, [r3, #32]
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 5274              		.loc 1 2282 12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 156


 5275 0186 7B68     		ldr	r3, [r7, #4]
 5276 0188 D3F89030 		ldr	r3, [r3, #144]
 5277              		.loc 1 2282 24
 5278 018c 43F02002 		orr	r2, r3, #32
 5279 0190 7B68     		ldr	r3, [r7, #4]
 5280 0192 C3F89020 		str	r2, [r3, #144]
 5281              	.L295:
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5282              		.loc 1 2286 14
 5283 0196 7B68     		ldr	r3, [r7, #4]
 5284 0198 D3F89030 		ldr	r3, [r3, #144]
 5285              		.loc 1 2286 8
 5286 019c 002B     		cmp	r3, #0
 5287 019e 00F0F982 		beq	.L344
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 5288              		.loc 1 2289 22
 5289 01a2 D7F8E430 		ldr	r3, [r7, #228]
 5290 01a6 03F02003 		and	r3, r3, #32
 5291              		.loc 1 2289 10
 5292 01aa 002B     		cmp	r3, #0
 5293 01ac 13D0     		beq	.L297
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 5294              		.loc 1 2290 24
 5295 01ae D7F8E030 		ldr	r3, [r7, #224]
 5296 01b2 03F02003 		and	r3, r3, #32
 5297              		.loc 1 2290 11
 5298 01b6 002B     		cmp	r3, #0
 5299 01b8 05D1     		bne	.L298
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 5300              		.loc 1 2291 27
 5301 01ba D7F8DC30 		ldr	r3, [r7, #220]
 5302 01be 03F08053 		and	r3, r3, #268435456
 5303              		.loc 1 2291 15
 5304 01c2 002B     		cmp	r3, #0
 5305 01c4 07D0     		beq	.L297
 5306              	.L298:
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->RxISR != NULL)
 5307              		.loc 1 2293 18
 5308 01c6 7B68     		ldr	r3, [r7, #4]
 5309 01c8 5B6F     		ldr	r3, [r3, #116]
 5310              		.loc 1 2293 12
 5311 01ca 002B     		cmp	r3, #0
 5312 01cc 03D0     		beq	.L297
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxISR(huart);
 5313              		.loc 1 2295 16
 5314 01ce 7B68     		ldr	r3, [r7, #4]
 5315 01d0 5B6F     		ldr	r3, [r3, #116]
 5316              		.loc 1 2295 11
 5317 01d2 7868     		ldr	r0, [r7, #4]
 5318 01d4 9847     		blx	r3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 157


 5319              	.LVL3:
 5320              	.L297:
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Receiver Timeout error in Reception
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - Overrun error in Reception
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           - any error occurs in DMA mode reception
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       */
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 5321              		.loc 1 2304 17
 5322 01d6 7B68     		ldr	r3, [r7, #4]
 5323 01d8 D3F89030 		ldr	r3, [r3, #144]
 5324 01dc C7F8D430 		str	r3, [r7, #212]
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5325              		.loc 1 2305 12
 5326 01e0 7B68     		ldr	r3, [r7, #4]
 5327 01e2 1B68     		ldr	r3, [r3]
 5328 01e4 9B68     		ldr	r3, [r3, #8]
 5329 01e6 03F04003 		and	r3, r3, #64
 5330              		.loc 1 2305 10
 5331 01ea 402B     		cmp	r3, #64
 5332 01ec 05D0     		beq	.L299
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 5333              		.loc 1 2306 23
 5334 01ee D7F8D430 		ldr	r3, [r7, #212]
 5335 01f2 03F02803 		and	r3, r3, #40
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5336              		.loc 1 2305 66 discriminator 1
 5337 01f6 002B     		cmp	r3, #0
 5338 01f8 54D0     		beq	.L300
 5339              	.L299:
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5340              		.loc 1 2311 9
 5341 01fa 7868     		ldr	r0, [r7, #4]
 5342 01fc FFF7FEFF 		bl	UART_EndRxTransfer
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5343              		.loc 1 2314 13
 5344 0200 7B68     		ldr	r3, [r7, #4]
 5345 0202 1B68     		ldr	r3, [r3]
 5346 0204 9B68     		ldr	r3, [r3, #8]
 5347 0206 03F04003 		and	r3, r3, #64
 5348              		.loc 1 2314 12
 5349 020a 402B     		cmp	r3, #64
 5350 020c 46D1     		bne	.L301
 5351              	.L304:
 5352              	.LBB719:
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 158


 5353              		.loc 1 2317 11 discriminator 1
 5354 020e 7B68     		ldr	r3, [r7, #4]
 5355 0210 1B68     		ldr	r3, [r3]
 5356 0212 0833     		adds	r3, r3, #8
 5357 0214 C7F89C30 		str	r3, [r7, #156]
 5358              	.LBB720:
 5359              	.LBB721:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5360              		.loc 2 1155 4
 5361 0218 D7F89C30 		ldr	r3, [r7, #156]
 5362              		.syntax unified
 5363              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5364 021c 53E8003F 		ldrex r3, [r3]
 5365              	@ 0 "" 2
 5366              		.thumb
 5367              		.syntax unified
 5368 0220 C7F89830 		str	r3, [r7, #152]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5369              		.loc 2 1156 10
 5370 0224 D7F89830 		ldr	r3, [r7, #152]
 5371              	.LBE721:
 5372              	.LBE720:
 5373              		.loc 1 2317 11 discriminator 1
 5374 0228 23F04003 		bic	r3, r3, #64
 5375 022c C7F8D030 		str	r3, [r7, #208]
 5376 0230 7B68     		ldr	r3, [r7, #4]
 5377 0232 1B68     		ldr	r3, [r3]
 5378 0234 0833     		adds	r3, r3, #8
 5379 0236 D7F8D020 		ldr	r2, [r7, #208]
 5380 023a C7F8A820 		str	r2, [r7, #168]
 5381 023e C7F8A430 		str	r3, [r7, #164]
 5382              	.LBB722:
 5383              	.LBB723:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5384              		.loc 2 1206 4
 5385 0242 D7F8A410 		ldr	r1, [r7, #164]
 5386 0246 D7F8A820 		ldr	r2, [r7, #168]
 5387              		.syntax unified
 5388              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5389 024a 41E80023 		strex r3, r2, [r1]
 5390              	@ 0 "" 2
 5391              		.thumb
 5392              		.syntax unified
 5393 024e C7F8A030 		str	r3, [r7, #160]
 5394              		.loc 2 1207 10
 5395 0252 D7F8A030 		ldr	r3, [r7, #160]
 5396              	.LBE723:
 5397              	.LBE722:
 5398              		.loc 1 2317 11 discriminator 1
 5399 0256 002B     		cmp	r3, #0
 5400 0258 D9D1     		bne	.L304
 5401              	.LBE719:
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5402              		.loc 1 2320 20
 5403 025a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 159


 5404 025c D3F88030 		ldr	r3, [r3, #128]
 5405              		.loc 1 2320 14
 5406 0260 002B     		cmp	r3, #0
 5407 0262 17D0     		beq	.L305
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5408              		.loc 1 2324 18
 5409 0264 7B68     		ldr	r3, [r7, #4]
 5410 0266 D3F88030 		ldr	r3, [r3, #128]
 5411              		.loc 1 2324 46
 5412 026a 154A     		ldr	r2, .L349+8
 5413 026c 1A65     		str	r2, [r3, #80]
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Abort DMA RX */
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5414              		.loc 1 2327 17
 5415 026e 7B68     		ldr	r3, [r7, #4]
 5416 0270 D3F88030 		ldr	r3, [r3, #128]
 5417 0274 1846     		mov	r0, r3
 5418 0276 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5419 027a 0346     		mov	r3, r0
 5420              		.loc 1 2327 16 discriminator 1
 5421 027c 002B     		cmp	r3, #0
 5422 027e 19D0     		beq	.L345
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5423              		.loc 1 2330 20
 5424 0280 7B68     		ldr	r3, [r7, #4]
 5425 0282 D3F88030 		ldr	r3, [r3, #128]
 5426              		.loc 1 2330 28
 5427 0286 1B6D     		ldr	r3, [r3, #80]
 5428              		.loc 1 2330 53
 5429 0288 7A68     		ldr	r2, [r7, #4]
 5430 028a D2F88020 		ldr	r2, [r2, #128]
 5431              		.loc 1 2330 15
 5432 028e 1046     		mov	r0, r2
 5433 0290 9847     		blx	r3
 5434              	.LVL4:
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5435              		.loc 1 2314 12
 5436 0292 0FE0     		b	.L345
 5437              	.L305:
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Call user error callback */
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call registered error callback*/
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->ErrorCallback(huart);
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call legacy weak error callback*/
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5438              		.loc 1 2341 13
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 160


 5439 0294 7868     		ldr	r0, [r7, #4]
 5440 0296 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5441              		.loc 1 2314 12
 5442 029a 0BE0     		b	.L345
 5443              	.L301:
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Call user error callback */
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5444              		.loc 1 2354 11
 5445 029c 7868     		ldr	r0, [r7, #4]
 5446 029e FFF7FEFF 		bl	HAL_UART_ErrorCallback
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5447              		.loc 1 2314 12
 5448 02a2 07E0     		b	.L345
 5449              	.L300:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error is notified to user through user error callback */
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered error callback*/
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCallback(huart);
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak error callback*/
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5450              		.loc 1 2367 9
 5451 02a4 7868     		ldr	r0, [r7, #4]
 5452 02a6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5453              		.loc 1 2369 26
 5454 02aa 7B68     		ldr	r3, [r7, #4]
 5455 02ac 0022     		movs	r2, #0
 5456 02ae C3F89020 		str	r2, [r3, #144]
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 5457              		.loc 1 2372 5
 5458 02b2 6FE2     		b	.L344
 5459              	.L345:
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5460              		.loc 1 2314 12
 5461 02b4 00BF     		nop
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 161


 5462              		.loc 1 2372 5
 5463 02b6 6DE2     		b	.L344
 5464              	.L350:
 5465              		.align	2
 5466              	.L349:
 5467 02b8 01000010 		.word	268435457
 5468 02bc 20010004 		.word	67109152
 5469 02c0 00000000 		.word	UART_DMAAbortOnError
 5470              	.L288:
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   } /* End if some error occurs */
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5471              		.loc 1 2378 13
 5472 02c4 7B68     		ldr	r3, [r7, #4]
 5473 02c6 DB6E     		ldr	r3, [r3, #108]
 5474              		.loc 1 2378 6
 5475 02c8 012B     		cmp	r3, #1
 5476 02ca 40F00382 		bne	.L307
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 5477              		.loc 1 2379 21
 5478 02ce D7F8E430 		ldr	r3, [r7, #228]
 5479 02d2 03F01003 		and	r3, r3, #16
 5480              		.loc 1 2379 7
 5481 02d6 002B     		cmp	r3, #0
 5482 02d8 00F0FC81 		beq	.L307
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
 5483              		.loc 1 2380 19
 5484 02dc D7F8E030 		ldr	r3, [r7, #224]
 5485 02e0 03F01003 		and	r3, r3, #16
 5486              		.loc 1 2380 7
 5487 02e4 002B     		cmp	r3, #0
 5488 02e6 00F0F581 		beq	.L307
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5489              		.loc 1 2382 5
 5490 02ea 7B68     		ldr	r3, [r7, #4]
 5491 02ec 1B68     		ldr	r3, [r3]
 5492 02ee 1022     		movs	r2, #16
 5493 02f0 1A62     		str	r2, [r3, #32]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5494              		.loc 1 2385 9
 5495 02f2 7B68     		ldr	r3, [r7, #4]
 5496 02f4 1B68     		ldr	r3, [r3]
 5497 02f6 9B68     		ldr	r3, [r3, #8]
 5498 02f8 03F04003 		and	r3, r3, #64
 5499              		.loc 1 2385 8
 5500 02fc 402B     		cmp	r3, #64
 5501 02fe 40F06D81 		bne	.L308
 5502              	.LBB724:
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* DMA mode enabled */
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 162


2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          (DMA cplt callback will be called).
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5503              		.loc 1 2391 50
 5504 0302 7B68     		ldr	r3, [r7, #4]
 5505 0304 D3F88030 		ldr	r3, [r3, #128]
 5506 0308 1B68     		ldr	r3, [r3]
 5507              		.loc 1 2391 39
 5508 030a A44A     		ldr	r2, .L351
 5509 030c 9342     		cmp	r3, r2
 5510 030e 68D0     		beq	.L309
 5511              		.loc 1 2391 50 discriminator 2
 5512 0310 7B68     		ldr	r3, [r7, #4]
 5513 0312 D3F88030 		ldr	r3, [r3, #128]
 5514 0316 1B68     		ldr	r3, [r3]
 5515 0318 A14A     		ldr	r2, .L351+4
 5516 031a 9342     		cmp	r3, r2
 5517 031c 61D0     		beq	.L309
 5518              		.loc 1 2391 50 is_stmt 0 discriminator 4
 5519 031e 7B68     		ldr	r3, [r7, #4]
 5520 0320 D3F88030 		ldr	r3, [r3, #128]
 5521 0324 1B68     		ldr	r3, [r3]
 5522 0326 9F4A     		ldr	r2, .L351+8
 5523 0328 9342     		cmp	r3, r2
 5524 032a 5AD0     		beq	.L309
 5525              		.loc 1 2391 50 discriminator 6
 5526 032c 7B68     		ldr	r3, [r7, #4]
 5527 032e D3F88030 		ldr	r3, [r3, #128]
 5528 0332 1B68     		ldr	r3, [r3]
 5529 0334 9C4A     		ldr	r2, .L351+12
 5530 0336 9342     		cmp	r3, r2
 5531 0338 53D0     		beq	.L309
 5532              		.loc 1 2391 50 discriminator 8
 5533 033a 7B68     		ldr	r3, [r7, #4]
 5534 033c D3F88030 		ldr	r3, [r3, #128]
 5535 0340 1B68     		ldr	r3, [r3]
 5536 0342 9A4A     		ldr	r2, .L351+16
 5537 0344 9342     		cmp	r3, r2
 5538 0346 4CD0     		beq	.L309
 5539              		.loc 1 2391 50 discriminator 10
 5540 0348 7B68     		ldr	r3, [r7, #4]
 5541 034a D3F88030 		ldr	r3, [r3, #128]
 5542 034e 1B68     		ldr	r3, [r3]
 5543 0350 974A     		ldr	r2, .L351+20
 5544 0352 9342     		cmp	r3, r2
 5545 0354 45D0     		beq	.L309
 5546              		.loc 1 2391 50 discriminator 12
 5547 0356 7B68     		ldr	r3, [r7, #4]
 5548 0358 D3F88030 		ldr	r3, [r3, #128]
 5549 035c 1B68     		ldr	r3, [r3]
 5550 035e 954A     		ldr	r2, .L351+24
 5551 0360 9342     		cmp	r3, r2
 5552 0362 3ED0     		beq	.L309
 5553              		.loc 1 2391 50 discriminator 14
 5554 0364 7B68     		ldr	r3, [r7, #4]
 5555 0366 D3F88030 		ldr	r3, [r3, #128]
 5556 036a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 163


 5557 036c 924A     		ldr	r2, .L351+28
 5558 036e 9342     		cmp	r3, r2
 5559 0370 37D0     		beq	.L309
 5560              		.loc 1 2391 50 discriminator 16
 5561 0372 7B68     		ldr	r3, [r7, #4]
 5562 0374 D3F88030 		ldr	r3, [r3, #128]
 5563 0378 1B68     		ldr	r3, [r3]
 5564 037a 904A     		ldr	r2, .L351+32
 5565 037c 9342     		cmp	r3, r2
 5566 037e 30D0     		beq	.L309
 5567              		.loc 1 2391 50 discriminator 18
 5568 0380 7B68     		ldr	r3, [r7, #4]
 5569 0382 D3F88030 		ldr	r3, [r3, #128]
 5570 0386 1B68     		ldr	r3, [r3]
 5571 0388 8D4A     		ldr	r2, .L351+36
 5572 038a 9342     		cmp	r3, r2
 5573 038c 29D0     		beq	.L309
 5574              		.loc 1 2391 50 discriminator 20
 5575 038e 7B68     		ldr	r3, [r7, #4]
 5576 0390 D3F88030 		ldr	r3, [r3, #128]
 5577 0394 1B68     		ldr	r3, [r3]
 5578 0396 8B4A     		ldr	r2, .L351+40
 5579 0398 9342     		cmp	r3, r2
 5580 039a 22D0     		beq	.L309
 5581              		.loc 1 2391 50 discriminator 22
 5582 039c 7B68     		ldr	r3, [r7, #4]
 5583 039e D3F88030 		ldr	r3, [r3, #128]
 5584 03a2 1B68     		ldr	r3, [r3]
 5585 03a4 884A     		ldr	r2, .L351+44
 5586 03a6 9342     		cmp	r3, r2
 5587 03a8 1BD0     		beq	.L309
 5588              		.loc 1 2391 50 discriminator 24
 5589 03aa 7B68     		ldr	r3, [r7, #4]
 5590 03ac D3F88030 		ldr	r3, [r3, #128]
 5591 03b0 1B68     		ldr	r3, [r3]
 5592 03b2 864A     		ldr	r2, .L351+48
 5593 03b4 9342     		cmp	r3, r2
 5594 03b6 14D0     		beq	.L309
 5595              		.loc 1 2391 50 discriminator 26
 5596 03b8 7B68     		ldr	r3, [r7, #4]
 5597 03ba D3F88030 		ldr	r3, [r3, #128]
 5598 03be 1B68     		ldr	r3, [r3]
 5599 03c0 834A     		ldr	r2, .L351+52
 5600 03c2 9342     		cmp	r3, r2
 5601 03c4 0DD0     		beq	.L309
 5602              		.loc 1 2391 50 discriminator 28
 5603 03c6 7B68     		ldr	r3, [r7, #4]
 5604 03c8 D3F88030 		ldr	r3, [r3, #128]
 5605 03cc 1B68     		ldr	r3, [r3]
 5606 03ce 814A     		ldr	r2, .L351+56
 5607 03d0 9342     		cmp	r3, r2
 5608 03d2 06D0     		beq	.L309
 5609              		.loc 1 2391 50 discriminator 30
 5610 03d4 7B68     		ldr	r3, [r7, #4]
 5611 03d6 D3F88030 		ldr	r3, [r3, #128]
 5612 03da 1B68     		ldr	r3, [r3]
 5613 03dc 7E4A     		ldr	r2, .L351+60
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 164


 5614 03de 9342     		cmp	r3, r2
 5615 03e0 06D1     		bne	.L310
 5616              	.L309:
 5617              		.loc 1 2391 50 discriminator 31
 5618 03e2 7B68     		ldr	r3, [r7, #4]
 5619 03e4 D3F88030 		ldr	r3, [r3, #128]
 5620 03e8 1B68     		ldr	r3, [r3]
 5621 03ea 5B68     		ldr	r3, [r3, #4]
 5622              		.loc 1 2391 39 is_stmt 1 discriminator 31
 5623 03ec 9BB2     		uxth	r3, r3
 5624              		.loc 1 2391 39 is_stmt 0
 5625 03ee 05E0     		b	.L311
 5626              	.L310:
 5627              		.loc 1 2391 50 is_stmt 1 discriminator 32
 5628 03f0 7B68     		ldr	r3, [r7, #4]
 5629 03f2 D3F88030 		ldr	r3, [r3, #128]
 5630 03f6 1B68     		ldr	r3, [r3]
 5631 03f8 5B68     		ldr	r3, [r3, #4]
 5632              		.loc 1 2391 39 discriminator 32
 5633 03fa 9BB2     		uxth	r3, r3
 5634              	.L311:
 5635              		.loc 1 2391 16 discriminator 34
 5636 03fc A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5637              		.loc 1 2392 10
 5638 0400 B7F8BE30 		ldrh	r3, [r7, #190]
 5639 0404 002B     		cmp	r3, #0
 5640 0406 00F0AD80 		beq	.L312
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5641              		.loc 1 2393 43
 5642 040a 7B68     		ldr	r3, [r7, #4]
 5643 040c B3F85C30 		ldrh	r3, [r3, #92]
 5644              		.loc 1 2393 11
 5645 0410 B7F8BE20 		ldrh	r2, [r7, #190]
 5646 0414 9A42     		cmp	r2, r3
 5647 0416 80F0A580 		bcs	.L312
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Reception is not complete */
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5648              		.loc 1 2396 28
 5649 041a 7B68     		ldr	r3, [r7, #4]
 5650 041c B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5651 0420 A3F85E20 		strh	r2, [r3, #94]	@ movhi
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5652              		.loc 1 2399 18
 5653 0424 7B68     		ldr	r3, [r7, #4]
 5654 0426 D3F88030 		ldr	r3, [r3, #128]
 5655              		.loc 1 2399 32
 5656 042a DB69     		ldr	r3, [r3, #28]
 5657              		.loc 1 2399 12
 5658 042c B3F5807F 		cmp	r3, #256
 5659 0430 00F08780 		beq	.L313
 5660              	.L316:
 5661              	.LBB725:
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 165


2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5662              		.loc 1 2402 11 discriminator 1
 5663 0434 7B68     		ldr	r3, [r7, #4]
 5664 0436 1B68     		ldr	r3, [r3]
 5665 0438 C7F88830 		str	r3, [r7, #136]
 5666              	.LBB726:
 5667              	.LBB727:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5668              		.loc 2 1155 4
 5669 043c D7F88830 		ldr	r3, [r7, #136]
 5670              		.syntax unified
 5671              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5672 0440 53E8003F 		ldrex r3, [r3]
 5673              	@ 0 "" 2
 5674              		.thumb
 5675              		.syntax unified
 5676 0444 C7F88430 		str	r3, [r7, #132]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5677              		.loc 2 1156 10
 5678 0448 D7F88430 		ldr	r3, [r7, #132]
 5679              	.LBE727:
 5680              	.LBE726:
 5681              		.loc 1 2402 11 discriminator 1
 5682 044c 23F48073 		bic	r3, r3, #256
 5683 0450 C7F8B830 		str	r3, [r7, #184]
 5684 0454 7B68     		ldr	r3, [r7, #4]
 5685 0456 1B68     		ldr	r3, [r3]
 5686 0458 1A46     		mov	r2, r3
 5687 045a D7F8B830 		ldr	r3, [r7, #184]
 5688 045e C7F89430 		str	r3, [r7, #148]
 5689 0462 C7F89020 		str	r2, [r7, #144]
 5690              	.LBB728:
 5691              	.LBB729:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5692              		.loc 2 1206 4
 5693 0466 D7F89010 		ldr	r1, [r7, #144]
 5694 046a D7F89420 		ldr	r2, [r7, #148]
 5695              		.syntax unified
 5696              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5697 046e 41E80023 		strex r3, r2, [r1]
 5698              	@ 0 "" 2
 5699              		.thumb
 5700              		.syntax unified
 5701 0472 C7F88C30 		str	r3, [r7, #140]
 5702              		.loc 2 1207 10
 5703 0476 D7F88C30 		ldr	r3, [r7, #140]
 5704              	.LBE729:
 5705              	.LBE728:
 5706              		.loc 1 2402 11 discriminator 1
 5707 047a 002B     		cmp	r3, #0
 5708 047c DAD1     		bne	.L316
 5709              	.L319:
 5710              	.LBE725:
 5711              	.LBB730:
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5712              		.loc 1 2403 11 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 166


 5713 047e 7B68     		ldr	r3, [r7, #4]
 5714 0480 1B68     		ldr	r3, [r3]
 5715 0482 0833     		adds	r3, r3, #8
 5716 0484 7B67     		str	r3, [r7, #116]
 5717              	.LBB731:
 5718              	.LBB732:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5719              		.loc 2 1155 4
 5720 0486 7B6F     		ldr	r3, [r7, #116]
 5721              		.syntax unified
 5722              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5723 0488 53E8003F 		ldrex r3, [r3]
 5724              	@ 0 "" 2
 5725              		.thumb
 5726              		.syntax unified
 5727 048c 3B67     		str	r3, [r7, #112]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5728              		.loc 2 1156 10
 5729 048e 3B6F     		ldr	r3, [r7, #112]
 5730              	.LBE732:
 5731              	.LBE731:
 5732              		.loc 1 2403 11 discriminator 1
 5733 0490 23F00103 		bic	r3, r3, #1
 5734 0494 C7F8B430 		str	r3, [r7, #180]
 5735 0498 7B68     		ldr	r3, [r7, #4]
 5736 049a 1B68     		ldr	r3, [r3]
 5737 049c 0833     		adds	r3, r3, #8
 5738 049e D7F8B420 		ldr	r2, [r7, #180]
 5739 04a2 C7F88020 		str	r2, [r7, #128]
 5740 04a6 FB67     		str	r3, [r7, #124]
 5741              	.LBB733:
 5742              	.LBB734:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5743              		.loc 2 1206 4
 5744 04a8 F96F     		ldr	r1, [r7, #124]
 5745 04aa D7F88020 		ldr	r2, [r7, #128]
 5746              		.syntax unified
 5747              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5748 04ae 41E80023 		strex r3, r2, [r1]
 5749              	@ 0 "" 2
 5750              		.thumb
 5751              		.syntax unified
 5752 04b2 BB67     		str	r3, [r7, #120]
 5753              		.loc 2 1207 10
 5754 04b4 BB6F     		ldr	r3, [r7, #120]
 5755              	.LBE734:
 5756              	.LBE733:
 5757              		.loc 1 2403 11 discriminator 1
 5758 04b6 002B     		cmp	r3, #0
 5759 04b8 E1D1     		bne	.L319
 5760              	.L322:
 5761              	.LBE730:
 5762              	.LBB735:
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the UART CR3 register */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 167


 5763              		.loc 1 2407 11 discriminator 1
 5764 04ba 7B68     		ldr	r3, [r7, #4]
 5765 04bc 1B68     		ldr	r3, [r3]
 5766 04be 0833     		adds	r3, r3, #8
 5767 04c0 3B66     		str	r3, [r7, #96]
 5768              	.LBB736:
 5769              	.LBB737:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5770              		.loc 2 1155 4
 5771 04c2 3B6E     		ldr	r3, [r7, #96]
 5772              		.syntax unified
 5773              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5774 04c4 53E8003F 		ldrex r3, [r3]
 5775              	@ 0 "" 2
 5776              		.thumb
 5777              		.syntax unified
 5778 04c8 FB65     		str	r3, [r7, #92]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5779              		.loc 2 1156 10
 5780 04ca FB6D     		ldr	r3, [r7, #92]
 5781              	.LBE737:
 5782              	.LBE736:
 5783              		.loc 1 2407 11 discriminator 1
 5784 04cc 23F04003 		bic	r3, r3, #64
 5785 04d0 C7F8B030 		str	r3, [r7, #176]
 5786 04d4 7B68     		ldr	r3, [r7, #4]
 5787 04d6 1B68     		ldr	r3, [r3]
 5788 04d8 0833     		adds	r3, r3, #8
 5789 04da D7F8B020 		ldr	r2, [r7, #176]
 5790 04de FA66     		str	r2, [r7, #108]
 5791 04e0 BB66     		str	r3, [r7, #104]
 5792              	.LBB738:
 5793              	.LBB739:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5794              		.loc 2 1206 4
 5795 04e2 B96E     		ldr	r1, [r7, #104]
 5796 04e4 FA6E     		ldr	r2, [r7, #108]
 5797              		.syntax unified
 5798              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5799 04e6 41E80023 		strex r3, r2, [r1]
 5800              	@ 0 "" 2
 5801              		.thumb
 5802              		.syntax unified
 5803 04ea 7B66     		str	r3, [r7, #100]
 5804              		.loc 2 1207 10
 5805 04ec 7B6E     		ldr	r3, [r7, #100]
 5806              	.LBE739:
 5807              	.LBE738:
 5808              		.loc 1 2407 11 discriminator 1
 5809 04ee 002B     		cmp	r3, #0
 5810 04f0 E3D1     		bne	.L322
 5811              	.LBE735:
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5812              		.loc 1 2410 26
 5813 04f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 168


 5814 04f4 2022     		movs	r2, #32
 5815 04f6 C3F88C20 		str	r2, [r3, #140]
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5816              		.loc 1 2411 32
 5817 04fa 7B68     		ldr	r3, [r7, #4]
 5818 04fc 0022     		movs	r2, #0
 5819 04fe DA66     		str	r2, [r3, #108]
 5820              	.L325:
 5821              	.LBB740:
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5822              		.loc 1 2413 11 discriminator 1
 5823 0500 7B68     		ldr	r3, [r7, #4]
 5824 0502 1B68     		ldr	r3, [r3]
 5825 0504 FB64     		str	r3, [r7, #76]
 5826              	.LBB741:
 5827              	.LBB742:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5828              		.loc 2 1155 4
 5829 0506 FB6C     		ldr	r3, [r7, #76]
 5830              		.syntax unified
 5831              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5832 0508 53E8003F 		ldrex r3, [r3]
 5833              	@ 0 "" 2
 5834              		.thumb
 5835              		.syntax unified
 5836 050c BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5837              		.loc 2 1156 10
 5838 050e BB6C     		ldr	r3, [r7, #72]
 5839              	.LBE742:
 5840              	.LBE741:
 5841              		.loc 1 2413 11 discriminator 1
 5842 0510 23F01003 		bic	r3, r3, #16
 5843 0514 C7F8AC30 		str	r3, [r7, #172]
 5844 0518 7B68     		ldr	r3, [r7, #4]
 5845 051a 1B68     		ldr	r3, [r3]
 5846 051c 1A46     		mov	r2, r3
 5847 051e D7F8AC30 		ldr	r3, [r7, #172]
 5848 0522 BB65     		str	r3, [r7, #88]
 5849 0524 7A65     		str	r2, [r7, #84]
 5850              	.LBB743:
 5851              	.LBB744:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5852              		.loc 2 1206 4
 5853 0526 796D     		ldr	r1, [r7, #84]
 5854 0528 BA6D     		ldr	r2, [r7, #88]
 5855              		.syntax unified
 5856              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5857 052a 41E80023 		strex r3, r2, [r1]
 5858              	@ 0 "" 2
 5859              		.thumb
 5860              		.syntax unified
 5861 052e 3B65     		str	r3, [r7, #80]
 5862              		.loc 2 1207 10
 5863 0530 3B6D     		ldr	r3, [r7, #80]
 5864              	.LBE744:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 169


 5865              	.LBE743:
 5866              		.loc 1 2413 11 discriminator 1
 5867 0532 002B     		cmp	r3, #0
 5868 0534 E4D1     		bne	.L325
 5869              	.LBE740:
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5870              		.loc 1 2416 17
 5871 0536 7B68     		ldr	r3, [r7, #4]
 5872 0538 D3F88030 		ldr	r3, [r3, #128]
 5873 053c 1846     		mov	r0, r3
 5874 053e FFF7FEFF 		bl	HAL_DMA_Abort
 5875              	.L313:
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5876              		.loc 1 2421 28
 5877 0542 7B68     		ldr	r3, [r7, #4]
 5878 0544 0222     		movs	r2, #2
 5879 0546 1A67     		str	r2, [r3, #112]
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5880              		.loc 1 2428 49
 5881 0548 7B68     		ldr	r3, [r7, #4]
 5882 054a B3F85C20 		ldrh	r2, [r3, #92]
 5883              		.loc 1 2428 69
 5884 054e 7B68     		ldr	r3, [r7, #4]
 5885 0550 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 5886 0554 9BB2     		uxth	r3, r3
 5887              		.loc 1 2428 9
 5888 0556 D31A     		subs	r3, r2, r3
 5889 0558 9BB2     		uxth	r3, r3
 5890 055a 1946     		mov	r1, r3
 5891 055c 7868     		ldr	r0, [r7, #4]
 5892 055e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* If DMA is in Circular mode, Idle event is to be reported to user
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            even if occurring after a Transfer Complete event from DMA */
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (nb_remaining_rx_data == huart->RxXferSize)
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                In this case, Rx Event type is Idle Event */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 170


2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call registered Rx Event callback*/
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->RxEventCallback(huart, huart->RxXferSize);
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /*Call legacy weak Rx Event callback*/
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 5893              		.loc 1 2453 7
 5894 0562 19E1     		b	.L346
 5895              	.L312:
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5896              		.loc 1 2435 42
 5897 0564 7B68     		ldr	r3, [r7, #4]
 5898 0566 B3F85C30 		ldrh	r3, [r3, #92]
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 5899              		.loc 1 2435 12
 5900 056a B7F8BE20 		ldrh	r2, [r7, #190]
 5901 056e 9A42     		cmp	r2, r3
 5902 0570 40F01281 		bne	.L346
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 5903              		.loc 1 2437 20
 5904 0574 7B68     		ldr	r3, [r7, #4]
 5905 0576 D3F88030 		ldr	r3, [r3, #128]
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 5906              		.loc 1 2437 34
 5907 057a DB69     		ldr	r3, [r3, #28]
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 5908              		.loc 1 2437 14
 5909 057c B3F5807F 		cmp	r3, #256
 5910 0580 40F00A81 		bne	.L346
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5911              		.loc 1 2441 32
 5912 0584 7B68     		ldr	r3, [r7, #4]
 5913 0586 0222     		movs	r2, #2
 5914 0588 1A67     		str	r2, [r3, #112]
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5915              		.loc 1 2448 13
 5916 058a 7B68     		ldr	r3, [r7, #4]
 5917 058c B3F85C30 		ldrh	r3, [r3, #92]
 5918 0590 1946     		mov	r1, r3
 5919 0592 7868     		ldr	r0, [r7, #4]
 5920 0594 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5921              		.loc 1 2453 7
 5922 0598 FEE0     		b	.L346
 5923              	.L352:
 5924 059a 00BF     		.align	2
 5925              	.L351:
 5926 059c 10000240 		.word	1073872912
 5927 05a0 28000240 		.word	1073872936
 5928 05a4 40000240 		.word	1073872960
 5929 05a8 58000240 		.word	1073872984
 5930 05ac 70000240 		.word	1073873008
 5931 05b0 88000240 		.word	1073873032
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 171


 5932 05b4 A0000240 		.word	1073873056
 5933 05b8 B8000240 		.word	1073873080
 5934 05bc 10040240 		.word	1073873936
 5935 05c0 28040240 		.word	1073873960
 5936 05c4 40040240 		.word	1073873984
 5937 05c8 58040240 		.word	1073874008
 5938 05cc 70040240 		.word	1073874032
 5939 05d0 88040240 		.word	1073874056
 5940 05d4 A0040240 		.word	1073874080
 5941 05d8 B8040240 		.word	1073874104
 5942              	.L308:
 5943              	.LBE724:
 5944              	.LBB745:
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* DMA mode not enabled */
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5945              		.loc 1 2460 34
 5946 05dc 7B68     		ldr	r3, [r7, #4]
 5947 05de B3F85C20 		ldrh	r2, [r3, #92]
 5948              		.loc 1 2460 54
 5949 05e2 7B68     		ldr	r3, [r7, #4]
 5950 05e4 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 5951 05e8 9BB2     		uxth	r3, r3
 5952              		.loc 1 2460 16
 5953 05ea D31A     		subs	r3, r2, r3
 5954 05ec A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5955              		.loc 1 2461 17
 5956 05f0 7B68     		ldr	r3, [r7, #4]
 5957 05f2 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 5958 05f6 9BB2     		uxth	r3, r3
 5959              		.loc 1 2461 10
 5960 05f8 002B     		cmp	r3, #0
 5961 05fa 00F0CF80 		beq	.L347
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5962              		.loc 1 2462 11
 5963 05fe B7F8CE30 		ldrh	r3, [r7, #206]
 5964 0602 002B     		cmp	r3, #0
 5965 0604 00F0CA80 		beq	.L347
 5966              	.L330:
 5967              	.LBB746:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 5968              		.loc 1 2465 9 discriminator 1
 5969 0608 7B68     		ldr	r3, [r7, #4]
 5970 060a 1B68     		ldr	r3, [r3]
 5971 060c BB63     		str	r3, [r7, #56]
 5972              	.LBB747:
 5973              	.LBB748:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5974              		.loc 2 1155 4
 5975 060e BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 172


 5976              		.syntax unified
 5977              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5978 0610 53E8003F 		ldrex r3, [r3]
 5979              	@ 0 "" 2
 5980              		.thumb
 5981              		.syntax unified
 5982 0614 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5983              		.loc 2 1156 10
 5984 0616 7B6B     		ldr	r3, [r7, #52]
 5985              	.LBE748:
 5986              	.LBE747:
 5987              		.loc 1 2465 9 discriminator 1
 5988 0618 23F49073 		bic	r3, r3, #288
 5989 061c C7F8C830 		str	r3, [r7, #200]
 5990 0620 7B68     		ldr	r3, [r7, #4]
 5991 0622 1B68     		ldr	r3, [r3]
 5992 0624 1A46     		mov	r2, r3
 5993 0626 D7F8C830 		ldr	r3, [r7, #200]
 5994 062a 7B64     		str	r3, [r7, #68]
 5995 062c 3A64     		str	r2, [r7, #64]
 5996              	.LBB749:
 5997              	.LBB750:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5998              		.loc 2 1206 4
 5999 062e 396C     		ldr	r1, [r7, #64]
 6000 0630 7A6C     		ldr	r2, [r7, #68]
 6001              		.syntax unified
 6002              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6003 0632 41E80023 		strex r3, r2, [r1]
 6004              	@ 0 "" 2
 6005              		.thumb
 6006              		.syntax unified
 6007 0636 FB63     		str	r3, [r7, #60]
 6008              		.loc 2 1207 10
 6009 0638 FB6B     		ldr	r3, [r7, #60]
 6010              	.LBE750:
 6011              	.LBE749:
 6012              		.loc 1 2465 9 discriminator 1
 6013 063a 002B     		cmp	r3, #0
 6014 063c E4D1     		bne	.L330
 6015              	.L333:
 6016              	.LBE746:
 6017              	.LBB751:
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 6018              		.loc 1 2468 9 discriminator 1
 6019 063e 7B68     		ldr	r3, [r7, #4]
 6020 0640 1B68     		ldr	r3, [r3]
 6021 0642 0833     		adds	r3, r3, #8
 6022 0644 7B62     		str	r3, [r7, #36]
 6023              	.LBB752:
 6024              	.LBB753:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6025              		.loc 2 1155 4
 6026 0646 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 173


 6027              		.syntax unified
 6028              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6029 0648 53E8003F 		ldrex r3, [r3]
 6030              	@ 0 "" 2
 6031              		.thumb
 6032              		.syntax unified
 6033 064c 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6034              		.loc 2 1156 10
 6035 064e 3A6A     		ldr	r2, [r7, #32]
 6036              	.LBE753:
 6037              	.LBE752:
 6038              		.loc 1 2468 9 discriminator 1
 6039 0650 554B     		ldr	r3, .L353
 6040 0652 1340     		ands	r3, r3, r2
 6041 0654 C7F8C430 		str	r3, [r7, #196]
 6042 0658 7B68     		ldr	r3, [r7, #4]
 6043 065a 1B68     		ldr	r3, [r3]
 6044 065c 0833     		adds	r3, r3, #8
 6045 065e D7F8C420 		ldr	r2, [r7, #196]
 6046 0662 3A63     		str	r2, [r7, #48]
 6047 0664 FB62     		str	r3, [r7, #44]
 6048              	.LBB754:
 6049              	.LBB755:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6050              		.loc 2 1206 4
 6051 0666 F96A     		ldr	r1, [r7, #44]
 6052 0668 3A6B     		ldr	r2, [r7, #48]
 6053              		.syntax unified
 6054              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6055 066a 41E80023 		strex r3, r2, [r1]
 6056              	@ 0 "" 2
 6057              		.thumb
 6058              		.syntax unified
 6059 066e BB62     		str	r3, [r7, #40]
 6060              		.loc 2 1207 10
 6061 0670 BB6A     		ldr	r3, [r7, #40]
 6062              	.LBE755:
 6063              	.LBE754:
 6064              		.loc 1 2468 9 discriminator 1
 6065 0672 002B     		cmp	r3, #0
 6066 0674 E3D1     		bne	.L333
 6067              	.LBE751:
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6068              		.loc 1 2471 24
 6069 0676 7B68     		ldr	r3, [r7, #4]
 6070 0678 2022     		movs	r2, #32
 6071 067a C3F88C20 		str	r2, [r3, #140]
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6072              		.loc 1 2472 30
 6073 067e 7B68     		ldr	r3, [r7, #4]
 6074 0680 0022     		movs	r2, #0
 6075 0682 DA66     		str	r2, [r3, #108]
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 174


2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 6076              		.loc 1 2475 22
 6077 0684 7B68     		ldr	r3, [r7, #4]
 6078 0686 0022     		movs	r2, #0
 6079 0688 5A67     		str	r2, [r3, #116]
 6080              	.L336:
 6081              	.LBB756:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6082              		.loc 1 2477 9 discriminator 1
 6083 068a 7B68     		ldr	r3, [r7, #4]
 6084 068c 1B68     		ldr	r3, [r3]
 6085 068e 3B61     		str	r3, [r7, #16]
 6086              	.LBB757:
 6087              	.LBB758:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6088              		.loc 2 1155 4
 6089 0690 3B69     		ldr	r3, [r7, #16]
 6090              		.syntax unified
 6091              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6092 0692 53E8003F 		ldrex r3, [r3]
 6093              	@ 0 "" 2
 6094              		.thumb
 6095              		.syntax unified
 6096 0696 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6097              		.loc 2 1156 10
 6098 0698 FB68     		ldr	r3, [r7, #12]
 6099              	.LBE758:
 6100              	.LBE757:
 6101              		.loc 1 2477 9 discriminator 1
 6102 069a 23F01003 		bic	r3, r3, #16
 6103 069e C7F8C030 		str	r3, [r7, #192]
 6104 06a2 7B68     		ldr	r3, [r7, #4]
 6105 06a4 1B68     		ldr	r3, [r3]
 6106 06a6 1A46     		mov	r2, r3
 6107 06a8 D7F8C030 		ldr	r3, [r7, #192]
 6108 06ac FB61     		str	r3, [r7, #28]
 6109 06ae BA61     		str	r2, [r7, #24]
 6110              	.LBB759:
 6111              	.LBB760:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6112              		.loc 2 1206 4
 6113 06b0 B969     		ldr	r1, [r7, #24]
 6114 06b2 FA69     		ldr	r2, [r7, #28]
 6115              		.syntax unified
 6116              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6117 06b4 41E80023 		strex r3, r2, [r1]
 6118              	@ 0 "" 2
 6119              		.thumb
 6120              		.syntax unified
 6121 06b8 7B61     		str	r3, [r7, #20]
 6122              		.loc 2 1207 10
 6123 06ba 7B69     		ldr	r3, [r7, #20]
 6124              	.LBE760:
 6125              	.LBE759:
 6126              		.loc 1 2477 9 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 175


 6127 06bc 002B     		cmp	r3, #0
 6128 06be E4D1     		bne	.L336
 6129              	.LBE756:
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 6130              		.loc 1 2481 28
 6131 06c0 7B68     		ldr	r3, [r7, #4]
 6132 06c2 0222     		movs	r2, #2
 6133 06c4 1A67     		str	r2, [r3, #112]
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 6134              		.loc 1 2488 9
 6135 06c6 B7F8CE30 		ldrh	r3, [r7, #206]
 6136 06ca 1946     		mov	r1, r3
 6137 06cc 7868     		ldr	r0, [r7, #4]
 6138 06ce FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 6139              		.loc 1 2491 7
 6140 06d2 63E0     		b	.L347
 6141              	.L307:
 6142              	.LBE745:
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 6143              		.loc 1 2496 18
 6144 06d4 D7F8E430 		ldr	r3, [r7, #228]
 6145 06d8 03F48013 		and	r3, r3, #1048576
 6146              		.loc 1 2496 6
 6147 06dc 002B     		cmp	r3, #0
 6148 06de 0ED0     		beq	.L337
 6149              		.loc 1 2496 54 discriminator 1
 6150 06e0 D7F8DC30 		ldr	r3, [r7, #220]
 6151 06e4 03F48003 		and	r3, r3, #4194304
 6152              		.loc 1 2496 42 discriminator 1
 6153 06e8 002B     		cmp	r3, #0
 6154 06ea 08D0     		beq	.L337
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 6155              		.loc 1 2498 5
 6156 06ec 7B68     		ldr	r3, [r7, #4]
 6157 06ee 1B68     		ldr	r3, [r3]
 6158 06f0 4FF48012 		mov	r2, #1048576
 6159 06f4 1A62     		str	r2, [r3, #32]
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 176


2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->WakeupCallback(huart);
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 6160              		.loc 1 2508 5
 6161 06f6 7868     		ldr	r0, [r7, #4]
 6162 06f8 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 6163              		.loc 1 2510 5
 6164 06fc 51E0     		b	.L283
 6165              	.L337:
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 6166              		.loc 1 2514 18
 6167 06fe D7F8E430 		ldr	r3, [r7, #228]
 6168 0702 03F08003 		and	r3, r3, #128
 6169              		.loc 1 2514 6
 6170 0706 002B     		cmp	r3, #0
 6171 0708 14D0     		beq	.L338
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 6172              		.loc 1 2515 20
 6173 070a D7F8E030 		ldr	r3, [r7, #224]
 6174 070e 03F08003 		and	r3, r3, #128
 6175              		.loc 1 2515 7
 6176 0712 002B     		cmp	r3, #0
 6177 0714 05D1     		bne	.L339
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 6178              		.loc 1 2516 23
 6179 0716 D7F8DC30 		ldr	r3, [r7, #220]
 6180 071a 03F40003 		and	r3, r3, #8388608
 6181              		.loc 1 2516 11
 6182 071e 002B     		cmp	r3, #0
 6183 0720 08D0     		beq	.L338
 6184              	.L339:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxISR != NULL)
 6185              		.loc 1 2518 14
 6186 0722 7B68     		ldr	r3, [r7, #4]
 6187 0724 9B6F     		ldr	r3, [r3, #120]
 6188              		.loc 1 2518 8
 6189 0726 002B     		cmp	r3, #0
 6190 0728 3AD0     		beq	.L348
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxISR(huart);
 6191              		.loc 1 2520 12
 6192 072a 7B68     		ldr	r3, [r7, #4]
 6193 072c 9B6F     		ldr	r3, [r3, #120]
 6194              		.loc 1 2520 7
 6195 072e 7868     		ldr	r0, [r7, #4]
 6196 0730 9847     		blx	r3
 6197              	.LVL5:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 177


2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 6198              		.loc 1 2522 5
 6199 0732 35E0     		b	.L348
 6200              	.L338:
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 6201              		.loc 1 2526 18
 6202 0734 D7F8E430 		ldr	r3, [r7, #228]
 6203 0738 03F04003 		and	r3, r3, #64
 6204              		.loc 1 2526 6
 6205 073c 002B     		cmp	r3, #0
 6206 073e 09D0     		beq	.L341
 6207              		.loc 1 2526 53 discriminator 1
 6208 0740 D7F8E030 		ldr	r3, [r7, #224]
 6209 0744 03F04003 		and	r3, r3, #64
 6210              		.loc 1 2526 41 discriminator 1
 6211 0748 002B     		cmp	r3, #0
 6212 074a 03D0     		beq	.L341
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6213              		.loc 1 2528 5
 6214 074c 7868     		ldr	r0, [r7, #4]
 6215 074e FFF7FEFF 		bl	UART_EndTransmit_IT
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 6216              		.loc 1 2529 5
 6217 0752 26E0     		b	.L283
 6218              	.L341:
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 6219              		.loc 1 2533 18
 6220 0754 D7F8E430 		ldr	r3, [r7, #228]
 6221 0758 03F40003 		and	r3, r3, #8388608
 6222              		.loc 1 2533 6
 6223 075c 002B     		cmp	r3, #0
 6224 075e 09D0     		beq	.L342
 6225              		.loc 1 2533 55 discriminator 1
 6226 0760 D7F8E030 		ldr	r3, [r7, #224]
 6227 0764 03F08043 		and	r3, r3, #1073741824
 6228              		.loc 1 2533 43 discriminator 1
 6229 0768 002B     		cmp	r3, #0
 6230 076a 03D0     		beq	.L342
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
 6231              		.loc 1 2540 5
 6232 076c 7868     		ldr	r0, [r7, #4]
 6233 076e FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 178


2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 6234              		.loc 1 2542 5
 6235 0772 16E0     		b	.L283
 6236              	.L342:
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 6237              		.loc 1 2546 18
 6238 0774 D7F8E430 		ldr	r3, [r7, #228]
 6239 0778 03F08073 		and	r3, r3, #16777216
 6240              		.loc 1 2546 6
 6241 077c 002B     		cmp	r3, #0
 6242 077e 10D0     		beq	.L283
 6243              		.loc 1 2546 75 discriminator 1
 6244 0780 D7F8E030 		ldr	r3, [r7, #224]
 6245              		.loc 1 2546 43 discriminator 1
 6246 0784 002B     		cmp	r3, #0
 6247 0786 0CDA     		bge	.L283
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
 6248              		.loc 1 2553 5
 6249 0788 7868     		ldr	r0, [r7, #4]
 6250 078a FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 6251              		.loc 1 2555 5
 6252 078e 08E0     		b	.L283
 6253              	.L343:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 6254              		.loc 1 2234 7
 6255 0790 00BF     		nop
 6256 0792 06E0     		b	.L283
 6257              	.L344:
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 6258              		.loc 1 2372 5
 6259 0794 00BF     		nop
 6260 0796 04E0     		b	.L283
 6261              	.L346:
 6262              	.LBB761:
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 6263              		.loc 1 2453 7
 6264 0798 00BF     		nop
 6265 079a 02E0     		b	.L283
 6266              	.L347:
 6267              	.LBE761:
 6268              	.LBB762:
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 6269              		.loc 1 2491 7
 6270 079c 00BF     		nop
 6271 079e 00E0     		b	.L283
 6272              	.L348:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 179


 6273              	.LBE762:
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 6274              		.loc 1 2522 5
 6275 07a0 00BF     		nop
 6276              	.L283:
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6277              		.loc 1 2557 1
 6278 07a2 E837     		adds	r7, r7, #232
 6279              	.LCFI118:
 6280              		.cfi_def_cfa_offset 8
 6281 07a4 BD46     		mov	sp, r7
 6282              	.LCFI119:
 6283              		.cfi_def_cfa_register 13
 6284              		@ sp needed
 6285 07a6 80BD     		pop	{r7, pc}
 6286              	.L354:
 6287              		.align	2
 6288              	.L353:
 6289 07a8 FEFFFFEF 		.word	-268435458
 6290              		.cfi_endproc
 6291              	.LFE166:
 6293              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6294              		.align	1
 6295              		.weak	HAL_UART_TxCpltCallback
 6296              		.syntax unified
 6297              		.thumb
 6298              		.thumb_func
 6300              	HAL_UART_TxCpltCallback:
 6301              	.LFB167:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6302              		.loc 1 2565 1
 6303              		.cfi_startproc
 6304              		@ args = 0, pretend = 0, frame = 8
 6305              		@ frame_needed = 1, uses_anonymous_args = 0
 6306              		@ link register save eliminated.
 6307 0000 80B4     		push	{r7}
 6308              	.LCFI120:
 6309              		.cfi_def_cfa_offset 4
 6310              		.cfi_offset 7, -4
 6311 0002 83B0     		sub	sp, sp, #12
 6312              	.LCFI121:
 6313              		.cfi_def_cfa_offset 16
 6314 0004 00AF     		add	r7, sp, #0
 6315              	.LCFI122:
 6316              		.cfi_def_cfa_register 7
 6317 0006 7860     		str	r0, [r7, #4]
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 180


2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6318              		.loc 1 2572 1
 6319 0008 00BF     		nop
 6320 000a 0C37     		adds	r7, r7, #12
 6321              	.LCFI123:
 6322              		.cfi_def_cfa_offset 4
 6323 000c BD46     		mov	sp, r7
 6324              	.LCFI124:
 6325              		.cfi_def_cfa_register 13
 6326              		@ sp needed
 6327 000e 5DF8047B 		ldr	r7, [sp], #4
 6328              	.LCFI125:
 6329              		.cfi_restore 7
 6330              		.cfi_def_cfa_offset 0
 6331 0012 7047     		bx	lr
 6332              		.cfi_endproc
 6333              	.LFE167:
 6335              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6336              		.align	1
 6337              		.weak	HAL_UART_TxHalfCpltCallback
 6338              		.syntax unified
 6339              		.thumb
 6340              		.thumb_func
 6342              	HAL_UART_TxHalfCpltCallback:
 6343              	.LFB168:
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6344              		.loc 1 2580 1
 6345              		.cfi_startproc
 6346              		@ args = 0, pretend = 0, frame = 8
 6347              		@ frame_needed = 1, uses_anonymous_args = 0
 6348              		@ link register save eliminated.
 6349 0000 80B4     		push	{r7}
 6350              	.LCFI126:
 6351              		.cfi_def_cfa_offset 4
 6352              		.cfi_offset 7, -4
 6353 0002 83B0     		sub	sp, sp, #12
 6354              	.LCFI127:
 6355              		.cfi_def_cfa_offset 16
 6356 0004 00AF     		add	r7, sp, #0
 6357              	.LCFI128:
 6358              		.cfi_def_cfa_register 7
 6359 0006 7860     		str	r0, [r7, #4]
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 181


2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6360              		.loc 1 2587 1
 6361 0008 00BF     		nop
 6362 000a 0C37     		adds	r7, r7, #12
 6363              	.LCFI129:
 6364              		.cfi_def_cfa_offset 4
 6365 000c BD46     		mov	sp, r7
 6366              	.LCFI130:
 6367              		.cfi_def_cfa_register 13
 6368              		@ sp needed
 6369 000e 5DF8047B 		ldr	r7, [sp], #4
 6370              	.LCFI131:
 6371              		.cfi_restore 7
 6372              		.cfi_def_cfa_offset 0
 6373 0012 7047     		bx	lr
 6374              		.cfi_endproc
 6375              	.LFE168:
 6377              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6378              		.align	1
 6379              		.weak	HAL_UART_RxCpltCallback
 6380              		.syntax unified
 6381              		.thumb
 6382              		.thumb_func
 6384              	HAL_UART_RxCpltCallback:
 6385              	.LFB169:
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6386              		.loc 1 2595 1
 6387              		.cfi_startproc
 6388              		@ args = 0, pretend = 0, frame = 8
 6389              		@ frame_needed = 1, uses_anonymous_args = 0
 6390              		@ link register save eliminated.
 6391 0000 80B4     		push	{r7}
 6392              	.LCFI132:
 6393              		.cfi_def_cfa_offset 4
 6394              		.cfi_offset 7, -4
 6395 0002 83B0     		sub	sp, sp, #12
 6396              	.LCFI133:
 6397              		.cfi_def_cfa_offset 16
 6398 0004 00AF     		add	r7, sp, #0
 6399              	.LCFI134:
 6400              		.cfi_def_cfa_register 7
 6401 0006 7860     		str	r0, [r7, #4]
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 182


 6402              		.loc 1 2602 1
 6403 0008 00BF     		nop
 6404 000a 0C37     		adds	r7, r7, #12
 6405              	.LCFI135:
 6406              		.cfi_def_cfa_offset 4
 6407 000c BD46     		mov	sp, r7
 6408              	.LCFI136:
 6409              		.cfi_def_cfa_register 13
 6410              		@ sp needed
 6411 000e 5DF8047B 		ldr	r7, [sp], #4
 6412              	.LCFI137:
 6413              		.cfi_restore 7
 6414              		.cfi_def_cfa_offset 0
 6415 0012 7047     		bx	lr
 6416              		.cfi_endproc
 6417              	.LFE169:
 6419              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6420              		.align	1
 6421              		.weak	HAL_UART_RxHalfCpltCallback
 6422              		.syntax unified
 6423              		.thumb
 6424              		.thumb_func
 6426              	HAL_UART_RxHalfCpltCallback:
 6427              	.LFB170:
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6428              		.loc 1 2610 1
 6429              		.cfi_startproc
 6430              		@ args = 0, pretend = 0, frame = 8
 6431              		@ frame_needed = 1, uses_anonymous_args = 0
 6432              		@ link register save eliminated.
 6433 0000 80B4     		push	{r7}
 6434              	.LCFI138:
 6435              		.cfi_def_cfa_offset 4
 6436              		.cfi_offset 7, -4
 6437 0002 83B0     		sub	sp, sp, #12
 6438              	.LCFI139:
 6439              		.cfi_def_cfa_offset 16
 6440 0004 00AF     		add	r7, sp, #0
 6441              	.LCFI140:
 6442              		.cfi_def_cfa_register 7
 6443 0006 7860     		str	r0, [r7, #4]
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6444              		.loc 1 2617 1
 6445 0008 00BF     		nop
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 183


 6446 000a 0C37     		adds	r7, r7, #12
 6447              	.LCFI141:
 6448              		.cfi_def_cfa_offset 4
 6449 000c BD46     		mov	sp, r7
 6450              	.LCFI142:
 6451              		.cfi_def_cfa_register 13
 6452              		@ sp needed
 6453 000e 5DF8047B 		ldr	r7, [sp], #4
 6454              	.LCFI143:
 6455              		.cfi_restore 7
 6456              		.cfi_def_cfa_offset 0
 6457 0012 7047     		bx	lr
 6458              		.cfi_endproc
 6459              	.LFE170:
 6461              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6462              		.align	1
 6463              		.weak	HAL_UART_ErrorCallback
 6464              		.syntax unified
 6465              		.thumb
 6466              		.thumb_func
 6468              	HAL_UART_ErrorCallback:
 6469              	.LFB171:
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART error callback.
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6470              		.loc 1 2625 1
 6471              		.cfi_startproc
 6472              		@ args = 0, pretend = 0, frame = 8
 6473              		@ frame_needed = 1, uses_anonymous_args = 0
 6474              		@ link register save eliminated.
 6475 0000 80B4     		push	{r7}
 6476              	.LCFI144:
 6477              		.cfi_def_cfa_offset 4
 6478              		.cfi_offset 7, -4
 6479 0002 83B0     		sub	sp, sp, #12
 6480              	.LCFI145:
 6481              		.cfi_def_cfa_offset 16
 6482 0004 00AF     		add	r7, sp, #0
 6483              	.LCFI146:
 6484              		.cfi_def_cfa_register 7
 6485 0006 7860     		str	r0, [r7, #4]
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6486              		.loc 1 2632 1
 6487 0008 00BF     		nop
 6488 000a 0C37     		adds	r7, r7, #12
 6489              	.LCFI147:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 184


 6490              		.cfi_def_cfa_offset 4
 6491 000c BD46     		mov	sp, r7
 6492              	.LCFI148:
 6493              		.cfi_def_cfa_register 13
 6494              		@ sp needed
 6495 000e 5DF8047B 		ldr	r7, [sp], #4
 6496              	.LCFI149:
 6497              		.cfi_restore 7
 6498              		.cfi_def_cfa_offset 0
 6499 0012 7047     		bx	lr
 6500              		.cfi_endproc
 6501              	.LFE171:
 6503              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6504              		.align	1
 6505              		.weak	HAL_UART_AbortCpltCallback
 6506              		.syntax unified
 6507              		.thumb
 6508              		.thumb_func
 6510              	HAL_UART_AbortCpltCallback:
 6511              	.LFB172:
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6512              		.loc 1 2640 1
 6513              		.cfi_startproc
 6514              		@ args = 0, pretend = 0, frame = 8
 6515              		@ frame_needed = 1, uses_anonymous_args = 0
 6516              		@ link register save eliminated.
 6517 0000 80B4     		push	{r7}
 6518              	.LCFI150:
 6519              		.cfi_def_cfa_offset 4
 6520              		.cfi_offset 7, -4
 6521 0002 83B0     		sub	sp, sp, #12
 6522              	.LCFI151:
 6523              		.cfi_def_cfa_offset 16
 6524 0004 00AF     		add	r7, sp, #0
 6525              	.LCFI152:
 6526              		.cfi_def_cfa_register 7
 6527 0006 7860     		str	r0, [r7, #4]
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6528              		.loc 1 2647 1
 6529 0008 00BF     		nop
 6530 000a 0C37     		adds	r7, r7, #12
 6531              	.LCFI153:
 6532              		.cfi_def_cfa_offset 4
 6533 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 185


 6534              	.LCFI154:
 6535              		.cfi_def_cfa_register 13
 6536              		@ sp needed
 6537 000e 5DF8047B 		ldr	r7, [sp], #4
 6538              	.LCFI155:
 6539              		.cfi_restore 7
 6540              		.cfi_def_cfa_offset 0
 6541 0012 7047     		bx	lr
 6542              		.cfi_endproc
 6543              	.LFE172:
 6545              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6546              		.align	1
 6547              		.weak	HAL_UART_AbortTransmitCpltCallback
 6548              		.syntax unified
 6549              		.thumb
 6550              		.thumb_func
 6552              	HAL_UART_AbortTransmitCpltCallback:
 6553              	.LFB173:
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6554              		.loc 1 2655 1
 6555              		.cfi_startproc
 6556              		@ args = 0, pretend = 0, frame = 8
 6557              		@ frame_needed = 1, uses_anonymous_args = 0
 6558              		@ link register save eliminated.
 6559 0000 80B4     		push	{r7}
 6560              	.LCFI156:
 6561              		.cfi_def_cfa_offset 4
 6562              		.cfi_offset 7, -4
 6563 0002 83B0     		sub	sp, sp, #12
 6564              	.LCFI157:
 6565              		.cfi_def_cfa_offset 16
 6566 0004 00AF     		add	r7, sp, #0
 6567              	.LCFI158:
 6568              		.cfi_def_cfa_register 7
 6569 0006 7860     		str	r0, [r7, #4]
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6570              		.loc 1 2662 1
 6571 0008 00BF     		nop
 6572 000a 0C37     		adds	r7, r7, #12
 6573              	.LCFI159:
 6574              		.cfi_def_cfa_offset 4
 6575 000c BD46     		mov	sp, r7
 6576              	.LCFI160:
 6577              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 186


 6578              		@ sp needed
 6579 000e 5DF8047B 		ldr	r7, [sp], #4
 6580              	.LCFI161:
 6581              		.cfi_restore 7
 6582              		.cfi_def_cfa_offset 0
 6583 0012 7047     		bx	lr
 6584              		.cfi_endproc
 6585              	.LFE173:
 6587              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6588              		.align	1
 6589              		.weak	HAL_UART_AbortReceiveCpltCallback
 6590              		.syntax unified
 6591              		.thumb
 6592              		.thumb_func
 6594              	HAL_UART_AbortReceiveCpltCallback:
 6595              	.LFB174:
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6596              		.loc 1 2670 1
 6597              		.cfi_startproc
 6598              		@ args = 0, pretend = 0, frame = 8
 6599              		@ frame_needed = 1, uses_anonymous_args = 0
 6600              		@ link register save eliminated.
 6601 0000 80B4     		push	{r7}
 6602              	.LCFI162:
 6603              		.cfi_def_cfa_offset 4
 6604              		.cfi_offset 7, -4
 6605 0002 83B0     		sub	sp, sp, #12
 6606              	.LCFI163:
 6607              		.cfi_def_cfa_offset 16
 6608 0004 00AF     		add	r7, sp, #0
 6609              	.LCFI164:
 6610              		.cfi_def_cfa_register 7
 6611 0006 7860     		str	r0, [r7, #4]
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6612              		.loc 1 2677 1
 6613 0008 00BF     		nop
 6614 000a 0C37     		adds	r7, r7, #12
 6615              	.LCFI165:
 6616              		.cfi_def_cfa_offset 4
 6617 000c BD46     		mov	sp, r7
 6618              	.LCFI166:
 6619              		.cfi_def_cfa_register 13
 6620              		@ sp needed
 6621 000e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 187


 6622              	.LCFI167:
 6623              		.cfi_restore 7
 6624              		.cfi_def_cfa_offset 0
 6625 0012 7047     		bx	lr
 6626              		.cfi_endproc
 6627              	.LFE174:
 6629              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6630              		.align	1
 6631              		.weak	HAL_UARTEx_RxEventCallback
 6632              		.syntax unified
 6633              		.thumb
 6634              		.thumb_func
 6636              	HAL_UARTEx_RxEventCallback:
 6637              	.LFB175:
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               reception buffer until which, data are available)
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6638              		.loc 1 2687 1
 6639              		.cfi_startproc
 6640              		@ args = 0, pretend = 0, frame = 8
 6641              		@ frame_needed = 1, uses_anonymous_args = 0
 6642              		@ link register save eliminated.
 6643 0000 80B4     		push	{r7}
 6644              	.LCFI168:
 6645              		.cfi_def_cfa_offset 4
 6646              		.cfi_offset 7, -4
 6647 0002 83B0     		sub	sp, sp, #12
 6648              	.LCFI169:
 6649              		.cfi_def_cfa_offset 16
 6650 0004 00AF     		add	r7, sp, #0
 6651              	.LCFI170:
 6652              		.cfi_def_cfa_register 7
 6653 0006 7860     		str	r0, [r7, #4]
 6654 0008 0B46     		mov	r3, r1
 6655 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(Size);
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6656              		.loc 1 2695 1
 6657 000c 00BF     		nop
 6658 000e 0C37     		adds	r7, r7, #12
 6659              	.LCFI171:
 6660              		.cfi_def_cfa_offset 4
 6661 0010 BD46     		mov	sp, r7
 6662              	.LCFI172:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 188


 6663              		.cfi_def_cfa_register 13
 6664              		@ sp needed
 6665 0012 5DF8047B 		ldr	r7, [sp], #4
 6666              	.LCFI173:
 6667              		.cfi_restore 7
 6668              		.cfi_def_cfa_offset 0
 6669 0016 7047     		bx	lr
 6670              		.cfi_endproc
 6671              	.LFE175:
 6673              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 6674              		.align	1
 6675              		.global	HAL_UART_ReceiverTimeout_Config
 6676              		.syntax unified
 6677              		.thumb
 6678              		.thumb_func
 6680              	HAL_UART_ReceiverTimeout_Config:
 6681              	.LFB176:
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART control functions
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 189


 6682              		.loc 1 2735 1
 6683              		.cfi_startproc
 6684              		@ args = 0, pretend = 0, frame = 8
 6685              		@ frame_needed = 1, uses_anonymous_args = 0
 6686              		@ link register save eliminated.
 6687 0000 80B4     		push	{r7}
 6688              	.LCFI174:
 6689              		.cfi_def_cfa_offset 4
 6690              		.cfi_offset 7, -4
 6691 0002 83B0     		sub	sp, sp, #12
 6692              	.LCFI175:
 6693              		.cfi_def_cfa_offset 16
 6694 0004 00AF     		add	r7, sp, #0
 6695              	.LCFI176:
 6696              		.cfi_def_cfa_register 7
 6697 0006 7860     		str	r0, [r7, #4]
 6698 0008 3960     		str	r1, [r7]
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6699              		.loc 1 2736 9
 6700 000a 7B68     		ldr	r3, [r7, #4]
 6701 000c 1B68     		ldr	r3, [r3]
 6702              		.loc 1 2736 6
 6703 000e 094A     		ldr	r2, .L367
 6704 0010 9342     		cmp	r3, r2
 6705 0012 09D0     		beq	.L366
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 6706              		.loc 1 2739 5
 6707 0014 7B68     		ldr	r3, [r7, #4]
 6708 0016 1B68     		ldr	r3, [r3]
 6709 0018 5B69     		ldr	r3, [r3, #20]
 6710 001a 03F07F41 		and	r1, r3, #-16777216
 6711 001e 7B68     		ldr	r3, [r7, #4]
 6712 0020 1B68     		ldr	r3, [r3]
 6713 0022 3A68     		ldr	r2, [r7]
 6714 0024 0A43     		orrs	r2, r2, r1
 6715 0026 5A61     		str	r2, [r3, #20]
 6716              	.L366:
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6717              		.loc 1 2741 1
 6718 0028 00BF     		nop
 6719 002a 0C37     		adds	r7, r7, #12
 6720              	.LCFI177:
 6721              		.cfi_def_cfa_offset 4
 6722 002c BD46     		mov	sp, r7
 6723              	.LCFI178:
 6724              		.cfi_def_cfa_register 13
 6725              		@ sp needed
 6726 002e 5DF8047B 		ldr	r7, [sp], #4
 6727              	.LCFI179:
 6728              		.cfi_restore 7
 6729              		.cfi_def_cfa_offset 0
 6730 0032 7047     		bx	lr
 6731              	.L368:
 6732              		.align	2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 190


 6733              	.L367:
 6734 0034 000C0058 		.word	1476398080
 6735              		.cfi_endproc
 6736              	.LFE176:
 6738              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 6739              		.align	1
 6740              		.global	HAL_UART_EnableReceiverTimeout
 6741              		.syntax unified
 6742              		.thumb
 6743              		.thumb_func
 6745              	HAL_UART_EnableReceiverTimeout:
 6746              	.LFB177:
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6747              		.loc 1 2750 1
 6748              		.cfi_startproc
 6749              		@ args = 0, pretend = 0, frame = 8
 6750              		@ frame_needed = 1, uses_anonymous_args = 0
 6751              		@ link register save eliminated.
 6752 0000 80B4     		push	{r7}
 6753              	.LCFI180:
 6754              		.cfi_def_cfa_offset 4
 6755              		.cfi_offset 7, -4
 6756 0002 83B0     		sub	sp, sp, #12
 6757              	.LCFI181:
 6758              		.cfi_def_cfa_offset 16
 6759 0004 00AF     		add	r7, sp, #0
 6760              	.LCFI182:
 6761              		.cfi_def_cfa_register 7
 6762 0006 7860     		str	r0, [r7, #4]
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6763              		.loc 1 2751 9
 6764 0008 7B68     		ldr	r3, [r7, #4]
 6765 000a 1B68     		ldr	r3, [r3]
 6766              		.loc 1 2751 6
 6767 000c 184A     		ldr	r2, .L374
 6768 000e 9342     		cmp	r3, r2
 6769 0010 27D0     		beq	.L370
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 6770              		.loc 1 2753 14
 6771 0012 7B68     		ldr	r3, [r7, #4]
 6772 0014 D3F88830 		ldr	r3, [r3, #136]
 6773              		.loc 1 2753 8
 6774 0018 202B     		cmp	r3, #32
 6775 001a 20D1     		bne	.L371
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
 6776              		.loc 1 2756 7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 191


 6777 001c 7B68     		ldr	r3, [r7, #4]
 6778 001e 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 6779 0022 012B     		cmp	r3, #1
 6780 0024 01D1     		bne	.L372
 6781              		.loc 1 2756 7 is_stmt 0 discriminator 1
 6782 0026 0223     		movs	r3, #2
 6783              		.loc 1 2756 7
 6784 0028 1CE0     		b	.L373
 6785              	.L372:
 6786              		.loc 1 2756 7 discriminator 2
 6787 002a 7B68     		ldr	r3, [r7, #4]
 6788 002c 0122     		movs	r2, #1
 6789 002e 83F88420 		strb	r2, [r3, #132]
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 6790              		.loc 1 2758 21 is_stmt 1
 6791 0032 7B68     		ldr	r3, [r7, #4]
 6792 0034 2422     		movs	r2, #36
 6793 0036 C3F88820 		str	r2, [r3, #136]
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6794              		.loc 1 2761 7
 6795 003a 7B68     		ldr	r3, [r7, #4]
 6796 003c 1B68     		ldr	r3, [r3]
 6797 003e 5A68     		ldr	r2, [r3, #4]
 6798 0040 7B68     		ldr	r3, [r7, #4]
 6799 0042 1B68     		ldr	r3, [r3]
 6800 0044 42F40002 		orr	r2, r2, #8388608
 6801 0048 5A60     		str	r2, [r3, #4]
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 6802              		.loc 1 2763 21
 6803 004a 7B68     		ldr	r3, [r7, #4]
 6804 004c 2022     		movs	r2, #32
 6805 004e C3F88820 		str	r2, [r3, #136]
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 6806              		.loc 1 2766 7
 6807 0052 7B68     		ldr	r3, [r7, #4]
 6808 0054 0022     		movs	r2, #0
 6809 0056 83F88420 		strb	r2, [r3, #132]
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 6810              		.loc 1 2768 14
 6811 005a 0023     		movs	r3, #0
 6812 005c 02E0     		b	.L373
 6813              	.L371:
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
 6814              		.loc 1 2772 14
 6815 005e 0223     		movs	r3, #2
 6816 0060 00E0     		b	.L373
 6817              	.L370:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 192


2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 6818              		.loc 1 2777 12
 6819 0062 0123     		movs	r3, #1
 6820              	.L373:
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6821              		.loc 1 2779 1
 6822 0064 1846     		mov	r0, r3
 6823 0066 0C37     		adds	r7, r7, #12
 6824              	.LCFI183:
 6825              		.cfi_def_cfa_offset 4
 6826 0068 BD46     		mov	sp, r7
 6827              	.LCFI184:
 6828              		.cfi_def_cfa_register 13
 6829              		@ sp needed
 6830 006a 5DF8047B 		ldr	r7, [sp], #4
 6831              	.LCFI185:
 6832              		.cfi_restore 7
 6833              		.cfi_def_cfa_offset 0
 6834 006e 7047     		bx	lr
 6835              	.L375:
 6836              		.align	2
 6837              	.L374:
 6838 0070 000C0058 		.word	1476398080
 6839              		.cfi_endproc
 6840              	.LFE177:
 6842              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 6843              		.align	1
 6844              		.global	HAL_UART_DisableReceiverTimeout
 6845              		.syntax unified
 6846              		.thumb
 6847              		.thumb_func
 6849              	HAL_UART_DisableReceiverTimeout:
 6850              	.LFB178:
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6851              		.loc 1 2788 1
 6852              		.cfi_startproc
 6853              		@ args = 0, pretend = 0, frame = 8
 6854              		@ frame_needed = 1, uses_anonymous_args = 0
 6855              		@ link register save eliminated.
 6856 0000 80B4     		push	{r7}
 6857              	.LCFI186:
 6858              		.cfi_def_cfa_offset 4
 6859              		.cfi_offset 7, -4
 6860 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 193


 6861              	.LCFI187:
 6862              		.cfi_def_cfa_offset 16
 6863 0004 00AF     		add	r7, sp, #0
 6864              	.LCFI188:
 6865              		.cfi_def_cfa_register 7
 6866 0006 7860     		str	r0, [r7, #4]
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6867              		.loc 1 2789 9
 6868 0008 7B68     		ldr	r3, [r7, #4]
 6869 000a 1B68     		ldr	r3, [r3]
 6870              		.loc 1 2789 6
 6871 000c 184A     		ldr	r2, .L381
 6872 000e 9342     		cmp	r3, r2
 6873 0010 27D0     		beq	.L377
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 6874              		.loc 1 2791 14
 6875 0012 7B68     		ldr	r3, [r7, #4]
 6876 0014 D3F88830 		ldr	r3, [r3, #136]
 6877              		.loc 1 2791 8
 6878 0018 202B     		cmp	r3, #32
 6879 001a 20D1     		bne	.L378
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Locked */
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_LOCK(huart);
 6880              		.loc 1 2794 7
 6881 001c 7B68     		ldr	r3, [r7, #4]
 6882 001e 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 6883 0022 012B     		cmp	r3, #1
 6884 0024 01D1     		bne	.L379
 6885              		.loc 1 2794 7 is_stmt 0 discriminator 1
 6886 0026 0223     		movs	r3, #2
 6887              		.loc 1 2794 7
 6888 0028 1CE0     		b	.L380
 6889              	.L379:
 6890              		.loc 1 2794 7 discriminator 2
 6891 002a 7B68     		ldr	r3, [r7, #4]
 6892 002c 0122     		movs	r2, #1
 6893 002e 83F88420 		strb	r2, [r3, #132]
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 6894              		.loc 1 2796 21 is_stmt 1
 6895 0032 7B68     		ldr	r3, [r7, #4]
 6896 0034 2422     		movs	r2, #36
 6897 0036 C3F88820 		str	r2, [r3, #136]
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6898              		.loc 1 2799 7
 6899 003a 7B68     		ldr	r3, [r7, #4]
 6900 003c 1B68     		ldr	r3, [r3]
 6901 003e 5A68     		ldr	r2, [r3, #4]
 6902 0040 7B68     		ldr	r3, [r7, #4]
 6903 0042 1B68     		ldr	r3, [r3]
 6904 0044 22F40002 		bic	r2, r2, #8388608
 6905 0048 5A60     		str	r2, [r3, #4]
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 194


2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 6906              		.loc 1 2801 21
 6907 004a 7B68     		ldr	r3, [r7, #4]
 6908 004c 2022     		movs	r2, #32
 6909 004e C3F88820 		str	r2, [r3, #136]
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Process Unlocked */
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 6910              		.loc 1 2804 7
 6911 0052 7B68     		ldr	r3, [r7, #4]
 6912 0054 0022     		movs	r2, #0
 6913 0056 83F88420 		strb	r2, [r3, #132]
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 6914              		.loc 1 2806 14
 6915 005a 0023     		movs	r3, #0
 6916 005c 02E0     		b	.L380
 6917              	.L378:
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_BUSY;
 6918              		.loc 1 2810 14
 6919 005e 0223     		movs	r3, #2
 6920 0060 00E0     		b	.L380
 6921              	.L377:
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 6922              		.loc 1 2815 12
 6923 0062 0123     		movs	r3, #1
 6924              	.L380:
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 6925              		.loc 1 2817 1
 6926 0064 1846     		mov	r0, r3
 6927 0066 0C37     		adds	r7, r7, #12
 6928              	.LCFI189:
 6929              		.cfi_def_cfa_offset 4
 6930 0068 BD46     		mov	sp, r7
 6931              	.LCFI190:
 6932              		.cfi_def_cfa_register 13
 6933              		@ sp needed
 6934 006a 5DF8047B 		ldr	r7, [sp], #4
 6935              	.LCFI191:
 6936              		.cfi_restore 7
 6937              		.cfi_def_cfa_offset 0
 6938 006e 7047     		bx	lr
 6939              	.L382:
 6940              		.align	2
 6941              	.L381:
 6942 0070 000C0058 		.word	1476398080
 6943              		.cfi_endproc
 6944              	.LFE178:
 6946              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 195


 6947              		.align	1
 6948              		.global	HAL_MultiProcessor_EnableMuteMode
 6949              		.syntax unified
 6950              		.thumb
 6951              		.thumb_func
 6953              	HAL_MultiProcessor_EnableMuteMode:
 6954              	.LFB179:
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 6955              		.loc 1 2826 1
 6956              		.cfi_startproc
 6957              		@ args = 0, pretend = 0, frame = 32
 6958              		@ frame_needed = 1, uses_anonymous_args = 0
 6959 0000 80B5     		push	{r7, lr}
 6960              	.LCFI192:
 6961              		.cfi_def_cfa_offset 8
 6962              		.cfi_offset 7, -8
 6963              		.cfi_offset 14, -4
 6964 0002 88B0     		sub	sp, sp, #32
 6965              	.LCFI193:
 6966              		.cfi_def_cfa_offset 40
 6967 0004 00AF     		add	r7, sp, #0
 6968              	.LCFI194:
 6969              		.cfi_def_cfa_register 7
 6970 0006 7860     		str	r0, [r7, #4]
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 6971              		.loc 1 2827 3
 6972 0008 7B68     		ldr	r3, [r7, #4]
 6973 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 6974 000e 012B     		cmp	r3, #1
 6975 0010 01D1     		bne	.L384
 6976              		.loc 1 2827 3 is_stmt 0 discriminator 1
 6977 0012 0223     		movs	r3, #2
 6978              		.loc 1 2827 3
 6979 0014 28E0     		b	.L385
 6980              	.L384:
 6981              		.loc 1 2827 3 discriminator 2
 6982 0016 7B68     		ldr	r3, [r7, #4]
 6983 0018 0122     		movs	r2, #1
 6984 001a 83F88420 		strb	r2, [r3, #132]
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6985              		.loc 1 2829 17 is_stmt 1
 6986 001e 7B68     		ldr	r3, [r7, #4]
 6987 0020 2422     		movs	r2, #36
 6988 0022 C3F88820 		str	r2, [r3, #136]
 6989              	.L388:
 6990              	.LBB763:
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 196


2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 6991              		.loc 1 2832 3 discriminator 1
 6992 0026 7B68     		ldr	r3, [r7, #4]
 6993 0028 1B68     		ldr	r3, [r3]
 6994 002a FB60     		str	r3, [r7, #12]
 6995              	.LBB764:
 6996              	.LBB765:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6997              		.loc 2 1155 4
 6998 002c FB68     		ldr	r3, [r7, #12]
 6999              		.syntax unified
 7000              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7001 002e 53E8003F 		ldrex r3, [r3]
 7002              	@ 0 "" 2
 7003              		.thumb
 7004              		.syntax unified
 7005 0032 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7006              		.loc 2 1156 10
 7007 0034 BB68     		ldr	r3, [r7, #8]
 7008              	.LBE765:
 7009              	.LBE764:
 7010              		.loc 1 2832 3 discriminator 1
 7011 0036 43F40053 		orr	r3, r3, #8192
 7012 003a FB61     		str	r3, [r7, #28]
 7013 003c 7B68     		ldr	r3, [r7, #4]
 7014 003e 1B68     		ldr	r3, [r3]
 7015 0040 1A46     		mov	r2, r3
 7016 0042 FB69     		ldr	r3, [r7, #28]
 7017 0044 BB61     		str	r3, [r7, #24]
 7018 0046 7A61     		str	r2, [r7, #20]
 7019              	.LBB766:
 7020              	.LBB767:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7021              		.loc 2 1206 4
 7022 0048 7969     		ldr	r1, [r7, #20]
 7023 004a BA69     		ldr	r2, [r7, #24]
 7024              		.syntax unified
 7025              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7026 004c 41E80023 		strex r3, r2, [r1]
 7027              	@ 0 "" 2
 7028              		.thumb
 7029              		.syntax unified
 7030 0050 3B61     		str	r3, [r7, #16]
 7031              		.loc 2 1207 10
 7032 0052 3B69     		ldr	r3, [r7, #16]
 7033              	.LBE767:
 7034              	.LBE766:
 7035              		.loc 1 2832 3 discriminator 1
 7036 0054 002B     		cmp	r3, #0
 7037 0056 E6D1     		bne	.L388
 7038              	.LBE763:
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7039              		.loc 1 2834 17
 7040 0058 7B68     		ldr	r3, [r7, #4]
 7041 005a 2022     		movs	r2, #32
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 197


 7042 005c C3F88820 		str	r2, [r3, #136]
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7043              		.loc 1 2836 11
 7044 0060 7868     		ldr	r0, [r7, #4]
 7045 0062 FFF7FEFF 		bl	UART_CheckIdleState
 7046 0066 0346     		mov	r3, r0
 7047              	.L385:
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7048              		.loc 1 2837 1
 7049 0068 1846     		mov	r0, r3
 7050 006a 2037     		adds	r7, r7, #32
 7051              	.LCFI195:
 7052              		.cfi_def_cfa_offset 8
 7053 006c BD46     		mov	sp, r7
 7054              	.LCFI196:
 7055              		.cfi_def_cfa_register 13
 7056              		@ sp needed
 7057 006e 80BD     		pop	{r7, pc}
 7058              		.cfi_endproc
 7059              	.LFE179:
 7061              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 7062              		.align	1
 7063              		.global	HAL_MultiProcessor_DisableMuteMode
 7064              		.syntax unified
 7065              		.thumb
 7066              		.thumb_func
 7068              	HAL_MultiProcessor_DisableMuteMode:
 7069              	.LFB180:
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7070              		.loc 1 2846 1
 7071              		.cfi_startproc
 7072              		@ args = 0, pretend = 0, frame = 32
 7073              		@ frame_needed = 1, uses_anonymous_args = 0
 7074 0000 80B5     		push	{r7, lr}
 7075              	.LCFI197:
 7076              		.cfi_def_cfa_offset 8
 7077              		.cfi_offset 7, -8
 7078              		.cfi_offset 14, -4
 7079 0002 88B0     		sub	sp, sp, #32
 7080              	.LCFI198:
 7081              		.cfi_def_cfa_offset 40
 7082 0004 00AF     		add	r7, sp, #0
 7083              	.LCFI199:
 7084              		.cfi_def_cfa_register 7
 7085 0006 7860     		str	r0, [r7, #4]
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 7086              		.loc 1 2847 3
 7087 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 198


 7088 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7089 000e 012B     		cmp	r3, #1
 7090 0010 01D1     		bne	.L390
 7091              		.loc 1 2847 3 is_stmt 0 discriminator 1
 7092 0012 0223     		movs	r3, #2
 7093              		.loc 1 2847 3
 7094 0014 28E0     		b	.L391
 7095              	.L390:
 7096              		.loc 1 2847 3 discriminator 2
 7097 0016 7B68     		ldr	r3, [r7, #4]
 7098 0018 0122     		movs	r2, #1
 7099 001a 83F88420 		strb	r2, [r3, #132]
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7100              		.loc 1 2849 17 is_stmt 1
 7101 001e 7B68     		ldr	r3, [r7, #4]
 7102 0020 2422     		movs	r2, #36
 7103 0022 C3F88820 		str	r2, [r3, #136]
 7104              	.L394:
 7105              	.LBB768:
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 7106              		.loc 1 2852 3 discriminator 1
 7107 0026 7B68     		ldr	r3, [r7, #4]
 7108 0028 1B68     		ldr	r3, [r3]
 7109 002a FB60     		str	r3, [r7, #12]
 7110              	.LBB769:
 7111              	.LBB770:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7112              		.loc 2 1155 4
 7113 002c FB68     		ldr	r3, [r7, #12]
 7114              		.syntax unified
 7115              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7116 002e 53E8003F 		ldrex r3, [r3]
 7117              	@ 0 "" 2
 7118              		.thumb
 7119              		.syntax unified
 7120 0032 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7121              		.loc 2 1156 10
 7122 0034 BB68     		ldr	r3, [r7, #8]
 7123              	.LBE770:
 7124              	.LBE769:
 7125              		.loc 1 2852 3 discriminator 1
 7126 0036 23F40053 		bic	r3, r3, #8192
 7127 003a FB61     		str	r3, [r7, #28]
 7128 003c 7B68     		ldr	r3, [r7, #4]
 7129 003e 1B68     		ldr	r3, [r3]
 7130 0040 1A46     		mov	r2, r3
 7131 0042 FB69     		ldr	r3, [r7, #28]
 7132 0044 BB61     		str	r3, [r7, #24]
 7133 0046 7A61     		str	r2, [r7, #20]
 7134              	.LBB771:
 7135              	.LBB772:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7136              		.loc 2 1206 4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 199


 7137 0048 7969     		ldr	r1, [r7, #20]
 7138 004a BA69     		ldr	r2, [r7, #24]
 7139              		.syntax unified
 7140              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7141 004c 41E80023 		strex r3, r2, [r1]
 7142              	@ 0 "" 2
 7143              		.thumb
 7144              		.syntax unified
 7145 0050 3B61     		str	r3, [r7, #16]
 7146              		.loc 2 1207 10
 7147 0052 3B69     		ldr	r3, [r7, #16]
 7148              	.LBE772:
 7149              	.LBE771:
 7150              		.loc 1 2852 3 discriminator 1
 7151 0054 002B     		cmp	r3, #0
 7152 0056 E6D1     		bne	.L394
 7153              	.LBE768:
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7154              		.loc 1 2854 17
 7155 0058 7B68     		ldr	r3, [r7, #4]
 7156 005a 2022     		movs	r2, #32
 7157 005c C3F88820 		str	r2, [r3, #136]
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 7158              		.loc 1 2856 11
 7159 0060 7868     		ldr	r0, [r7, #4]
 7160 0062 FFF7FEFF 		bl	UART_CheckIdleState
 7161 0066 0346     		mov	r3, r0
 7162              	.L391:
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7163              		.loc 1 2857 1
 7164 0068 1846     		mov	r0, r3
 7165 006a 2037     		adds	r7, r7, #32
 7166              	.LCFI200:
 7167              		.cfi_def_cfa_offset 8
 7168 006c BD46     		mov	sp, r7
 7169              	.LCFI201:
 7170              		.cfi_def_cfa_register 13
 7171              		@ sp needed
 7172 006e 80BD     		pop	{r7, pc}
 7173              		.cfi_endproc
 7174              	.LFE180:
 7176              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 7177              		.align	1
 7178              		.global	HAL_MultiProcessor_EnterMuteMode
 7179              		.syntax unified
 7180              		.thumb
 7181              		.thumb_func
 7183              	HAL_MultiProcessor_EnterMuteMode:
 7184              	.LFB181:
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 200


2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7185              		.loc 1 2866 1
 7186              		.cfi_startproc
 7187              		@ args = 0, pretend = 0, frame = 8
 7188              		@ frame_needed = 1, uses_anonymous_args = 0
 7189              		@ link register save eliminated.
 7190 0000 80B4     		push	{r7}
 7191              	.LCFI202:
 7192              		.cfi_def_cfa_offset 4
 7193              		.cfi_offset 7, -4
 7194 0002 83B0     		sub	sp, sp, #12
 7195              	.LCFI203:
 7196              		.cfi_def_cfa_offset 16
 7197 0004 00AF     		add	r7, sp, #0
 7198              	.LCFI204:
 7199              		.cfi_def_cfa_register 7
 7200 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 7201              		.loc 1 2867 3
 7202 0008 7B68     		ldr	r3, [r7, #4]
 7203 000a 1B68     		ldr	r3, [r3]
 7204 000c 9A69     		ldr	r2, [r3, #24]
 7205 000e 7B68     		ldr	r3, [r7, #4]
 7206 0010 1B68     		ldr	r3, [r3]
 7207 0012 42F00402 		orr	r2, r2, #4
 7208 0016 9A61     		str	r2, [r3, #24]
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7209              		.loc 1 2868 1
 7210 0018 00BF     		nop
 7211 001a 0C37     		adds	r7, r7, #12
 7212              	.LCFI205:
 7213              		.cfi_def_cfa_offset 4
 7214 001c BD46     		mov	sp, r7
 7215              	.LCFI206:
 7216              		.cfi_def_cfa_register 13
 7217              		@ sp needed
 7218 001e 5DF8047B 		ldr	r7, [sp], #4
 7219              	.LCFI207:
 7220              		.cfi_restore 7
 7221              		.cfi_def_cfa_offset 0
 7222 0022 7047     		bx	lr
 7223              		.cfi_endproc
 7224              	.LFE181:
 7226              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 7227              		.align	1
 7228              		.global	HAL_HalfDuplex_EnableTransmitter
 7229              		.syntax unified
 7230              		.thumb
 7231              		.thumb_func
 7233              	HAL_HalfDuplex_EnableTransmitter:
 7234              	.LFB182:
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 201


2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7235              		.loc 1 2876 1
 7236              		.cfi_startproc
 7237              		@ args = 0, pretend = 0, frame = 56
 7238              		@ frame_needed = 1, uses_anonymous_args = 0
 7239              		@ link register save eliminated.
 7240 0000 80B4     		push	{r7}
 7241              	.LCFI208:
 7242              		.cfi_def_cfa_offset 4
 7243              		.cfi_offset 7, -4
 7244 0002 8FB0     		sub	sp, sp, #60
 7245              	.LCFI209:
 7246              		.cfi_def_cfa_offset 64
 7247 0004 00AF     		add	r7, sp, #0
 7248              	.LCFI210:
 7249              		.cfi_def_cfa_register 7
 7250 0006 7860     		str	r0, [r7, #4]
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 7251              		.loc 1 2877 3
 7252 0008 7B68     		ldr	r3, [r7, #4]
 7253 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7254 000e 012B     		cmp	r3, #1
 7255 0010 01D1     		bne	.L397
 7256              		.loc 1 2877 3 is_stmt 0 discriminator 1
 7257 0012 0223     		movs	r3, #2
 7258              		.loc 1 2877 3
 7259 0014 42E0     		b	.L398
 7260              	.L397:
 7261              		.loc 1 2877 3 discriminator 2
 7262 0016 7B68     		ldr	r3, [r7, #4]
 7263 0018 0122     		movs	r2, #1
 7264 001a 83F88420 		strb	r2, [r3, #132]
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7265              		.loc 1 2878 17 is_stmt 1
 7266 001e 7B68     		ldr	r3, [r7, #4]
 7267 0020 2422     		movs	r2, #36
 7268 0022 C3F88820 		str	r2, [r3, #136]
 7269              	.L401:
 7270              	.LBB773:
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7271              		.loc 1 2881 3 discriminator 1
 7272 0026 7B68     		ldr	r3, [r7, #4]
 7273 0028 1B68     		ldr	r3, [r3]
 7274 002a 3B62     		str	r3, [r7, #32]
 7275              	.LBB774:
 7276              	.LBB775:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7277              		.loc 2 1155 4
 7278 002c 3B6A     		ldr	r3, [r7, #32]
 7279              		.syntax unified
 7280              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7281 002e 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 202


 7282              	@ 0 "" 2
 7283              		.thumb
 7284              		.syntax unified
 7285 0032 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7286              		.loc 2 1156 10
 7287 0034 FB69     		ldr	r3, [r7, #28]
 7288              	.LBE775:
 7289              	.LBE774:
 7290              		.loc 1 2881 3 discriminator 1
 7291 0036 23F00C03 		bic	r3, r3, #12
 7292 003a 7B63     		str	r3, [r7, #52]
 7293 003c 7B68     		ldr	r3, [r7, #4]
 7294 003e 1B68     		ldr	r3, [r3]
 7295 0040 1A46     		mov	r2, r3
 7296 0042 7B6B     		ldr	r3, [r7, #52]
 7297 0044 FB62     		str	r3, [r7, #44]
 7298 0046 BA62     		str	r2, [r7, #40]
 7299              	.LBB776:
 7300              	.LBB777:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7301              		.loc 2 1206 4
 7302 0048 B96A     		ldr	r1, [r7, #40]
 7303 004a FA6A     		ldr	r2, [r7, #44]
 7304              		.syntax unified
 7305              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7306 004c 41E80023 		strex r3, r2, [r1]
 7307              	@ 0 "" 2
 7308              		.thumb
 7309              		.syntax unified
 7310 0050 7B62     		str	r3, [r7, #36]
 7311              		.loc 2 1207 10
 7312 0052 7B6A     		ldr	r3, [r7, #36]
 7313              	.LBE777:
 7314              	.LBE776:
 7315              		.loc 1 2881 3 discriminator 1
 7316 0054 002B     		cmp	r3, #0
 7317 0056 E6D1     		bne	.L401
 7318              	.L404:
 7319              	.LBE773:
 7320              	.LBB778:
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 7321              		.loc 1 2884 3 discriminator 1
 7322 0058 7B68     		ldr	r3, [r7, #4]
 7323 005a 1B68     		ldr	r3, [r3]
 7324 005c FB60     		str	r3, [r7, #12]
 7325              	.LBB779:
 7326              	.LBB780:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7327              		.loc 2 1155 4
 7328 005e FB68     		ldr	r3, [r7, #12]
 7329              		.syntax unified
 7330              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7331 0060 53E8003F 		ldrex r3, [r3]
 7332              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 203


 7333              		.thumb
 7334              		.syntax unified
 7335 0064 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7336              		.loc 2 1156 10
 7337 0066 BB68     		ldr	r3, [r7, #8]
 7338              	.LBE780:
 7339              	.LBE779:
 7340              		.loc 1 2884 3 discriminator 1
 7341 0068 43F00803 		orr	r3, r3, #8
 7342 006c 3B63     		str	r3, [r7, #48]
 7343 006e 7B68     		ldr	r3, [r7, #4]
 7344 0070 1B68     		ldr	r3, [r3]
 7345 0072 1A46     		mov	r2, r3
 7346 0074 3B6B     		ldr	r3, [r7, #48]
 7347 0076 BB61     		str	r3, [r7, #24]
 7348 0078 7A61     		str	r2, [r7, #20]
 7349              	.LBB781:
 7350              	.LBB782:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7351              		.loc 2 1206 4
 7352 007a 7969     		ldr	r1, [r7, #20]
 7353 007c BA69     		ldr	r2, [r7, #24]
 7354              		.syntax unified
 7355              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7356 007e 41E80023 		strex r3, r2, [r1]
 7357              	@ 0 "" 2
 7358              		.thumb
 7359              		.syntax unified
 7360 0082 3B61     		str	r3, [r7, #16]
 7361              		.loc 2 1207 10
 7362 0084 3B69     		ldr	r3, [r7, #16]
 7363              	.LBE782:
 7364              	.LBE781:
 7365              		.loc 1 2884 3 discriminator 1
 7366 0086 002B     		cmp	r3, #0
 7367 0088 E6D1     		bne	.L404
 7368              	.LBE778:
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7369              		.loc 1 2886 17
 7370 008a 7B68     		ldr	r3, [r7, #4]
 7371 008c 2022     		movs	r2, #32
 7372 008e C3F88820 		str	r2, [r3, #136]
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7373              		.loc 1 2888 3
 7374 0092 7B68     		ldr	r3, [r7, #4]
 7375 0094 0022     		movs	r2, #0
 7376 0096 83F88420 		strb	r2, [r3, #132]
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7377              		.loc 1 2890 10
 7378 009a 0023     		movs	r3, #0
 7379              	.L398:
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7380              		.loc 1 2891 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 204


 7381 009c 1846     		mov	r0, r3
 7382 009e 3C37     		adds	r7, r7, #60
 7383              	.LCFI211:
 7384              		.cfi_def_cfa_offset 4
 7385 00a0 BD46     		mov	sp, r7
 7386              	.LCFI212:
 7387              		.cfi_def_cfa_register 13
 7388              		@ sp needed
 7389 00a2 5DF8047B 		ldr	r7, [sp], #4
 7390              	.LCFI213:
 7391              		.cfi_restore 7
 7392              		.cfi_def_cfa_offset 0
 7393 00a6 7047     		bx	lr
 7394              		.cfi_endproc
 7395              	.LFE182:
 7397              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 7398              		.align	1
 7399              		.global	HAL_HalfDuplex_EnableReceiver
 7400              		.syntax unified
 7401              		.thumb
 7402              		.thumb_func
 7404              	HAL_HalfDuplex_EnableReceiver:
 7405              	.LFB183:
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status.
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7406              		.loc 1 2899 1
 7407              		.cfi_startproc
 7408              		@ args = 0, pretend = 0, frame = 56
 7409              		@ frame_needed = 1, uses_anonymous_args = 0
 7410              		@ link register save eliminated.
 7411 0000 80B4     		push	{r7}
 7412              	.LCFI214:
 7413              		.cfi_def_cfa_offset 4
 7414              		.cfi_offset 7, -4
 7415 0002 8FB0     		sub	sp, sp, #60
 7416              	.LCFI215:
 7417              		.cfi_def_cfa_offset 64
 7418 0004 00AF     		add	r7, sp, #0
 7419              	.LCFI216:
 7420              		.cfi_def_cfa_register 7
 7421 0006 7860     		str	r0, [r7, #4]
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 7422              		.loc 1 2900 3
 7423 0008 7B68     		ldr	r3, [r7, #4]
 7424 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7425 000e 012B     		cmp	r3, #1
 7426 0010 01D1     		bne	.L406
 7427              		.loc 1 2900 3 is_stmt 0 discriminator 1
 7428 0012 0223     		movs	r3, #2
 7429              		.loc 1 2900 3
 7430 0014 42E0     		b	.L407
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 205


 7431              	.L406:
 7432              		.loc 1 2900 3 discriminator 2
 7433 0016 7B68     		ldr	r3, [r7, #4]
 7434 0018 0122     		movs	r2, #1
 7435 001a 83F88420 		strb	r2, [r3, #132]
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7436              		.loc 1 2901 17 is_stmt 1
 7437 001e 7B68     		ldr	r3, [r7, #4]
 7438 0020 2422     		movs	r2, #36
 7439 0022 C3F88820 		str	r2, [r3, #136]
 7440              	.L410:
 7441              	.LBB783:
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7442              		.loc 1 2904 3 discriminator 1
 7443 0026 7B68     		ldr	r3, [r7, #4]
 7444 0028 1B68     		ldr	r3, [r3]
 7445 002a 3B62     		str	r3, [r7, #32]
 7446              	.LBB784:
 7447              	.LBB785:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7448              		.loc 2 1155 4
 7449 002c 3B6A     		ldr	r3, [r7, #32]
 7450              		.syntax unified
 7451              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7452 002e 53E8003F 		ldrex r3, [r3]
 7453              	@ 0 "" 2
 7454              		.thumb
 7455              		.syntax unified
 7456 0032 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7457              		.loc 2 1156 10
 7458 0034 FB69     		ldr	r3, [r7, #28]
 7459              	.LBE785:
 7460              	.LBE784:
 7461              		.loc 1 2904 3 discriminator 1
 7462 0036 23F00C03 		bic	r3, r3, #12
 7463 003a 7B63     		str	r3, [r7, #52]
 7464 003c 7B68     		ldr	r3, [r7, #4]
 7465 003e 1B68     		ldr	r3, [r3]
 7466 0040 1A46     		mov	r2, r3
 7467 0042 7B6B     		ldr	r3, [r7, #52]
 7468 0044 FB62     		str	r3, [r7, #44]
 7469 0046 BA62     		str	r2, [r7, #40]
 7470              	.LBB786:
 7471              	.LBB787:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7472              		.loc 2 1206 4
 7473 0048 B96A     		ldr	r1, [r7, #40]
 7474 004a FA6A     		ldr	r2, [r7, #44]
 7475              		.syntax unified
 7476              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7477 004c 41E80023 		strex r3, r2, [r1]
 7478              	@ 0 "" 2
 7479              		.thumb
 7480              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 206


 7481 0050 7B62     		str	r3, [r7, #36]
 7482              		.loc 2 1207 10
 7483 0052 7B6A     		ldr	r3, [r7, #36]
 7484              	.LBE787:
 7485              	.LBE786:
 7486              		.loc 1 2904 3 discriminator 1
 7487 0054 002B     		cmp	r3, #0
 7488 0056 E6D1     		bne	.L410
 7489              	.L413:
 7490              	.LBE783:
 7491              	.LBB788:
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 7492              		.loc 1 2907 3 discriminator 1
 7493 0058 7B68     		ldr	r3, [r7, #4]
 7494 005a 1B68     		ldr	r3, [r3]
 7495 005c FB60     		str	r3, [r7, #12]
 7496              	.LBB789:
 7497              	.LBB790:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7498              		.loc 2 1155 4
 7499 005e FB68     		ldr	r3, [r7, #12]
 7500              		.syntax unified
 7501              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7502 0060 53E8003F 		ldrex r3, [r3]
 7503              	@ 0 "" 2
 7504              		.thumb
 7505              		.syntax unified
 7506 0064 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7507              		.loc 2 1156 10
 7508 0066 BB68     		ldr	r3, [r7, #8]
 7509              	.LBE790:
 7510              	.LBE789:
 7511              		.loc 1 2907 3 discriminator 1
 7512 0068 43F00403 		orr	r3, r3, #4
 7513 006c 3B63     		str	r3, [r7, #48]
 7514 006e 7B68     		ldr	r3, [r7, #4]
 7515 0070 1B68     		ldr	r3, [r3]
 7516 0072 1A46     		mov	r2, r3
 7517 0074 3B6B     		ldr	r3, [r7, #48]
 7518 0076 BB61     		str	r3, [r7, #24]
 7519 0078 7A61     		str	r2, [r7, #20]
 7520              	.LBB791:
 7521              	.LBB792:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7522              		.loc 2 1206 4
 7523 007a 7969     		ldr	r1, [r7, #20]
 7524 007c BA69     		ldr	r2, [r7, #24]
 7525              		.syntax unified
 7526              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7527 007e 41E80023 		strex r3, r2, [r1]
 7528              	@ 0 "" 2
 7529              		.thumb
 7530              		.syntax unified
 7531 0082 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 207


 7532              		.loc 2 1207 10
 7533 0084 3B69     		ldr	r3, [r7, #16]
 7534              	.LBE792:
 7535              	.LBE791:
 7536              		.loc 1 2907 3 discriminator 1
 7537 0086 002B     		cmp	r3, #0
 7538 0088 E6D1     		bne	.L413
 7539              	.LBE788:
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7540              		.loc 1 2909 17
 7541 008a 7B68     		ldr	r3, [r7, #4]
 7542 008c 2022     		movs	r2, #32
 7543 008e C3F88820 		str	r2, [r3, #136]
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7544              		.loc 1 2911 3
 7545 0092 7B68     		ldr	r3, [r7, #4]
 7546 0094 0022     		movs	r2, #0
 7547 0096 83F88420 		strb	r2, [r3, #132]
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7548              		.loc 1 2913 10
 7549 009a 0023     		movs	r3, #0
 7550              	.L407:
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7551              		.loc 1 2914 1
 7552 009c 1846     		mov	r0, r3
 7553 009e 3C37     		adds	r7, r7, #60
 7554              	.LCFI217:
 7555              		.cfi_def_cfa_offset 4
 7556 00a0 BD46     		mov	sp, r7
 7557              	.LCFI218:
 7558              		.cfi_def_cfa_register 13
 7559              		@ sp needed
 7560 00a2 5DF8047B 		ldr	r7, [sp], #4
 7561              	.LCFI219:
 7562              		.cfi_restore 7
 7563              		.cfi_def_cfa_offset 0
 7564 00a6 7047     		bx	lr
 7565              		.cfi_endproc
 7566              	.LFE183:
 7568              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 7569              		.align	1
 7570              		.global	HAL_LIN_SendBreak
 7571              		.syntax unified
 7572              		.thumb
 7573              		.thumb_func
 7575              	HAL_LIN_SendBreak:
 7576              	.LFB184:
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Transmit break characters.
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 208


2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7577              		.loc 1 2923 1
 7578              		.cfi_startproc
 7579              		@ args = 0, pretend = 0, frame = 8
 7580              		@ frame_needed = 1, uses_anonymous_args = 0
 7581              		@ link register save eliminated.
 7582 0000 80B4     		push	{r7}
 7583              	.LCFI220:
 7584              		.cfi_def_cfa_offset 4
 7585              		.cfi_offset 7, -4
 7586 0002 83B0     		sub	sp, sp, #12
 7587              	.LCFI221:
 7588              		.cfi_def_cfa_offset 16
 7589 0004 00AF     		add	r7, sp, #0
 7590              	.LCFI222:
 7591              		.cfi_def_cfa_register 7
 7592 0006 7860     		str	r0, [r7, #4]
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
 7593              		.loc 1 2927 3
 7594 0008 7B68     		ldr	r3, [r7, #4]
 7595 000a 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 7596 000e 012B     		cmp	r3, #1
 7597 0010 01D1     		bne	.L415
 7598              		.loc 1 2927 3 is_stmt 0 discriminator 1
 7599 0012 0223     		movs	r3, #2
 7600              		.loc 1 2927 3
 7601 0014 18E0     		b	.L416
 7602              	.L415:
 7603              		.loc 1 2927 3 discriminator 2
 7604 0016 7B68     		ldr	r3, [r7, #4]
 7605 0018 0122     		movs	r2, #1
 7606 001a 83F88420 		strb	r2, [r3, #132]
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7607              		.loc 1 2929 17 is_stmt 1
 7608 001e 7B68     		ldr	r3, [r7, #4]
 7609 0020 2422     		movs	r2, #36
 7610 0022 C3F88820 		str	r2, [r3, #136]
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Send break characters */
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 7611              		.loc 1 2932 3
 7612 0026 7B68     		ldr	r3, [r7, #4]
 7613 0028 1B68     		ldr	r3, [r3]
 7614 002a 9A69     		ldr	r2, [r3, #24]
 7615 002c 7B68     		ldr	r3, [r7, #4]
 7616 002e 1B68     		ldr	r3, [r3]
 7617 0030 42F00202 		orr	r2, r2, #2
 7618 0034 9A61     		str	r2, [r3, #24]
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7619              		.loc 1 2934 17
 7620 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 209


 7621 0038 2022     		movs	r2, #32
 7622 003a C3F88820 		str	r2, [r3, #136]
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7623              		.loc 1 2936 3
 7624 003e 7B68     		ldr	r3, [r7, #4]
 7625 0040 0022     		movs	r2, #0
 7626 0042 83F88420 		strb	r2, [r3, #132]
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 7627              		.loc 1 2938 10
 7628 0046 0023     		movs	r3, #0
 7629              	.L416:
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7630              		.loc 1 2939 1
 7631 0048 1846     		mov	r0, r3
 7632 004a 0C37     		adds	r7, r7, #12
 7633              	.LCFI223:
 7634              		.cfi_def_cfa_offset 4
 7635 004c BD46     		mov	sp, r7
 7636              	.LCFI224:
 7637              		.cfi_def_cfa_register 13
 7638              		@ sp needed
 7639 004e 5DF8047B 		ldr	r7, [sp], #4
 7640              	.LCFI225:
 7641              		.cfi_restore 7
 7642              		.cfi_def_cfa_offset 0
 7643 0052 7047     		bx	lr
 7644              		.cfi_endproc
 7645              	.LFE184:
 7647              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7648              		.align	1
 7649              		.global	HAL_UART_GetState
 7650              		.syntax unified
 7651              		.thumb
 7652              		.thumb_func
 7654              	HAL_UART_GetState:
 7655              	.LFB185:
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides functions allowing to :
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle state.
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle error code
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 210


2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Return the UART handle state.
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL state
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7656              		.loc 1 2968 1
 7657              		.cfi_startproc
 7658              		@ args = 0, pretend = 0, frame = 16
 7659              		@ frame_needed = 1, uses_anonymous_args = 0
 7660              		@ link register save eliminated.
 7661 0000 80B4     		push	{r7}
 7662              	.LCFI226:
 7663              		.cfi_def_cfa_offset 4
 7664              		.cfi_offset 7, -4
 7665 0002 85B0     		sub	sp, sp, #20
 7666              	.LCFI227:
 7667              		.cfi_def_cfa_offset 24
 7668 0004 00AF     		add	r7, sp, #0
 7669              	.LCFI228:
 7670              		.cfi_def_cfa_register 7
 7671 0006 7860     		str	r0, [r7, #4]
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1;
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp2;
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp1 = huart->gState;
 7672              		.loc 1 2971 9
 7673 0008 7B68     		ldr	r3, [r7, #4]
 7674 000a D3F88830 		ldr	r3, [r3, #136]
 7675 000e FB60     		str	r3, [r7, #12]
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
 7676              		.loc 1 2972 9
 7677 0010 7B68     		ldr	r3, [r7, #4]
 7678 0012 D3F88C30 		ldr	r3, [r3, #140]
 7679 0016 BB60     		str	r3, [r7, #8]
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7680              		.loc 1 2974 10
 7681 0018 FA68     		ldr	r2, [r7, #12]
 7682 001a BB68     		ldr	r3, [r7, #8]
 7683 001c 1343     		orrs	r3, r3, r2
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7684              		.loc 1 2975 1
 7685 001e 1846     		mov	r0, r3
 7686 0020 1437     		adds	r7, r7, #20
 7687              	.LCFI229:
 7688              		.cfi_def_cfa_offset 4
 7689 0022 BD46     		mov	sp, r7
 7690              	.LCFI230:
 7691              		.cfi_def_cfa_register 13
 7692              		@ sp needed
 7693 0024 5DF8047B 		ldr	r7, [sp], #4
 7694              	.LCFI231:
 7695              		.cfi_restore 7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 211


 7696              		.cfi_def_cfa_offset 0
 7697 0028 7047     		bx	lr
 7698              		.cfi_endproc
 7699              	.LFE185:
 7701              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7702              		.align	1
 7703              		.global	HAL_UART_GetError
 7704              		.syntax unified
 7705              		.thumb
 7706              		.thumb_func
 7708              	HAL_UART_GetError:
 7709              	.LFB186:
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval UART Error Code
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7710              		.loc 1 2984 1
 7711              		.cfi_startproc
 7712              		@ args = 0, pretend = 0, frame = 8
 7713              		@ frame_needed = 1, uses_anonymous_args = 0
 7714              		@ link register save eliminated.
 7715 0000 80B4     		push	{r7}
 7716              	.LCFI232:
 7717              		.cfi_def_cfa_offset 4
 7718              		.cfi_offset 7, -4
 7719 0002 83B0     		sub	sp, sp, #12
 7720              	.LCFI233:
 7721              		.cfi_def_cfa_offset 16
 7722 0004 00AF     		add	r7, sp, #0
 7723              	.LCFI234:
 7724              		.cfi_def_cfa_register 7
 7725 0006 7860     		str	r0, [r7, #4]
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
 7726              		.loc 1 2985 15
 7727 0008 7B68     		ldr	r3, [r7, #4]
 7728 000a D3F89030 		ldr	r3, [r3, #144]
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 7729              		.loc 1 2986 1
 7730 000e 1846     		mov	r0, r3
 7731 0010 0C37     		adds	r7, r7, #12
 7732              	.LCFI235:
 7733              		.cfi_def_cfa_offset 4
 7734 0012 BD46     		mov	sp, r7
 7735              	.LCFI236:
 7736              		.cfi_def_cfa_register 13
 7737              		@ sp needed
 7738 0014 5DF8047B 		ldr	r7, [sp], #4
 7739              	.LCFI237:
 7740              		.cfi_restore 7
 7741              		.cfi_def_cfa_offset 0
 7742 0018 7047     		bx	lr
 7743              		.cfi_endproc
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 212


 7744              	.LFE186:
 7746              		.global	__aeabi_uldivmod
 7747              		.section	.text.UART_SetConfig,"ax",%progbits
 7748              		.align	1
 7749              		.global	UART_SetConfig
 7750              		.syntax unified
 7751              		.thumb
 7752              		.thumb_func
 7754              	UART_SetConfig:
 7755              	.LFB187:
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval none
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init the UART Callback settings */
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 7756              		.loc 1 3030 1
 7757              		.cfi_startproc
 7758              		@ args = 0, pretend = 0, frame = 72
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 213


 7759              		@ frame_needed = 1, uses_anonymous_args = 0
 7760 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 7761              	.LCFI238:
 7762              		.cfi_def_cfa_offset 32
 7763              		.cfi_offset 4, -32
 7764              		.cfi_offset 5, -28
 7765              		.cfi_offset 7, -24
 7766              		.cfi_offset 8, -20
 7767              		.cfi_offset 9, -16
 7768              		.cfi_offset 10, -12
 7769              		.cfi_offset 11, -8
 7770              		.cfi_offset 14, -4
 7771 0004 92B0     		sub	sp, sp, #72
 7772              	.LCFI239:
 7773              		.cfi_def_cfa_offset 104
 7774 0006 00AF     		add	r7, sp, #0
 7775              	.LCFI240:
 7776              		.cfi_def_cfa_register 7
 7777 0008 7861     		str	r0, [r7, #20]
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg;
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp;
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t usartdiv;
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 7778              		.loc 1 3035 21
 7779 000a 0023     		movs	r3, #0
 7780 000c 87F84230 		strb	r3, [r7, #66]
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL3_ClocksTypeDef pll3_clocks;
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t pclk;
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 214


3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 7781              		.loc 1 3067 33
 7782 0010 7B69     		ldr	r3, [r7, #20]
 7783 0012 9A68     		ldr	r2, [r3, #8]
 7784              		.loc 1 3067 58
 7785 0014 7B69     		ldr	r3, [r7, #20]
 7786 0016 1B69     		ldr	r3, [r3, #16]
 7787              		.loc 1 3067 45
 7788 0018 1A43     		orrs	r2, r2, r3
 7789              		.loc 1 3067 79
 7790 001a 7B69     		ldr	r3, [r7, #20]
 7791 001c 5B69     		ldr	r3, [r3, #20]
 7792              		.loc 1 3067 66
 7793 001e 1A43     		orrs	r2, r2, r3
 7794              		.loc 1 3067 98
 7795 0020 7B69     		ldr	r3, [r7, #20]
 7796 0022 DB69     		ldr	r3, [r3, #28]
 7797              		.loc 1 3067 10
 7798 0024 1343     		orrs	r3, r3, r2
 7799 0026 7B64     		str	r3, [r7, #68]
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 7800              		.loc 1 3068 3
 7801 0028 7B69     		ldr	r3, [r7, #20]
 7802 002a 1B68     		ldr	r3, [r3]
 7803 002c 1A68     		ldr	r2, [r3]
 7804 002e BE4B     		ldr	r3, .L586
 7805 0030 1340     		ands	r3, r3, r2
 7806 0032 7A69     		ldr	r2, [r7, #20]
 7807 0034 1268     		ldr	r2, [r2]
 7808 0036 796C     		ldr	r1, [r7, #68]
 7809 0038 0B43     		orrs	r3, r3, r1
 7810 003a 1360     		str	r3, [r2]
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * to huart->Init.StopBits value */
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 7811              		.loc 1 3073 3
 7812 003c 7B69     		ldr	r3, [r7, #20]
 7813 003e 1B68     		ldr	r3, [r3]
 7814 0040 5B68     		ldr	r3, [r3, #4]
 7815 0042 23F44051 		bic	r1, r3, #12288
 7816 0046 7B69     		ldr	r3, [r7, #20]
 7817 0048 DA68     		ldr	r2, [r3, #12]
 7818 004a 7B69     		ldr	r3, [r7, #20]
 7819 004c 1B68     		ldr	r3, [r3]
 7820 004e 0A43     		orrs	r2, r2, r1
 7821 0050 5A60     		str	r2, [r3, #4]
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 215


 7822              		.loc 1 3081 10
 7823 0052 7B69     		ldr	r3, [r7, #20]
 7824 0054 9B69     		ldr	r3, [r3, #24]
 7825 0056 7B64     		str	r3, [r7, #68]
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 7826              		.loc 1 3083 9
 7827 0058 7B69     		ldr	r3, [r7, #20]
 7828 005a 1B68     		ldr	r3, [r3]
 7829              		.loc 1 3083 6
 7830 005c B34A     		ldr	r2, .L586+4
 7831 005e 9342     		cmp	r3, r2
 7832 0060 04D0     		beq	.L422
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 7833              		.loc 1 3085 26
 7834 0062 7B69     		ldr	r3, [r7, #20]
 7835 0064 1B6A     		ldr	r3, [r3, #32]
 7836              		.loc 1 3085 12
 7837 0066 7A6C     		ldr	r2, [r7, #68]
 7838 0068 1343     		orrs	r3, r3, r2
 7839 006a 7B64     		str	r3, [r7, #68]
 7840              	.L422:
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 7841              		.loc 1 3087 3
 7842 006c 7B69     		ldr	r3, [r7, #20]
 7843 006e 1B68     		ldr	r3, [r3]
 7844 0070 9A68     		ldr	r2, [r3, #8]
 7845 0072 AF4B     		ldr	r3, .L586+8
 7846 0074 1340     		ands	r3, r3, r2
 7847 0076 7A69     		ldr	r2, [r7, #20]
 7848 0078 1268     		ldr	r2, [r2]
 7849 007a 796C     		ldr	r1, [r7, #68]
 7850 007c 0B43     		orrs	r3, r3, r1
 7851 007e 9360     		str	r3, [r2, #8]
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 7852              		.loc 1 3092 3
 7853 0080 7B69     		ldr	r3, [r7, #20]
 7854 0082 1B68     		ldr	r3, [r3]
 7855 0084 DB6A     		ldr	r3, [r3, #44]
 7856 0086 23F00F01 		bic	r1, r3, #15
 7857 008a 7B69     		ldr	r3, [r7, #20]
 7858 008c 5A6A     		ldr	r2, [r3, #36]
 7859 008e 7B69     		ldr	r3, [r7, #20]
 7860 0090 1B68     		ldr	r3, [r3]
 7861 0092 0A43     		orrs	r2, r2, r1
 7862 0094 DA62     		str	r2, [r3, #44]
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 7863              		.loc 1 3095 3
 7864 0096 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 216


 7865 0098 1B68     		ldr	r3, [r3]
 7866 009a A64A     		ldr	r2, .L586+12
 7867 009c 9342     		cmp	r3, r2
 7868 009e 77D1     		bne	.L423
 7869              		.loc 1 3095 3 is_stmt 0 discriminator 1
 7870 00a0 A54B     		ldr	r3, .L586+16
 7871 00a2 5B6D     		ldr	r3, [r3, #84]
 7872 00a4 03F03803 		and	r3, r3, #56
 7873 00a8 282B     		cmp	r3, #40
 7874 00aa 6DD8     		bhi	.L424
 7875 00ac 01A2     		adr	r2, .L426
 7876 00ae 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7877 00b2 00BF     		.p2align 2
 7878              	.L426:
 7879 00b4 59010000 		.word	.L431+1
 7880 00b8 89010000 		.word	.L424+1
 7881 00bc 89010000 		.word	.L424+1
 7882 00c0 89010000 		.word	.L424+1
 7883 00c4 89010000 		.word	.L424+1
 7884 00c8 89010000 		.word	.L424+1
 7885 00cc 89010000 		.word	.L424+1
 7886 00d0 89010000 		.word	.L424+1
 7887 00d4 61010000 		.word	.L430+1
 7888 00d8 89010000 		.word	.L424+1
 7889 00dc 89010000 		.word	.L424+1
 7890 00e0 89010000 		.word	.L424+1
 7891 00e4 89010000 		.word	.L424+1
 7892 00e8 89010000 		.word	.L424+1
 7893 00ec 89010000 		.word	.L424+1
 7894 00f0 89010000 		.word	.L424+1
 7895 00f4 69010000 		.word	.L429+1
 7896 00f8 89010000 		.word	.L424+1
 7897 00fc 89010000 		.word	.L424+1
 7898 0100 89010000 		.word	.L424+1
 7899 0104 89010000 		.word	.L424+1
 7900 0108 89010000 		.word	.L424+1
 7901 010c 89010000 		.word	.L424+1
 7902 0110 89010000 		.word	.L424+1
 7903 0114 71010000 		.word	.L428+1
 7904 0118 89010000 		.word	.L424+1
 7905 011c 89010000 		.word	.L424+1
 7906 0120 89010000 		.word	.L424+1
 7907 0124 89010000 		.word	.L424+1
 7908 0128 89010000 		.word	.L424+1
 7909 012c 89010000 		.word	.L424+1
 7910 0130 89010000 		.word	.L424+1
 7911 0134 79010000 		.word	.L427+1
 7912 0138 89010000 		.word	.L424+1
 7913 013c 89010000 		.word	.L424+1
 7914 0140 89010000 		.word	.L424+1
 7915 0144 89010000 		.word	.L424+1
 7916 0148 89010000 		.word	.L424+1
 7917 014c 89010000 		.word	.L424+1
 7918 0150 89010000 		.word	.L424+1
 7919 0154 81010000 		.word	.L425+1
 7920              		.p2align 1
 7921              	.L431:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 217


 7922              		.loc 1 3095 3 discriminator 4
 7923 0158 0123     		movs	r3, #1
 7924 015a 87F84330 		strb	r3, [r7, #67]
 7925              		.loc 1 3095 3
 7926 015e 26E3     		b	.L433
 7927              	.L430:
 7928              		.loc 1 3095 3 discriminator 5
 7929 0160 0423     		movs	r3, #4
 7930 0162 87F84330 		strb	r3, [r7, #67]
 7931              		.loc 1 3095 3
 7932 0166 22E3     		b	.L433
 7933              	.L429:
 7934              		.loc 1 3095 3 discriminator 6
 7935 0168 0823     		movs	r3, #8
 7936 016a 87F84330 		strb	r3, [r7, #67]
 7937              		.loc 1 3095 3
 7938 016e 1EE3     		b	.L433
 7939              	.L428:
 7940              		.loc 1 3095 3 discriminator 7
 7941 0170 1023     		movs	r3, #16
 7942 0172 87F84330 		strb	r3, [r7, #67]
 7943              		.loc 1 3095 3
 7944 0176 1AE3     		b	.L433
 7945              	.L427:
 7946              		.loc 1 3095 3 discriminator 8
 7947 0178 2023     		movs	r3, #32
 7948 017a 87F84330 		strb	r3, [r7, #67]
 7949              		.loc 1 3095 3
 7950 017e 16E3     		b	.L433
 7951              	.L425:
 7952              		.loc 1 3095 3 discriminator 9
 7953 0180 4023     		movs	r3, #64
 7954 0182 87F84330 		strb	r3, [r7, #67]
 7955              		.loc 1 3095 3
 7956 0186 12E3     		b	.L433
 7957              	.L424:
 7958              		.loc 1 3095 3 discriminator 3
 7959 0188 8023     		movs	r3, #128
 7960 018a 87F84330 		strb	r3, [r7, #67]
 7961              		.loc 1 3095 3
 7962 018e 0EE3     		b	.L433
 7963              	.L423:
 7964              		.loc 1 3095 3 discriminator 2
 7965 0190 7B69     		ldr	r3, [r7, #20]
 7966 0192 1B68     		ldr	r3, [r3]
 7967 0194 694A     		ldr	r2, .L586+20
 7968 0196 9342     		cmp	r3, r2
 7969 0198 30D1     		bne	.L434
 7970              		.loc 1 3095 3 discriminator 10
 7971 019a 674B     		ldr	r3, .L586+16
 7972 019c 5B6D     		ldr	r3, [r3, #84]
 7973 019e 03F00703 		and	r3, r3, #7
 7974 01a2 052B     		cmp	r3, #5
 7975 01a4 26D8     		bhi	.L435
 7976 01a6 01A2     		adr	r2, .L437
 7977 01a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7978              		.p2align 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 218


 7979              	.L437:
 7980 01ac C5010000 		.word	.L442+1
 7981 01b0 CD010000 		.word	.L441+1
 7982 01b4 D5010000 		.word	.L440+1
 7983 01b8 DD010000 		.word	.L439+1
 7984 01bc E5010000 		.word	.L438+1
 7985 01c0 ED010000 		.word	.L436+1
 7986              		.p2align 1
 7987              	.L442:
 7988              		.loc 1 3095 3 discriminator 13
 7989 01c4 0023     		movs	r3, #0
 7990 01c6 87F84330 		strb	r3, [r7, #67]
 7991              		.loc 1 3095 3
 7992 01ca F0E2     		b	.L433
 7993              	.L441:
 7994              		.loc 1 3095 3 discriminator 14
 7995 01cc 0423     		movs	r3, #4
 7996 01ce 87F84330 		strb	r3, [r7, #67]
 7997              		.loc 1 3095 3
 7998 01d2 ECE2     		b	.L433
 7999              	.L440:
 8000              		.loc 1 3095 3 discriminator 15
 8001 01d4 0823     		movs	r3, #8
 8002 01d6 87F84330 		strb	r3, [r7, #67]
 8003              		.loc 1 3095 3
 8004 01da E8E2     		b	.L433
 8005              	.L439:
 8006              		.loc 1 3095 3 discriminator 16
 8007 01dc 1023     		movs	r3, #16
 8008 01de 87F84330 		strb	r3, [r7, #67]
 8009              		.loc 1 3095 3
 8010 01e2 E4E2     		b	.L433
 8011              	.L438:
 8012              		.loc 1 3095 3 discriminator 17
 8013 01e4 2023     		movs	r3, #32
 8014 01e6 87F84330 		strb	r3, [r7, #67]
 8015              		.loc 1 3095 3
 8016 01ea E0E2     		b	.L433
 8017              	.L436:
 8018              		.loc 1 3095 3 discriminator 18
 8019 01ec 4023     		movs	r3, #64
 8020 01ee 87F84330 		strb	r3, [r7, #67]
 8021              		.loc 1 3095 3
 8022 01f2 DCE2     		b	.L433
 8023              	.L435:
 8024              		.loc 1 3095 3 discriminator 12
 8025 01f4 8023     		movs	r3, #128
 8026 01f6 87F84330 		strb	r3, [r7, #67]
 8027              		.loc 1 3095 3
 8028 01fa D8E2     		b	.L433
 8029              	.L434:
 8030              		.loc 1 3095 3 discriminator 11
 8031 01fc 7B69     		ldr	r3, [r7, #20]
 8032 01fe 1B68     		ldr	r3, [r3]
 8033 0200 4F4A     		ldr	r2, .L586+24
 8034 0202 9342     		cmp	r3, r2
 8035 0204 30D1     		bne	.L444
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 219


 8036              		.loc 1 3095 3 discriminator 19
 8037 0206 4C4B     		ldr	r3, .L586+16
 8038 0208 5B6D     		ldr	r3, [r3, #84]
 8039 020a 03F00703 		and	r3, r3, #7
 8040 020e 052B     		cmp	r3, #5
 8041 0210 26D8     		bhi	.L445
 8042 0212 01A2     		adr	r2, .L447
 8043 0214 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8044              		.p2align 2
 8045              	.L447:
 8046 0218 31020000 		.word	.L452+1
 8047 021c 39020000 		.word	.L451+1
 8048 0220 41020000 		.word	.L450+1
 8049 0224 49020000 		.word	.L449+1
 8050 0228 51020000 		.word	.L448+1
 8051 022c 59020000 		.word	.L446+1
 8052              		.p2align 1
 8053              	.L452:
 8054              		.loc 1 3095 3 discriminator 22
 8055 0230 0023     		movs	r3, #0
 8056 0232 87F84330 		strb	r3, [r7, #67]
 8057              		.loc 1 3095 3
 8058 0236 BAE2     		b	.L433
 8059              	.L451:
 8060              		.loc 1 3095 3 discriminator 23
 8061 0238 0423     		movs	r3, #4
 8062 023a 87F84330 		strb	r3, [r7, #67]
 8063              		.loc 1 3095 3
 8064 023e B6E2     		b	.L433
 8065              	.L450:
 8066              		.loc 1 3095 3 discriminator 24
 8067 0240 0823     		movs	r3, #8
 8068 0242 87F84330 		strb	r3, [r7, #67]
 8069              		.loc 1 3095 3
 8070 0246 B2E2     		b	.L433
 8071              	.L449:
 8072              		.loc 1 3095 3 discriminator 25
 8073 0248 1023     		movs	r3, #16
 8074 024a 87F84330 		strb	r3, [r7, #67]
 8075              		.loc 1 3095 3
 8076 024e AEE2     		b	.L433
 8077              	.L448:
 8078              		.loc 1 3095 3 discriminator 26
 8079 0250 2023     		movs	r3, #32
 8080 0252 87F84330 		strb	r3, [r7, #67]
 8081              		.loc 1 3095 3
 8082 0256 AAE2     		b	.L433
 8083              	.L446:
 8084              		.loc 1 3095 3 discriminator 27
 8085 0258 4023     		movs	r3, #64
 8086 025a 87F84330 		strb	r3, [r7, #67]
 8087              		.loc 1 3095 3
 8088 025e A6E2     		b	.L433
 8089              	.L445:
 8090              		.loc 1 3095 3 discriminator 21
 8091 0260 8023     		movs	r3, #128
 8092 0262 87F84330 		strb	r3, [r7, #67]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 220


 8093              		.loc 1 3095 3
 8094 0266 A2E2     		b	.L433
 8095              	.L444:
 8096              		.loc 1 3095 3 discriminator 20
 8097 0268 7B69     		ldr	r3, [r7, #20]
 8098 026a 1B68     		ldr	r3, [r3]
 8099 026c 354A     		ldr	r2, .L586+28
 8100 026e 9342     		cmp	r3, r2
 8101 0270 30D1     		bne	.L454
 8102              		.loc 1 3095 3 discriminator 28
 8103 0272 314B     		ldr	r3, .L586+16
 8104 0274 5B6D     		ldr	r3, [r3, #84]
 8105 0276 03F00703 		and	r3, r3, #7
 8106 027a 052B     		cmp	r3, #5
 8107 027c 26D8     		bhi	.L455
 8108 027e 01A2     		adr	r2, .L457
 8109 0280 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8110              		.p2align 2
 8111              	.L457:
 8112 0284 9D020000 		.word	.L462+1
 8113 0288 A5020000 		.word	.L461+1
 8114 028c AD020000 		.word	.L460+1
 8115 0290 B5020000 		.word	.L459+1
 8116 0294 BD020000 		.word	.L458+1
 8117 0298 C5020000 		.word	.L456+1
 8118              		.p2align 1
 8119              	.L462:
 8120              		.loc 1 3095 3 discriminator 31
 8121 029c 0023     		movs	r3, #0
 8122 029e 87F84330 		strb	r3, [r7, #67]
 8123              		.loc 1 3095 3
 8124 02a2 84E2     		b	.L433
 8125              	.L461:
 8126              		.loc 1 3095 3 discriminator 32
 8127 02a4 0423     		movs	r3, #4
 8128 02a6 87F84330 		strb	r3, [r7, #67]
 8129              		.loc 1 3095 3
 8130 02aa 80E2     		b	.L433
 8131              	.L460:
 8132              		.loc 1 3095 3 discriminator 33
 8133 02ac 0823     		movs	r3, #8
 8134 02ae 87F84330 		strb	r3, [r7, #67]
 8135              		.loc 1 3095 3
 8136 02b2 7CE2     		b	.L433
 8137              	.L459:
 8138              		.loc 1 3095 3 discriminator 34
 8139 02b4 1023     		movs	r3, #16
 8140 02b6 87F84330 		strb	r3, [r7, #67]
 8141              		.loc 1 3095 3
 8142 02ba 78E2     		b	.L433
 8143              	.L458:
 8144              		.loc 1 3095 3 discriminator 35
 8145 02bc 2023     		movs	r3, #32
 8146 02be 87F84330 		strb	r3, [r7, #67]
 8147              		.loc 1 3095 3
 8148 02c2 74E2     		b	.L433
 8149              	.L456:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 221


 8150              		.loc 1 3095 3 discriminator 36
 8151 02c4 4023     		movs	r3, #64
 8152 02c6 87F84330 		strb	r3, [r7, #67]
 8153              		.loc 1 3095 3
 8154 02ca 70E2     		b	.L433
 8155              	.L455:
 8156              		.loc 1 3095 3 discriminator 30
 8157 02cc 8023     		movs	r3, #128
 8158 02ce 87F84330 		strb	r3, [r7, #67]
 8159              		.loc 1 3095 3
 8160 02d2 6CE2     		b	.L433
 8161              	.L454:
 8162              		.loc 1 3095 3 discriminator 29
 8163 02d4 7B69     		ldr	r3, [r7, #20]
 8164 02d6 1B68     		ldr	r3, [r3]
 8165 02d8 1B4A     		ldr	r2, .L586+32
 8166 02da 9342     		cmp	r3, r2
 8167 02dc 42D1     		bne	.L464
 8168              		.loc 1 3095 3 discriminator 37
 8169 02de 164B     		ldr	r3, .L586+16
 8170 02e0 5B6D     		ldr	r3, [r3, #84]
 8171 02e2 03F00703 		and	r3, r3, #7
 8172 02e6 052B     		cmp	r3, #5
 8173 02e8 38D8     		bhi	.L465
 8174 02ea 01A2     		adr	r2, .L467
 8175 02ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8176              		.p2align 2
 8177              	.L467:
 8178 02f0 09030000 		.word	.L472+1
 8179 02f4 11030000 		.word	.L471+1
 8180 02f8 19030000 		.word	.L470+1
 8181 02fc 21030000 		.word	.L469+1
 8182 0300 4D030000 		.word	.L468+1
 8183 0304 55030000 		.word	.L466+1
 8184              		.p2align 1
 8185              	.L472:
 8186              		.loc 1 3095 3 discriminator 40
 8187 0308 0023     		movs	r3, #0
 8188 030a 87F84330 		strb	r3, [r7, #67]
 8189              		.loc 1 3095 3
 8190 030e 4EE2     		b	.L433
 8191              	.L471:
 8192              		.loc 1 3095 3 discriminator 41
 8193 0310 0423     		movs	r3, #4
 8194 0312 87F84330 		strb	r3, [r7, #67]
 8195              		.loc 1 3095 3
 8196 0316 4AE2     		b	.L433
 8197              	.L470:
 8198              		.loc 1 3095 3 discriminator 42
 8199 0318 0823     		movs	r3, #8
 8200 031a 87F84330 		strb	r3, [r7, #67]
 8201              		.loc 1 3095 3
 8202 031e 46E2     		b	.L433
 8203              	.L469:
 8204              		.loc 1 3095 3 discriminator 43
 8205 0320 1023     		movs	r3, #16
 8206 0322 87F84330 		strb	r3, [r7, #67]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 222


 8207              		.loc 1 3095 3
 8208 0326 42E2     		b	.L433
 8209              	.L587:
 8210              		.align	2
 8211              	.L586:
 8212 0328 F369FFCF 		.word	-805344781
 8213 032c 000C0058 		.word	1476398080
 8214 0330 FFF4FF11 		.word	301987071
 8215 0334 00100140 		.word	1073811456
 8216 0338 00440258 		.word	1476543488
 8217 033c 00440040 		.word	1073759232
 8218 0340 00480040 		.word	1073760256
 8219 0344 004C0040 		.word	1073761280
 8220 0348 00500040 		.word	1073762304
 8221              	.L468:
 8222              		.loc 1 3095 3 discriminator 44
 8223 034c 2023     		movs	r3, #32
 8224 034e 87F84330 		strb	r3, [r7, #67]
 8225              		.loc 1 3095 3
 8226 0352 2CE2     		b	.L433
 8227              	.L466:
 8228              		.loc 1 3095 3 discriminator 45
 8229 0354 4023     		movs	r3, #64
 8230 0356 87F84330 		strb	r3, [r7, #67]
 8231              		.loc 1 3095 3
 8232 035a 28E2     		b	.L433
 8233              	.L465:
 8234              		.loc 1 3095 3 discriminator 39
 8235 035c 8023     		movs	r3, #128
 8236 035e 87F84330 		strb	r3, [r7, #67]
 8237              		.loc 1 3095 3
 8238 0362 24E2     		b	.L433
 8239              	.L464:
 8240              		.loc 1 3095 3 discriminator 38
 8241 0364 7B69     		ldr	r3, [r7, #20]
 8242 0366 1B68     		ldr	r3, [r3]
 8243 0368 B14A     		ldr	r2, .L588
 8244 036a 9342     		cmp	r3, r2
 8245 036c 76D1     		bne	.L474
 8246              		.loc 1 3095 3 discriminator 46
 8247 036e B14B     		ldr	r3, .L588+4
 8248 0370 5B6D     		ldr	r3, [r3, #84]
 8249 0372 03F03803 		and	r3, r3, #56
 8250 0376 282B     		cmp	r3, #40
 8251 0378 6CD8     		bhi	.L475
 8252 037a 01A2     		adr	r2, .L477
 8253 037c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8254              		.p2align 2
 8255              	.L477:
 8256 0380 25040000 		.word	.L482+1
 8257 0384 55040000 		.word	.L475+1
 8258 0388 55040000 		.word	.L475+1
 8259 038c 55040000 		.word	.L475+1
 8260 0390 55040000 		.word	.L475+1
 8261 0394 55040000 		.word	.L475+1
 8262 0398 55040000 		.word	.L475+1
 8263 039c 55040000 		.word	.L475+1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 223


 8264 03a0 2D040000 		.word	.L481+1
 8265 03a4 55040000 		.word	.L475+1
 8266 03a8 55040000 		.word	.L475+1
 8267 03ac 55040000 		.word	.L475+1
 8268 03b0 55040000 		.word	.L475+1
 8269 03b4 55040000 		.word	.L475+1
 8270 03b8 55040000 		.word	.L475+1
 8271 03bc 55040000 		.word	.L475+1
 8272 03c0 35040000 		.word	.L480+1
 8273 03c4 55040000 		.word	.L475+1
 8274 03c8 55040000 		.word	.L475+1
 8275 03cc 55040000 		.word	.L475+1
 8276 03d0 55040000 		.word	.L475+1
 8277 03d4 55040000 		.word	.L475+1
 8278 03d8 55040000 		.word	.L475+1
 8279 03dc 55040000 		.word	.L475+1
 8280 03e0 3D040000 		.word	.L479+1
 8281 03e4 55040000 		.word	.L475+1
 8282 03e8 55040000 		.word	.L475+1
 8283 03ec 55040000 		.word	.L475+1
 8284 03f0 55040000 		.word	.L475+1
 8285 03f4 55040000 		.word	.L475+1
 8286 03f8 55040000 		.word	.L475+1
 8287 03fc 55040000 		.word	.L475+1
 8288 0400 45040000 		.word	.L478+1
 8289 0404 55040000 		.word	.L475+1
 8290 0408 55040000 		.word	.L475+1
 8291 040c 55040000 		.word	.L475+1
 8292 0410 55040000 		.word	.L475+1
 8293 0414 55040000 		.word	.L475+1
 8294 0418 55040000 		.word	.L475+1
 8295 041c 55040000 		.word	.L475+1
 8296 0420 4D040000 		.word	.L476+1
 8297              		.p2align 1
 8298              	.L482:
 8299              		.loc 1 3095 3 discriminator 49
 8300 0424 0123     		movs	r3, #1
 8301 0426 87F84330 		strb	r3, [r7, #67]
 8302              		.loc 1 3095 3
 8303 042a C0E1     		b	.L433
 8304              	.L481:
 8305              		.loc 1 3095 3 discriminator 50
 8306 042c 0423     		movs	r3, #4
 8307 042e 87F84330 		strb	r3, [r7, #67]
 8308              		.loc 1 3095 3
 8309 0432 BCE1     		b	.L433
 8310              	.L480:
 8311              		.loc 1 3095 3 discriminator 51
 8312 0434 0823     		movs	r3, #8
 8313 0436 87F84330 		strb	r3, [r7, #67]
 8314              		.loc 1 3095 3
 8315 043a B8E1     		b	.L433
 8316              	.L479:
 8317              		.loc 1 3095 3 discriminator 52
 8318 043c 1023     		movs	r3, #16
 8319 043e 87F84330 		strb	r3, [r7, #67]
 8320              		.loc 1 3095 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 224


 8321 0442 B4E1     		b	.L433
 8322              	.L478:
 8323              		.loc 1 3095 3 discriminator 53
 8324 0444 2023     		movs	r3, #32
 8325 0446 87F84330 		strb	r3, [r7, #67]
 8326              		.loc 1 3095 3
 8327 044a B0E1     		b	.L433
 8328              	.L476:
 8329              		.loc 1 3095 3 discriminator 54
 8330 044c 4023     		movs	r3, #64
 8331 044e 87F84330 		strb	r3, [r7, #67]
 8332              		.loc 1 3095 3
 8333 0452 ACE1     		b	.L433
 8334              	.L475:
 8335              		.loc 1 3095 3 discriminator 48
 8336 0454 8023     		movs	r3, #128
 8337 0456 87F84330 		strb	r3, [r7, #67]
 8338              		.loc 1 3095 3
 8339 045a A8E1     		b	.L433
 8340              	.L474:
 8341              		.loc 1 3095 3 discriminator 47
 8342 045c 7B69     		ldr	r3, [r7, #20]
 8343 045e 1B68     		ldr	r3, [r3]
 8344 0460 754A     		ldr	r2, .L588+8
 8345 0462 9342     		cmp	r3, r2
 8346 0464 30D1     		bne	.L484
 8347              		.loc 1 3095 3 discriminator 55
 8348 0466 734B     		ldr	r3, .L588+4
 8349 0468 5B6D     		ldr	r3, [r3, #84]
 8350 046a 03F00703 		and	r3, r3, #7
 8351 046e 052B     		cmp	r3, #5
 8352 0470 26D8     		bhi	.L485
 8353 0472 01A2     		adr	r2, .L487
 8354 0474 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8355              		.p2align 2
 8356              	.L487:
 8357 0478 91040000 		.word	.L492+1
 8358 047c 99040000 		.word	.L491+1
 8359 0480 A1040000 		.word	.L490+1
 8360 0484 A9040000 		.word	.L489+1
 8361 0488 B1040000 		.word	.L488+1
 8362 048c B9040000 		.word	.L486+1
 8363              		.p2align 1
 8364              	.L492:
 8365              		.loc 1 3095 3 discriminator 58
 8366 0490 0023     		movs	r3, #0
 8367 0492 87F84330 		strb	r3, [r7, #67]
 8368              		.loc 1 3095 3
 8369 0496 8AE1     		b	.L433
 8370              	.L491:
 8371              		.loc 1 3095 3 discriminator 59
 8372 0498 0423     		movs	r3, #4
 8373 049a 87F84330 		strb	r3, [r7, #67]
 8374              		.loc 1 3095 3
 8375 049e 86E1     		b	.L433
 8376              	.L490:
 8377              		.loc 1 3095 3 discriminator 60
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 225


 8378 04a0 0823     		movs	r3, #8
 8379 04a2 87F84330 		strb	r3, [r7, #67]
 8380              		.loc 1 3095 3
 8381 04a6 82E1     		b	.L433
 8382              	.L489:
 8383              		.loc 1 3095 3 discriminator 61
 8384 04a8 1023     		movs	r3, #16
 8385 04aa 87F84330 		strb	r3, [r7, #67]
 8386              		.loc 1 3095 3
 8387 04ae 7EE1     		b	.L433
 8388              	.L488:
 8389              		.loc 1 3095 3 discriminator 62
 8390 04b0 2023     		movs	r3, #32
 8391 04b2 87F84330 		strb	r3, [r7, #67]
 8392              		.loc 1 3095 3
 8393 04b6 7AE1     		b	.L433
 8394              	.L486:
 8395              		.loc 1 3095 3 discriminator 63
 8396 04b8 4023     		movs	r3, #64
 8397 04ba 87F84330 		strb	r3, [r7, #67]
 8398              		.loc 1 3095 3
 8399 04be 76E1     		b	.L433
 8400              	.L485:
 8401              		.loc 1 3095 3 discriminator 57
 8402 04c0 8023     		movs	r3, #128
 8403 04c2 87F84330 		strb	r3, [r7, #67]
 8404              		.loc 1 3095 3
 8405 04c6 72E1     		b	.L433
 8406              	.L484:
 8407              		.loc 1 3095 3 discriminator 56
 8408 04c8 7B69     		ldr	r3, [r7, #20]
 8409 04ca 1B68     		ldr	r3, [r3]
 8410 04cc 5B4A     		ldr	r2, .L588+12
 8411 04ce 9342     		cmp	r3, r2
 8412 04d0 30D1     		bne	.L494
 8413              		.loc 1 3095 3 discriminator 64
 8414 04d2 584B     		ldr	r3, .L588+4
 8415 04d4 5B6D     		ldr	r3, [r3, #84]
 8416 04d6 03F00703 		and	r3, r3, #7
 8417 04da 052B     		cmp	r3, #5
 8418 04dc 26D8     		bhi	.L495
 8419 04de 01A2     		adr	r2, .L497
 8420 04e0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8421              		.p2align 2
 8422              	.L497:
 8423 04e4 FD040000 		.word	.L502+1
 8424 04e8 05050000 		.word	.L501+1
 8425 04ec 0D050000 		.word	.L500+1
 8426 04f0 15050000 		.word	.L499+1
 8427 04f4 1D050000 		.word	.L498+1
 8428 04f8 25050000 		.word	.L496+1
 8429              		.p2align 1
 8430              	.L502:
 8431              		.loc 1 3095 3 discriminator 67
 8432 04fc 0023     		movs	r3, #0
 8433 04fe 87F84330 		strb	r3, [r7, #67]
 8434              		.loc 1 3095 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 226


 8435 0502 54E1     		b	.L433
 8436              	.L501:
 8437              		.loc 1 3095 3 discriminator 68
 8438 0504 0423     		movs	r3, #4
 8439 0506 87F84330 		strb	r3, [r7, #67]
 8440              		.loc 1 3095 3
 8441 050a 50E1     		b	.L433
 8442              	.L500:
 8443              		.loc 1 3095 3 discriminator 69
 8444 050c 0823     		movs	r3, #8
 8445 050e 87F84330 		strb	r3, [r7, #67]
 8446              		.loc 1 3095 3
 8447 0512 4CE1     		b	.L433
 8448              	.L499:
 8449              		.loc 1 3095 3 discriminator 70
 8450 0514 1023     		movs	r3, #16
 8451 0516 87F84330 		strb	r3, [r7, #67]
 8452              		.loc 1 3095 3
 8453 051a 48E1     		b	.L433
 8454              	.L498:
 8455              		.loc 1 3095 3 discriminator 71
 8456 051c 2023     		movs	r3, #32
 8457 051e 87F84330 		strb	r3, [r7, #67]
 8458              		.loc 1 3095 3
 8459 0522 44E1     		b	.L433
 8460              	.L496:
 8461              		.loc 1 3095 3 discriminator 72
 8462 0524 4023     		movs	r3, #64
 8463 0526 87F84330 		strb	r3, [r7, #67]
 8464              		.loc 1 3095 3
 8465 052a 40E1     		b	.L433
 8466              	.L495:
 8467              		.loc 1 3095 3 discriminator 66
 8468 052c 8023     		movs	r3, #128
 8469 052e 87F84330 		strb	r3, [r7, #67]
 8470              		.loc 1 3095 3
 8471 0532 3CE1     		b	.L433
 8472              	.L494:
 8473              		.loc 1 3095 3 discriminator 65
 8474 0534 7B69     		ldr	r3, [r7, #20]
 8475 0536 1B68     		ldr	r3, [r3]
 8476 0538 414A     		ldr	r2, .L588+16
 8477 053a 9342     		cmp	r3, r2
 8478 053c 40F08280 		bne	.L504
 8479              		.loc 1 3095 3 discriminator 73
 8480 0540 3C4B     		ldr	r3, .L588+4
 8481 0542 5B6D     		ldr	r3, [r3, #84]
 8482 0544 03F03803 		and	r3, r3, #56
 8483 0548 282B     		cmp	r3, #40
 8484 054a 6DD8     		bhi	.L505
 8485 054c 01A2     		adr	r2, .L507
 8486 054e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8487 0552 00BF     		.p2align 2
 8488              	.L507:
 8489 0554 F9050000 		.word	.L512+1
 8490 0558 29060000 		.word	.L505+1
 8491 055c 29060000 		.word	.L505+1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 227


 8492 0560 29060000 		.word	.L505+1
 8493 0564 29060000 		.word	.L505+1
 8494 0568 29060000 		.word	.L505+1
 8495 056c 29060000 		.word	.L505+1
 8496 0570 29060000 		.word	.L505+1
 8497 0574 01060000 		.word	.L511+1
 8498 0578 29060000 		.word	.L505+1
 8499 057c 29060000 		.word	.L505+1
 8500 0580 29060000 		.word	.L505+1
 8501 0584 29060000 		.word	.L505+1
 8502 0588 29060000 		.word	.L505+1
 8503 058c 29060000 		.word	.L505+1
 8504 0590 29060000 		.word	.L505+1
 8505 0594 09060000 		.word	.L510+1
 8506 0598 29060000 		.word	.L505+1
 8507 059c 29060000 		.word	.L505+1
 8508 05a0 29060000 		.word	.L505+1
 8509 05a4 29060000 		.word	.L505+1
 8510 05a8 29060000 		.word	.L505+1
 8511 05ac 29060000 		.word	.L505+1
 8512 05b0 29060000 		.word	.L505+1
 8513 05b4 11060000 		.word	.L509+1
 8514 05b8 29060000 		.word	.L505+1
 8515 05bc 29060000 		.word	.L505+1
 8516 05c0 29060000 		.word	.L505+1
 8517 05c4 29060000 		.word	.L505+1
 8518 05c8 29060000 		.word	.L505+1
 8519 05cc 29060000 		.word	.L505+1
 8520 05d0 29060000 		.word	.L505+1
 8521 05d4 19060000 		.word	.L508+1
 8522 05d8 29060000 		.word	.L505+1
 8523 05dc 29060000 		.word	.L505+1
 8524 05e0 29060000 		.word	.L505+1
 8525 05e4 29060000 		.word	.L505+1
 8526 05e8 29060000 		.word	.L505+1
 8527 05ec 29060000 		.word	.L505+1
 8528 05f0 29060000 		.word	.L505+1
 8529 05f4 21060000 		.word	.L506+1
 8530              		.p2align 1
 8531              	.L512:
 8532              		.loc 1 3095 3 discriminator 76
 8533 05f8 0123     		movs	r3, #1
 8534 05fa 87F84330 		strb	r3, [r7, #67]
 8535              		.loc 1 3095 3
 8536 05fe D6E0     		b	.L433
 8537              	.L511:
 8538              		.loc 1 3095 3 discriminator 77
 8539 0600 0423     		movs	r3, #4
 8540 0602 87F84330 		strb	r3, [r7, #67]
 8541              		.loc 1 3095 3
 8542 0606 D2E0     		b	.L433
 8543              	.L510:
 8544              		.loc 1 3095 3 discriminator 78
 8545 0608 0823     		movs	r3, #8
 8546 060a 87F84330 		strb	r3, [r7, #67]
 8547              		.loc 1 3095 3
 8548 060e CEE0     		b	.L433
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 228


 8549              	.L509:
 8550              		.loc 1 3095 3 discriminator 79
 8551 0610 1023     		movs	r3, #16
 8552 0612 87F84330 		strb	r3, [r7, #67]
 8553              		.loc 1 3095 3
 8554 0616 CAE0     		b	.L433
 8555              	.L508:
 8556              		.loc 1 3095 3 discriminator 80
 8557 0618 2023     		movs	r3, #32
 8558 061a 87F84330 		strb	r3, [r7, #67]
 8559              		.loc 1 3095 3
 8560 061e C6E0     		b	.L433
 8561              	.L506:
 8562              		.loc 1 3095 3 discriminator 81
 8563 0620 4023     		movs	r3, #64
 8564 0622 87F84330 		strb	r3, [r7, #67]
 8565              		.loc 1 3095 3
 8566 0626 C2E0     		b	.L433
 8567              	.L505:
 8568              		.loc 1 3095 3 discriminator 75
 8569 0628 8023     		movs	r3, #128
 8570 062a 87F84330 		strb	r3, [r7, #67]
 8571              		.loc 1 3095 3
 8572 062e BEE0     		b	.L433
 8573              	.L589:
 8574              		.align	2
 8575              	.L588:
 8576 0630 00140140 		.word	1073812480
 8577 0634 00440258 		.word	1476543488
 8578 0638 00780040 		.word	1073772544
 8579 063c 007C0040 		.word	1073773568
 8580 0640 00180140 		.word	1073813504
 8581              	.L504:
 8582              		.loc 1 3095 3 discriminator 74
 8583 0644 7B69     		ldr	r3, [r7, #20]
 8584 0646 1B68     		ldr	r3, [r3]
 8585 0648 AD4A     		ldr	r2, .L590
 8586 064a 9342     		cmp	r3, r2
 8587 064c 76D1     		bne	.L514
 8588              		.loc 1 3095 3 discriminator 82
 8589 064e AD4B     		ldr	r3, .L590+4
 8590 0650 5B6D     		ldr	r3, [r3, #84]
 8591 0652 03F03803 		and	r3, r3, #56
 8592 0656 282B     		cmp	r3, #40
 8593 0658 6CD8     		bhi	.L515
 8594 065a 01A2     		adr	r2, .L517
 8595 065c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8596              		.p2align 2
 8597              	.L517:
 8598 0660 05070000 		.word	.L522+1
 8599 0664 35070000 		.word	.L515+1
 8600 0668 35070000 		.word	.L515+1
 8601 066c 35070000 		.word	.L515+1
 8602 0670 35070000 		.word	.L515+1
 8603 0674 35070000 		.word	.L515+1
 8604 0678 35070000 		.word	.L515+1
 8605 067c 35070000 		.word	.L515+1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 229


 8606 0680 0D070000 		.word	.L521+1
 8607 0684 35070000 		.word	.L515+1
 8608 0688 35070000 		.word	.L515+1
 8609 068c 35070000 		.word	.L515+1
 8610 0690 35070000 		.word	.L515+1
 8611 0694 35070000 		.word	.L515+1
 8612 0698 35070000 		.word	.L515+1
 8613 069c 35070000 		.word	.L515+1
 8614 06a0 15070000 		.word	.L520+1
 8615 06a4 35070000 		.word	.L515+1
 8616 06a8 35070000 		.word	.L515+1
 8617 06ac 35070000 		.word	.L515+1
 8618 06b0 35070000 		.word	.L515+1
 8619 06b4 35070000 		.word	.L515+1
 8620 06b8 35070000 		.word	.L515+1
 8621 06bc 35070000 		.word	.L515+1
 8622 06c0 1D070000 		.word	.L519+1
 8623 06c4 35070000 		.word	.L515+1
 8624 06c8 35070000 		.word	.L515+1
 8625 06cc 35070000 		.word	.L515+1
 8626 06d0 35070000 		.word	.L515+1
 8627 06d4 35070000 		.word	.L515+1
 8628 06d8 35070000 		.word	.L515+1
 8629 06dc 35070000 		.word	.L515+1
 8630 06e0 25070000 		.word	.L518+1
 8631 06e4 35070000 		.word	.L515+1
 8632 06e8 35070000 		.word	.L515+1
 8633 06ec 35070000 		.word	.L515+1
 8634 06f0 35070000 		.word	.L515+1
 8635 06f4 35070000 		.word	.L515+1
 8636 06f8 35070000 		.word	.L515+1
 8637 06fc 35070000 		.word	.L515+1
 8638 0700 2D070000 		.word	.L516+1
 8639              		.p2align 1
 8640              	.L522:
 8641              		.loc 1 3095 3 discriminator 85
 8642 0704 0123     		movs	r3, #1
 8643 0706 87F84330 		strb	r3, [r7, #67]
 8644              		.loc 1 3095 3
 8645 070a 50E0     		b	.L433
 8646              	.L521:
 8647              		.loc 1 3095 3 discriminator 86
 8648 070c 0423     		movs	r3, #4
 8649 070e 87F84330 		strb	r3, [r7, #67]
 8650              		.loc 1 3095 3
 8651 0712 4CE0     		b	.L433
 8652              	.L520:
 8653              		.loc 1 3095 3 discriminator 87
 8654 0714 0823     		movs	r3, #8
 8655 0716 87F84330 		strb	r3, [r7, #67]
 8656              		.loc 1 3095 3
 8657 071a 48E0     		b	.L433
 8658              	.L519:
 8659              		.loc 1 3095 3 discriminator 88
 8660 071c 1023     		movs	r3, #16
 8661 071e 87F84330 		strb	r3, [r7, #67]
 8662              		.loc 1 3095 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 230


 8663 0722 44E0     		b	.L433
 8664              	.L518:
 8665              		.loc 1 3095 3 discriminator 89
 8666 0724 2023     		movs	r3, #32
 8667 0726 87F84330 		strb	r3, [r7, #67]
 8668              		.loc 1 3095 3
 8669 072a 40E0     		b	.L433
 8670              	.L516:
 8671              		.loc 1 3095 3 discriminator 90
 8672 072c 4023     		movs	r3, #64
 8673 072e 87F84330 		strb	r3, [r7, #67]
 8674              		.loc 1 3095 3
 8675 0732 3CE0     		b	.L433
 8676              	.L515:
 8677              		.loc 1 3095 3 discriminator 84
 8678 0734 8023     		movs	r3, #128
 8679 0736 87F84330 		strb	r3, [r7, #67]
 8680              		.loc 1 3095 3
 8681 073a 38E0     		b	.L433
 8682              	.L514:
 8683              		.loc 1 3095 3 discriminator 83
 8684 073c 7B69     		ldr	r3, [r7, #20]
 8685 073e 1B68     		ldr	r3, [r3]
 8686 0740 714A     		ldr	r2, .L590+8
 8687 0742 9342     		cmp	r3, r2
 8688 0744 30D1     		bne	.L524
 8689              		.loc 1 3095 3 discriminator 91
 8690 0746 6F4B     		ldr	r3, .L590+4
 8691 0748 9B6D     		ldr	r3, [r3, #88]
 8692 074a 03F00703 		and	r3, r3, #7
 8693 074e 052B     		cmp	r3, #5
 8694 0750 26D8     		bhi	.L525
 8695 0752 01A2     		adr	r2, .L527
 8696 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8697              		.p2align 2
 8698              	.L527:
 8699 0758 71070000 		.word	.L532+1
 8700 075c 79070000 		.word	.L531+1
 8701 0760 81070000 		.word	.L530+1
 8702 0764 89070000 		.word	.L529+1
 8703 0768 91070000 		.word	.L528+1
 8704 076c 99070000 		.word	.L526+1
 8705              		.p2align 1
 8706              	.L532:
 8707              		.loc 1 3095 3 discriminator 94
 8708 0770 0223     		movs	r3, #2
 8709 0772 87F84330 		strb	r3, [r7, #67]
 8710              		.loc 1 3095 3
 8711 0776 1AE0     		b	.L433
 8712              	.L531:
 8713              		.loc 1 3095 3 discriminator 95
 8714 0778 0423     		movs	r3, #4
 8715 077a 87F84330 		strb	r3, [r7, #67]
 8716              		.loc 1 3095 3
 8717 077e 16E0     		b	.L433
 8718              	.L530:
 8719              		.loc 1 3095 3 discriminator 96
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 231


 8720 0780 0823     		movs	r3, #8
 8721 0782 87F84330 		strb	r3, [r7, #67]
 8722              		.loc 1 3095 3
 8723 0786 12E0     		b	.L433
 8724              	.L529:
 8725              		.loc 1 3095 3 discriminator 97
 8726 0788 1023     		movs	r3, #16
 8727 078a 87F84330 		strb	r3, [r7, #67]
 8728              		.loc 1 3095 3
 8729 078e 0EE0     		b	.L433
 8730              	.L528:
 8731              		.loc 1 3095 3 discriminator 98
 8732 0790 2023     		movs	r3, #32
 8733 0792 87F84330 		strb	r3, [r7, #67]
 8734              		.loc 1 3095 3
 8735 0796 0AE0     		b	.L433
 8736              	.L526:
 8737              		.loc 1 3095 3 discriminator 99
 8738 0798 4023     		movs	r3, #64
 8739 079a 87F84330 		strb	r3, [r7, #67]
 8740              		.loc 1 3095 3
 8741 079e 06E0     		b	.L433
 8742              	.L525:
 8743              		.loc 1 3095 3 discriminator 93
 8744 07a0 8023     		movs	r3, #128
 8745 07a2 87F84330 		strb	r3, [r7, #67]
 8746              		.loc 1 3095 3
 8747 07a6 02E0     		b	.L433
 8748              	.L524:
 8749              		.loc 1 3095 3 discriminator 92
 8750 07a8 8023     		movs	r3, #128
 8751 07aa 87F84330 		strb	r3, [r7, #67]
 8752              	.L433:
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check LPUART instance */
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 8753              		.loc 1 3098 7 is_stmt 1
 8754 07ae 7B69     		ldr	r3, [r7, #20]
 8755 07b0 1B68     		ldr	r3, [r3]
 8756              		.loc 1 3098 6
 8757 07b2 554A     		ldr	r2, .L590+8
 8758 07b4 9342     		cmp	r3, r2
 8759 07b6 40F0F880 		bne	.L534
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Retrieve frequency clock */
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 8760              		.loc 1 3101 5
 8761 07ba 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 8762 07be 202B     		cmp	r3, #32
 8763 07c0 46DC     		bgt	.L535
 8764 07c2 022B     		cmp	r3, #2
 8765 07c4 75DB     		blt	.L536
 8766 07c6 023B     		subs	r3, r3, #2
 8767 07c8 1E2B     		cmp	r3, #30
 8768 07ca 72D8     		bhi	.L536
 8769 07cc 01A2     		adr	r2, .L538
 8770 07ce 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 232


 8771 07d2 00BF     		.p2align 2
 8772              	.L538:
 8773 07d4 57080000 		.word	.L542+1
 8774 07d8 B3080000 		.word	.L536+1
 8775 07dc 5F080000 		.word	.L541+1
 8776 07e0 B3080000 		.word	.L536+1
 8777 07e4 B3080000 		.word	.L536+1
 8778 07e8 B3080000 		.word	.L536+1
 8779 07ec 6F080000 		.word	.L540+1
 8780 07f0 B3080000 		.word	.L536+1
 8781 07f4 B3080000 		.word	.L536+1
 8782 07f8 B3080000 		.word	.L536+1
 8783 07fc B3080000 		.word	.L536+1
 8784 0800 B3080000 		.word	.L536+1
 8785 0804 B3080000 		.word	.L536+1
 8786 0808 B3080000 		.word	.L536+1
 8787 080c 7F080000 		.word	.L539+1
 8788 0810 B3080000 		.word	.L536+1
 8789 0814 B3080000 		.word	.L536+1
 8790 0818 B3080000 		.word	.L536+1
 8791 081c B3080000 		.word	.L536+1
 8792 0820 B3080000 		.word	.L536+1
 8793 0824 B3080000 		.word	.L536+1
 8794 0828 B3080000 		.word	.L536+1
 8795 082c B3080000 		.word	.L536+1
 8796 0830 B3080000 		.word	.L536+1
 8797 0834 B3080000 		.word	.L536+1
 8798 0838 B3080000 		.word	.L536+1
 8799 083c B3080000 		.word	.L536+1
 8800 0840 B3080000 		.word	.L536+1
 8801 0844 B3080000 		.word	.L536+1
 8802 0848 B3080000 		.word	.L536+1
 8803 084c A5080000 		.word	.L537+1
 8804              		.p2align 1
 8805              	.L535:
 8806 0850 402B     		cmp	r3, #64
 8807 0852 2AD0     		beq	.L543
 8808 0854 2DE0     		b	.L536
 8809              	.L542:
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D3PCLK1:
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCCEx_GetD3PCLK1Freq();
 8810              		.loc 1 3104 16
 8811 0856 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 8812 085a F863     		str	r0, [r7, #60]
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8813              		.loc 1 3105 9
 8814 085c 2FE0     		b	.L544
 8815              	.L541:
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8816              		.loc 1 3107 9
 8817 085e 07F12403 		add	r3, r7, #36
 8818 0862 1846     		mov	r0, r3
 8819 0864 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 8820              		.loc 1 3108 14
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 233


 8821 0868 BB6A     		ldr	r3, [r7, #40]
 8822 086a FB63     		str	r3, [r7, #60]
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8823              		.loc 1 3109 9
 8824 086c 27E0     		b	.L544
 8825              	.L540:
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8826              		.loc 1 3111 9
 8827 086e 07F11803 		add	r3, r7, #24
 8828 0872 1846     		mov	r0, r3
 8829 0874 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 8830              		.loc 1 3112 14
 8831 0878 FB69     		ldr	r3, [r7, #28]
 8832 087a FB63     		str	r3, [r7, #60]
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8833              		.loc 1 3113 9
 8834 087c 1FE0     		b	.L544
 8835              	.L539:
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8836              		.loc 1 3115 13
 8837 087e 214B     		ldr	r3, .L590+4
 8838 0880 1B68     		ldr	r3, [r3]
 8839 0882 03F02003 		and	r3, r3, #32
 8840              		.loc 1 3115 12
 8841 0886 002B     		cmp	r3, #0
 8842 0888 09D0     		beq	.L545
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 8843              		.loc 1 3117 43
 8844 088a 1E4B     		ldr	r3, .L590+4
 8845 088c 1B68     		ldr	r3, [r3]
 8846              		.loc 1 3117 71
 8847 088e DB08     		lsrs	r3, r3, #3
 8848 0890 03F00303 		and	r3, r3, #3
 8849              		.loc 1 3117 16
 8850 0894 1D4A     		ldr	r2, .L590+12
 8851 0896 22FA03F3 		lsr	r3, r2, r3
 8852 089a FB63     		str	r3, [r7, #60]
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8853              		.loc 1 3123 9
 8854 089c 0FE0     		b	.L544
 8855              	.L545:
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 8856              		.loc 1 3121 16
 8857 089e 1B4B     		ldr	r3, .L590+12
 8858 08a0 FB63     		str	r3, [r7, #60]
 8859              		.loc 1 3123 9
 8860 08a2 0CE0     		b	.L544
 8861              	.L537:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 234


3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 8862              		.loc 1 3125 14
 8863 08a4 1A4B     		ldr	r3, .L590+16
 8864 08a6 FB63     		str	r3, [r7, #60]
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8865              		.loc 1 3126 9
 8866 08a8 09E0     		b	.L544
 8867              	.L543:
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 8868              		.loc 1 3128 14
 8869 08aa 4FF40043 		mov	r3, #32768
 8870 08ae FB63     		str	r3, [r7, #60]
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8871              		.loc 1 3129 9
 8872 08b0 05E0     		b	.L544
 8873              	.L536:
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 8874              		.loc 1 3131 14
 8875 08b2 0023     		movs	r3, #0
 8876 08b4 FB63     		str	r3, [r7, #60]
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 8877              		.loc 1 3132 13
 8878 08b6 0123     		movs	r3, #1
 8879 08b8 87F84230 		strb	r3, [r7, #66]
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 8880              		.loc 1 3133 9
 8881 08bc 00BF     		nop
 8882              	.L544:
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If proper clock source reported */
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 8883              		.loc 1 3137 8
 8884 08be FB6B     		ldr	r3, [r7, #60]
 8885 08c0 002B     		cmp	r3, #0
 8886 08c2 00F0EE81 		beq	.L551
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Compute clock after Prescaler */
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 8887              		.loc 1 3140 62
 8888 08c6 7B69     		ldr	r3, [r7, #20]
 8889 08c8 5B6A     		ldr	r3, [r3, #36]
 8890              		.loc 1 3140 50
 8891 08ca 124A     		ldr	r2, .L590+20
 8892 08cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 8893 08d0 1A46     		mov	r2, r3
 8894              		.loc 1 3140 26
 8895 08d2 FB6B     		ldr	r3, [r7, #60]
 8896 08d4 B3FBF2F3 		udiv	r3, r3, r2
 8897 08d8 3B63     		str	r3, [r7, #48]
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8898              		.loc 1 3143 50
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 235


 8899 08da 7B69     		ldr	r3, [r7, #20]
 8900 08dc 5A68     		ldr	r2, [r3, #4]
 8901              		.loc 1 3143 37
 8902 08de 1346     		mov	r3, r2
 8903 08e0 5B00     		lsls	r3, r3, #1
 8904 08e2 1344     		add	r3, r3, r2
 8905              		.loc 1 3143 10
 8906 08e4 3A6B     		ldr	r2, [r7, #48]
 8907 08e6 9A42     		cmp	r2, r3
 8908 08e8 05D3     		bcc	.L548
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8909              		.loc 1 3144 53
 8910 08ea 7B69     		ldr	r3, [r7, #20]
 8911 08ec 5B68     		ldr	r3, [r3, #4]
 8912              		.loc 1 3144 40
 8913 08ee 1B03     		lsls	r3, r3, #12
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8914              		.loc 1 3143 62 discriminator 1
 8915 08f0 3A6B     		ldr	r2, [r7, #48]
 8916 08f2 9A42     		cmp	r2, r3
 8917 08f4 10D9     		bls	.L549
 8918              	.L548:
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 8919              		.loc 1 3146 13
 8920 08f6 0123     		movs	r3, #1
 8921 08f8 87F84230 		strb	r3, [r7, #66]
 8922 08fc D1E1     		b	.L551
 8923              	.L591:
 8924 08fe 00BF     		.align	2
 8925              	.L590:
 8926 0900 001C0140 		.word	1073814528
 8927 0904 00440258 		.word	1476543488
 8928 0908 000C0058 		.word	1476398080
 8929 090c 0090D003 		.word	64000000
 8930 0910 00093D00 		.word	4000000
 8931 0914 00000000 		.word	UARTPrescTable
 8932              	.L549:
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
 8933              		.loc 1 3152 31
 8934 0918 FB6B     		ldr	r3, [r7, #60]
 8935 091a 0022     		movs	r2, #0
 8936 091c BB60     		str	r3, [r7, #8]
 8937 091e FA60     		str	r2, [r7, #12]
 8938 0920 7B69     		ldr	r3, [r7, #20]
 8939 0922 5B6A     		ldr	r3, [r3, #36]
 8940 0924 C04A     		ldr	r2, .L592
 8941 0926 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 8942 092a 9BB2     		uxth	r3, r3
 8943 092c 0022     		movs	r2, #0
 8944 092e 3B60     		str	r3, [r7]
 8945 0930 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 236


 8946 0932 D7E90023 		ldrd	r2, [r7]
 8947 0936 D7E90201 		ldrd	r0, [r7, #8]
 8948 093a FFF7FEFF 		bl	__aeabi_uldivmod
 8949 093e 0246     		mov	r2, r0
 8950 0940 0B46     		mov	r3, r1
 8951 0942 1046     		mov	r0, r2
 8952 0944 1946     		mov	r1, r3
 8953 0946 4FF00002 		mov	r2, #0
 8954 094a 4FF00003 		mov	r3, #0
 8955 094e 0B02     		lsls	r3, r1, #8
 8956 0950 43EA1063 		orr	r3, r3, r0, lsr #24
 8957 0954 0202     		lsls	r2, r0, #8
 8958 0956 7969     		ldr	r1, [r7, #20]
 8959 0958 4968     		ldr	r1, [r1, #4]
 8960 095a 4908     		lsrs	r1, r1, #1
 8961 095c 0020     		movs	r0, #0
 8962 095e 0C46     		mov	r4, r1
 8963 0960 0546     		mov	r5, r0
 8964 0962 12EB0408 		adds	r8, r2, r4
 8965 0966 43EB0509 		adc	r9, r3, r5
 8966 096a 7B69     		ldr	r3, [r7, #20]
 8967 096c 5B68     		ldr	r3, [r3, #4]
 8968 096e 0022     		movs	r2, #0
 8969 0970 9A46     		mov	r10, r3
 8970 0972 9346     		mov	fp, r2
 8971 0974 5246     		mov	r2, r10
 8972 0976 5B46     		mov	r3, fp
 8973 0978 4046     		mov	r0, r8
 8974 097a 4946     		mov	r1, r9
 8975 097c FFF7FEFF 		bl	__aeabi_uldivmod
 8976 0980 0246     		mov	r2, r0
 8977 0982 0B46     		mov	r3, r1
 8978              		.loc 1 3152 18
 8979 0984 1346     		mov	r3, r2
 8980 0986 BB63     		str	r3, [r7, #56]
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8981              		.loc 1 3153 12
 8982 0988 BB6B     		ldr	r3, [r7, #56]
 8983 098a B3F5407F 		cmp	r3, #768
 8984 098e 08D3     		bcc	.L550
 8985              		.loc 1 3153 42 discriminator 1
 8986 0990 BB6B     		ldr	r3, [r7, #56]
 8987 0992 B3F5801F 		cmp	r3, #1048576
 8988 0996 04D2     		bcs	.L550
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 8989              		.loc 1 3155 16
 8990 0998 7B69     		ldr	r3, [r7, #20]
 8991 099a 1B68     		ldr	r3, [r3]
 8992              		.loc 1 3155 32
 8993 099c BA6B     		ldr	r2, [r7, #56]
 8994 099e DA60     		str	r2, [r3, #12]
 8995 09a0 7FE1     		b	.L551
 8996              	.L550:
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 237


3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
 8997              		.loc 1 3159 15
 8998 09a2 0123     		movs	r3, #1
 8999 09a4 87F84230 		strb	r3, [r7, #66]
 9000 09a8 7BE1     		b	.L551
 9001              	.L534:
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     } /* if (pclk != 0) */
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9002              		.loc 1 3166 23
 9003 09aa 7B69     		ldr	r3, [r7, #20]
 9004 09ac DB69     		ldr	r3, [r3, #28]
 9005              		.loc 1 3166 11
 9006 09ae B3F5004F 		cmp	r3, #32768
 9007 09b2 40F0BD80 		bne	.L552
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 9008              		.loc 1 3168 5
 9009 09b6 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 9010 09ba 202B     		cmp	r3, #32
 9011 09bc 48DC     		bgt	.L553
 9012 09be 002B     		cmp	r3, #0
 9013 09c0 7BDB     		blt	.L554
 9014 09c2 202B     		cmp	r3, #32
 9015 09c4 79D8     		bhi	.L554
 9016 09c6 01A2     		adr	r2, .L556
 9017 09c8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9018              		.p2align 2
 9019              	.L556:
 9020 09cc 570A0000 		.word	.L561+1
 9021 09d0 5F0A0000 		.word	.L560+1
 9022 09d4 BB0A0000 		.word	.L554+1
 9023 09d8 BB0A0000 		.word	.L554+1
 9024 09dc 670A0000 		.word	.L559+1
 9025 09e0 BB0A0000 		.word	.L554+1
 9026 09e4 BB0A0000 		.word	.L554+1
 9027 09e8 BB0A0000 		.word	.L554+1
 9028 09ec 770A0000 		.word	.L558+1
 9029 09f0 BB0A0000 		.word	.L554+1
 9030 09f4 BB0A0000 		.word	.L554+1
 9031 09f8 BB0A0000 		.word	.L554+1
 9032 09fc BB0A0000 		.word	.L554+1
 9033 0a00 BB0A0000 		.word	.L554+1
 9034 0a04 BB0A0000 		.word	.L554+1
 9035 0a08 BB0A0000 		.word	.L554+1
 9036 0a0c 870A0000 		.word	.L557+1
 9037 0a10 BB0A0000 		.word	.L554+1
 9038 0a14 BB0A0000 		.word	.L554+1
 9039 0a18 BB0A0000 		.word	.L554+1
 9040 0a1c BB0A0000 		.word	.L554+1
 9041 0a20 BB0A0000 		.word	.L554+1
 9042 0a24 BB0A0000 		.word	.L554+1
 9043 0a28 BB0A0000 		.word	.L554+1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 238


 9044 0a2c BB0A0000 		.word	.L554+1
 9045 0a30 BB0A0000 		.word	.L554+1
 9046 0a34 BB0A0000 		.word	.L554+1
 9047 0a38 BB0A0000 		.word	.L554+1
 9048 0a3c BB0A0000 		.word	.L554+1
 9049 0a40 BB0A0000 		.word	.L554+1
 9050 0a44 BB0A0000 		.word	.L554+1
 9051 0a48 BB0A0000 		.word	.L554+1
 9052 0a4c AD0A0000 		.word	.L555+1
 9053              		.p2align 1
 9054              	.L553:
 9055 0a50 402B     		cmp	r3, #64
 9056 0a52 2ED0     		beq	.L562
 9057 0a54 31E0     		b	.L554
 9058              	.L561:
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 9059              		.loc 1 3171 16
 9060 0a56 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9061 0a5a F863     		str	r0, [r7, #60]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9062              		.loc 1 3172 9
 9063 0a5c 33E0     		b	.L563
 9064              	.L560:
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 9065              		.loc 1 3174 16
 9066 0a5e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9067 0a62 F863     		str	r0, [r7, #60]
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9068              		.loc 1 3175 9
 9069 0a64 2FE0     		b	.L563
 9070              	.L559:
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 9071              		.loc 1 3177 9
 9072 0a66 07F12403 		add	r3, r7, #36
 9073 0a6a 1846     		mov	r0, r3
 9074 0a6c FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 9075              		.loc 1 3178 14
 9076 0a70 BB6A     		ldr	r3, [r7, #40]
 9077 0a72 FB63     		str	r3, [r7, #60]
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9078              		.loc 1 3179 9
 9079 0a74 27E0     		b	.L563
 9080              	.L558:
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 9081              		.loc 1 3181 9
 9082 0a76 07F11803 		add	r3, r7, #24
 9083 0a7a 1846     		mov	r0, r3
 9084 0a7c FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 9085              		.loc 1 3182 14
 9086 0a80 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 239


 9087 0a82 FB63     		str	r3, [r7, #60]
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9088              		.loc 1 3183 9
 9089 0a84 1FE0     		b	.L563
 9090              	.L557:
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 9091              		.loc 1 3185 13
 9092 0a86 694B     		ldr	r3, .L592+4
 9093 0a88 1B68     		ldr	r3, [r3]
 9094 0a8a 03F02003 		and	r3, r3, #32
 9095              		.loc 1 3185 12
 9096 0a8e 002B     		cmp	r3, #0
 9097 0a90 09D0     		beq	.L564
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 9098              		.loc 1 3187 43
 9099 0a92 664B     		ldr	r3, .L592+4
 9100 0a94 1B68     		ldr	r3, [r3]
 9101              		.loc 1 3187 71
 9102 0a96 DB08     		lsrs	r3, r3, #3
 9103 0a98 03F00303 		and	r3, r3, #3
 9104              		.loc 1 3187 16
 9105 0a9c 644A     		ldr	r2, .L592+8
 9106 0a9e 22FA03F3 		lsr	r3, r2, r3
 9107 0aa2 FB63     		str	r3, [r7, #60]
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9108              		.loc 1 3193 9
 9109 0aa4 0FE0     		b	.L563
 9110              	.L564:
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 9111              		.loc 1 3191 16
 9112 0aa6 624B     		ldr	r3, .L592+8
 9113 0aa8 FB63     		str	r3, [r7, #60]
 9114              		.loc 1 3193 9
 9115 0aaa 0CE0     		b	.L563
 9116              	.L555:
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 9117              		.loc 1 3195 14
 9118 0aac 614B     		ldr	r3, .L592+12
 9119 0aae FB63     		str	r3, [r7, #60]
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9120              		.loc 1 3196 9
 9121 0ab0 09E0     		b	.L563
 9122              	.L562:
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 9123              		.loc 1 3198 14
 9124 0ab2 4FF40043 		mov	r3, #32768
 9125 0ab6 FB63     		str	r3, [r7, #60]
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 240


 9126              		.loc 1 3199 9
 9127 0ab8 05E0     		b	.L563
 9128              	.L554:
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 9129              		.loc 1 3201 14
 9130 0aba 0023     		movs	r3, #0
 9131 0abc FB63     		str	r3, [r7, #60]
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 9132              		.loc 1 3202 13
 9133 0abe 0123     		movs	r3, #1
 9134 0ac0 87F84230 		strb	r3, [r7, #66]
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9135              		.loc 1 3203 9
 9136 0ac4 00BF     		nop
 9137              	.L563:
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 9138              		.loc 1 3207 8
 9139 0ac6 FB6B     		ldr	r3, [r7, #60]
 9140 0ac8 002B     		cmp	r3, #0
 9141 0aca 00F0EA80 		beq	.L551
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
 9142              		.loc 1 3209 29
 9143 0ace 7B69     		ldr	r3, [r7, #20]
 9144 0ad0 5B6A     		ldr	r3, [r3, #36]
 9145 0ad2 554A     		ldr	r2, .L592
 9146 0ad4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 9147 0ad8 1A46     		mov	r2, r3
 9148 0ada FB6B     		ldr	r3, [r7, #60]
 9149 0adc B3FBF2F3 		udiv	r3, r3, r2
 9150 0ae0 5A00     		lsls	r2, r3, #1
 9151 0ae2 7B69     		ldr	r3, [r7, #20]
 9152 0ae4 5B68     		ldr	r3, [r3, #4]
 9153 0ae6 5B08     		lsrs	r3, r3, #1
 9154 0ae8 1A44     		add	r2, r2, r3
 9155 0aea 7B69     		ldr	r3, [r7, #20]
 9156 0aec 5B68     		ldr	r3, [r3, #4]
 9157              		.loc 1 3209 16
 9158 0aee B2FBF3F3 		udiv	r3, r2, r3
 9159 0af2 BB63     		str	r3, [r7, #56]
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 9160              		.loc 1 3210 10
 9161 0af4 BB6B     		ldr	r3, [r7, #56]
 9162 0af6 0F2B     		cmp	r3, #15
 9163 0af8 16D9     		bls	.L567
 9164              		.loc 1 3210 38 discriminator 1
 9165 0afa BB6B     		ldr	r3, [r7, #56]
 9166 0afc B3F5803F 		cmp	r3, #65536
 9167 0b00 12D2     		bcs	.L567
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 9168              		.loc 1 3212 19
 9169 0b02 BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 241


 9170 0b04 9BB2     		uxth	r3, r3
 9171              		.loc 1 3212 17
 9172 0b06 23F00F03 		bic	r3, r3, #15
 9173 0b0a FB86     		strh	r3, [r7, #54]	@ movhi
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 9174              		.loc 1 3213 62
 9175 0b0c BB6B     		ldr	r3, [r7, #56]
 9176 0b0e 5B08     		lsrs	r3, r3, #1
 9177              		.loc 1 3213 20
 9178 0b10 9BB2     		uxth	r3, r3
 9179 0b12 03F00703 		and	r3, r3, #7
 9180 0b16 9AB2     		uxth	r2, r3
 9181              		.loc 1 3213 17
 9182 0b18 FB8E     		ldrh	r3, [r7, #54]	@ movhi
 9183 0b1a 1343     		orrs	r3, r3, r2
 9184 0b1c FB86     		strh	r3, [r7, #54]	@ movhi
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 9185              		.loc 1 3214 14
 9186 0b1e 7B69     		ldr	r3, [r7, #20]
 9187 0b20 1B68     		ldr	r3, [r3]
 9188              		.loc 1 3214 30
 9189 0b22 FA8E     		ldrh	r2, [r7, #54]
 9190 0b24 DA60     		str	r2, [r3, #12]
 9191 0b26 BCE0     		b	.L551
 9192              	.L567:
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 9193              		.loc 1 3218 13
 9194 0b28 0123     		movs	r3, #1
 9195 0b2a 87F84230 		strb	r3, [r7, #66]
 9196 0b2e B8E0     		b	.L551
 9197              	.L552:
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
 9198              		.loc 1 3224 5
 9199 0b30 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 9200 0b34 202B     		cmp	r3, #32
 9201 0b36 4BDC     		bgt	.L568
 9202 0b38 002B     		cmp	r3, #0
 9203 0b3a C0F28780 		blt	.L569
 9204 0b3e 202B     		cmp	r3, #32
 9205 0b40 00F28480 		bhi	.L569
 9206 0b44 01A2     		adr	r2, .L571
 9207 0b46 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9208 0b4a 00BF     		.p2align 2
 9209              	.L571:
 9210 0b4c D70B0000 		.word	.L576+1
 9211 0b50 DF0B0000 		.word	.L575+1
 9212 0b54 4D0C0000 		.word	.L569+1
 9213 0b58 4D0C0000 		.word	.L569+1
 9214 0b5c E70B0000 		.word	.L574+1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 242


 9215 0b60 4D0C0000 		.word	.L569+1
 9216 0b64 4D0C0000 		.word	.L569+1
 9217 0b68 4D0C0000 		.word	.L569+1
 9218 0b6c F70B0000 		.word	.L573+1
 9219 0b70 4D0C0000 		.word	.L569+1
 9220 0b74 4D0C0000 		.word	.L569+1
 9221 0b78 4D0C0000 		.word	.L569+1
 9222 0b7c 4D0C0000 		.word	.L569+1
 9223 0b80 4D0C0000 		.word	.L569+1
 9224 0b84 4D0C0000 		.word	.L569+1
 9225 0b88 4D0C0000 		.word	.L569+1
 9226 0b8c 070C0000 		.word	.L572+1
 9227 0b90 4D0C0000 		.word	.L569+1
 9228 0b94 4D0C0000 		.word	.L569+1
 9229 0b98 4D0C0000 		.word	.L569+1
 9230 0b9c 4D0C0000 		.word	.L569+1
 9231 0ba0 4D0C0000 		.word	.L569+1
 9232 0ba4 4D0C0000 		.word	.L569+1
 9233 0ba8 4D0C0000 		.word	.L569+1
 9234 0bac 4D0C0000 		.word	.L569+1
 9235 0bb0 4D0C0000 		.word	.L569+1
 9236 0bb4 4D0C0000 		.word	.L569+1
 9237 0bb8 4D0C0000 		.word	.L569+1
 9238 0bbc 4D0C0000 		.word	.L569+1
 9239 0bc0 4D0C0000 		.word	.L569+1
 9240 0bc4 4D0C0000 		.word	.L569+1
 9241 0bc8 4D0C0000 		.word	.L569+1
 9242 0bcc 3F0C0000 		.word	.L570+1
 9243              		.p2align 1
 9244              	.L568:
 9245 0bd0 402B     		cmp	r3, #64
 9246 0bd2 37D0     		beq	.L577
 9247 0bd4 3AE0     		b	.L569
 9248              	.L576:
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK1:
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 9249              		.loc 1 3227 16
 9250 0bd6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9251 0bda F863     		str	r0, [r7, #60]
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9252              		.loc 1 3228 9
 9253 0bdc 3CE0     		b	.L578
 9254              	.L575:
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_D2PCLK2:
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 9255              		.loc 1 3230 16
 9256 0bde FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9257 0be2 F863     		str	r0, [r7, #60]
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9258              		.loc 1 3231 9
 9259 0be4 38E0     		b	.L578
 9260              	.L574:
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL2:
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 9261              		.loc 1 3233 9
 9262 0be6 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 243


 9263 0bea 1846     		mov	r0, r3
 9264 0bec FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll2_clocks.PLL2_Q_Frequency;
 9265              		.loc 1 3234 14
 9266 0bf0 BB6A     		ldr	r3, [r7, #40]
 9267 0bf2 FB63     		str	r3, [r7, #60]
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9268              		.loc 1 3235 9
 9269 0bf4 30E0     		b	.L578
 9270              	.L573:
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_PLL3:
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 9271              		.loc 1 3237 9
 9272 0bf6 07F11803 		add	r3, r7, #24
 9273 0bfa 1846     		mov	r0, r3
 9274 0bfc FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = pll3_clocks.PLL3_Q_Frequency;
 9275              		.loc 1 3238 14
 9276 0c00 FB69     		ldr	r3, [r7, #28]
 9277 0c02 FB63     		str	r3, [r7, #60]
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9278              		.loc 1 3239 9
 9279 0c04 28E0     		b	.L578
 9280              	.L572:
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 9281              		.loc 1 3241 13
 9282 0c06 094B     		ldr	r3, .L592+4
 9283 0c08 1B68     		ldr	r3, [r3]
 9284 0c0a 03F02003 		and	r3, r3, #32
 9285              		.loc 1 3241 12
 9286 0c0e 002B     		cmp	r3, #0
 9287 0c10 12D0     		beq	.L579
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 9288              		.loc 1 3243 43
 9289 0c12 064B     		ldr	r3, .L592+4
 9290 0c14 1B68     		ldr	r3, [r3]
 9291              		.loc 1 3243 71
 9292 0c16 DB08     		lsrs	r3, r3, #3
 9293 0c18 03F00303 		and	r3, r3, #3
 9294              		.loc 1 3243 16
 9295 0c1c 044A     		ldr	r2, .L592+8
 9296 0c1e 22FA03F3 		lsr	r3, r2, r3
 9297 0c22 FB63     		str	r3, [r7, #60]
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           pclk = (uint32_t) HSI_VALUE;
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9298              		.loc 1 3249 9
 9299 0c24 18E0     		b	.L578
 9300              	.L593:
 9301 0c26 00BF     		.align	2
 9302              	.L592:
 9303 0c28 00000000 		.word	UARTPrescTable
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 244


 9304 0c2c 00440258 		.word	1476543488
 9305 0c30 0090D003 		.word	64000000
 9306 0c34 00093D00 		.word	4000000
 9307              	.L579:
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 9308              		.loc 1 3247 16
 9309 0c38 244B     		ldr	r3, .L594
 9310 0c3a FB63     		str	r3, [r7, #60]
 9311              		.loc 1 3249 9
 9312 0c3c 0CE0     		b	.L578
 9313              	.L570:
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_CSI:
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) CSI_VALUE;
 9314              		.loc 1 3251 14
 9315 0c3e 244B     		ldr	r3, .L594+4
 9316 0c40 FB63     		str	r3, [r7, #60]
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9317              		.loc 1 3252 9
 9318 0c42 09E0     		b	.L578
 9319              	.L577:
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 9320              		.loc 1 3254 14
 9321 0c44 4FF40043 		mov	r3, #32768
 9322 0c48 FB63     		str	r3, [r7, #60]
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9323              		.loc 1 3255 9
 9324 0c4a 05E0     		b	.L578
 9325              	.L569:
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       default:
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pclk = 0U;
 9326              		.loc 1 3257 14
 9327 0c4c 0023     		movs	r3, #0
 9328 0c4e FB63     		str	r3, [r7, #60]
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 9329              		.loc 1 3258 13
 9330 0c50 0123     		movs	r3, #1
 9331 0c52 87F84230 		strb	r3, [r7, #66]
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 9332              		.loc 1 3259 9
 9333 0c56 00BF     		nop
 9334              	.L578:
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (pclk != 0U)
 9335              		.loc 1 3262 8
 9336 0c58 FB6B     		ldr	r3, [r7, #60]
 9337 0c5a 002B     		cmp	r3, #0
 9338 0c5c 21D0     		beq	.L551
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
 9339              		.loc 1 3265 29
 9340 0c5e 7B69     		ldr	r3, [r7, #20]
 9341 0c60 5B6A     		ldr	r3, [r3, #36]
 9342 0c62 1C4A     		ldr	r2, .L594+8
 9343 0c64 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 245


 9344 0c68 1A46     		mov	r2, r3
 9345 0c6a FB6B     		ldr	r3, [r7, #60]
 9346 0c6c B3FBF2F2 		udiv	r2, r3, r2
 9347 0c70 7B69     		ldr	r3, [r7, #20]
 9348 0c72 5B68     		ldr	r3, [r3, #4]
 9349 0c74 5B08     		lsrs	r3, r3, #1
 9350 0c76 1A44     		add	r2, r2, r3
 9351 0c78 7B69     		ldr	r3, [r7, #20]
 9352 0c7a 5B68     		ldr	r3, [r3, #4]
 9353              		.loc 1 3265 16
 9354 0c7c B2FBF3F3 		udiv	r3, r2, r3
 9355 0c80 BB63     		str	r3, [r7, #56]
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 9356              		.loc 1 3266 10
 9357 0c82 BB6B     		ldr	r3, [r7, #56]
 9358 0c84 0F2B     		cmp	r3, #15
 9359 0c86 09D9     		bls	.L581
 9360              		.loc 1 3266 38 discriminator 1
 9361 0c88 BB6B     		ldr	r3, [r7, #56]
 9362 0c8a B3F5803F 		cmp	r3, #65536
 9363 0c8e 05D2     		bcs	.L581
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
 9364              		.loc 1 3268 32
 9365 0c90 BB6B     		ldr	r3, [r7, #56]
 9366 0c92 9AB2     		uxth	r2, r3
 9367              		.loc 1 3268 14
 9368 0c94 7B69     		ldr	r3, [r7, #20]
 9369 0c96 1B68     		ldr	r3, [r3]
 9370              		.loc 1 3268 30
 9371 0c98 DA60     		str	r2, [r3, #12]
 9372 0c9a 02E0     		b	.L551
 9373              	.L581:
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
 9374              		.loc 1 3272 13
 9375 0c9c 0123     		movs	r3, #1
 9376 0c9e 87F84230 		strb	r3, [r7, #66]
 9377              	.L551:
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
 9378              		.loc 1 3278 28
 9379 0ca2 7B69     		ldr	r3, [r7, #20]
 9380 0ca4 0122     		movs	r2, #1
 9381 0ca6 A3F86A20 		strh	r2, [r3, #106]	@ movhi
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 9382              		.loc 1 3279 28
 9383 0caa 7B69     		ldr	r3, [r7, #20]
 9384 0cac 0122     		movs	r2, #1
 9385 0cae A3F86820 		strh	r2, [r3, #104]	@ movhi
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 246


3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear ISR function pointers */
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
 9386              		.loc 1 3282 16
 9387 0cb2 7B69     		ldr	r3, [r7, #20]
 9388 0cb4 0022     		movs	r2, #0
 9389 0cb6 5A67     		str	r2, [r3, #116]
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 9390              		.loc 1 3283 16
 9391 0cb8 7B69     		ldr	r3, [r7, #20]
 9392 0cba 0022     		movs	r2, #0
 9393 0cbc 9A67     		str	r2, [r3, #120]
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return ret;
 9394              		.loc 1 3285 10
 9395 0cbe 97F84230 		ldrb	r3, [r7, #66]	@ zero_extendqisi2
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9396              		.loc 1 3286 1
 9397 0cc2 1846     		mov	r0, r3
 9398 0cc4 4837     		adds	r7, r7, #72
 9399              	.LCFI241:
 9400              		.cfi_def_cfa_offset 32
 9401 0cc6 BD46     		mov	sp, r7
 9402              	.LCFI242:
 9403              		.cfi_def_cfa_register 13
 9404              		@ sp needed
 9405 0cc8 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9406              	.L595:
 9407              		.align	2
 9408              	.L594:
 9409 0ccc 0090D003 		.word	64000000
 9410 0cd0 00093D00 		.word	4000000
 9411 0cd4 00000000 		.word	UARTPrescTable
 9412              		.cfi_endproc
 9413              	.LFE187:
 9415              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 9416              		.align	1
 9417              		.global	UART_AdvFeatureConfig
 9418              		.syntax unified
 9419              		.thumb
 9420              		.thumb_func
 9422              	UART_AdvFeatureConfig:
 9423              	.LFB188:
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9424              		.loc 1 3294 1
 9425              		.cfi_startproc
 9426              		@ args = 0, pretend = 0, frame = 8
 9427              		@ frame_needed = 1, uses_anonymous_args = 0
 9428              		@ link register save eliminated.
 9429 0000 80B4     		push	{r7}
 9430              	.LCFI243:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 247


 9431              		.cfi_def_cfa_offset 4
 9432              		.cfi_offset 7, -4
 9433 0002 83B0     		sub	sp, sp, #12
 9434              	.LCFI244:
 9435              		.cfi_def_cfa_offset 16
 9436 0004 00AF     		add	r7, sp, #0
 9437              	.LCFI245:
 9438              		.cfi_def_cfa_register 7
 9439 0006 7860     		str	r0, [r7, #4]
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 9440              		.loc 1 3299 7
 9441 0008 7B68     		ldr	r3, [r7, #4]
 9442 000a 9B6A     		ldr	r3, [r3, #40]
 9443 000c 03F00803 		and	r3, r3, #8
 9444              		.loc 1 3299 6
 9445 0010 002B     		cmp	r3, #0
 9446 0012 0AD0     		beq	.L597
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 9447              		.loc 1 3302 5
 9448 0014 7B68     		ldr	r3, [r7, #4]
 9449 0016 1B68     		ldr	r3, [r3]
 9450 0018 5B68     		ldr	r3, [r3, #4]
 9451 001a 23F40041 		bic	r1, r3, #32768
 9452 001e 7B68     		ldr	r3, [r7, #4]
 9453 0020 9A6B     		ldr	r2, [r3, #56]
 9454 0022 7B68     		ldr	r3, [r7, #4]
 9455 0024 1B68     		ldr	r3, [r3]
 9456 0026 0A43     		orrs	r2, r2, r1
 9457 0028 5A60     		str	r2, [r3, #4]
 9458              	.L597:
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 9459              		.loc 1 3306 7
 9460 002a 7B68     		ldr	r3, [r7, #4]
 9461 002c 9B6A     		ldr	r3, [r3, #40]
 9462 002e 03F00103 		and	r3, r3, #1
 9463              		.loc 1 3306 6
 9464 0032 002B     		cmp	r3, #0
 9465 0034 0AD0     		beq	.L598
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 9466              		.loc 1 3309 5
 9467 0036 7B68     		ldr	r3, [r7, #4]
 9468 0038 1B68     		ldr	r3, [r3]
 9469 003a 5B68     		ldr	r3, [r3, #4]
 9470 003c 23F40031 		bic	r1, r3, #131072
 9471 0040 7B68     		ldr	r3, [r7, #4]
 9472 0042 DA6A     		ldr	r2, [r3, #44]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 248


 9473 0044 7B68     		ldr	r3, [r7, #4]
 9474 0046 1B68     		ldr	r3, [r3]
 9475 0048 0A43     		orrs	r2, r2, r1
 9476 004a 5A60     		str	r2, [r3, #4]
 9477              	.L598:
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 9478              		.loc 1 3313 7
 9479 004c 7B68     		ldr	r3, [r7, #4]
 9480 004e 9B6A     		ldr	r3, [r3, #40]
 9481 0050 03F00203 		and	r3, r3, #2
 9482              		.loc 1 3313 6
 9483 0054 002B     		cmp	r3, #0
 9484 0056 0AD0     		beq	.L599
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 9485              		.loc 1 3316 5
 9486 0058 7B68     		ldr	r3, [r7, #4]
 9487 005a 1B68     		ldr	r3, [r3]
 9488 005c 5B68     		ldr	r3, [r3, #4]
 9489 005e 23F48031 		bic	r1, r3, #65536
 9490 0062 7B68     		ldr	r3, [r7, #4]
 9491 0064 1A6B     		ldr	r2, [r3, #48]
 9492 0066 7B68     		ldr	r3, [r7, #4]
 9493 0068 1B68     		ldr	r3, [r3]
 9494 006a 0A43     		orrs	r2, r2, r1
 9495 006c 5A60     		str	r2, [r3, #4]
 9496              	.L599:
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure data inversion */
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 9497              		.loc 1 3320 7
 9498 006e 7B68     		ldr	r3, [r7, #4]
 9499 0070 9B6A     		ldr	r3, [r3, #40]
 9500 0072 03F00403 		and	r3, r3, #4
 9501              		.loc 1 3320 6
 9502 0076 002B     		cmp	r3, #0
 9503 0078 0AD0     		beq	.L600
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 9504              		.loc 1 3323 5
 9505 007a 7B68     		ldr	r3, [r7, #4]
 9506 007c 1B68     		ldr	r3, [r3]
 9507 007e 5B68     		ldr	r3, [r3, #4]
 9508 0080 23F48021 		bic	r1, r3, #262144
 9509 0084 7B68     		ldr	r3, [r7, #4]
 9510 0086 5A6B     		ldr	r2, [r3, #52]
 9511 0088 7B68     		ldr	r3, [r7, #4]
 9512 008a 1B68     		ldr	r3, [r3]
 9513 008c 0A43     		orrs	r2, r2, r1
 9514 008e 5A60     		str	r2, [r3, #4]
 9515              	.L600:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 249


3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 9516              		.loc 1 3327 7
 9517 0090 7B68     		ldr	r3, [r7, #4]
 9518 0092 9B6A     		ldr	r3, [r3, #40]
 9519 0094 03F01003 		and	r3, r3, #16
 9520              		.loc 1 3327 6
 9521 0098 002B     		cmp	r3, #0
 9522 009a 0AD0     		beq	.L601
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 9523              		.loc 1 3330 5
 9524 009c 7B68     		ldr	r3, [r7, #4]
 9525 009e 1B68     		ldr	r3, [r3]
 9526 00a0 9B68     		ldr	r3, [r3, #8]
 9527 00a2 23F48051 		bic	r1, r3, #4096
 9528 00a6 7B68     		ldr	r3, [r7, #4]
 9529 00a8 DA6B     		ldr	r2, [r3, #60]
 9530 00aa 7B68     		ldr	r3, [r7, #4]
 9531 00ac 1B68     		ldr	r3, [r3]
 9532 00ae 0A43     		orrs	r2, r2, r1
 9533 00b0 9A60     		str	r2, [r3, #8]
 9534              	.L601:
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 9535              		.loc 1 3334 7
 9536 00b2 7B68     		ldr	r3, [r7, #4]
 9537 00b4 9B6A     		ldr	r3, [r3, #40]
 9538 00b6 03F02003 		and	r3, r3, #32
 9539              		.loc 1 3334 6
 9540 00ba 002B     		cmp	r3, #0
 9541 00bc 0AD0     		beq	.L602
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 9542              		.loc 1 3337 5
 9543 00be 7B68     		ldr	r3, [r7, #4]
 9544 00c0 1B68     		ldr	r3, [r3]
 9545 00c2 9B68     		ldr	r3, [r3, #8]
 9546 00c4 23F40051 		bic	r1, r3, #8192
 9547 00c8 7B68     		ldr	r3, [r7, #4]
 9548 00ca 1A6C     		ldr	r2, [r3, #64]
 9549 00cc 7B68     		ldr	r3, [r7, #4]
 9550 00ce 1B68     		ldr	r3, [r3]
 9551 00d0 0A43     		orrs	r2, r2, r1
 9552 00d2 9A60     		str	r2, [r3, #8]
 9553              	.L602:
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 9554              		.loc 1 3341 7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 250


 9555 00d4 7B68     		ldr	r3, [r7, #4]
 9556 00d6 9B6A     		ldr	r3, [r3, #40]
 9557 00d8 03F04003 		and	r3, r3, #64
 9558              		.loc 1 3341 6
 9559 00dc 002B     		cmp	r3, #0
 9560 00de 1AD0     		beq	.L603
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 9561              		.loc 1 3345 5
 9562 00e0 7B68     		ldr	r3, [r7, #4]
 9563 00e2 1B68     		ldr	r3, [r3]
 9564 00e4 5B68     		ldr	r3, [r3, #4]
 9565 00e6 23F48011 		bic	r1, r3, #1048576
 9566 00ea 7B68     		ldr	r3, [r7, #4]
 9567 00ec 5A6C     		ldr	r2, [r3, #68]
 9568 00ee 7B68     		ldr	r3, [r7, #4]
 9569 00f0 1B68     		ldr	r3, [r3]
 9570 00f2 0A43     		orrs	r2, r2, r1
 9571 00f4 5A60     		str	r2, [r3, #4]
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 9572              		.loc 1 3347 28
 9573 00f6 7B68     		ldr	r3, [r7, #4]
 9574 00f8 5B6C     		ldr	r3, [r3, #68]
 9575              		.loc 1 3347 8
 9576 00fa B3F5801F 		cmp	r3, #1048576
 9577 00fe 0AD1     		bne	.L603
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 9578              		.loc 1 3350 7
 9579 0100 7B68     		ldr	r3, [r7, #4]
 9580 0102 1B68     		ldr	r3, [r3]
 9581 0104 5B68     		ldr	r3, [r3, #4]
 9582 0106 23F4C001 		bic	r1, r3, #6291456
 9583 010a 7B68     		ldr	r3, [r7, #4]
 9584 010c 9A6C     		ldr	r2, [r3, #72]
 9585 010e 7B68     		ldr	r3, [r7, #4]
 9586 0110 1B68     		ldr	r3, [r3]
 9587 0112 0A43     		orrs	r2, r2, r1
 9588 0114 5A60     		str	r2, [r3, #4]
 9589              	.L603:
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 9590              		.loc 1 3355 7
 9591 0116 7B68     		ldr	r3, [r7, #4]
 9592 0118 9B6A     		ldr	r3, [r3, #40]
 9593 011a 03F08003 		and	r3, r3, #128
 9594              		.loc 1 3355 6
 9595 011e 002B     		cmp	r3, #0
 9596 0120 0AD0     		beq	.L605
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 251


3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 9597              		.loc 1 3358 5
 9598 0122 7B68     		ldr	r3, [r7, #4]
 9599 0124 1B68     		ldr	r3, [r3]
 9600 0126 5B68     		ldr	r3, [r3, #4]
 9601 0128 23F40021 		bic	r1, r3, #524288
 9602 012c 7B68     		ldr	r3, [r7, #4]
 9603 012e DA6C     		ldr	r2, [r3, #76]
 9604 0130 7B68     		ldr	r3, [r7, #4]
 9605 0132 1B68     		ldr	r3, [r3]
 9606 0134 0A43     		orrs	r2, r2, r1
 9607 0136 5A60     		str	r2, [r3, #4]
 9608              	.L605:
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9609              		.loc 1 3360 1
 9610 0138 00BF     		nop
 9611 013a 0C37     		adds	r7, r7, #12
 9612              	.LCFI246:
 9613              		.cfi_def_cfa_offset 4
 9614 013c BD46     		mov	sp, r7
 9615              	.LCFI247:
 9616              		.cfi_def_cfa_register 13
 9617              		@ sp needed
 9618 013e 5DF8047B 		ldr	r7, [sp], #4
 9619              	.LCFI248:
 9620              		.cfi_restore 7
 9621              		.cfi_def_cfa_offset 0
 9622 0142 7047     		bx	lr
 9623              		.cfi_endproc
 9624              	.LFE188:
 9626              		.section	.text.UART_CheckIdleState,"ax",%progbits
 9627              		.align	1
 9628              		.global	UART_CheckIdleState
 9629              		.syntax unified
 9630              		.thumb
 9631              		.thumb_func
 9633              	UART_CheckIdleState:
 9634              	.LFB189:
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Check the UART Idle State.
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9635              		.loc 1 3368 1
 9636              		.cfi_startproc
 9637              		@ args = 0, pretend = 0, frame = 88
 9638              		@ frame_needed = 1, uses_anonymous_args = 0
 9639 0000 80B5     		push	{r7, lr}
 9640              	.LCFI249:
 9641              		.cfi_def_cfa_offset 8
 9642              		.cfi_offset 7, -8
 9643              		.cfi_offset 14, -4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 252


 9644 0002 98B0     		sub	sp, sp, #96
 9645              	.LCFI250:
 9646              		.cfi_def_cfa_offset 104
 9647 0004 02AF     		add	r7, sp, #8
 9648              	.LCFI251:
 9649              		.cfi_def_cfa 7, 96
 9650 0006 7860     		str	r0, [r7, #4]
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart;
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9651              		.loc 1 3372 20
 9652 0008 7B68     		ldr	r3, [r7, #4]
 9653 000a 0022     		movs	r2, #0
 9654 000c C3F89020 		str	r2, [r3, #144]
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init tickstart for timeout management */
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tickstart = HAL_GetTick();
 9655              		.loc 1 3375 15
 9656 0010 FFF7FEFF 		bl	HAL_GetTick
 9657 0014 7865     		str	r0, [r7, #84]
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 9658              		.loc 1 3378 13
 9659 0016 7B68     		ldr	r3, [r7, #4]
 9660 0018 1B68     		ldr	r3, [r3]
 9661              		.loc 1 3378 23
 9662 001a 1B68     		ldr	r3, [r3]
 9663              		.loc 1 3378 29
 9664 001c 03F00803 		and	r3, r3, #8
 9665              		.loc 1 3378 6
 9666 0020 082B     		cmp	r3, #8
 9667 0022 2FD1     		bne	.L607
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 9668              		.loc 1 3381 9
 9669 0024 6FF07E43 		mvn	r3, #-33554432
 9670 0028 0093     		str	r3, [sp]
 9671 002a 7B6D     		ldr	r3, [r7, #84]
 9672 002c 0022     		movs	r2, #0
 9673 002e 4FF40011 		mov	r1, #2097152
 9674 0032 7868     		ldr	r0, [r7, #4]
 9675 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9676 0038 0346     		mov	r3, r0
 9677              		.loc 1 3381 8 discriminator 1
 9678 003a 002B     		cmp	r3, #0
 9679 003c 22D0     		beq	.L607
 9680              	.L610:
 9681              	.LBB793:
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable TXE interrupt for the interrupt process */
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 9682              		.loc 1 3384 7 discriminator 1
 9683 003e 7B68     		ldr	r3, [r7, #4]
 9684 0040 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 253


 9685 0042 BB63     		str	r3, [r7, #56]
 9686              	.LBB794:
 9687              	.LBB795:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9688              		.loc 2 1155 4
 9689 0044 BB6B     		ldr	r3, [r7, #56]
 9690              		.syntax unified
 9691              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9692 0046 53E8003F 		ldrex r3, [r3]
 9693              	@ 0 "" 2
 9694              		.thumb
 9695              		.syntax unified
 9696 004a 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9697              		.loc 2 1156 10
 9698 004c 7B6B     		ldr	r3, [r7, #52]
 9699              	.LBE795:
 9700              	.LBE794:
 9701              		.loc 1 3384 7 discriminator 1
 9702 004e 23F08003 		bic	r3, r3, #128
 9703 0052 3B65     		str	r3, [r7, #80]
 9704 0054 7B68     		ldr	r3, [r7, #4]
 9705 0056 1B68     		ldr	r3, [r3]
 9706 0058 1A46     		mov	r2, r3
 9707 005a 3B6D     		ldr	r3, [r7, #80]
 9708 005c 7B64     		str	r3, [r7, #68]
 9709 005e 3A64     		str	r2, [r7, #64]
 9710              	.LBB796:
 9711              	.LBB797:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9712              		.loc 2 1206 4
 9713 0060 396C     		ldr	r1, [r7, #64]
 9714 0062 7A6C     		ldr	r2, [r7, #68]
 9715              		.syntax unified
 9716              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9717 0064 41E80023 		strex r3, r2, [r1]
 9718              	@ 0 "" 2
 9719              		.thumb
 9720              		.syntax unified
 9721 0068 FB63     		str	r3, [r7, #60]
 9722              		.loc 2 1207 10
 9723 006a FB6B     		ldr	r3, [r7, #60]
 9724              	.LBE797:
 9725              	.LBE796:
 9726              		.loc 1 3384 7 discriminator 1
 9727 006c 002B     		cmp	r3, #0
 9728 006e E6D1     		bne	.L610
 9729              	.LBE793:
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 9730              		.loc 1 3386 21
 9731 0070 7B68     		ldr	r3, [r7, #4]
 9732 0072 2022     		movs	r2, #32
 9733 0074 C3F88820 		str	r2, [r3, #136]
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 9734              		.loc 1 3388 7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 254


 9735 0078 7B68     		ldr	r3, [r7, #4]
 9736 007a 0022     		movs	r2, #0
 9737 007c 83F88420 		strb	r2, [r3, #132]
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 9738              		.loc 1 3391 14
 9739 0080 0323     		movs	r3, #3
 9740 0082 63E0     		b	.L611
 9741              	.L607:
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 9742              		.loc 1 3396 13
 9743 0084 7B68     		ldr	r3, [r7, #4]
 9744 0086 1B68     		ldr	r3, [r3]
 9745              		.loc 1 3396 23
 9746 0088 1B68     		ldr	r3, [r3]
 9747              		.loc 1 3396 29
 9748 008a 03F00403 		and	r3, r3, #4
 9749              		.loc 1 3396 6
 9750 008e 042B     		cmp	r3, #4
 9751 0090 49D1     		bne	.L612
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until REACK flag is set */
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 9752              		.loc 1 3399 9
 9753 0092 6FF07E43 		mvn	r3, #-33554432
 9754 0096 0093     		str	r3, [sp]
 9755 0098 7B6D     		ldr	r3, [r7, #84]
 9756 009a 0022     		movs	r2, #0
 9757 009c 4FF48001 		mov	r1, #4194304
 9758 00a0 7868     		ldr	r0, [r7, #4]
 9759 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 9760 00a6 0346     		mov	r3, r0
 9761              		.loc 1 3399 8 discriminator 1
 9762 00a8 002B     		cmp	r3, #0
 9763 00aa 3CD0     		beq	.L612
 9764              	.L615:
 9765              	.LBB798:
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       interrupts for the interrupt process */
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 9766              		.loc 1 3403 7 discriminator 1
 9767 00ac 7B68     		ldr	r3, [r7, #4]
 9768 00ae 1B68     		ldr	r3, [r3]
 9769 00b0 7B62     		str	r3, [r7, #36]
 9770              	.LBB799:
 9771              	.LBB800:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9772              		.loc 2 1155 4
 9773 00b2 7B6A     		ldr	r3, [r7, #36]
 9774              		.syntax unified
 9775              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 255


 9776 00b4 53E8003F 		ldrex r3, [r3]
 9777              	@ 0 "" 2
 9778              		.thumb
 9779              		.syntax unified
 9780 00b8 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9781              		.loc 2 1156 10
 9782 00ba 3B6A     		ldr	r3, [r7, #32]
 9783              	.LBE800:
 9784              	.LBE799:
 9785              		.loc 1 3403 7 discriminator 1
 9786 00bc 23F49073 		bic	r3, r3, #288
 9787 00c0 FB64     		str	r3, [r7, #76]
 9788 00c2 7B68     		ldr	r3, [r7, #4]
 9789 00c4 1B68     		ldr	r3, [r3]
 9790 00c6 1A46     		mov	r2, r3
 9791 00c8 FB6C     		ldr	r3, [r7, #76]
 9792 00ca 3B63     		str	r3, [r7, #48]
 9793 00cc FA62     		str	r2, [r7, #44]
 9794              	.LBB801:
 9795              	.LBB802:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9796              		.loc 2 1206 4
 9797 00ce F96A     		ldr	r1, [r7, #44]
 9798 00d0 3A6B     		ldr	r2, [r7, #48]
 9799              		.syntax unified
 9800              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9801 00d2 41E80023 		strex r3, r2, [r1]
 9802              	@ 0 "" 2
 9803              		.thumb
 9804              		.syntax unified
 9805 00d6 BB62     		str	r3, [r7, #40]
 9806              		.loc 2 1207 10
 9807 00d8 BB6A     		ldr	r3, [r7, #40]
 9808              	.LBE802:
 9809              	.LBE801:
 9810              		.loc 1 3403 7 discriminator 1
 9811 00da 002B     		cmp	r3, #0
 9812 00dc E6D1     		bne	.L615
 9813              	.L618:
 9814              	.LBE798:
 9815              	.LBB803:
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9816              		.loc 1 3404 7 discriminator 1
 9817 00de 7B68     		ldr	r3, [r7, #4]
 9818 00e0 1B68     		ldr	r3, [r3]
 9819 00e2 0833     		adds	r3, r3, #8
 9820 00e4 3B61     		str	r3, [r7, #16]
 9821              	.LBB804:
 9822              	.LBB805:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9823              		.loc 2 1155 4
 9824 00e6 3B69     		ldr	r3, [r7, #16]
 9825              		.syntax unified
 9826              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9827 00e8 53E8003F 		ldrex r3, [r3]
 9828              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 256


 9829              		.thumb
 9830              		.syntax unified
 9831 00ec FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9832              		.loc 2 1156 10
 9833 00ee FB68     		ldr	r3, [r7, #12]
 9834              	.LBE805:
 9835              	.LBE804:
 9836              		.loc 1 3404 7 discriminator 1
 9837 00f0 23F00103 		bic	r3, r3, #1
 9838 00f4 BB64     		str	r3, [r7, #72]
 9839 00f6 7B68     		ldr	r3, [r7, #4]
 9840 00f8 1B68     		ldr	r3, [r3]
 9841 00fa 0833     		adds	r3, r3, #8
 9842 00fc BA6C     		ldr	r2, [r7, #72]
 9843 00fe FA61     		str	r2, [r7, #28]
 9844 0100 BB61     		str	r3, [r7, #24]
 9845              	.LBB806:
 9846              	.LBB807:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9847              		.loc 2 1206 4
 9848 0102 B969     		ldr	r1, [r7, #24]
 9849 0104 FA69     		ldr	r2, [r7, #28]
 9850              		.syntax unified
 9851              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9852 0106 41E80023 		strex r3, r2, [r1]
 9853              	@ 0 "" 2
 9854              		.thumb
 9855              		.syntax unified
 9856 010a 7B61     		str	r3, [r7, #20]
 9857              		.loc 2 1207 10
 9858 010c 7B69     		ldr	r3, [r7, #20]
 9859              	.LBE807:
 9860              	.LBE806:
 9861              		.loc 1 3404 7 discriminator 1
 9862 010e 002B     		cmp	r3, #0
 9863 0110 E5D1     		bne	.L618
 9864              	.LBE803:
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9865              		.loc 1 3406 22
 9866 0112 7B68     		ldr	r3, [r7, #4]
 9867 0114 2022     		movs	r2, #32
 9868 0116 C3F88C20 		str	r2, [r3, #140]
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 9869              		.loc 1 3408 7
 9870 011a 7B68     		ldr	r3, [r7, #4]
 9871 011c 0022     		movs	r2, #0
 9872 011e 83F88420 		strb	r2, [r3, #132]
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 9873              		.loc 1 3411 14
 9874 0122 0323     		movs	r3, #3
 9875 0124 12E0     		b	.L611
 9876              	.L612:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 257


3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART State */
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9877              		.loc 1 3416 17
 9878 0126 7B68     		ldr	r3, [r7, #4]
 9879 0128 2022     		movs	r2, #32
 9880 012a C3F88820 		str	r2, [r3, #136]
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9881              		.loc 1 3417 18
 9882 012e 7B68     		ldr	r3, [r7, #4]
 9883 0130 2022     		movs	r2, #32
 9884 0132 C3F88C20 		str	r2, [r3, #140]
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9885              		.loc 1 3418 24
 9886 0136 7B68     		ldr	r3, [r7, #4]
 9887 0138 0022     		movs	r2, #0
 9888 013a DA66     		str	r2, [r3, #108]
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 9889              		.loc 1 3419 22
 9890 013c 7B68     		ldr	r3, [r7, #4]
 9891 013e 0022     		movs	r2, #0
 9892 0140 1A67     		str	r2, [r3, #112]
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 9893              		.loc 1 3421 3
 9894 0142 7B68     		ldr	r3, [r7, #4]
 9895 0144 0022     		movs	r2, #0
 9896 0146 83F88420 		strb	r2, [r3, #132]
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 9897              		.loc 1 3423 10
 9898 014a 0023     		movs	r3, #0
 9899              	.L611:
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 9900              		.loc 1 3424 1
 9901 014c 1846     		mov	r0, r3
 9902 014e 5837     		adds	r7, r7, #88
 9903              	.LCFI252:
 9904              		.cfi_def_cfa_offset 8
 9905 0150 BD46     		mov	sp, r7
 9906              	.LCFI253:
 9907              		.cfi_def_cfa_register 13
 9908              		@ sp needed
 9909 0152 80BD     		pop	{r7, pc}
 9910              		.cfi_endproc
 9911              	.LFE189:
 9913              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 9914              		.align	1
 9915              		.global	UART_WaitOnFlagUntilTimeout
 9916              		.syntax unified
 9917              		.thumb
 9918              		.thumb_func
 9920              	UART_WaitOnFlagUntilTimeout:
 9921              	.LFB190:
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 258


3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart     UART handle.
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Tickstart Tick start value
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout   Timeout duration
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 9922              		.loc 1 3438 1
 9923              		.cfi_startproc
 9924              		@ args = 4, pretend = 0, frame = 16
 9925              		@ frame_needed = 1, uses_anonymous_args = 0
 9926 0000 80B5     		push	{r7, lr}
 9927              	.LCFI254:
 9928              		.cfi_def_cfa_offset 8
 9929              		.cfi_offset 7, -8
 9930              		.cfi_offset 14, -4
 9931 0002 84B0     		sub	sp, sp, #16
 9932              	.LCFI255:
 9933              		.cfi_def_cfa_offset 24
 9934 0004 00AF     		add	r7, sp, #0
 9935              	.LCFI256:
 9936              		.cfi_def_cfa_register 7
 9937 0006 F860     		str	r0, [r7, #12]
 9938 0008 B960     		str	r1, [r7, #8]
 9939 000a 3B60     		str	r3, [r7]
 9940 000c 1346     		mov	r3, r2
 9941 000e FB71     		strb	r3, [r7, #7]
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 9942              		.loc 1 3440 9
 9943 0010 4FE0     		b	.L621
 9944              	.L627:
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check for the Timeout */
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 9945              		.loc 1 3443 8
 9946 0012 BB69     		ldr	r3, [r7, #24]
 9947 0014 B3F1FF3F 		cmp	r3, #-1
 9948 0018 4BD0     		beq	.L621
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 9949              		.loc 1 3445 13
 9950 001a FFF7FEFF 		bl	HAL_GetTick
 9951 001e 0246     		mov	r2, r0
 9952              		.loc 1 3445 27 discriminator 1
 9953 0020 3B68     		ldr	r3, [r7]
 9954 0022 D31A     		subs	r3, r2, r3
 9955              		.loc 1 3445 10 discriminator 1
 9956 0024 BA69     		ldr	r2, [r7, #24]
 9957 0026 9A42     		cmp	r2, r3
 9958 0028 02D3     		bcc	.L622
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 259


 9959              		.loc 1 3445 51 discriminator 1
 9960 002a BB69     		ldr	r3, [r7, #24]
 9961 002c 002B     		cmp	r3, #0
 9962 002e 01D1     		bne	.L623
 9963              	.L622:
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 9964              		.loc 1 3448 16
 9965 0030 0323     		movs	r3, #3
 9966 0032 4EE0     		b	.L624
 9967              	.L623:
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag 
 9968              		.loc 1 3451 12
 9969 0034 FB68     		ldr	r3, [r7, #12]
 9970 0036 1B68     		ldr	r3, [r3]
 9971 0038 1B68     		ldr	r3, [r3]
 9972 003a 03F00403 		and	r3, r3, #4
 9973              		.loc 1 3451 10
 9974 003e 002B     		cmp	r3, #0
 9975 0040 37D0     		beq	.L621
 9976              		.loc 1 3451 64 discriminator 1
 9977 0042 BB68     		ldr	r3, [r7, #8]
 9978 0044 802B     		cmp	r3, #128
 9979 0046 34D0     		beq	.L621
 9980              		.loc 1 3451 91 discriminator 2
 9981 0048 BB68     		ldr	r3, [r7, #8]
 9982 004a 402B     		cmp	r3, #64
 9983 004c 31D0     		beq	.L621
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 9984              		.loc 1 3453 13
 9985 004e FB68     		ldr	r3, [r7, #12]
 9986 0050 1B68     		ldr	r3, [r3]
 9987 0052 DB69     		ldr	r3, [r3, #28]
 9988 0054 03F00803 		and	r3, r3, #8
 9989              		.loc 1 3453 12
 9990 0058 082B     		cmp	r3, #8
 9991 005a 10D1     		bne	.L626
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear Overrun Error flag*/
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 9992              		.loc 1 3456 11
 9993 005c FB68     		ldr	r3, [r7, #12]
 9994 005e 1B68     		ldr	r3, [r3]
 9995 0060 0822     		movs	r2, #8
 9996 0062 1A62     		str	r2, [r3, #32]
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 9997              		.loc 1 3461 11
 9998 0064 F868     		ldr	r0, [r7, #12]
 9999 0066 FFF7FEFF 		bl	UART_EndRxTransfer
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 260


3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_ORE;
 10000              		.loc 1 3463 28
 10001 006a FB68     		ldr	r3, [r7, #12]
 10002 006c 0822     		movs	r2, #8
 10003 006e C3F89020 		str	r2, [r3, #144]
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Process Unlocked */
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 10004              		.loc 1 3466 11
 10005 0072 FB68     		ldr	r3, [r7, #12]
 10006 0074 0022     		movs	r2, #0
 10007 0076 83F88420 		strb	r2, [r3, #132]
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_ERROR;
 10008              		.loc 1 3468 18
 10009 007a 0123     		movs	r3, #1
 10010 007c 29E0     		b	.L624
 10011              	.L626:
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 10012              		.loc 1 3470 13
 10013 007e FB68     		ldr	r3, [r7, #12]
 10014 0080 1B68     		ldr	r3, [r3]
 10015 0082 DB69     		ldr	r3, [r3, #28]
 10016 0084 03F40063 		and	r3, r3, #2048
 10017              		.loc 1 3470 12
 10018 0088 B3F5006F 		cmp	r3, #2048
 10019 008c 11D1     		bne	.L621
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 10020              		.loc 1 3473 11
 10021 008e FB68     		ldr	r3, [r7, #12]
 10022 0090 1B68     		ldr	r3, [r3]
 10023 0092 4FF40062 		mov	r2, #2048
 10024 0096 1A62     		str	r2, [r3, #32]
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 10025              		.loc 1 3478 11
 10026 0098 F868     		ldr	r0, [r7, #12]
 10027 009a FFF7FEFF 		bl	UART_EndRxTransfer
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 10028              		.loc 1 3480 28
 10029 009e FB68     		ldr	r3, [r7, #12]
 10030 00a0 2022     		movs	r2, #32
 10031 00a2 C3F89020 		str	r2, [r3, #144]
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Process Unlocked */
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 10032              		.loc 1 3483 11
 10033 00a6 FB68     		ldr	r3, [r7, #12]
 10034 00a8 0022     		movs	r2, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 261


 10035 00aa 83F88420 		strb	r2, [r3, #132]
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           return HAL_TIMEOUT;
 10036              		.loc 1 3485 18
 10037 00ae 0323     		movs	r3, #3
 10038 00b0 0FE0     		b	.L624
 10039              	.L621:
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 10040              		.loc 1 3440 11
 10041 00b2 FB68     		ldr	r3, [r7, #12]
 10042 00b4 1B68     		ldr	r3, [r3]
 10043 00b6 DA69     		ldr	r2, [r3, #28]
 10044 00b8 BB68     		ldr	r3, [r7, #8]
 10045 00ba 1340     		ands	r3, r3, r2
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 10046              		.loc 1 3440 50
 10047 00bc BA68     		ldr	r2, [r7, #8]
 10048 00be 9A42     		cmp	r2, r3
 10049 00c0 0CBF     		ite	eq
 10050 00c2 0123     		moveq	r3, #1
 10051 00c4 0023     		movne	r3, #0
 10052 00c6 DBB2     		uxtb	r3, r3
 10053 00c8 1A46     		mov	r2, r3
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 10054              		.loc 1 3440 59
 10055 00ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 10056 00cc 9A42     		cmp	r2, r3
 10057 00ce A0D0     		beq	.L627
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 10058              		.loc 1 3490 10
 10059 00d0 0023     		movs	r3, #0
 10060              	.L624:
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10061              		.loc 1 3491 1
 10062 00d2 1846     		mov	r0, r3
 10063 00d4 1037     		adds	r7, r7, #16
 10064              	.LCFI257:
 10065              		.cfi_def_cfa_offset 8
 10066 00d6 BD46     		mov	sp, r7
 10067              	.LCFI258:
 10068              		.cfi_def_cfa_register 13
 10069              		@ sp needed
 10070 00d8 80BD     		pop	{r7, pc}
 10071              		.cfi_endproc
 10072              	.LFE190:
 10074              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 10075              		.align	1
 10076              		.global	UART_Start_Receive_IT
 10077              		.syntax unified
 10078              		.thumb
 10079              		.thumb_func
 10081              	UART_Start_Receive_IT:
 10082              	.LFB191:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 262


3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 10083              		.loc 1 3505 1
 10084              		.cfi_startproc
 10085              		@ args = 0, pretend = 0, frame = 136
 10086              		@ frame_needed = 1, uses_anonymous_args = 0
 10087              		@ link register save eliminated.
 10088 0000 80B4     		push	{r7}
 10089              	.LCFI259:
 10090              		.cfi_def_cfa_offset 4
 10091              		.cfi_offset 7, -4
 10092 0002 A3B0     		sub	sp, sp, #140
 10093              	.LCFI260:
 10094              		.cfi_def_cfa_offset 144
 10095 0004 00AF     		add	r7, sp, #0
 10096              	.LCFI261:
 10097              		.cfi_def_cfa_register 7
 10098 0006 F860     		str	r0, [r7, #12]
 10099 0008 B960     		str	r1, [r7, #8]
 10100 000a 1346     		mov	r3, r2
 10101 000c FB80     		strh	r3, [r7, #6]	@ movhi
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 10102              		.loc 1 3506 22
 10103 000e FB68     		ldr	r3, [r7, #12]
 10104 0010 BA68     		ldr	r2, [r7, #8]
 10105 0012 9A65     		str	r2, [r3, #88]
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferSize  = Size;
 10106              		.loc 1 3507 22
 10107 0014 FB68     		ldr	r3, [r7, #12]
 10108 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 10109 0018 A3F85C20 		strh	r2, [r3, #92]	@ movhi
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = Size;
 10110              		.loc 1 3508 22
 10111 001c FB68     		ldr	r3, [r7, #12]
 10112 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
 10113 0020 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR       = NULL;
 10114              		.loc 1 3509 22
 10115 0024 FB68     		ldr	r3, [r7, #12]
 10116 0026 0022     		movs	r2, #0
 10117 0028 5A67     		str	r2, [r3, #116]
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 10118              		.loc 1 3512 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 263


 10119 002a FB68     		ldr	r3, [r7, #12]
 10120 002c 9B68     		ldr	r3, [r3, #8]
 10121 002e B3F5805F 		cmp	r3, #4096
 10122 0032 0ED1     		bne	.L629
 10123              		.loc 1 3512 3 is_stmt 0 discriminator 1
 10124 0034 FB68     		ldr	r3, [r7, #12]
 10125 0036 1B69     		ldr	r3, [r3, #16]
 10126 0038 002B     		cmp	r3, #0
 10127 003a 05D1     		bne	.L630
 10128              		.loc 1 3512 3 discriminator 3
 10129 003c FB68     		ldr	r3, [r7, #12]
 10130 003e 40F2FF12 		movw	r2, #511
 10131 0042 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10132 0046 2DE0     		b	.L631
 10133              	.L630:
 10134              		.loc 1 3512 3 discriminator 4
 10135 0048 FB68     		ldr	r3, [r7, #12]
 10136 004a FF22     		movs	r2, #255
 10137 004c A3F86020 		strh	r2, [r3, #96]	@ movhi
 10138 0050 28E0     		b	.L631
 10139              	.L629:
 10140              		.loc 1 3512 3 discriminator 2
 10141 0052 FB68     		ldr	r3, [r7, #12]
 10142 0054 9B68     		ldr	r3, [r3, #8]
 10143 0056 002B     		cmp	r3, #0
 10144 0058 0DD1     		bne	.L632
 10145              		.loc 1 3512 3 discriminator 5
 10146 005a FB68     		ldr	r3, [r7, #12]
 10147 005c 1B69     		ldr	r3, [r3, #16]
 10148 005e 002B     		cmp	r3, #0
 10149 0060 04D1     		bne	.L633
 10150              		.loc 1 3512 3 discriminator 7
 10151 0062 FB68     		ldr	r3, [r7, #12]
 10152 0064 FF22     		movs	r2, #255
 10153 0066 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10154 006a 1BE0     		b	.L631
 10155              	.L633:
 10156              		.loc 1 3512 3 discriminator 8
 10157 006c FB68     		ldr	r3, [r7, #12]
 10158 006e 7F22     		movs	r2, #127
 10159 0070 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10160 0074 16E0     		b	.L631
 10161              	.L632:
 10162              		.loc 1 3512 3 discriminator 6
 10163 0076 FB68     		ldr	r3, [r7, #12]
 10164 0078 9B68     		ldr	r3, [r3, #8]
 10165 007a B3F1805F 		cmp	r3, #268435456
 10166 007e 0DD1     		bne	.L634
 10167              		.loc 1 3512 3 discriminator 9
 10168 0080 FB68     		ldr	r3, [r7, #12]
 10169 0082 1B69     		ldr	r3, [r3, #16]
 10170 0084 002B     		cmp	r3, #0
 10171 0086 04D1     		bne	.L635
 10172              		.loc 1 3512 3 discriminator 11
 10173 0088 FB68     		ldr	r3, [r7, #12]
 10174 008a 7F22     		movs	r2, #127
 10175 008c A3F86020 		strh	r2, [r3, #96]	@ movhi
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 264


 10176 0090 08E0     		b	.L631
 10177              	.L635:
 10178              		.loc 1 3512 3 discriminator 12
 10179 0092 FB68     		ldr	r3, [r7, #12]
 10180 0094 3F22     		movs	r2, #63
 10181 0096 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10182 009a 03E0     		b	.L631
 10183              	.L634:
 10184              		.loc 1 3512 3 discriminator 10
 10185 009c FB68     		ldr	r3, [r7, #12]
 10186 009e 0022     		movs	r2, #0
 10187 00a0 A3F86020 		strh	r2, [r3, #96]	@ movhi
 10188              	.L631:
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10189              		.loc 1 3514 20 is_stmt 1
 10190 00a4 FB68     		ldr	r3, [r7, #12]
 10191 00a6 0022     		movs	r2, #0
 10192 00a8 C3F89020 		str	r2, [r3, #144]
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10193              		.loc 1 3515 18
 10194 00ac FB68     		ldr	r3, [r7, #12]
 10195 00ae 2222     		movs	r2, #34
 10196 00b0 C3F88C20 		str	r2, [r3, #140]
 10197              	.L638:
 10198              	.LBB808:
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10199              		.loc 1 3518 3 discriminator 1
 10200 00b4 FB68     		ldr	r3, [r7, #12]
 10201 00b6 1B68     		ldr	r3, [r3]
 10202 00b8 0833     		adds	r3, r3, #8
 10203 00ba 7B66     		str	r3, [r7, #100]
 10204              	.LBB809:
 10205              	.LBB810:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10206              		.loc 2 1155 4
 10207 00bc 7B6E     		ldr	r3, [r7, #100]
 10208              		.syntax unified
 10209              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10210 00be 53E8003F 		ldrex r3, [r3]
 10211              	@ 0 "" 2
 10212              		.thumb
 10213              		.syntax unified
 10214 00c2 3B66     		str	r3, [r7, #96]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10215              		.loc 2 1156 10
 10216 00c4 3B6E     		ldr	r3, [r7, #96]
 10217              	.LBE810:
 10218              	.LBE809:
 10219              		.loc 1 3518 3 discriminator 1
 10220 00c6 43F00103 		orr	r3, r3, #1
 10221 00ca C7F88430 		str	r3, [r7, #132]
 10222 00ce FB68     		ldr	r3, [r7, #12]
 10223 00d0 1B68     		ldr	r3, [r3]
 10224 00d2 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 265


 10225 00d4 D7F88420 		ldr	r2, [r7, #132]
 10226 00d8 3A67     		str	r2, [r7, #112]
 10227 00da FB66     		str	r3, [r7, #108]
 10228              	.LBB811:
 10229              	.LBB812:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10230              		.loc 2 1206 4
 10231 00dc F96E     		ldr	r1, [r7, #108]
 10232 00de 3A6F     		ldr	r2, [r7, #112]
 10233              		.syntax unified
 10234              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10235 00e0 41E80023 		strex r3, r2, [r1]
 10236              	@ 0 "" 2
 10237              		.thumb
 10238              		.syntax unified
 10239 00e4 BB66     		str	r3, [r7, #104]
 10240              		.loc 2 1207 10
 10241 00e6 BB6E     		ldr	r3, [r7, #104]
 10242              	.LBE812:
 10243              	.LBE811:
 10244              		.loc 1 3518 3 discriminator 1
 10245 00e8 002B     		cmp	r3, #0
 10246 00ea E3D1     		bne	.L638
 10247              	.LBE808:
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 10248              		.loc 1 3521 13
 10249 00ec FB68     		ldr	r3, [r7, #12]
 10250 00ee 5B6E     		ldr	r3, [r3, #100]
 10251              		.loc 1 3521 6
 10252 00f0 B3F1005F 		cmp	r3, #536870912
 10253 00f4 4FD1     		bne	.L639
 10254              		.loc 1 3521 66 discriminator 1
 10255 00f6 FB68     		ldr	r3, [r7, #12]
 10256 00f8 B3F86830 		ldrh	r3, [r3, #104]
 10257              		.loc 1 3521 49 discriminator 1
 10258 00fc FA88     		ldrh	r2, [r7, #6]
 10259 00fe 9A42     		cmp	r2, r3
 10260 0100 49D3     		bcc	.L639
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 10261              		.loc 1 3524 21
 10262 0102 FB68     		ldr	r3, [r7, #12]
 10263 0104 9B68     		ldr	r3, [r3, #8]
 10264              		.loc 1 3524 8
 10265 0106 B3F5805F 		cmp	r3, #4096
 10266 010a 07D1     		bne	.L640
 10267              		.loc 1 3524 71 discriminator 1
 10268 010c FB68     		ldr	r3, [r7, #12]
 10269 010e 1B69     		ldr	r3, [r3, #16]
 10270              		.loc 1 3524 56 discriminator 1
 10271 0110 002B     		cmp	r3, #0
 10272 0112 03D1     		bne	.L640
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 266


 10273              		.loc 1 3526 20
 10274 0114 FB68     		ldr	r3, [r7, #12]
 10275 0116 474A     		ldr	r2, .L659
 10276 0118 5A67     		str	r2, [r3, #116]
 10277 011a 02E0     		b	.L641
 10278              	.L640:
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 10279              		.loc 1 3530 20
 10280 011c FB68     		ldr	r3, [r7, #12]
 10281 011e 464A     		ldr	r2, .L659+4
 10282 0120 5A67     		str	r2, [r3, #116]
 10283              	.L641:
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 10284              		.loc 1 3534 20
 10285 0122 FB68     		ldr	r3, [r7, #12]
 10286 0124 1B69     		ldr	r3, [r3, #16]
 10287              		.loc 1 3534 8
 10288 0126 002B     		cmp	r3, #0
 10289 0128 1AD0     		beq	.L648
 10290              	.L645:
 10291              	.LBB813:
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10292              		.loc 1 3536 7 discriminator 1
 10293 012a FB68     		ldr	r3, [r7, #12]
 10294 012c 1B68     		ldr	r3, [r3]
 10295 012e 3B65     		str	r3, [r7, #80]
 10296              	.LBB814:
 10297              	.LBB815:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10298              		.loc 2 1155 4
 10299 0130 3B6D     		ldr	r3, [r7, #80]
 10300              		.syntax unified
 10301              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10302 0132 53E8003F 		ldrex r3, [r3]
 10303              	@ 0 "" 2
 10304              		.thumb
 10305              		.syntax unified
 10306 0136 FB64     		str	r3, [r7, #76]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10307              		.loc 2 1156 10
 10308 0138 FB6C     		ldr	r3, [r7, #76]
 10309              	.LBE815:
 10310              	.LBE814:
 10311              		.loc 1 3536 7 discriminator 1
 10312 013a 43F48073 		orr	r3, r3, #256
 10313 013e C7F88030 		str	r3, [r7, #128]
 10314 0142 FB68     		ldr	r3, [r7, #12]
 10315 0144 1B68     		ldr	r3, [r3]
 10316 0146 1A46     		mov	r2, r3
 10317 0148 D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 267


 10318 014c FB65     		str	r3, [r7, #92]
 10319 014e BA65     		str	r2, [r7, #88]
 10320              	.LBB816:
 10321              	.LBB817:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10322              		.loc 2 1206 4
 10323 0150 B96D     		ldr	r1, [r7, #88]
 10324 0152 FA6D     		ldr	r2, [r7, #92]
 10325              		.syntax unified
 10326              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10327 0154 41E80023 		strex r3, r2, [r1]
 10328              	@ 0 "" 2
 10329              		.thumb
 10330              		.syntax unified
 10331 0158 7B65     		str	r3, [r7, #84]
 10332              		.loc 2 1207 10
 10333 015a 7B6D     		ldr	r3, [r7, #84]
 10334              	.LBE817:
 10335              	.LBE816:
 10336              		.loc 1 3536 7 discriminator 1
 10337 015c 002B     		cmp	r3, #0
 10338 015e E4D1     		bne	.L645
 10339              	.L648:
 10340              	.LBE813:
 10341              	.LBB818:
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 10342              		.loc 1 3538 5 discriminator 1
 10343 0160 FB68     		ldr	r3, [r7, #12]
 10344 0162 1B68     		ldr	r3, [r3]
 10345 0164 0833     		adds	r3, r3, #8
 10346 0166 FB63     		str	r3, [r7, #60]
 10347              	.LBB819:
 10348              	.LBB820:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10349              		.loc 2 1155 4
 10350 0168 FB6B     		ldr	r3, [r7, #60]
 10351              		.syntax unified
 10352              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10353 016a 53E8003F 		ldrex r3, [r3]
 10354              	@ 0 "" 2
 10355              		.thumb
 10356              		.syntax unified
 10357 016e BB63     		str	r3, [r7, #56]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10358              		.loc 2 1156 10
 10359 0170 BB6B     		ldr	r3, [r7, #56]
 10360              	.LBE820:
 10361              	.LBE819:
 10362              		.loc 1 3538 5 discriminator 1
 10363 0172 43F08053 		orr	r3, r3, #268435456
 10364 0176 FB67     		str	r3, [r7, #124]
 10365 0178 FB68     		ldr	r3, [r7, #12]
 10366 017a 1B68     		ldr	r3, [r3]
 10367 017c 0833     		adds	r3, r3, #8
 10368 017e FA6F     		ldr	r2, [r7, #124]
 10369 0180 BA64     		str	r2, [r7, #72]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 268


 10370 0182 7B64     		str	r3, [r7, #68]
 10371              	.LBB821:
 10372              	.LBB822:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10373              		.loc 2 1206 4
 10374 0184 796C     		ldr	r1, [r7, #68]
 10375 0186 BA6C     		ldr	r2, [r7, #72]
 10376              		.syntax unified
 10377              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10378 0188 41E80023 		strex r3, r2, [r1]
 10379              	@ 0 "" 2
 10380              		.thumb
 10381              		.syntax unified
 10382 018c 3B64     		str	r3, [r7, #64]
 10383              		.loc 2 1207 10
 10384 018e 3B6C     		ldr	r3, [r7, #64]
 10385              	.LBE822:
 10386              	.LBE821:
 10387              		.loc 1 3538 5 discriminator 1
 10388 0190 002B     		cmp	r3, #0
 10389 0192 E5D1     		bne	.L648
 10390              	.LBE818:
 10391              		.loc 1 3538 5 is_stmt 0
 10392 0194 46E0     		b	.L649
 10393              	.L639:
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 10394              		.loc 1 3543 21 is_stmt 1
 10395 0196 FB68     		ldr	r3, [r7, #12]
 10396 0198 9B68     		ldr	r3, [r3, #8]
 10397              		.loc 1 3543 8
 10398 019a B3F5805F 		cmp	r3, #4096
 10399 019e 07D1     		bne	.L650
 10400              		.loc 1 3543 71 discriminator 1
 10401 01a0 FB68     		ldr	r3, [r7, #12]
 10402 01a2 1B69     		ldr	r3, [r3, #16]
 10403              		.loc 1 3543 56 discriminator 1
 10404 01a4 002B     		cmp	r3, #0
 10405 01a6 03D1     		bne	.L650
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 10406              		.loc 1 3545 20
 10407 01a8 FB68     		ldr	r3, [r7, #12]
 10408 01aa 244A     		ldr	r2, .L659+8
 10409 01ac 5A67     		str	r2, [r3, #116]
 10410 01ae 02E0     		b	.L651
 10411              	.L650:
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 10412              		.loc 1 3549 20
 10413 01b0 FB68     		ldr	r3, [r7, #12]
 10414 01b2 234A     		ldr	r2, .L659+12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 269


 10415 01b4 5A67     		str	r2, [r3, #116]
 10416              	.L651:
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 10417              		.loc 1 3553 20
 10418 01b6 FB68     		ldr	r3, [r7, #12]
 10419 01b8 1B69     		ldr	r3, [r3, #16]
 10420              		.loc 1 3553 8
 10421 01ba 002B     		cmp	r3, #0
 10422 01bc 19D0     		beq	.L652
 10423              	.L655:
 10424              	.LBB823:
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 10425              		.loc 1 3555 7 discriminator 1
 10426 01be FB68     		ldr	r3, [r7, #12]
 10427 01c0 1B68     		ldr	r3, [r3]
 10428 01c2 BB62     		str	r3, [r7, #40]
 10429              	.LBB824:
 10430              	.LBB825:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10431              		.loc 2 1155 4
 10432 01c4 BB6A     		ldr	r3, [r7, #40]
 10433              		.syntax unified
 10434              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10435 01c6 53E8003F 		ldrex r3, [r3]
 10436              	@ 0 "" 2
 10437              		.thumb
 10438              		.syntax unified
 10439 01ca 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10440              		.loc 2 1156 10
 10441 01cc 7B6A     		ldr	r3, [r7, #36]
 10442              	.LBE825:
 10443              	.LBE824:
 10444              		.loc 1 3555 7 discriminator 1
 10445 01ce 43F49073 		orr	r3, r3, #288
 10446 01d2 7B67     		str	r3, [r7, #116]
 10447 01d4 FB68     		ldr	r3, [r7, #12]
 10448 01d6 1B68     		ldr	r3, [r3]
 10449 01d8 1A46     		mov	r2, r3
 10450 01da 7B6F     		ldr	r3, [r7, #116]
 10451 01dc 7B63     		str	r3, [r7, #52]
 10452 01de 3A63     		str	r2, [r7, #48]
 10453              	.LBB826:
 10454              	.LBB827:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10455              		.loc 2 1206 4
 10456 01e0 396B     		ldr	r1, [r7, #48]
 10457 01e2 7A6B     		ldr	r2, [r7, #52]
 10458              		.syntax unified
 10459              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10460 01e4 41E80023 		strex r3, r2, [r1]
 10461              	@ 0 "" 2
 10462              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 270


 10463              		.syntax unified
 10464 01e8 FB62     		str	r3, [r7, #44]
 10465              		.loc 2 1207 10
 10466 01ea FB6A     		ldr	r3, [r7, #44]
 10467              	.LBE827:
 10468              	.LBE826:
 10469              		.loc 1 3555 7 discriminator 1
 10470 01ec 002B     		cmp	r3, #0
 10471 01ee E6D1     		bne	.L655
 10472 01f0 18E0     		b	.L649
 10473              	.L652:
 10474              	.LBE823:
 10475              	.LBB828:
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 10476              		.loc 1 3559 7 discriminator 1
 10477 01f2 FB68     		ldr	r3, [r7, #12]
 10478 01f4 1B68     		ldr	r3, [r3]
 10479 01f6 7B61     		str	r3, [r7, #20]
 10480              	.LBB829:
 10481              	.LBB830:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10482              		.loc 2 1155 4
 10483 01f8 7B69     		ldr	r3, [r7, #20]
 10484              		.syntax unified
 10485              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10486 01fa 53E8003F 		ldrex r3, [r3]
 10487              	@ 0 "" 2
 10488              		.thumb
 10489              		.syntax unified
 10490 01fe 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10491              		.loc 2 1156 10
 10492 0200 3B69     		ldr	r3, [r7, #16]
 10493              	.LBE830:
 10494              	.LBE829:
 10495              		.loc 1 3559 7 discriminator 1
 10496 0202 43F02003 		orr	r3, r3, #32
 10497 0206 BB67     		str	r3, [r7, #120]
 10498 0208 FB68     		ldr	r3, [r7, #12]
 10499 020a 1B68     		ldr	r3, [r3]
 10500 020c 1A46     		mov	r2, r3
 10501 020e BB6F     		ldr	r3, [r7, #120]
 10502 0210 3B62     		str	r3, [r7, #32]
 10503 0212 FA61     		str	r2, [r7, #28]
 10504              	.LBB831:
 10505              	.LBB832:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10506              		.loc 2 1206 4
 10507 0214 F969     		ldr	r1, [r7, #28]
 10508 0216 3A6A     		ldr	r2, [r7, #32]
 10509              		.syntax unified
 10510              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10511 0218 41E80023 		strex r3, r2, [r1]
 10512              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 271


 10513              		.thumb
 10514              		.syntax unified
 10515 021c BB61     		str	r3, [r7, #24]
 10516              		.loc 2 1207 10
 10517 021e BB69     		ldr	r3, [r7, #24]
 10518              	.LBE832:
 10519              	.LBE831:
 10520              		.loc 1 3559 7 discriminator 1
 10521 0220 002B     		cmp	r3, #0
 10522 0222 E6D1     		bne	.L652
 10523              	.L649:
 10524              	.LBE828:
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 10525              		.loc 1 3562 10
 10526 0224 0023     		movs	r3, #0
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10527              		.loc 1 3563 1
 10528 0226 1846     		mov	r0, r3
 10529 0228 8C37     		adds	r7, r7, #140
 10530              	.LCFI262:
 10531              		.cfi_def_cfa_offset 4
 10532 022a BD46     		mov	sp, r7
 10533              	.LCFI263:
 10534              		.cfi_def_cfa_register 13
 10535              		@ sp needed
 10536 022c 5DF8047B 		ldr	r7, [sp], #4
 10537              	.LCFI264:
 10538              		.cfi_restore 7
 10539              		.cfi_def_cfa_offset 0
 10540 0230 7047     		bx	lr
 10541              	.L660:
 10542 0232 00BF     		.align	2
 10543              	.L659:
 10544 0234 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 10545 0238 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 10546 023c 00000000 		.word	UART_RxISR_16BIT
 10547 0240 00000000 		.word	UART_RxISR_8BIT
 10548              		.cfi_endproc
 10549              	.LFE191:
 10551              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 10552              		.align	1
 10553              		.global	UART_Start_Receive_DMA
 10554              		.syntax unified
 10555              		.thumb
 10556              		.thumb_func
 10558              	UART_Start_Receive_DMA:
 10559              	.LFB192:
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 272


3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 10560              		.loc 1 3577 1
 10561              		.cfi_startproc
 10562              		@ args = 0, pretend = 0, frame = 88
 10563              		@ frame_needed = 1, uses_anonymous_args = 0
 10564 0000 80B5     		push	{r7, lr}
 10565              	.LCFI265:
 10566              		.cfi_def_cfa_offset 8
 10567              		.cfi_offset 7, -8
 10568              		.cfi_offset 14, -4
 10569 0002 96B0     		sub	sp, sp, #88
 10570              	.LCFI266:
 10571              		.cfi_def_cfa_offset 96
 10572 0004 00AF     		add	r7, sp, #0
 10573              	.LCFI267:
 10574              		.cfi_def_cfa_register 7
 10575 0006 F860     		str	r0, [r7, #12]
 10576 0008 B960     		str	r1, [r7, #8]
 10577 000a 1346     		mov	r3, r2
 10578 000c FB80     		strh	r3, [r7, #6]	@ movhi
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 10579              		.loc 1 3578 21
 10580 000e FB68     		ldr	r3, [r7, #12]
 10581 0010 BA68     		ldr	r2, [r7, #8]
 10582 0012 9A65     		str	r2, [r3, #88]
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferSize = Size;
 10583              		.loc 1 3579 21
 10584 0014 FB68     		ldr	r3, [r7, #12]
 10585 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 10586 0018 A3F85C20 		strh	r2, [r3, #92]	@ movhi
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10587              		.loc 1 3581 20
 10588 001c FB68     		ldr	r3, [r7, #12]
 10589 001e 0022     		movs	r2, #0
 10590 0020 C3F89020 		str	r2, [r3, #144]
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 10591              		.loc 1 3582 18
 10592 0024 FB68     		ldr	r3, [r7, #12]
 10593 0026 2222     		movs	r2, #34
 10594 0028 C3F88C20 		str	r2, [r3, #140]
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 10595              		.loc 1 3584 12
 10596 002c FB68     		ldr	r3, [r7, #12]
 10597 002e D3F88030 		ldr	r3, [r3, #128]
 10598              		.loc 1 3584 6
 10599 0032 002B     		cmp	r3, #0
 10600 0034 2DD0     		beq	.L662
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 273


 10601              		.loc 1 3587 10
 10602 0036 FB68     		ldr	r3, [r7, #12]
 10603 0038 D3F88030 		ldr	r3, [r3, #128]
 10604              		.loc 1 3587 37
 10605 003c 404A     		ldr	r2, .L674
 10606 003e DA63     		str	r2, [r3, #60]
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 10607              		.loc 1 3590 10
 10608 0040 FB68     		ldr	r3, [r7, #12]
 10609 0042 D3F88030 		ldr	r3, [r3, #128]
 10610              		.loc 1 3590 41
 10611 0046 3F4A     		ldr	r2, .L674+4
 10612 0048 1A64     		str	r2, [r3, #64]
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA error callback */
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 10613              		.loc 1 3593 10
 10614 004a FB68     		ldr	r3, [r7, #12]
 10615 004c D3F88030 		ldr	r3, [r3, #128]
 10616              		.loc 1 3593 38
 10617 0050 3D4A     		ldr	r2, .L674+8
 10618 0052 DA64     		str	r2, [r3, #76]
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA abort callback */
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 10619              		.loc 1 3596 10
 10620 0054 FB68     		ldr	r3, [r7, #12]
 10621 0056 D3F88030 		ldr	r3, [r3, #128]
 10622              		.loc 1 3596 38
 10623 005a 0022     		movs	r2, #0
 10624 005c 1A65     		str	r2, [r3, #80]
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA channel */
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
 10625              		.loc 1 3599 9
 10626 005e FB68     		ldr	r3, [r7, #12]
 10627 0060 D3F88000 		ldr	r0, [r3, #128]
 10628              		.loc 1 3599 57
 10629 0064 FB68     		ldr	r3, [r7, #12]
 10630 0066 1B68     		ldr	r3, [r3]
 10631              		.loc 1 3599 51
 10632 0068 2433     		adds	r3, r3, #36
 10633              		.loc 1 3599 9
 10634 006a 1946     		mov	r1, r3
 10635              		.loc 1 3599 89
 10636 006c FB68     		ldr	r3, [r7, #12]
 10637 006e 9B6D     		ldr	r3, [r3, #88]
 10638              		.loc 1 3599 9
 10639 0070 1A46     		mov	r2, r3
 10640 0072 FB88     		ldrh	r3, [r7, #6]
 10641 0074 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10642 0078 0346     		mov	r3, r0
 10643              		.loc 1 3599 8 discriminator 1
 10644 007a 002B     		cmp	r3, #0
 10645 007c 09D0     		beq	.L662
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 274


3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set error code to DMA */
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 10646              		.loc 1 3602 24
 10647 007e FB68     		ldr	r3, [r7, #12]
 10648 0080 1022     		movs	r2, #16
 10649 0082 C3F89020 		str	r2, [r3, #144]
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 10650              		.loc 1 3605 22
 10651 0086 FB68     		ldr	r3, [r7, #12]
 10652 0088 2022     		movs	r2, #32
 10653 008a C3F88C20 		str	r2, [r3, #140]
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 10654              		.loc 1 3607 14
 10655 008e 0123     		movs	r3, #1
 10656 0090 51E0     		b	.L663
 10657              	.L662:
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 10658              		.loc 1 3612 18
 10659 0092 FB68     		ldr	r3, [r7, #12]
 10660 0094 1B69     		ldr	r3, [r3, #16]
 10661              		.loc 1 3612 6
 10662 0096 002B     		cmp	r3, #0
 10663 0098 18D0     		beq	.L670
 10664              	.L667:
 10665              	.LBB833:
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 10666              		.loc 1 3614 5 discriminator 1
 10667 009a FB68     		ldr	r3, [r7, #12]
 10668 009c 1B68     		ldr	r3, [r3]
 10669 009e FB63     		str	r3, [r7, #60]
 10670              	.LBB834:
 10671              	.LBB835:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10672              		.loc 2 1155 4
 10673 00a0 FB6B     		ldr	r3, [r7, #60]
 10674              		.syntax unified
 10675              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10676 00a2 53E8003F 		ldrex r3, [r3]
 10677              	@ 0 "" 2
 10678              		.thumb
 10679              		.syntax unified
 10680 00a6 BB63     		str	r3, [r7, #56]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10681              		.loc 2 1156 10
 10682 00a8 BB6B     		ldr	r3, [r7, #56]
 10683              	.LBE835:
 10684              	.LBE834:
 10685              		.loc 1 3614 5 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 275


 10686 00aa 43F48073 		orr	r3, r3, #256
 10687 00ae 7B65     		str	r3, [r7, #84]
 10688 00b0 FB68     		ldr	r3, [r7, #12]
 10689 00b2 1B68     		ldr	r3, [r3]
 10690 00b4 1A46     		mov	r2, r3
 10691 00b6 7B6D     		ldr	r3, [r7, #84]
 10692 00b8 BB64     		str	r3, [r7, #72]
 10693 00ba 7A64     		str	r2, [r7, #68]
 10694              	.LBB836:
 10695              	.LBB837:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10696              		.loc 2 1206 4
 10697 00bc 796C     		ldr	r1, [r7, #68]
 10698 00be BA6C     		ldr	r2, [r7, #72]
 10699              		.syntax unified
 10700              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10701 00c0 41E80023 		strex r3, r2, [r1]
 10702              	@ 0 "" 2
 10703              		.thumb
 10704              		.syntax unified
 10705 00c4 3B64     		str	r3, [r7, #64]
 10706              		.loc 2 1207 10
 10707 00c6 3B6C     		ldr	r3, [r7, #64]
 10708              	.LBE837:
 10709              	.LBE836:
 10710              		.loc 1 3614 5 discriminator 1
 10711 00c8 002B     		cmp	r3, #0
 10712 00ca E6D1     		bne	.L667
 10713              	.L670:
 10714              	.LBE833:
 10715              	.LBB838:
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10716              		.loc 1 3618 3 discriminator 1
 10717 00cc FB68     		ldr	r3, [r7, #12]
 10718 00ce 1B68     		ldr	r3, [r3]
 10719 00d0 0833     		adds	r3, r3, #8
 10720 00d2 BB62     		str	r3, [r7, #40]
 10721              	.LBB839:
 10722              	.LBB840:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10723              		.loc 2 1155 4
 10724 00d4 BB6A     		ldr	r3, [r7, #40]
 10725              		.syntax unified
 10726              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10727 00d6 53E8003F 		ldrex r3, [r3]
 10728              	@ 0 "" 2
 10729              		.thumb
 10730              		.syntax unified
 10731 00da 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10732              		.loc 2 1156 10
 10733 00dc 7B6A     		ldr	r3, [r7, #36]
 10734              	.LBE840:
 10735              	.LBE839:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 276


 10736              		.loc 1 3618 3 discriminator 1
 10737 00de 43F00103 		orr	r3, r3, #1
 10738 00e2 3B65     		str	r3, [r7, #80]
 10739 00e4 FB68     		ldr	r3, [r7, #12]
 10740 00e6 1B68     		ldr	r3, [r3]
 10741 00e8 0833     		adds	r3, r3, #8
 10742 00ea 3A6D     		ldr	r2, [r7, #80]
 10743 00ec 7A63     		str	r2, [r7, #52]
 10744 00ee 3B63     		str	r3, [r7, #48]
 10745              	.LBB841:
 10746              	.LBB842:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10747              		.loc 2 1206 4
 10748 00f0 396B     		ldr	r1, [r7, #48]
 10749 00f2 7A6B     		ldr	r2, [r7, #52]
 10750              		.syntax unified
 10751              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10752 00f4 41E80023 		strex r3, r2, [r1]
 10753              	@ 0 "" 2
 10754              		.thumb
 10755              		.syntax unified
 10756 00f8 FB62     		str	r3, [r7, #44]
 10757              		.loc 2 1207 10
 10758 00fa FB6A     		ldr	r3, [r7, #44]
 10759              	.LBE842:
 10760              	.LBE841:
 10761              		.loc 1 3618 3 discriminator 1
 10762 00fc 002B     		cmp	r3, #0
 10763 00fe E5D1     		bne	.L670
 10764              	.L673:
 10765              	.LBE838:
 10766              	.LBB843:
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   in the UART CR3 register */
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 10767              		.loc 1 3622 3 discriminator 1
 10768 0100 FB68     		ldr	r3, [r7, #12]
 10769 0102 1B68     		ldr	r3, [r3]
 10770 0104 0833     		adds	r3, r3, #8
 10771 0106 7B61     		str	r3, [r7, #20]
 10772              	.LBB844:
 10773              	.LBB845:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10774              		.loc 2 1155 4
 10775 0108 7B69     		ldr	r3, [r7, #20]
 10776              		.syntax unified
 10777              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10778 010a 53E8003F 		ldrex r3, [r3]
 10779              	@ 0 "" 2
 10780              		.thumb
 10781              		.syntax unified
 10782 010e 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10783              		.loc 2 1156 10
 10784 0110 3B69     		ldr	r3, [r7, #16]
 10785              	.LBE845:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 277


 10786              	.LBE844:
 10787              		.loc 1 3622 3 discriminator 1
 10788 0112 43F04003 		orr	r3, r3, #64
 10789 0116 FB64     		str	r3, [r7, #76]
 10790 0118 FB68     		ldr	r3, [r7, #12]
 10791 011a 1B68     		ldr	r3, [r3]
 10792 011c 0833     		adds	r3, r3, #8
 10793 011e FA6C     		ldr	r2, [r7, #76]
 10794 0120 3A62     		str	r2, [r7, #32]
 10795 0122 FB61     		str	r3, [r7, #28]
 10796              	.LBB846:
 10797              	.LBB847:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10798              		.loc 2 1206 4
 10799 0124 F969     		ldr	r1, [r7, #28]
 10800 0126 3A6A     		ldr	r2, [r7, #32]
 10801              		.syntax unified
 10802              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10803 0128 41E80023 		strex r3, r2, [r1]
 10804              	@ 0 "" 2
 10805              		.thumb
 10806              		.syntax unified
 10807 012c BB61     		str	r3, [r7, #24]
 10808              		.loc 2 1207 10
 10809 012e BB69     		ldr	r3, [r7, #24]
 10810              	.LBE847:
 10811              	.LBE846:
 10812              		.loc 1 3622 3 discriminator 1
 10813 0130 002B     		cmp	r3, #0
 10814 0132 E5D1     		bne	.L673
 10815              	.LBE843:
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 10816              		.loc 1 3624 10
 10817 0134 0023     		movs	r3, #0
 10818              	.L663:
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10819              		.loc 1 3625 1
 10820 0136 1846     		mov	r0, r3
 10821 0138 5837     		adds	r7, r7, #88
 10822              	.LCFI268:
 10823              		.cfi_def_cfa_offset 8
 10824 013a BD46     		mov	sp, r7
 10825              	.LCFI269:
 10826              		.cfi_def_cfa_register 13
 10827              		@ sp needed
 10828 013c 80BD     		pop	{r7, pc}
 10829              	.L675:
 10830 013e 00BF     		.align	2
 10831              	.L674:
 10832 0140 00000000 		.word	UART_DMAReceiveCplt
 10833 0144 00000000 		.word	UART_DMARxHalfCplt
 10834 0148 00000000 		.word	UART_DMAError
 10835              		.cfi_endproc
 10836              	.LFE192:
 10838              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 10839              		.align	1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 278


 10840              		.syntax unified
 10841              		.thumb
 10842              		.thumb_func
 10844              	UART_EndTxTransfer:
 10845              	.LFB193:
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 10846              		.loc 1 3634 1
 10847              		.cfi_startproc
 10848              		@ args = 0, pretend = 0, frame = 56
 10849              		@ frame_needed = 1, uses_anonymous_args = 0
 10850              		@ link register save eliminated.
 10851 0000 80B4     		push	{r7}
 10852              	.LCFI270:
 10853              		.cfi_def_cfa_offset 4
 10854              		.cfi_offset 7, -4
 10855 0002 8FB0     		sub	sp, sp, #60
 10856              	.LCFI271:
 10857              		.cfi_def_cfa_offset 64
 10858 0004 00AF     		add	r7, sp, #0
 10859              	.LCFI272:
 10860              		.cfi_def_cfa_register 7
 10861 0006 7860     		str	r0, [r7, #4]
 10862              	.L679:
 10863              	.LBB848:
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 10864              		.loc 1 3636 3 discriminator 1
 10865 0008 7B68     		ldr	r3, [r7, #4]
 10866 000a 1B68     		ldr	r3, [r3]
 10867 000c 3B62     		str	r3, [r7, #32]
 10868              	.LBB849:
 10869              	.LBB850:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10870              		.loc 2 1155 4
 10871 000e 3B6A     		ldr	r3, [r7, #32]
 10872              		.syntax unified
 10873              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10874 0010 53E8003F 		ldrex r3, [r3]
 10875              	@ 0 "" 2
 10876              		.thumb
 10877              		.syntax unified
 10878 0014 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10879              		.loc 2 1156 10
 10880 0016 FB69     		ldr	r3, [r7, #28]
 10881              	.LBE850:
 10882              	.LBE849:
 10883              		.loc 1 3636 3 discriminator 1
 10884 0018 23F0C003 		bic	r3, r3, #192
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 279


 10885 001c 7B63     		str	r3, [r7, #52]
 10886 001e 7B68     		ldr	r3, [r7, #4]
 10887 0020 1B68     		ldr	r3, [r3]
 10888 0022 1A46     		mov	r2, r3
 10889 0024 7B6B     		ldr	r3, [r7, #52]
 10890 0026 FB62     		str	r3, [r7, #44]
 10891 0028 BA62     		str	r2, [r7, #40]
 10892              	.LBB851:
 10893              	.LBB852:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10894              		.loc 2 1206 4
 10895 002a B96A     		ldr	r1, [r7, #40]
 10896 002c FA6A     		ldr	r2, [r7, #44]
 10897              		.syntax unified
 10898              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10899 002e 41E80023 		strex r3, r2, [r1]
 10900              	@ 0 "" 2
 10901              		.thumb
 10902              		.syntax unified
 10903 0032 7B62     		str	r3, [r7, #36]
 10904              		.loc 2 1207 10
 10905 0034 7B6A     		ldr	r3, [r7, #36]
 10906              	.LBE852:
 10907              	.LBE851:
 10908              		.loc 1 3636 3 discriminator 1
 10909 0036 002B     		cmp	r3, #0
 10910 0038 E6D1     		bne	.L679
 10911              	.L682:
 10912              	.LBE848:
 10913              	.LBB853:
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 10914              		.loc 1 3637 3 discriminator 1
 10915 003a 7B68     		ldr	r3, [r7, #4]
 10916 003c 1B68     		ldr	r3, [r3]
 10917 003e 0833     		adds	r3, r3, #8
 10918 0040 FB60     		str	r3, [r7, #12]
 10919              	.LBB854:
 10920              	.LBB855:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10921              		.loc 2 1155 4
 10922 0042 FB68     		ldr	r3, [r7, #12]
 10923              		.syntax unified
 10924              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10925 0044 53E8003F 		ldrex r3, [r3]
 10926              	@ 0 "" 2
 10927              		.thumb
 10928              		.syntax unified
 10929 0048 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10930              		.loc 2 1156 10
 10931 004a BB68     		ldr	r3, [r7, #8]
 10932              	.LBE855:
 10933              	.LBE854:
 10934              		.loc 1 3637 3 discriminator 1
 10935 004c 23F40003 		bic	r3, r3, #8388608
 10936 0050 3B63     		str	r3, [r7, #48]
 10937 0052 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 280


 10938 0054 1B68     		ldr	r3, [r3]
 10939 0056 0833     		adds	r3, r3, #8
 10940 0058 3A6B     		ldr	r2, [r7, #48]
 10941 005a BA61     		str	r2, [r7, #24]
 10942 005c 7B61     		str	r3, [r7, #20]
 10943              	.LBB856:
 10944              	.LBB857:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10945              		.loc 2 1206 4
 10946 005e 7969     		ldr	r1, [r7, #20]
 10947 0060 BA69     		ldr	r2, [r7, #24]
 10948              		.syntax unified
 10949              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10950 0062 41E80023 		strex r3, r2, [r1]
 10951              	@ 0 "" 2
 10952              		.thumb
 10953              		.syntax unified
 10954 0066 3B61     		str	r3, [r7, #16]
 10955              		.loc 2 1207 10
 10956 0068 3B69     		ldr	r3, [r7, #16]
 10957              	.LBE857:
 10958              	.LBE856:
 10959              		.loc 1 3637 3 discriminator 1
 10960 006a 002B     		cmp	r3, #0
 10961 006c E5D1     		bne	.L682
 10962              	.LBE853:
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10963              		.loc 1 3640 17
 10964 006e 7B68     		ldr	r3, [r7, #4]
 10965 0070 2022     		movs	r2, #32
 10966 0072 C3F88820 		str	r2, [r3, #136]
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 10967              		.loc 1 3641 1
 10968 0076 00BF     		nop
 10969 0078 3C37     		adds	r7, r7, #60
 10970              	.LCFI273:
 10971              		.cfi_def_cfa_offset 4
 10972 007a BD46     		mov	sp, r7
 10973              	.LCFI274:
 10974              		.cfi_def_cfa_register 13
 10975              		@ sp needed
 10976 007c 5DF8047B 		ldr	r7, [sp], #4
 10977              	.LCFI275:
 10978              		.cfi_restore 7
 10979              		.cfi_def_cfa_offset 0
 10980 0080 7047     		bx	lr
 10981              		.cfi_endproc
 10982              	.LFE193:
 10984              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 10985              		.align	1
 10986              		.syntax unified
 10987              		.thumb
 10988              		.thumb_func
 10990              	UART_EndRxTransfer:
 10991              	.LFB194:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 281


3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 10992              		.loc 1 3650 1
 10993              		.cfi_startproc
 10994              		@ args = 0, pretend = 0, frame = 80
 10995              		@ frame_needed = 1, uses_anonymous_args = 0
 10996              		@ link register save eliminated.
 10997 0000 80B4     		push	{r7}
 10998              	.LCFI276:
 10999              		.cfi_def_cfa_offset 4
 11000              		.cfi_offset 7, -4
 11001 0002 95B0     		sub	sp, sp, #84
 11002              	.LCFI277:
 11003              		.cfi_def_cfa_offset 88
 11004 0004 00AF     		add	r7, sp, #0
 11005              	.LCFI278:
 11006              		.cfi_def_cfa_register 7
 11007 0006 7860     		str	r0, [r7, #4]
 11008              	.L686:
 11009              	.LBB858:
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 11010              		.loc 1 3652 3 discriminator 1
 11011 0008 7B68     		ldr	r3, [r7, #4]
 11012 000a 1B68     		ldr	r3, [r3]
 11013 000c 7B63     		str	r3, [r7, #52]
 11014              	.LBB859:
 11015              	.LBB860:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11016              		.loc 2 1155 4
 11017 000e 7B6B     		ldr	r3, [r7, #52]
 11018              		.syntax unified
 11019              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11020 0010 53E8003F 		ldrex r3, [r3]
 11021              	@ 0 "" 2
 11022              		.thumb
 11023              		.syntax unified
 11024 0014 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11025              		.loc 2 1156 10
 11026 0016 3B6B     		ldr	r3, [r7, #48]
 11027              	.LBE860:
 11028              	.LBE859:
 11029              		.loc 1 3652 3 discriminator 1
 11030 0018 23F49073 		bic	r3, r3, #288
 11031 001c FB64     		str	r3, [r7, #76]
 11032 001e 7B68     		ldr	r3, [r7, #4]
 11033 0020 1B68     		ldr	r3, [r3]
 11034 0022 1A46     		mov	r2, r3
 11035 0024 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 282


 11036 0026 3B64     		str	r3, [r7, #64]
 11037 0028 FA63     		str	r2, [r7, #60]
 11038              	.LBB861:
 11039              	.LBB862:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11040              		.loc 2 1206 4
 11041 002a F96B     		ldr	r1, [r7, #60]
 11042 002c 3A6C     		ldr	r2, [r7, #64]
 11043              		.syntax unified
 11044              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11045 002e 41E80023 		strex r3, r2, [r1]
 11046              	@ 0 "" 2
 11047              		.thumb
 11048              		.syntax unified
 11049 0032 BB63     		str	r3, [r7, #56]
 11050              		.loc 2 1207 10
 11051 0034 BB6B     		ldr	r3, [r7, #56]
 11052              	.LBE862:
 11053              	.LBE861:
 11054              		.loc 1 3652 3 discriminator 1
 11055 0036 002B     		cmp	r3, #0
 11056 0038 E6D1     		bne	.L686
 11057              	.L689:
 11058              	.LBE858:
 11059              	.LBB863:
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 11060              		.loc 1 3653 3 discriminator 1
 11061 003a 7B68     		ldr	r3, [r7, #4]
 11062 003c 1B68     		ldr	r3, [r3]
 11063 003e 0833     		adds	r3, r3, #8
 11064 0040 3B62     		str	r3, [r7, #32]
 11065              	.LBB864:
 11066              	.LBB865:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11067              		.loc 2 1155 4
 11068 0042 3B6A     		ldr	r3, [r7, #32]
 11069              		.syntax unified
 11070              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11071 0044 53E8003F 		ldrex r3, [r3]
 11072              	@ 0 "" 2
 11073              		.thumb
 11074              		.syntax unified
 11075 0048 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11076              		.loc 2 1156 10
 11077 004a FA69     		ldr	r2, [r7, #28]
 11078              	.LBE865:
 11079              	.LBE864:
 11080              		.loc 1 3653 3 discriminator 1
 11081 004c 1E4B     		ldr	r3, .L694
 11082 004e 1340     		ands	r3, r3, r2
 11083 0050 BB64     		str	r3, [r7, #72]
 11084 0052 7B68     		ldr	r3, [r7, #4]
 11085 0054 1B68     		ldr	r3, [r3]
 11086 0056 0833     		adds	r3, r3, #8
 11087 0058 BA6C     		ldr	r2, [r7, #72]
 11088 005a FA62     		str	r2, [r7, #44]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 283


 11089 005c BB62     		str	r3, [r7, #40]
 11090              	.LBB866:
 11091              	.LBB867:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11092              		.loc 2 1206 4
 11093 005e B96A     		ldr	r1, [r7, #40]
 11094 0060 FA6A     		ldr	r2, [r7, #44]
 11095              		.syntax unified
 11096              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11097 0062 41E80023 		strex r3, r2, [r1]
 11098              	@ 0 "" 2
 11099              		.thumb
 11100              		.syntax unified
 11101 0066 7B62     		str	r3, [r7, #36]
 11102              		.loc 2 1207 10
 11103 0068 7B6A     		ldr	r3, [r7, #36]
 11104              	.LBE867:
 11105              	.LBE866:
 11106              		.loc 1 3653 3 discriminator 1
 11107 006a 002B     		cmp	r3, #0
 11108 006c E5D1     		bne	.L689
 11109              	.LBE863:
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11110              		.loc 1 3656 12
 11111 006e 7B68     		ldr	r3, [r7, #4]
 11112 0070 DB6E     		ldr	r3, [r3, #108]
 11113              		.loc 1 3656 6
 11114 0072 012B     		cmp	r3, #1
 11115 0074 18D1     		bne	.L690
 11116              	.L693:
 11117              	.LBB868:
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11118              		.loc 1 3658 5 discriminator 1
 11119 0076 7B68     		ldr	r3, [r7, #4]
 11120 0078 1B68     		ldr	r3, [r3]
 11121 007a FB60     		str	r3, [r7, #12]
 11122              	.LBB869:
 11123              	.LBB870:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11124              		.loc 2 1155 4
 11125 007c FB68     		ldr	r3, [r7, #12]
 11126              		.syntax unified
 11127              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11128 007e 53E8003F 		ldrex r3, [r3]
 11129              	@ 0 "" 2
 11130              		.thumb
 11131              		.syntax unified
 11132 0082 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11133              		.loc 2 1156 10
 11134 0084 BB68     		ldr	r3, [r7, #8]
 11135              	.LBE870:
 11136              	.LBE869:
 11137              		.loc 1 3658 5 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 284


 11138 0086 23F01003 		bic	r3, r3, #16
 11139 008a 7B64     		str	r3, [r7, #68]
 11140 008c 7B68     		ldr	r3, [r7, #4]
 11141 008e 1B68     		ldr	r3, [r3]
 11142 0090 1A46     		mov	r2, r3
 11143 0092 7B6C     		ldr	r3, [r7, #68]
 11144 0094 BB61     		str	r3, [r7, #24]
 11145 0096 7A61     		str	r2, [r7, #20]
 11146              	.LBB871:
 11147              	.LBB872:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11148              		.loc 2 1206 4
 11149 0098 7969     		ldr	r1, [r7, #20]
 11150 009a BA69     		ldr	r2, [r7, #24]
 11151              		.syntax unified
 11152              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11153 009c 41E80023 		strex r3, r2, [r1]
 11154              	@ 0 "" 2
 11155              		.thumb
 11156              		.syntax unified
 11157 00a0 3B61     		str	r3, [r7, #16]
 11158              		.loc 2 1207 10
 11159 00a2 3B69     		ldr	r3, [r7, #16]
 11160              	.LBE872:
 11161              	.LBE871:
 11162              		.loc 1 3658 5 discriminator 1
 11163 00a4 002B     		cmp	r3, #0
 11164 00a6 E6D1     		bne	.L693
 11165              	.L690:
 11166              	.LBE868:
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 11167              		.loc 1 3662 18
 11168 00a8 7B68     		ldr	r3, [r7, #4]
 11169 00aa 2022     		movs	r2, #32
 11170 00ac C3F88C20 		str	r2, [r3, #140]
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11171              		.loc 1 3663 24
 11172 00b0 7B68     		ldr	r3, [r7, #4]
 11173 00b2 0022     		movs	r2, #0
 11174 00b4 DA66     		str	r2, [r3, #108]
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxISR = NULL;
 11175              		.loc 1 3666 16
 11176 00b6 7B68     		ldr	r3, [r7, #4]
 11177 00b8 0022     		movs	r2, #0
 11178 00ba 5A67     		str	r2, [r3, #116]
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11179              		.loc 1 3667 1
 11180 00bc 00BF     		nop
 11181 00be 5437     		adds	r7, r7, #84
 11182              	.LCFI279:
 11183              		.cfi_def_cfa_offset 4
 11184 00c0 BD46     		mov	sp, r7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 285


 11185              	.LCFI280:
 11186              		.cfi_def_cfa_register 13
 11187              		@ sp needed
 11188 00c2 5DF8047B 		ldr	r7, [sp], #4
 11189              	.LCFI281:
 11190              		.cfi_restore 7
 11191              		.cfi_def_cfa_offset 0
 11192 00c6 7047     		bx	lr
 11193              	.L695:
 11194              		.align	2
 11195              	.L694:
 11196 00c8 FEFFFFEF 		.word	-268435458
 11197              		.cfi_endproc
 11198              	.LFE194:
 11200              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 11201              		.align	1
 11202              		.syntax unified
 11203              		.thumb
 11204              		.thumb_func
 11206              	UART_DMATransmitCplt:
 11207              	.LFB195:
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11208              		.loc 1 3676 1
 11209              		.cfi_startproc
 11210              		@ args = 0, pretend = 0, frame = 64
 11211              		@ frame_needed = 1, uses_anonymous_args = 0
 11212 0000 80B5     		push	{r7, lr}
 11213              	.LCFI282:
 11214              		.cfi_def_cfa_offset 8
 11215              		.cfi_offset 7, -8
 11216              		.cfi_offset 14, -4
 11217 0002 90B0     		sub	sp, sp, #64
 11218              	.LCFI283:
 11219              		.cfi_def_cfa_offset 72
 11220 0004 00AF     		add	r7, sp, #0
 11221              	.LCFI284:
 11222              		.cfi_def_cfa_register 7
 11223 0006 7860     		str	r0, [r7, #4]
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11224              		.loc 1 3677 23
 11225 0008 7B68     		ldr	r3, [r7, #4]
 11226 000a 9B6B     		ldr	r3, [r3, #56]
 11227 000c FB63     		str	r3, [r7, #60]
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 11228              		.loc 1 3680 17
 11229 000e 7B68     		ldr	r3, [r7, #4]
 11230 0010 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 286


 11231              		.loc 1 3680 6
 11232 0012 B3F5807F 		cmp	r3, #256
 11233 0016 37D0     		beq	.L697
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 11234              		.loc 1 3682 24
 11235 0018 FB6B     		ldr	r3, [r7, #60]
 11236 001a 0022     		movs	r2, #0
 11237 001c A3F85620 		strh	r2, [r3, #86]	@ movhi
 11238              	.L700:
 11239              	.LBB873:
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 11240              		.loc 1 3686 5 discriminator 1
 11241 0020 FB6B     		ldr	r3, [r7, #60]
 11242 0022 1B68     		ldr	r3, [r3]
 11243 0024 0833     		adds	r3, r3, #8
 11244 0026 7B62     		str	r3, [r7, #36]
 11245              	.LBB874:
 11246              	.LBB875:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11247              		.loc 2 1155 4
 11248 0028 7B6A     		ldr	r3, [r7, #36]
 11249              		.syntax unified
 11250              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11251 002a 53E8003F 		ldrex r3, [r3]
 11252              	@ 0 "" 2
 11253              		.thumb
 11254              		.syntax unified
 11255 002e 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11256              		.loc 2 1156 10
 11257 0030 3B6A     		ldr	r3, [r7, #32]
 11258              	.LBE875:
 11259              	.LBE874:
 11260              		.loc 1 3686 5 discriminator 1
 11261 0032 23F08003 		bic	r3, r3, #128
 11262 0036 BB63     		str	r3, [r7, #56]
 11263 0038 FB6B     		ldr	r3, [r7, #60]
 11264 003a 1B68     		ldr	r3, [r3]
 11265 003c 0833     		adds	r3, r3, #8
 11266 003e BA6B     		ldr	r2, [r7, #56]
 11267 0040 3A63     		str	r2, [r7, #48]
 11268 0042 FB62     		str	r3, [r7, #44]
 11269              	.LBB876:
 11270              	.LBB877:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11271              		.loc 2 1206 4
 11272 0044 F96A     		ldr	r1, [r7, #44]
 11273 0046 3A6B     		ldr	r2, [r7, #48]
 11274              		.syntax unified
 11275              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11276 0048 41E80023 		strex r3, r2, [r1]
 11277              	@ 0 "" 2
 11278              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 287


 11279              		.syntax unified
 11280 004c BB62     		str	r3, [r7, #40]
 11281              		.loc 2 1207 10
 11282 004e BB6A     		ldr	r3, [r7, #40]
 11283              	.LBE877:
 11284              	.LBE876:
 11285              		.loc 1 3686 5 discriminator 1
 11286 0050 002B     		cmp	r3, #0
 11287 0052 E5D1     		bne	.L700
 11288              	.L703:
 11289              	.LBE873:
 11290              	.LBB878:
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11291              		.loc 1 3689 5 discriminator 1
 11292 0054 FB6B     		ldr	r3, [r7, #60]
 11293 0056 1B68     		ldr	r3, [r3]
 11294 0058 3B61     		str	r3, [r7, #16]
 11295              	.LBB879:
 11296              	.LBB880:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11297              		.loc 2 1155 4
 11298 005a 3B69     		ldr	r3, [r7, #16]
 11299              		.syntax unified
 11300              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11301 005c 53E8003F 		ldrex r3, [r3]
 11302              	@ 0 "" 2
 11303              		.thumb
 11304              		.syntax unified
 11305 0060 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11306              		.loc 2 1156 10
 11307 0062 FB68     		ldr	r3, [r7, #12]
 11308              	.LBE880:
 11309              	.LBE879:
 11310              		.loc 1 3689 5 discriminator 1
 11311 0064 43F04003 		orr	r3, r3, #64
 11312 0068 7B63     		str	r3, [r7, #52]
 11313 006a FB6B     		ldr	r3, [r7, #60]
 11314 006c 1B68     		ldr	r3, [r3]
 11315 006e 1A46     		mov	r2, r3
 11316 0070 7B6B     		ldr	r3, [r7, #52]
 11317 0072 FB61     		str	r3, [r7, #28]
 11318 0074 BA61     		str	r2, [r7, #24]
 11319              	.LBB881:
 11320              	.LBB882:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11321              		.loc 2 1206 4
 11322 0076 B969     		ldr	r1, [r7, #24]
 11323 0078 FA69     		ldr	r2, [r7, #28]
 11324              		.syntax unified
 11325              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11326 007a 41E80023 		strex r3, r2, [r1]
 11327              	@ 0 "" 2
 11328              		.thumb
 11329              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 288


 11330 007e 7B61     		str	r3, [r7, #20]
 11331              		.loc 2 1207 10
 11332 0080 7B69     		ldr	r3, [r7, #20]
 11333              	.LBE882:
 11334              	.LBE881:
 11335              		.loc 1 3689 5 discriminator 1
 11336 0082 002B     		cmp	r3, #0
 11337 0084 E6D1     		bne	.L703
 11338              	.LBE878:
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Circular mode */
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11339              		.loc 1 3702 1
 11340 0086 02E0     		b	.L705
 11341              	.L697:
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11342              		.loc 1 3699 5
 11343 0088 F86B     		ldr	r0, [r7, #60]
 11344 008a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 11345              	.L705:
 11346              		.loc 1 3702 1
 11347 008e 00BF     		nop
 11348 0090 4037     		adds	r7, r7, #64
 11349              	.LCFI285:
 11350              		.cfi_def_cfa_offset 8
 11351 0092 BD46     		mov	sp, r7
 11352              	.LCFI286:
 11353              		.cfi_def_cfa_register 13
 11354              		@ sp needed
 11355 0094 80BD     		pop	{r7, pc}
 11356              		.cfi_endproc
 11357              	.LFE195:
 11359              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 11360              		.align	1
 11361              		.syntax unified
 11362              		.thumb
 11363              		.thumb_func
 11365              	UART_DMATxHalfCplt:
 11366              	.LFB196:
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 289


 11367              		.loc 1 3710 1
 11368              		.cfi_startproc
 11369              		@ args = 0, pretend = 0, frame = 16
 11370              		@ frame_needed = 1, uses_anonymous_args = 0
 11371 0000 80B5     		push	{r7, lr}
 11372              	.LCFI287:
 11373              		.cfi_def_cfa_offset 8
 11374              		.cfi_offset 7, -8
 11375              		.cfi_offset 14, -4
 11376 0002 84B0     		sub	sp, sp, #16
 11377              	.LCFI288:
 11378              		.cfi_def_cfa_offset 24
 11379 0004 00AF     		add	r7, sp, #0
 11380              	.LCFI289:
 11381              		.cfi_def_cfa_register 7
 11382 0006 7860     		str	r0, [r7, #4]
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11383              		.loc 1 3711 23
 11384 0008 7B68     		ldr	r3, [r7, #4]
 11385 000a 9B6B     		ldr	r3, [r3, #56]
 11386 000c FB60     		str	r3, [r7, #12]
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 11387              		.loc 1 3718 3
 11388 000e F868     		ldr	r0, [r7, #12]
 11389 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11390              		.loc 1 3720 1
 11391 0014 00BF     		nop
 11392 0016 1037     		adds	r7, r7, #16
 11393              	.LCFI290:
 11394              		.cfi_def_cfa_offset 8
 11395 0018 BD46     		mov	sp, r7
 11396              	.LCFI291:
 11397              		.cfi_def_cfa_register 13
 11398              		@ sp needed
 11399 001a 80BD     		pop	{r7, pc}
 11400              		.cfi_endproc
 11401              	.LFE196:
 11403              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 11404              		.align	1
 11405              		.syntax unified
 11406              		.thumb
 11407              		.thumb_func
 11409              	UART_DMAReceiveCplt:
 11410              	.LFB197:
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 290


3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11411              		.loc 1 3728 1
 11412              		.cfi_startproc
 11413              		@ args = 0, pretend = 0, frame = 112
 11414              		@ frame_needed = 1, uses_anonymous_args = 0
 11415 0000 80B5     		push	{r7, lr}
 11416              	.LCFI292:
 11417              		.cfi_def_cfa_offset 8
 11418              		.cfi_offset 7, -8
 11419              		.cfi_offset 14, -4
 11420 0002 9CB0     		sub	sp, sp, #112
 11421              	.LCFI293:
 11422              		.cfi_def_cfa_offset 120
 11423 0004 00AF     		add	r7, sp, #0
 11424              	.LCFI294:
 11425              		.cfi_def_cfa_register 7
 11426 0006 7860     		str	r0, [r7, #4]
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11427              		.loc 1 3729 23
 11428 0008 7B68     		ldr	r3, [r7, #4]
 11429 000a 9B6B     		ldr	r3, [r3, #56]
 11430 000c FB66     		str	r3, [r7, #108]
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 11431              		.loc 1 3732 17
 11432 000e 7B68     		ldr	r3, [r7, #4]
 11433 0010 DB69     		ldr	r3, [r3, #28]
 11434              		.loc 1 3732 6
 11435 0012 B3F5807F 		cmp	r3, #256
 11436 0016 71D0     		beq	.L708
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 11437              		.loc 1 3734 24
 11438 0018 FB6E     		ldr	r3, [r7, #108]
 11439 001a 0022     		movs	r2, #0
 11440 001c A3F85E20 		strh	r2, [r3, #94]	@ movhi
 11441              	.L711:
 11442              	.LBB883:
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 11443              		.loc 1 3737 5 discriminator 1
 11444 0020 FB6E     		ldr	r3, [r7, #108]
 11445 0022 1B68     		ldr	r3, [r3]
 11446 0024 FB64     		str	r3, [r7, #76]
 11447              	.LBB884:
 11448              	.LBB885:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11449              		.loc 2 1155 4
 11450 0026 FB6C     		ldr	r3, [r7, #76]
 11451              		.syntax unified
 11452              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11453 0028 53E8003F 		ldrex r3, [r3]
 11454              	@ 0 "" 2
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 291


 11455              		.thumb
 11456              		.syntax unified
 11457 002c BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11458              		.loc 2 1156 10
 11459 002e BB6C     		ldr	r3, [r7, #72]
 11460              	.LBE885:
 11461              	.LBE884:
 11462              		.loc 1 3737 5 discriminator 1
 11463 0030 23F48073 		bic	r3, r3, #256
 11464 0034 BB66     		str	r3, [r7, #104]
 11465 0036 FB6E     		ldr	r3, [r7, #108]
 11466 0038 1B68     		ldr	r3, [r3]
 11467 003a 1A46     		mov	r2, r3
 11468 003c BB6E     		ldr	r3, [r7, #104]
 11469 003e BB65     		str	r3, [r7, #88]
 11470 0040 7A65     		str	r2, [r7, #84]
 11471              	.LBB886:
 11472              	.LBB887:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11473              		.loc 2 1206 4
 11474 0042 796D     		ldr	r1, [r7, #84]
 11475 0044 BA6D     		ldr	r2, [r7, #88]
 11476              		.syntax unified
 11477              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11478 0046 41E80023 		strex r3, r2, [r1]
 11479              	@ 0 "" 2
 11480              		.thumb
 11481              		.syntax unified
 11482 004a 3B65     		str	r3, [r7, #80]
 11483              		.loc 2 1207 10
 11484 004c 3B6D     		ldr	r3, [r7, #80]
 11485              	.LBE887:
 11486              	.LBE886:
 11487              		.loc 1 3737 5 discriminator 1
 11488 004e 002B     		cmp	r3, #0
 11489 0050 E6D1     		bne	.L711
 11490              	.L714:
 11491              	.LBE883:
 11492              	.LBB888:
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11493              		.loc 1 3738 5 discriminator 1
 11494 0052 FB6E     		ldr	r3, [r7, #108]
 11495 0054 1B68     		ldr	r3, [r3]
 11496 0056 0833     		adds	r3, r3, #8
 11497 0058 BB63     		str	r3, [r7, #56]
 11498              	.LBB889:
 11499              	.LBB890:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11500              		.loc 2 1155 4
 11501 005a BB6B     		ldr	r3, [r7, #56]
 11502              		.syntax unified
 11503              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11504 005c 53E8003F 		ldrex r3, [r3]
 11505              	@ 0 "" 2
 11506              		.thumb
 11507              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 292


 11508 0060 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11509              		.loc 2 1156 10
 11510 0062 7B6B     		ldr	r3, [r7, #52]
 11511              	.LBE890:
 11512              	.LBE889:
 11513              		.loc 1 3738 5 discriminator 1
 11514 0064 23F00103 		bic	r3, r3, #1
 11515 0068 7B66     		str	r3, [r7, #100]
 11516 006a FB6E     		ldr	r3, [r7, #108]
 11517 006c 1B68     		ldr	r3, [r3]
 11518 006e 0833     		adds	r3, r3, #8
 11519 0070 7A6E     		ldr	r2, [r7, #100]
 11520 0072 7A64     		str	r2, [r7, #68]
 11521 0074 3B64     		str	r3, [r7, #64]
 11522              	.LBB891:
 11523              	.LBB892:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11524              		.loc 2 1206 4
 11525 0076 396C     		ldr	r1, [r7, #64]
 11526 0078 7A6C     		ldr	r2, [r7, #68]
 11527              		.syntax unified
 11528              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11529 007a 41E80023 		strex r3, r2, [r1]
 11530              	@ 0 "" 2
 11531              		.thumb
 11532              		.syntax unified
 11533 007e FB63     		str	r3, [r7, #60]
 11534              		.loc 2 1207 10
 11535 0080 FB6B     		ldr	r3, [r7, #60]
 11536              	.LBE892:
 11537              	.LBE891:
 11538              		.loc 1 3738 5 discriminator 1
 11539 0082 002B     		cmp	r3, #0
 11540 0084 E5D1     		bne	.L714
 11541              	.L717:
 11542              	.LBE888:
 11543              	.LBB893:
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 11544              		.loc 1 3742 5 discriminator 1
 11545 0086 FB6E     		ldr	r3, [r7, #108]
 11546 0088 1B68     		ldr	r3, [r3]
 11547 008a 0833     		adds	r3, r3, #8
 11548 008c 7B62     		str	r3, [r7, #36]
 11549              	.LBB894:
 11550              	.LBB895:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11551              		.loc 2 1155 4
 11552 008e 7B6A     		ldr	r3, [r7, #36]
 11553              		.syntax unified
 11554              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11555 0090 53E8003F 		ldrex r3, [r3]
 11556              	@ 0 "" 2
 11557              		.thumb
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 293


 11558              		.syntax unified
 11559 0094 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11560              		.loc 2 1156 10
 11561 0096 3B6A     		ldr	r3, [r7, #32]
 11562              	.LBE895:
 11563              	.LBE894:
 11564              		.loc 1 3742 5 discriminator 1
 11565 0098 23F04003 		bic	r3, r3, #64
 11566 009c 3B66     		str	r3, [r7, #96]
 11567 009e FB6E     		ldr	r3, [r7, #108]
 11568 00a0 1B68     		ldr	r3, [r3]
 11569 00a2 0833     		adds	r3, r3, #8
 11570 00a4 3A6E     		ldr	r2, [r7, #96]
 11571 00a6 3A63     		str	r2, [r7, #48]
 11572 00a8 FB62     		str	r3, [r7, #44]
 11573              	.LBB896:
 11574              	.LBB897:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11575              		.loc 2 1206 4
 11576 00aa F96A     		ldr	r1, [r7, #44]
 11577 00ac 3A6B     		ldr	r2, [r7, #48]
 11578              		.syntax unified
 11579              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11580 00ae 41E80023 		strex r3, r2, [r1]
 11581              	@ 0 "" 2
 11582              		.thumb
 11583              		.syntax unified
 11584 00b2 BB62     		str	r3, [r7, #40]
 11585              		.loc 2 1207 10
 11586 00b4 BB6A     		ldr	r3, [r7, #40]
 11587              	.LBE897:
 11588              	.LBE896:
 11589              		.loc 1 3742 5 discriminator 1
 11590 00b6 002B     		cmp	r3, #0
 11591 00b8 E5D1     		bne	.L717
 11592              	.LBE893:
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 11593              		.loc 1 3745 20
 11594 00ba FB6E     		ldr	r3, [r7, #108]
 11595 00bc 2022     		movs	r2, #32
 11596 00be C3F88C20 		str	r2, [r3, #140]
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11597              		.loc 1 3748 14
 11598 00c2 FB6E     		ldr	r3, [r7, #108]
 11599 00c4 DB6E     		ldr	r3, [r3, #108]
 11600              		.loc 1 3748 8
 11601 00c6 012B     		cmp	r3, #1
 11602 00c8 18D1     		bne	.L708
 11603              	.L720:
 11604              	.LBB898:
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 294


 11605              		.loc 1 3750 7 discriminator 1
 11606 00ca FB6E     		ldr	r3, [r7, #108]
 11607 00cc 1B68     		ldr	r3, [r3]
 11608 00ce 3B61     		str	r3, [r7, #16]
 11609              	.LBB899:
 11610              	.LBB900:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11611              		.loc 2 1155 4
 11612 00d0 3B69     		ldr	r3, [r7, #16]
 11613              		.syntax unified
 11614              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11615 00d2 53E8003F 		ldrex r3, [r3]
 11616              	@ 0 "" 2
 11617              		.thumb
 11618              		.syntax unified
 11619 00d6 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11620              		.loc 2 1156 10
 11621 00d8 FB68     		ldr	r3, [r7, #12]
 11622              	.LBE900:
 11623              	.LBE899:
 11624              		.loc 1 3750 7 discriminator 1
 11625 00da 23F01003 		bic	r3, r3, #16
 11626 00de FB65     		str	r3, [r7, #92]
 11627 00e0 FB6E     		ldr	r3, [r7, #108]
 11628 00e2 1B68     		ldr	r3, [r3]
 11629 00e4 1A46     		mov	r2, r3
 11630 00e6 FB6D     		ldr	r3, [r7, #92]
 11631 00e8 FB61     		str	r3, [r7, #28]
 11632 00ea BA61     		str	r2, [r7, #24]
 11633              	.LBB901:
 11634              	.LBB902:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11635              		.loc 2 1206 4
 11636 00ec B969     		ldr	r1, [r7, #24]
 11637 00ee FA69     		ldr	r2, [r7, #28]
 11638              		.syntax unified
 11639              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11640 00f0 41E80023 		strex r3, r2, [r1]
 11641              	@ 0 "" 2
 11642              		.thumb
 11643              		.syntax unified
 11644 00f4 7B61     		str	r3, [r7, #20]
 11645              		.loc 2 1207 10
 11646 00f6 7B69     		ldr	r3, [r7, #20]
 11647              	.LBE902:
 11648              	.LBE901:
 11649              		.loc 1 3750 7 discriminator 1
 11650 00f8 002B     		cmp	r3, #0
 11651 00fa E6D1     		bne	.L720
 11652              	.L708:
 11653              	.LBE898:
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      In this case, Rx Event type is Transfer Complete */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 295


3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 11654              		.loc 1 3756 22
 11655 00fc FB6E     		ldr	r3, [r7, #108]
 11656 00fe 0022     		movs	r2, #0
 11657 0100 1A67     		str	r2, [r3, #112]
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11658              		.loc 1 3760 12
 11659 0102 FB6E     		ldr	r3, [r7, #108]
 11660 0104 DB6E     		ldr	r3, [r3, #108]
 11661              		.loc 1 3760 6
 11662 0106 012B     		cmp	r3, #1
 11663 0108 07D1     		bne	.L721
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11664              		.loc 1 3767 5
 11665 010a FB6E     		ldr	r3, [r7, #108]
 11666 010c B3F85C30 		ldrh	r3, [r3, #92]
 11667 0110 1946     		mov	r1, r3
 11668 0112 F86E     		ldr	r0, [r7, #108]
 11669 0114 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11670              		.loc 1 3781 1
 11671 0118 02E0     		b	.L723
 11672              	.L721:
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11673              		.loc 1 3778 5
 11674 011a F86E     		ldr	r0, [r7, #108]
 11675 011c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11676              	.L723:
 11677              		.loc 1 3781 1
 11678 0120 00BF     		nop
 11679 0122 7037     		adds	r7, r7, #112
 11680              	.LCFI295:
 11681              		.cfi_def_cfa_offset 8
 11682 0124 BD46     		mov	sp, r7
 11683              	.LCFI296:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 296


 11684              		.cfi_def_cfa_register 13
 11685              		@ sp needed
 11686 0126 80BD     		pop	{r7, pc}
 11687              		.cfi_endproc
 11688              	.LFE197:
 11690              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 11691              		.align	1
 11692              		.syntax unified
 11693              		.thumb
 11694              		.thumb_func
 11696              	UART_DMARxHalfCplt:
 11697              	.LFB198:
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11698              		.loc 1 3789 1
 11699              		.cfi_startproc
 11700              		@ args = 0, pretend = 0, frame = 16
 11701              		@ frame_needed = 1, uses_anonymous_args = 0
 11702 0000 80B5     		push	{r7, lr}
 11703              	.LCFI297:
 11704              		.cfi_def_cfa_offset 8
 11705              		.cfi_offset 7, -8
 11706              		.cfi_offset 14, -4
 11707 0002 84B0     		sub	sp, sp, #16
 11708              	.LCFI298:
 11709              		.cfi_def_cfa_offset 24
 11710 0004 00AF     		add	r7, sp, #0
 11711              	.LCFI299:
 11712              		.cfi_def_cfa_register 7
 11713 0006 7860     		str	r0, [r7, #4]
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11714              		.loc 1 3790 23
 11715 0008 7B68     		ldr	r3, [r7, #4]
 11716 000a 9B6B     		ldr	r3, [r3, #56]
 11717 000c FB60     		str	r3, [r7, #12]
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 11718              		.loc 1 3794 22
 11719 000e FB68     		ldr	r3, [r7, #12]
 11720 0010 0122     		movs	r2, #1
 11721 0012 1A67     		str	r2, [r3, #112]
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check current reception Mode :
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11722              		.loc 1 3798 12
 11723 0014 FB68     		ldr	r3, [r7, #12]
 11724 0016 DB6E     		ldr	r3, [r3, #108]
 11725              		.loc 1 3798 6
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 297


 11726 0018 012B     		cmp	r3, #1
 11727 001a 09D1     		bne	.L725
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 11728              		.loc 1 3805 44
 11729 001c FB68     		ldr	r3, [r7, #12]
 11730 001e B3F85C30 		ldrh	r3, [r3, #92]
 11731              		.loc 1 3805 5
 11732 0022 5B08     		lsrs	r3, r3, #1
 11733 0024 9BB2     		uxth	r3, r3
 11734 0026 1946     		mov	r1, r3
 11735 0028 F868     		ldr	r0, [r7, #12]
 11736 002a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11737              		.loc 1 3819 1
 11738 002e 02E0     		b	.L727
 11739              	.L725:
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11740              		.loc 1 3816 5
 11741 0030 F868     		ldr	r0, [r7, #12]
 11742 0032 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 11743              	.L727:
 11744              		.loc 1 3819 1
 11745 0036 00BF     		nop
 11746 0038 1037     		adds	r7, r7, #16
 11747              	.LCFI300:
 11748              		.cfi_def_cfa_offset 8
 11749 003a BD46     		mov	sp, r7
 11750              	.LCFI301:
 11751              		.cfi_def_cfa_register 13
 11752              		@ sp needed
 11753 003c 80BD     		pop	{r7, pc}
 11754              		.cfi_endproc
 11755              	.LFE198:
 11757              		.section	.text.UART_DMAError,"ax",%progbits
 11758              		.align	1
 11759              		.syntax unified
 11760              		.thumb
 11761              		.thumb_func
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 298


 11763              	UART_DMAError:
 11764              	.LFB199:
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma DMA handle.
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11765              		.loc 1 3827 1
 11766              		.cfi_startproc
 11767              		@ args = 0, pretend = 0, frame = 24
 11768              		@ frame_needed = 1, uses_anonymous_args = 0
 11769 0000 80B5     		push	{r7, lr}
 11770              	.LCFI302:
 11771              		.cfi_def_cfa_offset 8
 11772              		.cfi_offset 7, -8
 11773              		.cfi_offset 14, -4
 11774 0002 86B0     		sub	sp, sp, #24
 11775              	.LCFI303:
 11776              		.cfi_def_cfa_offset 32
 11777 0004 00AF     		add	r7, sp, #0
 11778              	.LCFI304:
 11779              		.cfi_def_cfa_register 7
 11780 0006 7860     		str	r0, [r7, #4]
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11781              		.loc 1 3828 23
 11782 0008 7B68     		ldr	r3, [r7, #4]
 11783 000a 9B6B     		ldr	r3, [r3, #56]
 11784 000c 7B61     		str	r3, [r7, #20]
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 11785              		.loc 1 3830 31
 11786 000e 7B69     		ldr	r3, [r7, #20]
 11787 0010 D3F88830 		ldr	r3, [r3, #136]
 11788 0014 3B61     		str	r3, [r7, #16]
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 11789              		.loc 1 3831 31
 11790 0016 7B69     		ldr	r3, [r7, #20]
 11791 0018 D3F88C30 		ldr	r3, [r3, #140]
 11792 001c FB60     		str	r3, [r7, #12]
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 11793              		.loc 1 3834 8
 11794 001e 7B69     		ldr	r3, [r7, #20]
 11795 0020 1B68     		ldr	r3, [r3]
 11796 0022 9B68     		ldr	r3, [r3, #8]
 11797 0024 03F08003 		and	r3, r3, #128
 11798              		.loc 1 3834 6
 11799 0028 802B     		cmp	r3, #128
 11800 002a 09D1     		bne	.L729
 11801              		.loc 1 3834 62 discriminator 1
 11802 002c 3B69     		ldr	r3, [r7, #16]
 11803 002e 212B     		cmp	r3, #33
 11804 0030 06D1     		bne	.L729
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 299


3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
 11805              		.loc 1 3837 24
 11806 0032 7B69     		ldr	r3, [r7, #20]
 11807 0034 0022     		movs	r2, #0
 11808 0036 A3F85620 		strh	r2, [r3, #86]	@ movhi
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 11809              		.loc 1 3838 5
 11810 003a 7869     		ldr	r0, [r7, #20]
 11811 003c FFF7FEFF 		bl	UART_EndTxTransfer
 11812              	.L729:
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 11813              		.loc 1 3842 8
 11814 0040 7B69     		ldr	r3, [r7, #20]
 11815 0042 1B68     		ldr	r3, [r3]
 11816 0044 9B68     		ldr	r3, [r3, #8]
 11817 0046 03F04003 		and	r3, r3, #64
 11818              		.loc 1 3842 6
 11819 004a 402B     		cmp	r3, #64
 11820 004c 09D1     		bne	.L730
 11821              		.loc 1 3842 62 discriminator 1
 11822 004e FB68     		ldr	r3, [r7, #12]
 11823 0050 222B     		cmp	r3, #34
 11824 0052 06D1     		bne	.L730
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 11825              		.loc 1 3845 24
 11826 0054 7B69     		ldr	r3, [r7, #20]
 11827 0056 0022     		movs	r2, #0
 11828 0058 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 11829              		.loc 1 3846 5
 11830 005c 7869     		ldr	r0, [r7, #20]
 11831 005e FFF7FEFF 		bl	UART_EndRxTransfer
 11832              	.L730:
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 11833              		.loc 1 3849 8
 11834 0062 7B69     		ldr	r3, [r7, #20]
 11835 0064 D3F89030 		ldr	r3, [r3, #144]
 11836              		.loc 1 3849 20
 11837 0068 43F01002 		orr	r2, r3, #16
 11838 006c 7B69     		ldr	r3, [r7, #20]
 11839 006e C3F89020 		str	r2, [r3, #144]
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 300


 11840              		.loc 1 3856 3
 11841 0072 7869     		ldr	r0, [r7, #20]
 11842 0074 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11843              		.loc 1 3858 1
 11844 0078 00BF     		nop
 11845 007a 1837     		adds	r7, r7, #24
 11846              	.LCFI305:
 11847              		.cfi_def_cfa_offset 8
 11848 007c BD46     		mov	sp, r7
 11849              	.LCFI306:
 11850              		.cfi_def_cfa_register 13
 11851              		@ sp needed
 11852 007e 80BD     		pop	{r7, pc}
 11853              		.cfi_endproc
 11854              	.LFE199:
 11856              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 11857              		.align	1
 11858              		.syntax unified
 11859              		.thumb
 11860              		.thumb_func
 11862              	UART_DMAAbortOnError:
 11863              	.LFB200:
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11864              		.loc 1 3867 1
 11865              		.cfi_startproc
 11866              		@ args = 0, pretend = 0, frame = 16
 11867              		@ frame_needed = 1, uses_anonymous_args = 0
 11868 0000 80B5     		push	{r7, lr}
 11869              	.LCFI307:
 11870              		.cfi_def_cfa_offset 8
 11871              		.cfi_offset 7, -8
 11872              		.cfi_offset 14, -4
 11873 0002 84B0     		sub	sp, sp, #16
 11874              	.LCFI308:
 11875              		.cfi_def_cfa_offset 24
 11876 0004 00AF     		add	r7, sp, #0
 11877              	.LCFI309:
 11878              		.cfi_def_cfa_register 7
 11879 0006 7860     		str	r0, [r7, #4]
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11880              		.loc 1 3868 23
 11881 0008 7B68     		ldr	r3, [r7, #4]
 11882 000a 9B6B     		ldr	r3, [r3, #56]
 11883 000c FB60     		str	r3, [r7, #12]
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 11884              		.loc 1 3869 22
 11885 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 301


 11886 0010 0022     		movs	r2, #0
 11887 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered error callback*/
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCallback(huart);
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak error callback*/
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 11888              		.loc 1 3876 3
 11889 0016 F868     		ldr	r0, [r7, #12]
 11890 0018 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 11891              		.loc 1 3878 1
 11892 001c 00BF     		nop
 11893 001e 1037     		adds	r7, r7, #16
 11894              	.LCFI310:
 11895              		.cfi_def_cfa_offset 8
 11896 0020 BD46     		mov	sp, r7
 11897              	.LCFI311:
 11898              		.cfi_def_cfa_register 13
 11899              		@ sp needed
 11900 0022 80BD     		pop	{r7, pc}
 11901              		.cfi_endproc
 11902              	.LFE200:
 11904              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 11905              		.align	1
 11906              		.syntax unified
 11907              		.thumb
 11908              		.thumb_func
 11910              	UART_DMATxAbortCallback:
 11911              	.LFB201:
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 11912              		.loc 1 3889 1
 11913              		.cfi_startproc
 11914              		@ args = 0, pretend = 0, frame = 16
 11915              		@ frame_needed = 1, uses_anonymous_args = 0
 11916 0000 80B5     		push	{r7, lr}
 11917              	.LCFI312:
 11918              		.cfi_def_cfa_offset 8
 11919              		.cfi_offset 7, -8
 11920              		.cfi_offset 14, -4
 11921 0002 84B0     		sub	sp, sp, #16
 11922              	.LCFI313:
 11923              		.cfi_def_cfa_offset 24
 11924 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 302


 11925              	.LCFI314:
 11926              		.cfi_def_cfa_register 7
 11927 0006 7860     		str	r0, [r7, #4]
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 11928              		.loc 1 3890 23
 11929 0008 7B68     		ldr	r3, [r7, #4]
 11930 000a 9B6B     		ldr	r3, [r3, #56]
 11931 000c FB60     		str	r3, [r7, #12]
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 11932              		.loc 1 3892 8
 11933 000e FB68     		ldr	r3, [r7, #12]
 11934 0010 DB6F     		ldr	r3, [r3, #124]
 11935              		.loc 1 3892 36
 11936 0012 0022     		movs	r2, #0
 11937 0014 1A65     		str	r2, [r3, #80]
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 11938              		.loc 1 3895 12
 11939 0016 FB68     		ldr	r3, [r7, #12]
 11940 0018 D3F88030 		ldr	r3, [r3, #128]
 11941              		.loc 1 3895 6
 11942 001c 002B     		cmp	r3, #0
 11943 001e 05D0     		beq	.L733
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 11944              		.loc 1 3897 14
 11945 0020 FB68     		ldr	r3, [r7, #12]
 11946 0022 D3F88030 		ldr	r3, [r3, #128]
 11947              		.loc 1 3897 22
 11948 0026 1B6D     		ldr	r3, [r3, #80]
 11949              		.loc 1 3897 8
 11950 0028 002B     		cmp	r3, #0
 11951 002a 2BD1     		bne	.L736
 11952              	.L733:
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 11953              		.loc 1 3904 22
 11954 002c FB68     		ldr	r3, [r7, #12]
 11955 002e 0022     		movs	r2, #0
 11956 0030 A3F85620 		strh	r2, [r3, #86]	@ movhi
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 11957              		.loc 1 3905 22
 11958 0034 FB68     		ldr	r3, [r7, #12]
 11959 0036 0022     		movs	r2, #0
 11960 0038 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 11961              		.loc 1 3908 20
 11962 003c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 303


 11963 003e 0022     		movs	r2, #0
 11964 0040 C3F89020 		str	r2, [r3, #144]
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 11965              		.loc 1 3911 3
 11966 0044 FB68     		ldr	r3, [r7, #12]
 11967 0046 1B68     		ldr	r3, [r3]
 11968 0048 0F22     		movs	r2, #15
 11969 004a 1A62     		str	r2, [r3, #32]
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 11970              		.loc 1 3914 12
 11971 004c FB68     		ldr	r3, [r7, #12]
 11972 004e 5B6E     		ldr	r3, [r3, #100]
 11973              		.loc 1 3914 6
 11974 0050 B3F1005F 		cmp	r3, #536870912
 11975 0054 07D1     		bne	.L735
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 11976              		.loc 1 3916 5
 11977 0056 FB68     		ldr	r3, [r7, #12]
 11978 0058 1B68     		ldr	r3, [r3]
 11979 005a 9A69     		ldr	r2, [r3, #24]
 11980 005c FB68     		ldr	r3, [r7, #12]
 11981 005e 1B68     		ldr	r3, [r3]
 11982 0060 42F01002 		orr	r2, r2, #16
 11983 0064 9A61     		str	r2, [r3, #24]
 11984              	.L735:
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 11985              		.loc 1 3920 18
 11986 0066 FB68     		ldr	r3, [r7, #12]
 11987 0068 2022     		movs	r2, #32
 11988 006a C3F88820 		str	r2, [r3, #136]
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 11989              		.loc 1 3921 18
 11990 006e FB68     		ldr	r3, [r7, #12]
 11991 0070 2022     		movs	r2, #32
 11992 0072 C3F88C20 		str	r2, [r3, #140]
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11993              		.loc 1 3922 24
 11994 0076 FB68     		ldr	r3, [r7, #12]
 11995 0078 0022     		movs	r2, #0
 11996 007a DA66     		str	r2, [r3, #108]
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 11997              		.loc 1 3930 3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 304


 11998 007c F868     		ldr	r0, [r7, #12]
 11999 007e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 12000 0082 00E0     		b	.L732
 12001              	.L736:
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12002              		.loc 1 3899 7
 12003 0084 00BF     		nop
 12004              	.L732:
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12005              		.loc 1 3932 1
 12006 0086 1037     		adds	r7, r7, #16
 12007              	.LCFI315:
 12008              		.cfi_def_cfa_offset 8
 12009 0088 BD46     		mov	sp, r7
 12010              	.LCFI316:
 12011              		.cfi_def_cfa_register 13
 12012              		@ sp needed
 12013 008a 80BD     		pop	{r7, pc}
 12014              		.cfi_endproc
 12015              	.LFE201:
 12017              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 12018              		.align	1
 12019              		.syntax unified
 12020              		.thumb
 12021              		.thumb_func
 12023              	UART_DMARxAbortCallback:
 12024              	.LFB202:
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12025              		.loc 1 3944 1
 12026              		.cfi_startproc
 12027              		@ args = 0, pretend = 0, frame = 16
 12028              		@ frame_needed = 1, uses_anonymous_args = 0
 12029 0000 80B5     		push	{r7, lr}
 12030              	.LCFI317:
 12031              		.cfi_def_cfa_offset 8
 12032              		.cfi_offset 7, -8
 12033              		.cfi_offset 14, -4
 12034 0002 84B0     		sub	sp, sp, #16
 12035              	.LCFI318:
 12036              		.cfi_def_cfa_offset 24
 12037 0004 00AF     		add	r7, sp, #0
 12038              	.LCFI319:
 12039              		.cfi_def_cfa_register 7
 12040 0006 7860     		str	r0, [r7, #4]
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 305


 12041              		.loc 1 3945 23
 12042 0008 7B68     		ldr	r3, [r7, #4]
 12043 000a 9B6B     		ldr	r3, [r3, #56]
 12044 000c FB60     		str	r3, [r7, #12]
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 12045              		.loc 1 3947 8
 12046 000e FB68     		ldr	r3, [r7, #12]
 12047 0010 D3F88030 		ldr	r3, [r3, #128]
 12048              		.loc 1 3947 36
 12049 0014 0022     		movs	r2, #0
 12050 0016 1A65     		str	r2, [r3, #80]
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 12051              		.loc 1 3950 12
 12052 0018 FB68     		ldr	r3, [r7, #12]
 12053 001a DB6F     		ldr	r3, [r3, #124]
 12054              		.loc 1 3950 6
 12055 001c 002B     		cmp	r3, #0
 12056 001e 04D0     		beq	.L738
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 12057              		.loc 1 3952 14
 12058 0020 FB68     		ldr	r3, [r7, #12]
 12059 0022 DB6F     		ldr	r3, [r3, #124]
 12060              		.loc 1 3952 22
 12061 0024 1B6D     		ldr	r3, [r3, #80]
 12062              		.loc 1 3952 8
 12063 0026 002B     		cmp	r3, #0
 12064 0028 26D1     		bne	.L740
 12065              	.L738:
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 12066              		.loc 1 3959 22
 12067 002a FB68     		ldr	r3, [r7, #12]
 12068 002c 0022     		movs	r2, #0
 12069 002e A3F85620 		strh	r2, [r3, #86]	@ movhi
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12070              		.loc 1 3960 22
 12071 0032 FB68     		ldr	r3, [r7, #12]
 12072 0034 0022     		movs	r2, #0
 12073 0036 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 12074              		.loc 1 3963 20
 12075 003a FB68     		ldr	r3, [r7, #12]
 12076 003c 0022     		movs	r2, #0
 12077 003e C3F89020 		str	r2, [r3, #144]
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 306


3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 12078              		.loc 1 3966 3
 12079 0042 FB68     		ldr	r3, [r7, #12]
 12080 0044 1B68     		ldr	r3, [r3]
 12081 0046 0F22     		movs	r2, #15
 12082 0048 1A62     		str	r2, [r3, #32]
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 12083              		.loc 1 3969 3
 12084 004a FB68     		ldr	r3, [r7, #12]
 12085 004c 1B68     		ldr	r3, [r3]
 12086 004e 9A69     		ldr	r2, [r3, #24]
 12087 0050 FB68     		ldr	r3, [r7, #12]
 12088 0052 1B68     		ldr	r3, [r3]
 12089 0054 42F00802 		orr	r2, r2, #8
 12090 0058 9A61     		str	r2, [r3, #24]
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 12091              		.loc 1 3972 18
 12092 005a FB68     		ldr	r3, [r7, #12]
 12093 005c 2022     		movs	r2, #32
 12094 005e C3F88820 		str	r2, [r3, #136]
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 12095              		.loc 1 3973 18
 12096 0062 FB68     		ldr	r3, [r7, #12]
 12097 0064 2022     		movs	r2, #32
 12098 0066 C3F88C20 		str	r2, [r3, #140]
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12099              		.loc 1 3974 24
 12100 006a FB68     		ldr	r3, [r7, #12]
 12101 006c 0022     		movs	r2, #0
 12102 006e DA66     		str	r2, [r3, #108]
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort complete callback */
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 12103              		.loc 1 3982 3
 12104 0070 F868     		ldr	r0, [r7, #12]
 12105 0072 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 12106 0076 00E0     		b	.L737
 12107              	.L740:
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12108              		.loc 1 3954 7
 12109 0078 00BF     		nop
 12110              	.L737:
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12111              		.loc 1 3984 1
 12112 007a 1037     		adds	r7, r7, #16
 12113              	.LCFI320:
 12114              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 307


 12115 007c BD46     		mov	sp, r7
 12116              	.LCFI321:
 12117              		.cfi_def_cfa_register 13
 12118              		@ sp needed
 12119 007e 80BD     		pop	{r7, pc}
 12120              		.cfi_endproc
 12121              	.LFE202:
 12123              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 12124              		.align	1
 12125              		.syntax unified
 12126              		.thumb
 12127              		.thumb_func
 12129              	UART_DMATxOnlyAbortCallback:
 12130              	.LFB203:
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12131              		.loc 1 3996 1
 12132              		.cfi_startproc
 12133              		@ args = 0, pretend = 0, frame = 16
 12134              		@ frame_needed = 1, uses_anonymous_args = 0
 12135 0000 80B5     		push	{r7, lr}
 12136              	.LCFI322:
 12137              		.cfi_def_cfa_offset 8
 12138              		.cfi_offset 7, -8
 12139              		.cfi_offset 14, -4
 12140 0002 84B0     		sub	sp, sp, #16
 12141              	.LCFI323:
 12142              		.cfi_def_cfa_offset 24
 12143 0004 00AF     		add	r7, sp, #0
 12144              	.LCFI324:
 12145              		.cfi_def_cfa_register 7
 12146 0006 7860     		str	r0, [r7, #4]
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 12147              		.loc 1 3997 23
 12148 0008 7B68     		ldr	r3, [r7, #4]
 12149 000a 9B6B     		ldr	r3, [r3, #56]
 12150 000c FB60     		str	r3, [r7, #12]
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 12151              		.loc 1 3999 22
 12152 000e FB68     		ldr	r3, [r7, #12]
 12153 0010 0022     		movs	r2, #0
 12154 0012 A3F85620 		strh	r2, [r3, #86]	@ movhi
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 12155              		.loc 1 4002 12
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 308


 12156 0016 FB68     		ldr	r3, [r7, #12]
 12157 0018 5B6E     		ldr	r3, [r3, #100]
 12158              		.loc 1 4002 6
 12159 001a B3F1005F 		cmp	r3, #536870912
 12160 001e 07D1     		bne	.L742
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
 12161              		.loc 1 4004 5
 12162 0020 FB68     		ldr	r3, [r7, #12]
 12163 0022 1B68     		ldr	r3, [r3]
 12164 0024 9A69     		ldr	r2, [r3, #24]
 12165 0026 FB68     		ldr	r3, [r7, #12]
 12166 0028 1B68     		ldr	r3, [r3]
 12167 002a 42F01002 		orr	r2, r2, #16
 12168 002e 9A61     		str	r2, [r3, #24]
 12169              	.L742:
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 12170              		.loc 1 4008 17
 12171 0030 FB68     		ldr	r3, [r7, #12]
 12172 0032 2022     		movs	r2, #32
 12173 0034 C3F88820 		str	r2, [r3, #136]
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 12174              		.loc 1 4016 3
 12175 0038 F868     		ldr	r0, [r7, #12]
 12176 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12177              		.loc 1 4018 1
 12178 003e 00BF     		nop
 12179 0040 1037     		adds	r7, r7, #16
 12180              	.LCFI325:
 12181              		.cfi_def_cfa_offset 8
 12182 0042 BD46     		mov	sp, r7
 12183              	.LCFI326:
 12184              		.cfi_def_cfa_register 13
 12185              		@ sp needed
 12186 0044 80BD     		pop	{r7, pc}
 12187              		.cfi_endproc
 12188              	.LFE203:
 12190              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 12191              		.align	1
 12192              		.syntax unified
 12193              		.thumb
 12194              		.thumb_func
 12196              	UART_DMARxOnlyAbortCallback:
 12197              	.LFB204:
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 309


4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12198              		.loc 1 4029 1
 12199              		.cfi_startproc
 12200              		@ args = 0, pretend = 0, frame = 16
 12201              		@ frame_needed = 1, uses_anonymous_args = 0
 12202 0000 80B5     		push	{r7, lr}
 12203              	.LCFI327:
 12204              		.cfi_def_cfa_offset 8
 12205              		.cfi_offset 7, -8
 12206              		.cfi_offset 14, -4
 12207 0002 84B0     		sub	sp, sp, #16
 12208              	.LCFI328:
 12209              		.cfi_def_cfa_offset 24
 12210 0004 00AF     		add	r7, sp, #0
 12211              	.LCFI329:
 12212              		.cfi_def_cfa_register 7
 12213 0006 7860     		str	r0, [r7, #4]
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 12214              		.loc 1 4030 23
 12215 0008 7B68     		ldr	r3, [r7, #4]
 12216 000a 9B6B     		ldr	r3, [r3, #56]
 12217 000c FB60     		str	r3, [r7, #12]
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 12218              		.loc 1 4032 22
 12219 000e FB68     		ldr	r3, [r7, #12]
 12220 0010 0022     		movs	r2, #0
 12221 0012 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 12222              		.loc 1 4035 3
 12223 0016 FB68     		ldr	r3, [r7, #12]
 12224 0018 1B68     		ldr	r3, [r3]
 12225 001a 0F22     		movs	r2, #15
 12226 001c 1A62     		str	r2, [r3, #32]
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Discard the received data */
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 12227              		.loc 1 4038 3
 12228 001e FB68     		ldr	r3, [r7, #12]
 12229 0020 1B68     		ldr	r3, [r3]
 12230 0022 9A69     		ldr	r2, [r3, #24]
 12231 0024 FB68     		ldr	r3, [r7, #12]
 12232 0026 1B68     		ldr	r3, [r3]
 12233 0028 42F00802 		orr	r2, r2, #8
 12234 002c 9A61     		str	r2, [r3, #24]
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 310


4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 12235              		.loc 1 4041 18
 12236 002e FB68     		ldr	r3, [r7, #12]
 12237 0030 2022     		movs	r2, #32
 12238 0032 C3F88C20 		str	r2, [r3, #140]
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 12239              		.loc 1 4042 24
 12240 0036 FB68     		ldr	r3, [r7, #12]
 12241 0038 0022     		movs	r2, #0
 12242 003a DA66     		str	r2, [r3, #108]
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 12243              		.loc 1 4050 3
 12244 003c F868     		ldr	r0, [r7, #12]
 12245 003e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12246              		.loc 1 4052 1
 12247 0042 00BF     		nop
 12248 0044 1037     		adds	r7, r7, #16
 12249              	.LCFI330:
 12250              		.cfi_def_cfa_offset 8
 12251 0046 BD46     		mov	sp, r7
 12252              	.LCFI331:
 12253              		.cfi_def_cfa_register 13
 12254              		@ sp needed
 12255 0048 80BD     		pop	{r7, pc}
 12256              		.cfi_endproc
 12257              	.LFE204:
 12259              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 12260              		.align	1
 12261              		.syntax unified
 12262              		.thumb
 12263              		.thumb_func
 12265              	UART_TxISR_8BIT:
 12266              	.LFB205:
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12267              		.loc 1 4062 1
 12268              		.cfi_startproc
 12269              		@ args = 0, pretend = 0, frame = 56
 12270              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 311


 12271              		@ link register save eliminated.
 12272 0000 80B4     		push	{r7}
 12273              	.LCFI332:
 12274              		.cfi_def_cfa_offset 4
 12275              		.cfi_offset 7, -4
 12276 0002 8FB0     		sub	sp, sp, #60
 12277              	.LCFI333:
 12278              		.cfi_def_cfa_offset 64
 12279 0004 00AF     		add	r7, sp, #0
 12280              	.LCFI334:
 12281              		.cfi_def_cfa_register 7
 12282 0006 7860     		str	r0, [r7, #4]
4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12283              		.loc 1 4064 12
 12284 0008 7B68     		ldr	r3, [r7, #4]
 12285 000a D3F88830 		ldr	r3, [r3, #136]
 12286              		.loc 1 4064 6
 12287 000e 212B     		cmp	r3, #33
 12288 0010 4CD1     		bne	.L753
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 12289              		.loc 1 4066 14
 12290 0012 7B68     		ldr	r3, [r7, #4]
 12291 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12292 0018 9BB2     		uxth	r3, r3
 12293              		.loc 1 4066 8
 12294 001a 002B     		cmp	r3, #0
 12295 001c 32D1     		bne	.L746
 12296              	.L749:
 12297              	.LBB903:
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 12298              		.loc 1 4069 7 discriminator 1
 12299 001e 7B68     		ldr	r3, [r7, #4]
 12300 0020 1B68     		ldr	r3, [r3]
 12301 0022 3B62     		str	r3, [r7, #32]
 12302              	.LBB904:
 12303              	.LBB905:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12304              		.loc 2 1155 4
 12305 0024 3B6A     		ldr	r3, [r7, #32]
 12306              		.syntax unified
 12307              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12308 0026 53E8003F 		ldrex r3, [r3]
 12309              	@ 0 "" 2
 12310              		.thumb
 12311              		.syntax unified
 12312 002a FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12313              		.loc 2 1156 10
 12314 002c FB69     		ldr	r3, [r7, #28]
 12315              	.LBE905:
 12316              	.LBE904:
 12317              		.loc 1 4069 7 discriminator 1
 12318 002e 23F08003 		bic	r3, r3, #128
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 312


 12319 0032 7B63     		str	r3, [r7, #52]
 12320 0034 7B68     		ldr	r3, [r7, #4]
 12321 0036 1B68     		ldr	r3, [r3]
 12322 0038 1A46     		mov	r2, r3
 12323 003a 7B6B     		ldr	r3, [r7, #52]
 12324 003c FB62     		str	r3, [r7, #44]
 12325 003e BA62     		str	r2, [r7, #40]
 12326              	.LBB906:
 12327              	.LBB907:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12328              		.loc 2 1206 4
 12329 0040 B96A     		ldr	r1, [r7, #40]
 12330 0042 FA6A     		ldr	r2, [r7, #44]
 12331              		.syntax unified
 12332              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12333 0044 41E80023 		strex r3, r2, [r1]
 12334              	@ 0 "" 2
 12335              		.thumb
 12336              		.syntax unified
 12337 0048 7B62     		str	r3, [r7, #36]
 12338              		.loc 2 1207 10
 12339 004a 7B6A     		ldr	r3, [r7, #36]
 12340              	.LBE907:
 12341              	.LBE906:
 12342              		.loc 1 4069 7 discriminator 1
 12343 004c 002B     		cmp	r3, #0
 12344 004e E6D1     		bne	.L749
 12345              	.L752:
 12346              	.LBE903:
 12347              	.LBB908:
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12348              		.loc 1 4072 7 discriminator 1
 12349 0050 7B68     		ldr	r3, [r7, #4]
 12350 0052 1B68     		ldr	r3, [r3]
 12351 0054 FB60     		str	r3, [r7, #12]
 12352              	.LBB909:
 12353              	.LBB910:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12354              		.loc 2 1155 4
 12355 0056 FB68     		ldr	r3, [r7, #12]
 12356              		.syntax unified
 12357              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12358 0058 53E8003F 		ldrex r3, [r3]
 12359              	@ 0 "" 2
 12360              		.thumb
 12361              		.syntax unified
 12362 005c BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12363              		.loc 2 1156 10
 12364 005e BB68     		ldr	r3, [r7, #8]
 12365              	.LBE910:
 12366              	.LBE909:
 12367              		.loc 1 4072 7 discriminator 1
 12368 0060 43F04003 		orr	r3, r3, #64
 12369 0064 3B63     		str	r3, [r7, #48]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 313


 12370 0066 7B68     		ldr	r3, [r7, #4]
 12371 0068 1B68     		ldr	r3, [r3]
 12372 006a 1A46     		mov	r2, r3
 12373 006c 3B6B     		ldr	r3, [r7, #48]
 12374 006e BB61     		str	r3, [r7, #24]
 12375 0070 7A61     		str	r2, [r7, #20]
 12376              	.LBB911:
 12377              	.LBB912:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12378              		.loc 2 1206 4
 12379 0072 7969     		ldr	r1, [r7, #20]
 12380 0074 BA69     		ldr	r2, [r7, #24]
 12381              		.syntax unified
 12382              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12383 0076 41E80023 		strex r3, r2, [r1]
 12384              	@ 0 "" 2
 12385              		.thumb
 12386              		.syntax unified
 12387 007a 3B61     		str	r3, [r7, #16]
 12388              		.loc 2 1207 10
 12389 007c 3B69     		ldr	r3, [r7, #16]
 12390              	.LBE912:
 12391              	.LBE911:
 12392              		.loc 1 4072 7 discriminator 1
 12393 007e 002B     		cmp	r3, #0
 12394 0080 E6D1     		bne	.L752
 12395              	.LBE908:
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
4079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12396              		.loc 1 4081 1
 12397 0082 13E0     		b	.L753
 12398              	.L746:
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12399              		.loc 1 4076 46
 12400 0084 7B68     		ldr	r3, [r7, #4]
 12401 0086 1B6D     		ldr	r3, [r3, #80]
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12402              		.loc 1 4076 40
 12403 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12404              		.loc 1 4076 12
 12405 008a 7B68     		ldr	r3, [r7, #4]
 12406 008c 1B68     		ldr	r3, [r3]
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr++;
 12407              		.loc 1 4076 28
 12408 008e 9A62     		str	r2, [r3, #40]
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 12409              		.loc 1 4077 12
 12410 0090 7B68     		ldr	r3, [r7, #4]
 12411 0092 1B6D     		ldr	r3, [r3, #80]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 314


4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 12412              		.loc 1 4077 24
 12413 0094 5A1C     		adds	r2, r3, #1
 12414 0096 7B68     		ldr	r3, [r7, #4]
 12415 0098 1A65     		str	r2, [r3, #80]
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12416              		.loc 1 4078 12
 12417 009a 7B68     		ldr	r3, [r7, #4]
 12418 009c B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12419 00a0 9BB2     		uxth	r3, r3
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12420              		.loc 1 4078 25
 12421 00a2 013B     		subs	r3, r3, #1
 12422 00a4 9AB2     		uxth	r2, r3
 12423 00a6 7B68     		ldr	r3, [r7, #4]
 12424 00a8 A3F85620 		strh	r2, [r3, #86]	@ movhi
 12425              	.L753:
 12426              		.loc 1 4081 1
 12427 00ac 00BF     		nop
 12428 00ae 3C37     		adds	r7, r7, #60
 12429              	.LCFI335:
 12430              		.cfi_def_cfa_offset 4
 12431 00b0 BD46     		mov	sp, r7
 12432              	.LCFI336:
 12433              		.cfi_def_cfa_register 13
 12434              		@ sp needed
 12435 00b2 5DF8047B 		ldr	r7, [sp], #4
 12436              	.LCFI337:
 12437              		.cfi_restore 7
 12438              		.cfi_def_cfa_offset 0
 12439 00b6 7047     		bx	lr
 12440              		.cfi_endproc
 12441              	.LFE205:
 12443              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 12444              		.align	1
 12445              		.syntax unified
 12446              		.thumb
 12447              		.thumb_func
 12449              	UART_TxISR_16BIT:
 12450              	.LFB206:
4082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12451              		.loc 1 4091 1
 12452              		.cfi_startproc
 12453              		@ args = 0, pretend = 0, frame = 64
 12454              		@ frame_needed = 1, uses_anonymous_args = 0
 12455              		@ link register save eliminated.
 12456 0000 80B4     		push	{r7}
 12457              	.LCFI338:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 315


 12458              		.cfi_def_cfa_offset 4
 12459              		.cfi_offset 7, -4
 12460 0002 91B0     		sub	sp, sp, #68
 12461              	.LCFI339:
 12462              		.cfi_def_cfa_offset 72
 12463 0004 00AF     		add	r7, sp, #0
 12464              	.LCFI340:
 12465              		.cfi_def_cfa_register 7
 12466 0006 7860     		str	r0, [r7, #4]
4092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const uint16_t *tmp;
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12467              		.loc 1 4095 12
 12468 0008 7B68     		ldr	r3, [r7, #4]
 12469 000a D3F88830 		ldr	r3, [r3, #136]
 12470              		.loc 1 4095 6
 12471 000e 212B     		cmp	r3, #33
 12472 0010 51D1     		bne	.L763
4096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 12473              		.loc 1 4097 14
 12474 0012 7B68     		ldr	r3, [r7, #4]
 12475 0014 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12476 0018 9BB2     		uxth	r3, r3
 12477              		.loc 1 4097 8
 12478 001a 002B     		cmp	r3, #0
 12479 001c 32D1     		bne	.L756
 12480              	.L759:
 12481              	.LBB913:
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 12482              		.loc 1 4100 7 discriminator 1
 12483 001e 7B68     		ldr	r3, [r7, #4]
 12484 0020 1B68     		ldr	r3, [r3]
 12485 0022 7B62     		str	r3, [r7, #36]
 12486              	.LBB914:
 12487              	.LBB915:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12488              		.loc 2 1155 4
 12489 0024 7B6A     		ldr	r3, [r7, #36]
 12490              		.syntax unified
 12491              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12492 0026 53E8003F 		ldrex r3, [r3]
 12493              	@ 0 "" 2
 12494              		.thumb
 12495              		.syntax unified
 12496 002a 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12497              		.loc 2 1156 10
 12498 002c 3B6A     		ldr	r3, [r7, #32]
 12499              	.LBE915:
 12500              	.LBE914:
 12501              		.loc 1 4100 7 discriminator 1
 12502 002e 23F08003 		bic	r3, r3, #128
 12503 0032 BB63     		str	r3, [r7, #56]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 316


 12504 0034 7B68     		ldr	r3, [r7, #4]
 12505 0036 1B68     		ldr	r3, [r3]
 12506 0038 1A46     		mov	r2, r3
 12507 003a BB6B     		ldr	r3, [r7, #56]
 12508 003c 3B63     		str	r3, [r7, #48]
 12509 003e FA62     		str	r2, [r7, #44]
 12510              	.LBB916:
 12511              	.LBB917:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12512              		.loc 2 1206 4
 12513 0040 F96A     		ldr	r1, [r7, #44]
 12514 0042 3A6B     		ldr	r2, [r7, #48]
 12515              		.syntax unified
 12516              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12517 0044 41E80023 		strex r3, r2, [r1]
 12518              	@ 0 "" 2
 12519              		.thumb
 12520              		.syntax unified
 12521 0048 BB62     		str	r3, [r7, #40]
 12522              		.loc 2 1207 10
 12523 004a BB6A     		ldr	r3, [r7, #40]
 12524              	.LBE917:
 12525              	.LBE916:
 12526              		.loc 1 4100 7 discriminator 1
 12527 004c 002B     		cmp	r3, #0
 12528 004e E6D1     		bne	.L759
 12529              	.L762:
 12530              	.LBE913:
 12531              	.LBB918:
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12532              		.loc 1 4103 7 discriminator 1
 12533 0050 7B68     		ldr	r3, [r7, #4]
 12534 0052 1B68     		ldr	r3, [r3]
 12535 0054 3B61     		str	r3, [r7, #16]
 12536              	.LBB919:
 12537              	.LBB920:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12538              		.loc 2 1155 4
 12539 0056 3B69     		ldr	r3, [r7, #16]
 12540              		.syntax unified
 12541              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12542 0058 53E8003F 		ldrex r3, [r3]
 12543              	@ 0 "" 2
 12544              		.thumb
 12545              		.syntax unified
 12546 005c FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12547              		.loc 2 1156 10
 12548 005e FB68     		ldr	r3, [r7, #12]
 12549              	.LBE920:
 12550              	.LBE919:
 12551              		.loc 1 4103 7 discriminator 1
 12552 0060 43F04003 		orr	r3, r3, #64
 12553 0064 7B63     		str	r3, [r7, #52]
 12554 0066 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 317


 12555 0068 1B68     		ldr	r3, [r3]
 12556 006a 1A46     		mov	r2, r3
 12557 006c 7B6B     		ldr	r3, [r7, #52]
 12558 006e FB61     		str	r3, [r7, #28]
 12559 0070 BA61     		str	r2, [r7, #24]
 12560              	.LBB921:
 12561              	.LBB922:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12562              		.loc 2 1206 4
 12563 0072 B969     		ldr	r1, [r7, #24]
 12564 0074 FA69     		ldr	r2, [r7, #28]
 12565              		.syntax unified
 12566              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12567 0076 41E80023 		strex r3, r2, [r1]
 12568              	@ 0 "" 2
 12569              		.thumb
 12570              		.syntax unified
 12571 007a 7B61     		str	r3, [r7, #20]
 12572              		.loc 2 1207 10
 12573 007c 7B69     		ldr	r3, [r7, #20]
 12574              	.LBE922:
 12575              	.LBE921:
 12576              		.loc 1 4103 7 discriminator 1
 12577 007e 002B     		cmp	r3, #0
 12578 0080 E6D1     		bne	.L762
 12579              	.LBE918:
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
4106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
4111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12580              		.loc 1 4113 1
 12581 0082 18E0     		b	.L763
 12582              	.L756:
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 12583              		.loc 1 4107 11
 12584 0084 7B68     		ldr	r3, [r7, #4]
 12585 0086 1B6D     		ldr	r3, [r3, #80]
 12586 0088 FB63     		str	r3, [r7, #60]
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12587              		.loc 1 4108 43
 12588 008a FB6B     		ldr	r3, [r7, #60]
 12589 008c 1B88     		ldrh	r3, [r3]
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12590              		.loc 1 4108 50
 12591 008e 1A46     		mov	r2, r3
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12592              		.loc 1 4108 12
 12593 0090 7B68     		ldr	r3, [r7, #4]
 12594 0092 1B68     		ldr	r3, [r3]
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12595              		.loc 1 4108 50
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 318


 12596 0094 C2F30802 		ubfx	r2, r2, #0, #9
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 12597              		.loc 1 4108 28
 12598 0098 9A62     		str	r2, [r3, #40]
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 12599              		.loc 1 4109 12
 12600 009a 7B68     		ldr	r3, [r7, #4]
 12601 009c 1B6D     		ldr	r3, [r3, #80]
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 12602              		.loc 1 4109 25
 12603 009e 9A1C     		adds	r2, r3, #2
 12604 00a0 7B68     		ldr	r3, [r7, #4]
 12605 00a2 1A65     		str	r2, [r3, #80]
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12606              		.loc 1 4110 12
 12607 00a4 7B68     		ldr	r3, [r7, #4]
 12608 00a6 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12609 00aa 9BB2     		uxth	r3, r3
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 12610              		.loc 1 4110 25
 12611 00ac 013B     		subs	r3, r3, #1
 12612 00ae 9AB2     		uxth	r2, r3
 12613 00b0 7B68     		ldr	r3, [r7, #4]
 12614 00b2 A3F85620 		strh	r2, [r3, #86]	@ movhi
 12615              	.L763:
 12616              		.loc 1 4113 1
 12617 00b6 00BF     		nop
 12618 00b8 4437     		adds	r7, r7, #68
 12619              	.LCFI341:
 12620              		.cfi_def_cfa_offset 4
 12621 00ba BD46     		mov	sp, r7
 12622              	.LCFI342:
 12623              		.cfi_def_cfa_register 13
 12624              		@ sp needed
 12625 00bc 5DF8047B 		ldr	r7, [sp], #4
 12626              	.LCFI343:
 12627              		.cfi_restore 7
 12628              		.cfi_def_cfa_offset 0
 12629 00c0 7047     		bx	lr
 12630              		.cfi_endproc
 12631              	.LFE206:
 12633              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 12634              		.align	1
 12635              		.syntax unified
 12636              		.thumb
 12637              		.thumb_func
 12639              	UART_TxISR_8BIT_FIFOEN:
 12640              	.LFB207:
4114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 319


4123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12641              		.loc 1 4123 1
 12642              		.cfi_startproc
 12643              		@ args = 0, pretend = 0, frame = 64
 12644              		@ frame_needed = 1, uses_anonymous_args = 0
 12645              		@ link register save eliminated.
 12646 0000 80B4     		push	{r7}
 12647              	.LCFI344:
 12648              		.cfi_def_cfa_offset 4
 12649              		.cfi_offset 7, -4
 12650 0002 91B0     		sub	sp, sp, #68
 12651              	.LCFI345:
 12652              		.cfi_def_cfa_offset 72
 12653 0004 00AF     		add	r7, sp, #0
 12654              	.LCFI346:
 12655              		.cfi_def_cfa_register 7
 12656 0006 7860     		str	r0, [r7, #4]
4124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12657              		.loc 1 4127 12
 12658 0008 7B68     		ldr	r3, [r7, #4]
 12659 000a D3F88830 		ldr	r3, [r3, #136]
 12660              		.loc 1 4127 6
 12661 000e 212B     		cmp	r3, #33
 12662 0010 60D1     		bne	.L777
4128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 12663              		.loc 1 4129 21
 12664 0012 7B68     		ldr	r3, [r7, #4]
 12665 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 12666 0018 FB87     		strh	r3, [r7, #62]	@ movhi
 12667              		.loc 1 4129 5
 12668 001a 57E0     		b	.L766
 12669              	.L775:
4130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 12670              		.loc 1 4131 16
 12671 001c 7B68     		ldr	r3, [r7, #4]
 12672 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12673 0022 9BB2     		uxth	r3, r3
 12674              		.loc 1 4131 10
 12675 0024 002B     		cmp	r3, #0
 12676 0026 33D1     		bne	.L767
 12677              	.L770:
 12678              	.LBB923:
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 12679              		.loc 1 4134 9 discriminator 1
 12680 0028 7B68     		ldr	r3, [r7, #4]
 12681 002a 1B68     		ldr	r3, [r3]
 12682 002c 0833     		adds	r3, r3, #8
 12683 002e 7B62     		str	r3, [r7, #36]
 12684              	.LBB924:
 12685              	.LBB925:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 320


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12686              		.loc 2 1155 4
 12687 0030 7B6A     		ldr	r3, [r7, #36]
 12688              		.syntax unified
 12689              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12690 0032 53E8003F 		ldrex r3, [r3]
 12691              	@ 0 "" 2
 12692              		.thumb
 12693              		.syntax unified
 12694 0036 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12695              		.loc 2 1156 10
 12696 0038 3B6A     		ldr	r3, [r7, #32]
 12697              	.LBE925:
 12698              	.LBE924:
 12699              		.loc 1 4134 9 discriminator 1
 12700 003a 23F40003 		bic	r3, r3, #8388608
 12701 003e BB63     		str	r3, [r7, #56]
 12702 0040 7B68     		ldr	r3, [r7, #4]
 12703 0042 1B68     		ldr	r3, [r3]
 12704 0044 0833     		adds	r3, r3, #8
 12705 0046 BA6B     		ldr	r2, [r7, #56]
 12706 0048 3A63     		str	r2, [r7, #48]
 12707 004a FB62     		str	r3, [r7, #44]
 12708              	.LBB926:
 12709              	.LBB927:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12710              		.loc 2 1206 4
 12711 004c F96A     		ldr	r1, [r7, #44]
 12712 004e 3A6B     		ldr	r2, [r7, #48]
 12713              		.syntax unified
 12714              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12715 0050 41E80023 		strex r3, r2, [r1]
 12716              	@ 0 "" 2
 12717              		.thumb
 12718              		.syntax unified
 12719 0054 BB62     		str	r3, [r7, #40]
 12720              		.loc 2 1207 10
 12721 0056 BB6A     		ldr	r3, [r7, #40]
 12722              	.LBE927:
 12723              	.LBE926:
 12724              		.loc 1 4134 9 discriminator 1
 12725 0058 002B     		cmp	r3, #0
 12726 005a E5D1     		bne	.L770
 12727              	.L773:
 12728              	.LBE923:
 12729              	.LBB928:
4135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12730              		.loc 1 4137 9 discriminator 1
 12731 005c 7B68     		ldr	r3, [r7, #4]
 12732 005e 1B68     		ldr	r3, [r3]
 12733 0060 3B61     		str	r3, [r7, #16]
 12734              	.LBB929:
 12735              	.LBB930:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 321


 12736              		.loc 2 1155 4
 12737 0062 3B69     		ldr	r3, [r7, #16]
 12738              		.syntax unified
 12739              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12740 0064 53E8003F 		ldrex r3, [r3]
 12741              	@ 0 "" 2
 12742              		.thumb
 12743              		.syntax unified
 12744 0068 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12745              		.loc 2 1156 10
 12746 006a FB68     		ldr	r3, [r7, #12]
 12747              	.LBE930:
 12748              	.LBE929:
 12749              		.loc 1 4137 9 discriminator 1
 12750 006c 43F04003 		orr	r3, r3, #64
 12751 0070 7B63     		str	r3, [r7, #52]
 12752 0072 7B68     		ldr	r3, [r7, #4]
 12753 0074 1B68     		ldr	r3, [r3]
 12754 0076 1A46     		mov	r2, r3
 12755 0078 7B6B     		ldr	r3, [r7, #52]
 12756 007a FB61     		str	r3, [r7, #28]
 12757 007c BA61     		str	r2, [r7, #24]
 12758              	.LBB931:
 12759              	.LBB932:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12760              		.loc 2 1206 4
 12761 007e B969     		ldr	r1, [r7, #24]
 12762 0080 FA69     		ldr	r2, [r7, #28]
 12763              		.syntax unified
 12764              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12765 0082 41E80023 		strex r3, r2, [r1]
 12766              	@ 0 "" 2
 12767              		.thumb
 12768              		.syntax unified
 12769 0086 7B61     		str	r3, [r7, #20]
 12770              		.loc 2 1207 10
 12771 0088 7B69     		ldr	r3, [r7, #20]
 12772              	.LBE932:
 12773              	.LBE931:
 12774              		.loc 1 4137 9 discriminator 1
 12775 008a 002B     		cmp	r3, #0
 12776 008c E6D1     		bne	.L773
 12777              	.LBE928:
4138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 12778              		.loc 1 4139 9
 12779 008e 21E0     		b	.L776
 12780              	.L767:
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 12781              		.loc 1 4141 16
 12782 0090 7B68     		ldr	r3, [r7, #4]
 12783 0092 1B68     		ldr	r3, [r3]
 12784 0094 DB69     		ldr	r3, [r3, #28]
 12785 0096 03F08003 		and	r3, r3, #128
 12786              		.loc 1 4141 15
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 322


 12787 009a 002B     		cmp	r3, #0
 12788 009c 13D0     		beq	.L774
4142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 12789              		.loc 1 4143 48
 12790 009e 7B68     		ldr	r3, [r7, #4]
 12791 00a0 1B6D     		ldr	r3, [r3, #80]
 12792              		.loc 1 4143 42
 12793 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12794              		.loc 1 4143 14
 12795 00a4 7B68     		ldr	r3, [r7, #4]
 12796 00a6 1B68     		ldr	r3, [r3]
 12797              		.loc 1 4143 30
 12798 00a8 9A62     		str	r2, [r3, #40]
4144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr++;
 12799              		.loc 1 4144 14
 12800 00aa 7B68     		ldr	r3, [r7, #4]
 12801 00ac 1B6D     		ldr	r3, [r3, #80]
 12802              		.loc 1 4144 26
 12803 00ae 5A1C     		adds	r2, r3, #1
 12804 00b0 7B68     		ldr	r3, [r7, #4]
 12805 00b2 1A65     		str	r2, [r3, #80]
4145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 12806              		.loc 1 4145 14
 12807 00b4 7B68     		ldr	r3, [r7, #4]
 12808 00b6 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12809 00ba 9BB2     		uxth	r3, r3
 12810              		.loc 1 4145 27
 12811 00bc 013B     		subs	r3, r3, #1
 12812 00be 9AB2     		uxth	r2, r3
 12813 00c0 7B68     		ldr	r3, [r7, #4]
 12814 00c2 A3F85620 		strh	r2, [r3, #86]	@ movhi
 12815              	.L774:
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 12816              		.loc 1 4129 78 discriminator 2
 12817 00c6 FB8F     		ldrh	r3, [r7, #62]
 12818 00c8 013B     		subs	r3, r3, #1
 12819 00ca FB87     		strh	r3, [r7, #62]	@ movhi
 12820              	.L766:
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 12821              		.loc 1 4129 61 discriminator 1
 12822 00cc FB8F     		ldrh	r3, [r7, #62]
 12823 00ce 002B     		cmp	r3, #0
 12824 00d0 A4D1     		bne	.L775
4146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
4150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 12825              		.loc 1 4153 1
 12826 00d2 FFE7     		b	.L777
 12827              	.L776:
 12828              	.L777:
 12829 00d4 00BF     		nop
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 323


 12830 00d6 4437     		adds	r7, r7, #68
 12831              	.LCFI347:
 12832              		.cfi_def_cfa_offset 4
 12833 00d8 BD46     		mov	sp, r7
 12834              	.LCFI348:
 12835              		.cfi_def_cfa_register 13
 12836              		@ sp needed
 12837 00da 5DF8047B 		ldr	r7, [sp], #4
 12838              	.LCFI349:
 12839              		.cfi_restore 7
 12840              		.cfi_def_cfa_offset 0
 12841 00de 7047     		bx	lr
 12842              		.cfi_endproc
 12843              	.LFE207:
 12845              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 12846              		.align	1
 12847              		.syntax unified
 12848              		.thumb
 12849              		.thumb_func
 12851              	UART_TxISR_16BIT_FIFOEN:
 12852              	.LFB208:
4154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 12853              		.loc 1 4163 1
 12854              		.cfi_startproc
 12855              		@ args = 0, pretend = 0, frame = 64
 12856              		@ frame_needed = 1, uses_anonymous_args = 0
 12857              		@ link register save eliminated.
 12858 0000 80B4     		push	{r7}
 12859              	.LCFI350:
 12860              		.cfi_def_cfa_offset 4
 12861              		.cfi_offset 7, -4
 12862 0002 91B0     		sub	sp, sp, #68
 12863              	.LCFI351:
 12864              		.cfi_def_cfa_offset 72
 12865 0004 00AF     		add	r7, sp, #0
 12866              	.LCFI352:
 12867              		.cfi_def_cfa_register 7
 12868 0006 7860     		str	r0, [r7, #4]
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   const uint16_t *tmp;
4165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_tx_data;
4166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 12869              		.loc 1 4168 12
 12870 0008 7B68     		ldr	r3, [r7, #4]
 12871 000a D3F88830 		ldr	r3, [r3, #136]
 12872              		.loc 1 4168 6
 12873 000e 212B     		cmp	r3, #33
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 324


 12874 0010 65D1     		bne	.L791
4169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 12875              		.loc 1 4170 21
 12876 0012 7B68     		ldr	r3, [r7, #4]
 12877 0014 B3F86A30 		ldrh	r3, [r3, #106]	@ movhi
 12878 0018 FB87     		strh	r3, [r7, #62]	@ movhi
 12879              		.loc 1 4170 5
 12880 001a 5CE0     		b	.L780
 12881              	.L789:
4171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
 12882              		.loc 1 4172 16
 12883 001c 7B68     		ldr	r3, [r7, #4]
 12884 001e B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 12885 0022 9BB2     		uxth	r3, r3
 12886              		.loc 1 4172 10
 12887 0024 002B     		cmp	r3, #0
 12888 0026 33D1     		bne	.L781
 12889              	.L784:
 12890              	.LBB933:
4173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 12891              		.loc 1 4175 9 discriminator 1
 12892 0028 7B68     		ldr	r3, [r7, #4]
 12893 002a 1B68     		ldr	r3, [r3]
 12894 002c 0833     		adds	r3, r3, #8
 12895 002e 3B62     		str	r3, [r7, #32]
 12896              	.LBB934:
 12897              	.LBB935:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12898              		.loc 2 1155 4
 12899 0030 3B6A     		ldr	r3, [r7, #32]
 12900              		.syntax unified
 12901              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12902 0032 53E8003F 		ldrex r3, [r3]
 12903              	@ 0 "" 2
 12904              		.thumb
 12905              		.syntax unified
 12906 0036 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12907              		.loc 2 1156 10
 12908 0038 FB69     		ldr	r3, [r7, #28]
 12909              	.LBE935:
 12910              	.LBE934:
 12911              		.loc 1 4175 9 discriminator 1
 12912 003a 23F40003 		bic	r3, r3, #8388608
 12913 003e 7B63     		str	r3, [r7, #52]
 12914 0040 7B68     		ldr	r3, [r7, #4]
 12915 0042 1B68     		ldr	r3, [r3]
 12916 0044 0833     		adds	r3, r3, #8
 12917 0046 7A6B     		ldr	r2, [r7, #52]
 12918 0048 FA62     		str	r2, [r7, #44]
 12919 004a BB62     		str	r3, [r7, #40]
 12920              	.LBB936:
 12921              	.LBB937:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 325


1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12922              		.loc 2 1206 4
 12923 004c B96A     		ldr	r1, [r7, #40]
 12924 004e FA6A     		ldr	r2, [r7, #44]
 12925              		.syntax unified
 12926              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12927 0050 41E80023 		strex r3, r2, [r1]
 12928              	@ 0 "" 2
 12929              		.thumb
 12930              		.syntax unified
 12931 0054 7B62     		str	r3, [r7, #36]
 12932              		.loc 2 1207 10
 12933 0056 7B6A     		ldr	r3, [r7, #36]
 12934              	.LBE937:
 12935              	.LBE936:
 12936              		.loc 1 4175 9 discriminator 1
 12937 0058 002B     		cmp	r3, #0
 12938 005a E5D1     		bne	.L784
 12939              	.L787:
 12940              	.LBE933:
 12941              	.LBB938:
4176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 12942              		.loc 1 4178 9 discriminator 1
 12943 005c 7B68     		ldr	r3, [r7, #4]
 12944 005e 1B68     		ldr	r3, [r3]
 12945 0060 FB60     		str	r3, [r7, #12]
 12946              	.LBB939:
 12947              	.LBB940:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 12948              		.loc 2 1155 4
 12949 0062 FB68     		ldr	r3, [r7, #12]
 12950              		.syntax unified
 12951              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12952 0064 53E8003F 		ldrex r3, [r3]
 12953              	@ 0 "" 2
 12954              		.thumb
 12955              		.syntax unified
 12956 0068 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 12957              		.loc 2 1156 10
 12958 006a BB68     		ldr	r3, [r7, #8]
 12959              	.LBE940:
 12960              	.LBE939:
 12961              		.loc 1 4178 9 discriminator 1
 12962 006c 43F04003 		orr	r3, r3, #64
 12963 0070 3B63     		str	r3, [r7, #48]
 12964 0072 7B68     		ldr	r3, [r7, #4]
 12965 0074 1B68     		ldr	r3, [r3]
 12966 0076 1A46     		mov	r2, r3
 12967 0078 3B6B     		ldr	r3, [r7, #48]
 12968 007a BB61     		str	r3, [r7, #24]
 12969 007c 7A61     		str	r2, [r7, #20]
 12970              	.LBB941:
 12971              	.LBB942:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 326


 12972              		.loc 2 1206 4
 12973 007e 7969     		ldr	r1, [r7, #20]
 12974 0080 BA69     		ldr	r2, [r7, #24]
 12975              		.syntax unified
 12976              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 12977 0082 41E80023 		strex r3, r2, [r1]
 12978              	@ 0 "" 2
 12979              		.thumb
 12980              		.syntax unified
 12981 0086 3B61     		str	r3, [r7, #16]
 12982              		.loc 2 1207 10
 12983 0088 3B69     		ldr	r3, [r7, #16]
 12984              	.LBE942:
 12985              	.LBE941:
 12986              		.loc 1 4178 9 discriminator 1
 12987 008a 002B     		cmp	r3, #0
 12988 008c E6D1     		bne	.L787
 12989              	.LBE938:
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break; /* force exit loop */
 12990              		.loc 1 4180 9
 12991 008e 26E0     		b	.L790
 12992              	.L781:
4181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 12993              		.loc 1 4182 16
 12994 0090 7B68     		ldr	r3, [r7, #4]
 12995 0092 1B68     		ldr	r3, [r3]
 12996 0094 DB69     		ldr	r3, [r3, #28]
 12997 0096 03F08003 		and	r3, r3, #128
 12998              		.loc 1 4182 15
 12999 009a 002B     		cmp	r3, #0
 13000 009c 18D0     		beq	.L788
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
 13001              		.loc 1 4184 13
 13002 009e 7B68     		ldr	r3, [r7, #4]
 13003 00a0 1B6D     		ldr	r3, [r3, #80]
 13004 00a2 BB63     		str	r3, [r7, #56]
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 13005              		.loc 1 4185 45
 13006 00a4 BB6B     		ldr	r3, [r7, #56]
 13007 00a6 1B88     		ldrh	r3, [r3]
 13008              		.loc 1 4185 52
 13009 00a8 1A46     		mov	r2, r3
 13010              		.loc 1 4185 14
 13011 00aa 7B68     		ldr	r3, [r7, #4]
 13012 00ac 1B68     		ldr	r3, [r3]
 13013              		.loc 1 4185 52
 13014 00ae C2F30802 		ubfx	r2, r2, #0, #9
 13015              		.loc 1 4185 30
 13016 00b2 9A62     		str	r2, [r3, #40]
4186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 13017              		.loc 1 4186 14
 13018 00b4 7B68     		ldr	r3, [r7, #4]
 13019 00b6 1B6D     		ldr	r3, [r3, #80]
 13020              		.loc 1 4186 27
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 327


 13021 00b8 9A1C     		adds	r2, r3, #2
 13022 00ba 7B68     		ldr	r3, [r7, #4]
 13023 00bc 1A65     		str	r2, [r3, #80]
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->TxXferCount--;
 13024              		.loc 1 4187 14
 13025 00be 7B68     		ldr	r3, [r7, #4]
 13026 00c0 B3F85630 		ldrh	r3, [r3, #86]	@ movhi
 13027 00c4 9BB2     		uxth	r3, r3
 13028              		.loc 1 4187 27
 13029 00c6 013B     		subs	r3, r3, #1
 13030 00c8 9AB2     		uxth	r2, r3
 13031 00ca 7B68     		ldr	r3, [r7, #4]
 13032 00cc A3F85620 		strh	r2, [r3, #86]	@ movhi
 13033              	.L788:
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 13034              		.loc 1 4170 78 discriminator 2
 13035 00d0 FB8F     		ldrh	r3, [r7, #62]
 13036 00d2 013B     		subs	r3, r3, #1
 13037 00d4 FB87     		strh	r3, [r7, #62]	@ movhi
 13038              	.L780:
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 13039              		.loc 1 4170 61 discriminator 1
 13040 00d6 FB8F     		ldrh	r3, [r7, #62]
 13041 00d8 002B     		cmp	r3, #0
 13042 00da 9FD1     		bne	.L789
4188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Nothing to do */
4192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 13043              		.loc 1 4195 1
 13044 00dc FFE7     		b	.L791
 13045              	.L790:
 13046              	.L791:
 13047 00de 00BF     		nop
 13048 00e0 4437     		adds	r7, r7, #68
 13049              	.LCFI353:
 13050              		.cfi_def_cfa_offset 4
 13051 00e2 BD46     		mov	sp, r7
 13052              	.LCFI354:
 13053              		.cfi_def_cfa_register 13
 13054              		@ sp needed
 13055 00e4 5DF8047B 		ldr	r7, [sp], #4
 13056              	.LCFI355:
 13057              		.cfi_restore 7
 13058              		.cfi_def_cfa_offset 0
 13059 00e8 7047     		bx	lr
 13060              		.cfi_endproc
 13061              	.LFE208:
 13063              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 13064              		.align	1
 13065              		.syntax unified
 13066              		.thumb
 13067              		.thumb_func
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 328


 13069              	UART_EndTransmit_IT:
 13070              	.LFB209:
4196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 13071              		.loc 1 4204 1
 13072              		.cfi_startproc
 13073              		@ args = 0, pretend = 0, frame = 32
 13074              		@ frame_needed = 1, uses_anonymous_args = 0
 13075 0000 80B5     		push	{r7, lr}
 13076              	.LCFI356:
 13077              		.cfi_def_cfa_offset 8
 13078              		.cfi_offset 7, -8
 13079              		.cfi_offset 14, -4
 13080 0002 88B0     		sub	sp, sp, #32
 13081              	.LCFI357:
 13082              		.cfi_def_cfa_offset 40
 13083 0004 00AF     		add	r7, sp, #0
 13084              	.LCFI358:
 13085              		.cfi_def_cfa_register 7
 13086 0006 7860     		str	r0, [r7, #4]
 13087              	.L795:
 13088              	.LBB943:
4205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 13089              		.loc 1 4206 3 discriminator 1
 13090 0008 7B68     		ldr	r3, [r7, #4]
 13091 000a 1B68     		ldr	r3, [r3]
 13092 000c FB60     		str	r3, [r7, #12]
 13093              	.LBB944:
 13094              	.LBB945:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13095              		.loc 2 1155 4
 13096 000e FB68     		ldr	r3, [r7, #12]
 13097              		.syntax unified
 13098              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13099 0010 53E8003F 		ldrex r3, [r3]
 13100              	@ 0 "" 2
 13101              		.thumb
 13102              		.syntax unified
 13103 0014 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13104              		.loc 2 1156 10
 13105 0016 BB68     		ldr	r3, [r7, #8]
 13106              	.LBE945:
 13107              	.LBE944:
 13108              		.loc 1 4206 3 discriminator 1
 13109 0018 23F04003 		bic	r3, r3, #64
 13110 001c FB61     		str	r3, [r7, #28]
 13111 001e 7B68     		ldr	r3, [r7, #4]
 13112 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 329


 13113 0022 1A46     		mov	r2, r3
 13114 0024 FB69     		ldr	r3, [r7, #28]
 13115 0026 BB61     		str	r3, [r7, #24]
 13116 0028 7A61     		str	r2, [r7, #20]
 13117              	.LBB946:
 13118              	.LBB947:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13119              		.loc 2 1206 4
 13120 002a 7969     		ldr	r1, [r7, #20]
 13121 002c BA69     		ldr	r2, [r7, #24]
 13122              		.syntax unified
 13123              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13124 002e 41E80023 		strex r3, r2, [r1]
 13125              	@ 0 "" 2
 13126              		.thumb
 13127              		.syntax unified
 13128 0032 3B61     		str	r3, [r7, #16]
 13129              		.loc 2 1207 10
 13130 0034 3B69     		ldr	r3, [r7, #16]
 13131              	.LBE947:
 13132              	.LBE946:
 13133              		.loc 1 4206 3 discriminator 1
 13134 0036 002B     		cmp	r3, #0
 13135 0038 E6D1     		bne	.L795
 13136              	.LBE943:
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 13137              		.loc 1 4209 17
 13138 003a 7B68     		ldr	r3, [r7, #4]
 13139 003c 2022     		movs	r2, #32
 13140 003e C3F88820 		str	r2, [r3, #136]
4210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxISR = NULL;
 13141              		.loc 1 4212 16
 13142 0042 7B68     		ldr	r3, [r7, #4]
 13143 0044 0022     		movs	r2, #0
 13144 0046 9A67     		str	r2, [r3, #120]
4213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 13145              		.loc 1 4219 3
 13146 0048 7868     		ldr	r0, [r7, #4]
 13147 004a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
4220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 13148              		.loc 1 4221 1
 13149 004e 00BF     		nop
 13150 0050 2037     		adds	r7, r7, #32
 13151              	.LCFI359:
 13152              		.cfi_def_cfa_offset 8
 13153 0052 BD46     		mov	sp, r7
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 330


 13154              	.LCFI360:
 13155              		.cfi_def_cfa_register 13
 13156              		@ sp needed
 13157 0054 80BD     		pop	{r7, pc}
 13158              		.cfi_endproc
 13159              	.LFE209:
 13161              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 13162              		.align	1
 13163              		.syntax unified
 13164              		.thumb
 13165              		.thumb_func
 13167              	UART_RxISR_8BIT:
 13168              	.LFB210:
4222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 13169              		.loc 1 4229 1
 13170              		.cfi_startproc
 13171              		@ args = 0, pretend = 0, frame = 112
 13172              		@ frame_needed = 1, uses_anonymous_args = 0
 13173 0000 80B5     		push	{r7, lr}
 13174              	.LCFI361:
 13175              		.cfi_def_cfa_offset 8
 13176              		.cfi_offset 7, -8
 13177              		.cfi_offset 14, -4
 13178 0002 9CB0     		sub	sp, sp, #112
 13179              	.LCFI362:
 13180              		.cfi_def_cfa_offset 120
 13181 0004 00AF     		add	r7, sp, #0
 13182              	.LCFI363:
 13183              		.cfi_def_cfa_register 7
 13184 0006 7860     		str	r0, [r7, #4]
4230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 13185              		.loc 1 4230 12
 13186 0008 7B68     		ldr	r3, [r7, #4]
 13187 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 13188 000e A7F86E30 		strh	r3, [r7, #110]	@ movhi
4231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 13189              		.loc 1 4234 12
 13190 0012 7B68     		ldr	r3, [r7, #4]
 13191 0014 D3F88C30 		ldr	r3, [r3, #140]
 13192              		.loc 1 4234 6
 13193 0018 222B     		cmp	r3, #34
 13194 001a 40F0BE80 		bne	.L797
4235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 13195              		.loc 1 4236 25
 13196 001e 7B68     		ldr	r3, [r7, #4]
 13197 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 331


 13198 0022 5B6A     		ldr	r3, [r3, #36]
 13199              		.loc 1 4236 12
 13200 0024 A7F86C30 		strh	r3, [r7, #108]	@ movhi
4237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 13201              		.loc 1 4237 26
 13202 0028 B7F86C30 		ldrh	r3, [r7, #108]	@ movhi
 13203 002c D9B2     		uxtb	r1, r3
 13204              		.loc 1 4237 45
 13205 002e B7F86E30 		ldrh	r3, [r7, #110]	@ movhi
 13206 0032 DAB2     		uxtb	r2, r3
 13207              		.loc 1 4237 11
 13208 0034 7B68     		ldr	r3, [r7, #4]
 13209 0036 9B6D     		ldr	r3, [r3, #88]
 13210              		.loc 1 4237 26
 13211 0038 0A40     		ands	r2, r2, r1
 13212 003a D2B2     		uxtb	r2, r2
 13213              		.loc 1 4237 24
 13214 003c 1A70     		strb	r2, [r3]
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr++;
 13215              		.loc 1 4238 10
 13216 003e 7B68     		ldr	r3, [r7, #4]
 13217 0040 9B6D     		ldr	r3, [r3, #88]
 13218              		.loc 1 4238 22
 13219 0042 5A1C     		adds	r2, r3, #1
 13220 0044 7B68     		ldr	r3, [r7, #4]
 13221 0046 9A65     		str	r2, [r3, #88]
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 13222              		.loc 1 4239 10
 13223 0048 7B68     		ldr	r3, [r7, #4]
 13224 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13225 004e 9BB2     		uxth	r3, r3
 13226              		.loc 1 4239 23
 13227 0050 013B     		subs	r3, r3, #1
 13228 0052 9AB2     		uxth	r2, r3
 13229 0054 7B68     		ldr	r3, [r7, #4]
 13230 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 13231              		.loc 1 4241 14
 13232 005a 7B68     		ldr	r3, [r7, #4]
 13233 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13234 0060 9BB2     		uxth	r3, r3
 13235              		.loc 1 4241 8
 13236 0062 002B     		cmp	r3, #0
 13237 0064 40F0A180 		bne	.L814
 13238              	.L801:
 13239              	.LBB948:
4242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 13240              		.loc 1 4244 7 discriminator 1
 13241 0068 7B68     		ldr	r3, [r7, #4]
 13242 006a 1B68     		ldr	r3, [r3]
 13243 006c FB64     		str	r3, [r7, #76]
 13244              	.LBB949:
 13245              	.LBB950:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 332


 13246              		.loc 2 1155 4
 13247 006e FB6C     		ldr	r3, [r7, #76]
 13248              		.syntax unified
 13249              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13250 0070 53E8003F 		ldrex r3, [r3]
 13251              	@ 0 "" 2
 13252              		.thumb
 13253              		.syntax unified
 13254 0074 BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13255              		.loc 2 1156 10
 13256 0076 BB6C     		ldr	r3, [r7, #72]
 13257              	.LBE950:
 13258              	.LBE949:
 13259              		.loc 1 4244 7 discriminator 1
 13260 0078 23F49073 		bic	r3, r3, #288
 13261 007c BB66     		str	r3, [r7, #104]
 13262 007e 7B68     		ldr	r3, [r7, #4]
 13263 0080 1B68     		ldr	r3, [r3]
 13264 0082 1A46     		mov	r2, r3
 13265 0084 BB6E     		ldr	r3, [r7, #104]
 13266 0086 BB65     		str	r3, [r7, #88]
 13267 0088 7A65     		str	r2, [r7, #84]
 13268              	.LBB951:
 13269              	.LBB952:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13270              		.loc 2 1206 4
 13271 008a 796D     		ldr	r1, [r7, #84]
 13272 008c BA6D     		ldr	r2, [r7, #88]
 13273              		.syntax unified
 13274              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13275 008e 41E80023 		strex r3, r2, [r1]
 13276              	@ 0 "" 2
 13277              		.thumb
 13278              		.syntax unified
 13279 0092 3B65     		str	r3, [r7, #80]
 13280              		.loc 2 1207 10
 13281 0094 3B6D     		ldr	r3, [r7, #80]
 13282              	.LBE952:
 13283              	.LBE951:
 13284              		.loc 1 4244 7 discriminator 1
 13285 0096 002B     		cmp	r3, #0
 13286 0098 E6D1     		bne	.L801
 13287              	.L804:
 13288              	.LBE948:
 13289              	.LBB953:
4245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 13290              		.loc 1 4247 7 discriminator 1
 13291 009a 7B68     		ldr	r3, [r7, #4]
 13292 009c 1B68     		ldr	r3, [r3]
 13293 009e 0833     		adds	r3, r3, #8
 13294 00a0 BB63     		str	r3, [r7, #56]
 13295              	.LBB954:
 13296              	.LBB955:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 333


 13297              		.loc 2 1155 4
 13298 00a2 BB6B     		ldr	r3, [r7, #56]
 13299              		.syntax unified
 13300              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13301 00a4 53E8003F 		ldrex r3, [r3]
 13302              	@ 0 "" 2
 13303              		.thumb
 13304              		.syntax unified
 13305 00a8 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13306              		.loc 2 1156 10
 13307 00aa 7B6B     		ldr	r3, [r7, #52]
 13308              	.LBE955:
 13309              	.LBE954:
 13310              		.loc 1 4247 7 discriminator 1
 13311 00ac 23F00103 		bic	r3, r3, #1
 13312 00b0 7B66     		str	r3, [r7, #100]
 13313 00b2 7B68     		ldr	r3, [r7, #4]
 13314 00b4 1B68     		ldr	r3, [r3]
 13315 00b6 0833     		adds	r3, r3, #8
 13316 00b8 7A6E     		ldr	r2, [r7, #100]
 13317 00ba 7A64     		str	r2, [r7, #68]
 13318 00bc 3B64     		str	r3, [r7, #64]
 13319              	.LBB956:
 13320              	.LBB957:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13321              		.loc 2 1206 4
 13322 00be 396C     		ldr	r1, [r7, #64]
 13323 00c0 7A6C     		ldr	r2, [r7, #68]
 13324              		.syntax unified
 13325              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13326 00c2 41E80023 		strex r3, r2, [r1]
 13327              	@ 0 "" 2
 13328              		.thumb
 13329              		.syntax unified
 13330 00c6 FB63     		str	r3, [r7, #60]
 13331              		.loc 2 1207 10
 13332 00c8 FB6B     		ldr	r3, [r7, #60]
 13333              	.LBE957:
 13334              	.LBE956:
 13335              		.loc 1 4247 7 discriminator 1
 13336 00ca 002B     		cmp	r3, #0
 13337 00cc E5D1     		bne	.L804
 13338              	.LBE953:
4248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 13339              		.loc 1 4250 22
 13340 00ce 7B68     		ldr	r3, [r7, #4]
 13341 00d0 2022     		movs	r2, #32
 13342 00d2 C3F88C20 		str	r2, [r3, #140]
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
4253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 13343              		.loc 1 4253 20
 13344 00d6 7B68     		ldr	r3, [r7, #4]
 13345 00d8 0022     		movs	r2, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 334


 13346 00da 5A67     		str	r2, [r3, #116]
4254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 13347              		.loc 1 4256 26
 13348 00dc 7B68     		ldr	r3, [r7, #4]
 13349 00de 0022     		movs	r2, #0
 13350 00e0 1A67     		str	r2, [r3, #112]
4257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
 13351              		.loc 1 4258 13
 13352 00e2 7B68     		ldr	r3, [r7, #4]
 13353 00e4 1B68     		ldr	r3, [r3]
 13354              		.loc 1 4258 10
 13355 00e6 334A     		ldr	r2, .L815
 13356 00e8 9342     		cmp	r3, r2
 13357 00ea 1FD0     		beq	.L805
4259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 13358              		.loc 1 4261 13
 13359 00ec 7B68     		ldr	r3, [r7, #4]
 13360 00ee 1B68     		ldr	r3, [r3]
 13361 00f0 5B68     		ldr	r3, [r3, #4]
 13362 00f2 03F40003 		and	r3, r3, #8388608
 13363              		.loc 1 4261 12
 13364 00f6 002B     		cmp	r3, #0
 13365 00f8 18D0     		beq	.L805
 13366              	.L808:
 13367              	.LBB958:
4262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 13368              		.loc 1 4264 11 discriminator 1
 13369 00fa 7B68     		ldr	r3, [r7, #4]
 13370 00fc 1B68     		ldr	r3, [r3]
 13371 00fe 7B62     		str	r3, [r7, #36]
 13372              	.LBB959:
 13373              	.LBB960:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13374              		.loc 2 1155 4
 13375 0100 7B6A     		ldr	r3, [r7, #36]
 13376              		.syntax unified
 13377              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13378 0102 53E8003F 		ldrex r3, [r3]
 13379              	@ 0 "" 2
 13380              		.thumb
 13381              		.syntax unified
 13382 0106 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13383              		.loc 2 1156 10
 13384 0108 3B6A     		ldr	r3, [r7, #32]
 13385              	.LBE960:
 13386              	.LBE959:
 13387              		.loc 1 4264 11 discriminator 1
 13388 010a 23F08063 		bic	r3, r3, #67108864
 13389 010e 3B66     		str	r3, [r7, #96]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 335


 13390 0110 7B68     		ldr	r3, [r7, #4]
 13391 0112 1B68     		ldr	r3, [r3]
 13392 0114 1A46     		mov	r2, r3
 13393 0116 3B6E     		ldr	r3, [r7, #96]
 13394 0118 3B63     		str	r3, [r7, #48]
 13395 011a FA62     		str	r2, [r7, #44]
 13396              	.LBB961:
 13397              	.LBB962:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13398              		.loc 2 1206 4
 13399 011c F96A     		ldr	r1, [r7, #44]
 13400 011e 3A6B     		ldr	r2, [r7, #48]
 13401              		.syntax unified
 13402              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13403 0120 41E80023 		strex r3, r2, [r1]
 13404              	@ 0 "" 2
 13405              		.thumb
 13406              		.syntax unified
 13407 0124 BB62     		str	r3, [r7, #40]
 13408              		.loc 2 1207 10
 13409 0126 BB6A     		ldr	r3, [r7, #40]
 13410              	.LBE962:
 13411              	.LBE961:
 13412              		.loc 1 4264 11 discriminator 1
 13413 0128 002B     		cmp	r3, #0
 13414 012a E6D1     		bne	.L808
 13415              	.L805:
 13416              	.LBE958:
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check current reception Mode :
4269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 13417              		.loc 1 4270 16
 13418 012c 7B68     		ldr	r3, [r7, #4]
 13419 012e DB6E     		ldr	r3, [r3, #108]
 13420              		.loc 1 4270 10
 13421 0130 012B     		cmp	r3, #1
 13422 0132 2ED1     		bne	.L809
4271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set reception type to Standard */
4273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 13423              		.loc 1 4273 30
 13424 0134 7B68     		ldr	r3, [r7, #4]
 13425 0136 0022     		movs	r2, #0
 13426 0138 DA66     		str	r2, [r3, #108]
 13427              	.L812:
 13428              	.LBB963:
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable IDLE interrupt */
4276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 13429              		.loc 1 4276 9 discriminator 1
 13430 013a 7B68     		ldr	r3, [r7, #4]
 13431 013c 1B68     		ldr	r3, [r3]
 13432 013e 3B61     		str	r3, [r7, #16]
 13433              	.LBB964:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 336


 13434              	.LBB965:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13435              		.loc 2 1155 4
 13436 0140 3B69     		ldr	r3, [r7, #16]
 13437              		.syntax unified
 13438              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13439 0142 53E8003F 		ldrex r3, [r3]
 13440              	@ 0 "" 2
 13441              		.thumb
 13442              		.syntax unified
 13443 0146 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13444              		.loc 2 1156 10
 13445 0148 FB68     		ldr	r3, [r7, #12]
 13446              	.LBE965:
 13447              	.LBE964:
 13448              		.loc 1 4276 9 discriminator 1
 13449 014a 23F01003 		bic	r3, r3, #16
 13450 014e FB65     		str	r3, [r7, #92]
 13451 0150 7B68     		ldr	r3, [r7, #4]
 13452 0152 1B68     		ldr	r3, [r3]
 13453 0154 1A46     		mov	r2, r3
 13454 0156 FB6D     		ldr	r3, [r7, #92]
 13455 0158 FB61     		str	r3, [r7, #28]
 13456 015a BA61     		str	r2, [r7, #24]
 13457              	.LBB966:
 13458              	.LBB967:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13459              		.loc 2 1206 4
 13460 015c B969     		ldr	r1, [r7, #24]
 13461 015e FA69     		ldr	r2, [r7, #28]
 13462              		.syntax unified
 13463              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13464 0160 41E80023 		strex r3, r2, [r1]
 13465              	@ 0 "" 2
 13466              		.thumb
 13467              		.syntax unified
 13468 0164 7B61     		str	r3, [r7, #20]
 13469              		.loc 2 1207 10
 13470 0166 7B69     		ldr	r3, [r7, #20]
 13471              	.LBE967:
 13472              	.LBE966:
 13473              		.loc 1 4276 9 discriminator 1
 13474 0168 002B     		cmp	r3, #0
 13475 016a E6D1     		bne	.L812
 13476              	.LBE963:
4277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 13477              		.loc 1 4278 13
 13478 016c 7B68     		ldr	r3, [r7, #4]
 13479 016e 1B68     		ldr	r3, [r3]
 13480 0170 DB69     		ldr	r3, [r3, #28]
 13481 0172 03F01003 		and	r3, r3, #16
 13482              		.loc 1 4278 12
 13483 0176 102B     		cmp	r3, #16
 13484 0178 03D1     		bne	.L813
4279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 337


4280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear IDLE Flag */
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 13485              		.loc 1 4281 11
 13486 017a 7B68     		ldr	r3, [r7, #4]
 13487 017c 1B68     		ldr	r3, [r3]
 13488 017e 1022     		movs	r2, #16
 13489 0180 1A62     		str	r2, [r3, #32]
 13490              	.L813:
4282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 13491              		.loc 1 4289 9
 13492 0182 7B68     		ldr	r3, [r7, #4]
 13493 0184 B3F85C30 		ldrh	r3, [r3, #92]
 13494 0188 1946     		mov	r1, r3
 13495 018a 7868     		ldr	r0, [r7, #4]
 13496 018c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Standard reception API called */
4295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 13497              		.loc 1 4310 1
 13498 0190 0BE0     		b	.L814
 13499              	.L809:
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 13500              		.loc 1 4300 9
 13501 0192 7868     		ldr	r0, [r7, #4]
 13502 0194 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 13503              		.loc 1 4310 1
 13504 0198 07E0     		b	.L814
 13505              	.L797:
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 13506              		.loc 1 4308 5
 13507 019a 7B68     		ldr	r3, [r7, #4]
 13508 019c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 338


 13509 019e 9A69     		ldr	r2, [r3, #24]
 13510 01a0 7B68     		ldr	r3, [r7, #4]
 13511 01a2 1B68     		ldr	r3, [r3]
 13512 01a4 42F00802 		orr	r2, r2, #8
 13513 01a8 9A61     		str	r2, [r3, #24]
 13514              	.L814:
 13515              		.loc 1 4310 1
 13516 01aa 00BF     		nop
 13517 01ac 7037     		adds	r7, r7, #112
 13518              	.LCFI364:
 13519              		.cfi_def_cfa_offset 8
 13520 01ae BD46     		mov	sp, r7
 13521              	.LCFI365:
 13522              		.cfi_def_cfa_register 13
 13523              		@ sp needed
 13524 01b0 80BD     		pop	{r7, pc}
 13525              	.L816:
 13526 01b2 00BF     		.align	2
 13527              	.L815:
 13528 01b4 000C0058 		.word	1476398080
 13529              		.cfi_endproc
 13530              	.LFE210:
 13532              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 13533              		.align	1
 13534              		.syntax unified
 13535              		.thumb
 13536              		.thumb_func
 13538              	UART_RxISR_16BIT:
 13539              	.LFB211:
4311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 13540              		.loc 1 4320 1
 13541              		.cfi_startproc
 13542              		@ args = 0, pretend = 0, frame = 112
 13543              		@ frame_needed = 1, uses_anonymous_args = 0
 13544 0000 80B5     		push	{r7, lr}
 13545              	.LCFI366:
 13546              		.cfi_def_cfa_offset 8
 13547              		.cfi_offset 7, -8
 13548              		.cfi_offset 14, -4
 13549 0002 9CB0     		sub	sp, sp, #112
 13550              	.LCFI367:
 13551              		.cfi_def_cfa_offset 120
 13552 0004 00AF     		add	r7, sp, #0
 13553              	.LCFI368:
 13554              		.cfi_def_cfa_register 7
 13555 0006 7860     		str	r0, [r7, #4]
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 339


 13556              		.loc 1 4322 12
 13557 0008 7B68     		ldr	r3, [r7, #4]
 13558 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 13559 000e A7F86E30 		strh	r3, [r7, #110]	@ movhi
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 13560              		.loc 1 4326 12
 13561 0012 7B68     		ldr	r3, [r7, #4]
 13562 0014 D3F88C30 		ldr	r3, [r3, #140]
 13563              		.loc 1 4326 6
 13564 0018 222B     		cmp	r3, #34
 13565 001a 40F0BE80 		bne	.L818
4327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 13566              		.loc 1 4328 25
 13567 001e 7B68     		ldr	r3, [r7, #4]
 13568 0020 1B68     		ldr	r3, [r3]
 13569 0022 5B6A     		ldr	r3, [r3, #36]
 13570              		.loc 1 4328 12
 13571 0024 A7F86C30 		strh	r3, [r7, #108]	@ movhi
4329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 13572              		.loc 1 4329 9
 13573 0028 7B68     		ldr	r3, [r7, #4]
 13574 002a 9B6D     		ldr	r3, [r3, #88]
 13575 002c BB66     		str	r3, [r7, #104]
4330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 13576              		.loc 1 4330 12
 13577 002e B7F86C20 		ldrh	r2, [r7, #108]	@ movhi
 13578 0032 B7F86E30 		ldrh	r3, [r7, #110]	@ movhi
 13579 0036 1340     		ands	r3, r3, r2
 13580 0038 9AB2     		uxth	r2, r3
 13581              		.loc 1 4330 10
 13582 003a BB6E     		ldr	r3, [r7, #104]
 13583 003c 1A80     		strh	r2, [r3]	@ movhi
4331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 13584              		.loc 1 4331 10
 13585 003e 7B68     		ldr	r3, [r7, #4]
 13586 0040 9B6D     		ldr	r3, [r3, #88]
 13587              		.loc 1 4331 23
 13588 0042 9A1C     		adds	r2, r3, #2
 13589 0044 7B68     		ldr	r3, [r7, #4]
 13590 0046 9A65     		str	r2, [r3, #88]
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount--;
 13591              		.loc 1 4332 10
 13592 0048 7B68     		ldr	r3, [r7, #4]
 13593 004a B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13594 004e 9BB2     		uxth	r3, r3
 13595              		.loc 1 4332 23
 13596 0050 013B     		subs	r3, r3, #1
 13597 0052 9AB2     		uxth	r2, r3
 13598 0054 7B68     		ldr	r3, [r7, #4]
 13599 0056 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 13600              		.loc 1 4334 14
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 340


 13601 005a 7B68     		ldr	r3, [r7, #4]
 13602 005c B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13603 0060 9BB2     		uxth	r3, r3
 13604              		.loc 1 4334 8
 13605 0062 002B     		cmp	r3, #0
 13606 0064 40F0A180 		bne	.L835
 13607              	.L822:
 13608              	.LBB968:
4335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 13609              		.loc 1 4337 7 discriminator 1
 13610 0068 7B68     		ldr	r3, [r7, #4]
 13611 006a 1B68     		ldr	r3, [r3]
 13612 006c BB64     		str	r3, [r7, #72]
 13613              	.LBB969:
 13614              	.LBB970:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13615              		.loc 2 1155 4
 13616 006e BB6C     		ldr	r3, [r7, #72]
 13617              		.syntax unified
 13618              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13619 0070 53E8003F 		ldrex r3, [r3]
 13620              	@ 0 "" 2
 13621              		.thumb
 13622              		.syntax unified
 13623 0074 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13624              		.loc 2 1156 10
 13625 0076 7B6C     		ldr	r3, [r7, #68]
 13626              	.LBE970:
 13627              	.LBE969:
 13628              		.loc 1 4337 7 discriminator 1
 13629 0078 23F49073 		bic	r3, r3, #288
 13630 007c 7B66     		str	r3, [r7, #100]
 13631 007e 7B68     		ldr	r3, [r7, #4]
 13632 0080 1B68     		ldr	r3, [r3]
 13633 0082 1A46     		mov	r2, r3
 13634 0084 7B6E     		ldr	r3, [r7, #100]
 13635 0086 7B65     		str	r3, [r7, #84]
 13636 0088 3A65     		str	r2, [r7, #80]
 13637              	.LBB971:
 13638              	.LBB972:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13639              		.loc 2 1206 4
 13640 008a 396D     		ldr	r1, [r7, #80]
 13641 008c 7A6D     		ldr	r2, [r7, #84]
 13642              		.syntax unified
 13643              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13644 008e 41E80023 		strex r3, r2, [r1]
 13645              	@ 0 "" 2
 13646              		.thumb
 13647              		.syntax unified
 13648 0092 FB64     		str	r3, [r7, #76]
 13649              		.loc 2 1207 10
 13650 0094 FB6C     		ldr	r3, [r7, #76]
 13651              	.LBE972:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 341


 13652              	.LBE971:
 13653              		.loc 1 4337 7 discriminator 1
 13654 0096 002B     		cmp	r3, #0
 13655 0098 E6D1     		bne	.L822
 13656              	.L825:
 13657              	.LBE968:
 13658              	.LBB973:
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 13659              		.loc 1 4340 7 discriminator 1
 13660 009a 7B68     		ldr	r3, [r7, #4]
 13661 009c 1B68     		ldr	r3, [r3]
 13662 009e 0833     		adds	r3, r3, #8
 13663 00a0 7B63     		str	r3, [r7, #52]
 13664              	.LBB974:
 13665              	.LBB975:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13666              		.loc 2 1155 4
 13667 00a2 7B6B     		ldr	r3, [r7, #52]
 13668              		.syntax unified
 13669              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13670 00a4 53E8003F 		ldrex r3, [r3]
 13671              	@ 0 "" 2
 13672              		.thumb
 13673              		.syntax unified
 13674 00a8 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13675              		.loc 2 1156 10
 13676 00aa 3B6B     		ldr	r3, [r7, #48]
 13677              	.LBE975:
 13678              	.LBE974:
 13679              		.loc 1 4340 7 discriminator 1
 13680 00ac 23F00103 		bic	r3, r3, #1
 13681 00b0 3B66     		str	r3, [r7, #96]
 13682 00b2 7B68     		ldr	r3, [r7, #4]
 13683 00b4 1B68     		ldr	r3, [r3]
 13684 00b6 0833     		adds	r3, r3, #8
 13685 00b8 3A6E     		ldr	r2, [r7, #96]
 13686 00ba 3A64     		str	r2, [r7, #64]
 13687 00bc FB63     		str	r3, [r7, #60]
 13688              	.LBB976:
 13689              	.LBB977:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13690              		.loc 2 1206 4
 13691 00be F96B     		ldr	r1, [r7, #60]
 13692 00c0 3A6C     		ldr	r2, [r7, #64]
 13693              		.syntax unified
 13694              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13695 00c2 41E80023 		strex r3, r2, [r1]
 13696              	@ 0 "" 2
 13697              		.thumb
 13698              		.syntax unified
 13699 00c6 BB63     		str	r3, [r7, #56]
 13700              		.loc 2 1207 10
 13701 00c8 BB6B     		ldr	r3, [r7, #56]
 13702              	.LBE977:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 342


 13703              	.LBE976:
 13704              		.loc 1 4340 7 discriminator 1
 13705 00ca 002B     		cmp	r3, #0
 13706 00cc E5D1     		bne	.L825
 13707              	.LBE973:
4341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 13708              		.loc 1 4343 22
 13709 00ce 7B68     		ldr	r3, [r7, #4]
 13710 00d0 2022     		movs	r2, #32
 13711 00d2 C3F88C20 		str	r2, [r3, #140]
4344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear RxISR function pointer */
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = NULL;
 13712              		.loc 1 4346 20
 13713 00d6 7B68     		ldr	r3, [r7, #4]
 13714 00d8 0022     		movs	r2, #0
 13715 00da 5A67     		str	r2, [r3, #116]
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 13716              		.loc 1 4349 26
 13717 00dc 7B68     		ldr	r3, [r7, #4]
 13718 00de 0022     		movs	r2, #0
 13719 00e0 1A67     		str	r2, [r3, #112]
4350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (!(IS_LPUART_INSTANCE(huart->Instance)))
 13720              		.loc 1 4351 13
 13721 00e2 7B68     		ldr	r3, [r7, #4]
 13722 00e4 1B68     		ldr	r3, [r3]
 13723              		.loc 1 4351 10
 13724 00e6 334A     		ldr	r2, .L836
 13725 00e8 9342     		cmp	r3, r2
 13726 00ea 1FD0     		beq	.L826
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check that USART RTOEN bit is set */
4354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 13727              		.loc 1 4354 13
 13728 00ec 7B68     		ldr	r3, [r7, #4]
 13729 00ee 1B68     		ldr	r3, [r3]
 13730 00f0 5B68     		ldr	r3, [r3, #4]
 13731 00f2 03F40003 		and	r3, r3, #8388608
 13732              		.loc 1 4354 12
 13733 00f6 002B     		cmp	r3, #0
 13734 00f8 18D0     		beq	.L826
 13735              	.L829:
 13736              	.LBB978:
4355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Enable the UART Receiver Timeout Interrupt */
4357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 13737              		.loc 1 4357 11 discriminator 1
 13738 00fa 7B68     		ldr	r3, [r7, #4]
 13739 00fc 1B68     		ldr	r3, [r3]
 13740 00fe 3B62     		str	r3, [r7, #32]
 13741              	.LBB979:
 13742              	.LBB980:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 343


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13743              		.loc 2 1155 4
 13744 0100 3B6A     		ldr	r3, [r7, #32]
 13745              		.syntax unified
 13746              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13747 0102 53E8003F 		ldrex r3, [r3]
 13748              	@ 0 "" 2
 13749              		.thumb
 13750              		.syntax unified
 13751 0106 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13752              		.loc 2 1156 10
 13753 0108 FB69     		ldr	r3, [r7, #28]
 13754              	.LBE980:
 13755              	.LBE979:
 13756              		.loc 1 4357 11 discriminator 1
 13757 010a 23F08063 		bic	r3, r3, #67108864
 13758 010e FB65     		str	r3, [r7, #92]
 13759 0110 7B68     		ldr	r3, [r7, #4]
 13760 0112 1B68     		ldr	r3, [r3]
 13761 0114 1A46     		mov	r2, r3
 13762 0116 FB6D     		ldr	r3, [r7, #92]
 13763 0118 FB62     		str	r3, [r7, #44]
 13764 011a BA62     		str	r2, [r7, #40]
 13765              	.LBB981:
 13766              	.LBB982:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13767              		.loc 2 1206 4
 13768 011c B96A     		ldr	r1, [r7, #40]
 13769 011e FA6A     		ldr	r2, [r7, #44]
 13770              		.syntax unified
 13771              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13772 0120 41E80023 		strex r3, r2, [r1]
 13773              	@ 0 "" 2
 13774              		.thumb
 13775              		.syntax unified
 13776 0124 7B62     		str	r3, [r7, #36]
 13777              		.loc 2 1207 10
 13778 0126 7B6A     		ldr	r3, [r7, #36]
 13779              	.LBE982:
 13780              	.LBE981:
 13781              		.loc 1 4357 11 discriminator 1
 13782 0128 002B     		cmp	r3, #0
 13783 012a E6D1     		bne	.L829
 13784              	.L826:
 13785              	.LBE978:
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Check current reception Mode :
4362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 13786              		.loc 1 4363 16
 13787 012c 7B68     		ldr	r3, [r7, #4]
 13788 012e DB6E     		ldr	r3, [r3, #108]
 13789              		.loc 1 4363 10
 13790 0130 012B     		cmp	r3, #1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 344


 13791 0132 2ED1     		bne	.L830
4364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Set reception type to Standard */
4366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 13792              		.loc 1 4366 30
 13793 0134 7B68     		ldr	r3, [r7, #4]
 13794 0136 0022     		movs	r2, #0
 13795 0138 DA66     		str	r2, [r3, #108]
 13796              	.L833:
 13797              	.LBB983:
4367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable IDLE interrupt */
4369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 13798              		.loc 1 4369 9 discriminator 1
 13799 013a 7B68     		ldr	r3, [r7, #4]
 13800 013c 1B68     		ldr	r3, [r3]
 13801 013e FB60     		str	r3, [r7, #12]
 13802              	.LBB984:
 13803              	.LBB985:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13804              		.loc 2 1155 4
 13805 0140 FB68     		ldr	r3, [r7, #12]
 13806              		.syntax unified
 13807              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13808 0142 53E8003F 		ldrex r3, [r3]
 13809              	@ 0 "" 2
 13810              		.thumb
 13811              		.syntax unified
 13812 0146 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 13813              		.loc 2 1156 10
 13814 0148 BB68     		ldr	r3, [r7, #8]
 13815              	.LBE985:
 13816              	.LBE984:
 13817              		.loc 1 4369 9 discriminator 1
 13818 014a 23F01003 		bic	r3, r3, #16
 13819 014e BB65     		str	r3, [r7, #88]
 13820 0150 7B68     		ldr	r3, [r7, #4]
 13821 0152 1B68     		ldr	r3, [r3]
 13822 0154 1A46     		mov	r2, r3
 13823 0156 BB6D     		ldr	r3, [r7, #88]
 13824 0158 BB61     		str	r3, [r7, #24]
 13825 015a 7A61     		str	r2, [r7, #20]
 13826              	.LBB986:
 13827              	.LBB987:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 13828              		.loc 2 1206 4
 13829 015c 7969     		ldr	r1, [r7, #20]
 13830 015e BA69     		ldr	r2, [r7, #24]
 13831              		.syntax unified
 13832              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 13833 0160 41E80023 		strex r3, r2, [r1]
 13834              	@ 0 "" 2
 13835              		.thumb
 13836              		.syntax unified
 13837 0164 3B61     		str	r3, [r7, #16]
 13838              		.loc 2 1207 10
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 345


 13839 0166 3B69     		ldr	r3, [r7, #16]
 13840              	.LBE987:
 13841              	.LBE986:
 13842              		.loc 1 4369 9 discriminator 1
 13843 0168 002B     		cmp	r3, #0
 13844 016a E6D1     		bne	.L833
 13845              	.LBE983:
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 13846              		.loc 1 4371 13
 13847 016c 7B68     		ldr	r3, [r7, #4]
 13848 016e 1B68     		ldr	r3, [r3]
 13849 0170 DB69     		ldr	r3, [r3, #28]
 13850 0172 03F01003 		and	r3, r3, #16
 13851              		.loc 1 4371 12
 13852 0176 102B     		cmp	r3, #16
 13853 0178 03D1     		bne	.L834
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Clear IDLE Flag */
4374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 13854              		.loc 1 4374 11
 13855 017a 7B68     		ldr	r3, [r7, #4]
 13856 017c 1B68     		ldr	r3, [r3]
 13857 017e 1022     		movs	r2, #16
 13858 0180 1A62     		str	r2, [r3, #32]
 13859              	.L834:
4375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 13860              		.loc 1 4382 9
 13861 0182 7B68     		ldr	r3, [r7, #4]
 13862 0184 B3F85C30 		ldrh	r3, [r3, #92]
 13863 0188 1946     		mov	r1, r3
 13864 018a 7868     		ldr	r0, [r7, #4]
 13865 018c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
4386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Standard reception API called */
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 346


4400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 13866              		.loc 1 4403 1
 13867 0190 0BE0     		b	.L835
 13868              	.L830:
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 13869              		.loc 1 4393 9
 13870 0192 7868     		ldr	r0, [r7, #4]
 13871 0194 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 13872              		.loc 1 4403 1
 13873 0198 07E0     		b	.L835
 13874              	.L818:
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 13875              		.loc 1 4401 5
 13876 019a 7B68     		ldr	r3, [r7, #4]
 13877 019c 1B68     		ldr	r3, [r3]
 13878 019e 9A69     		ldr	r2, [r3, #24]
 13879 01a0 7B68     		ldr	r3, [r7, #4]
 13880 01a2 1B68     		ldr	r3, [r3]
 13881 01a4 42F00802 		orr	r2, r2, #8
 13882 01a8 9A61     		str	r2, [r3, #24]
 13883              	.L835:
 13884              		.loc 1 4403 1
 13885 01aa 00BF     		nop
 13886 01ac 7037     		adds	r7, r7, #112
 13887              	.LCFI369:
 13888              		.cfi_def_cfa_offset 8
 13889 01ae BD46     		mov	sp, r7
 13890              	.LCFI370:
 13891              		.cfi_def_cfa_register 13
 13892              		@ sp needed
 13893 01b0 80BD     		pop	{r7, pc}
 13894              	.L837:
 13895 01b2 00BF     		.align	2
 13896              	.L836:
 13897 01b4 000C0058 		.word	1476398080
 13898              		.cfi_endproc
 13899              	.LFE211:
 13901              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 13902              		.align	1
 13903              		.syntax unified
 13904              		.thumb
 13905              		.thumb_func
 13907              	UART_RxISR_8BIT_FIFOEN:
 13908              	.LFB212:
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 347


 13909              		.loc 1 4413 1
 13910              		.cfi_startproc
 13911              		@ args = 0, pretend = 0, frame = 176
 13912              		@ frame_needed = 1, uses_anonymous_args = 0
 13913 0000 80B5     		push	{r7, lr}
 13914              	.LCFI371:
 13915              		.cfi_def_cfa_offset 8
 13916              		.cfi_offset 7, -8
 13917              		.cfi_offset 14, -4
 13918 0002 ACB0     		sub	sp, sp, #176
 13919              	.LCFI372:
 13920              		.cfi_def_cfa_offset 184
 13921 0004 00AF     		add	r7, sp, #0
 13922              	.LCFI373:
 13923              		.cfi_def_cfa_register 7
 13924 0006 7860     		str	r0, [r7, #4]
4414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 13925              		.loc 1 4414 13
 13926 0008 7B68     		ldr	r3, [r7, #4]
 13927 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 13928 000e A7F8AA30 		strh	r3, [r7, #170]	@ movhi
4415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_rx_data;
4417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 13929              		.loc 1 4418 24
 13930 0012 7B68     		ldr	r3, [r7, #4]
 13931 0014 1B68     		ldr	r3, [r3]
 13932              		.loc 1 4418 13
 13933 0016 DB69     		ldr	r3, [r3, #28]
 13934 0018 C7F8AC30 		str	r3, [r7, #172]
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 13935              		.loc 1 4419 24
 13936 001c 7B68     		ldr	r3, [r7, #4]
 13937 001e 1B68     		ldr	r3, [r3]
 13938              		.loc 1 4419 13
 13939 0020 1B68     		ldr	r3, [r3]
 13940 0022 C7F8A430 		str	r3, [r7, #164]
4420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 13941              		.loc 1 4420 24
 13942 0026 7B68     		ldr	r3, [r7, #4]
 13943 0028 1B68     		ldr	r3, [r3]
 13944              		.loc 1 4420 13
 13945 002a 9B68     		ldr	r3, [r3, #8]
 13946 002c C7F8A030 		str	r3, [r7, #160]
4421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 13947              		.loc 1 4423 12
 13948 0030 7B68     		ldr	r3, [r7, #4]
 13949 0032 D3F88C30 		ldr	r3, [r3, #140]
 13950              		.loc 1 4423 6
 13951 0036 222B     		cmp	r3, #34
 13952 0038 40F08181 		bne	.L839
4424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 13953              		.loc 1 4425 16
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 348


 13954 003c 7B68     		ldr	r3, [r7, #4]
 13955 003e B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 13956 0042 A7F89E30 		strh	r3, [r7, #158]	@ movhi
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 13957              		.loc 1 4426 11
 13958 0046 24E1     		b	.L840
 13959              	.L862:
4427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 13960              		.loc 1 4428 27
 13961 0048 7B68     		ldr	r3, [r7, #4]
 13962 004a 1B68     		ldr	r3, [r3]
 13963 004c 5B6A     		ldr	r3, [r3, #36]
 13964              		.loc 1 4428 14
 13965 004e A7F89C30 		strh	r3, [r7, #156]	@ movhi
4429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 13966              		.loc 1 4429 28
 13967 0052 B7F89C30 		ldrh	r3, [r7, #156]	@ movhi
 13968 0056 D9B2     		uxtb	r1, r3
 13969              		.loc 1 4429 47
 13970 0058 B7F8AA30 		ldrh	r3, [r7, #170]	@ movhi
 13971 005c DAB2     		uxtb	r2, r3
 13972              		.loc 1 4429 13
 13973 005e 7B68     		ldr	r3, [r7, #4]
 13974 0060 9B6D     		ldr	r3, [r3, #88]
 13975              		.loc 1 4429 28
 13976 0062 0A40     		ands	r2, r2, r1
 13977 0064 D2B2     		uxtb	r2, r2
 13978              		.loc 1 4429 26
 13979 0066 1A70     		strb	r2, [r3]
4430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr++;
 13980              		.loc 1 4430 12
 13981 0068 7B68     		ldr	r3, [r7, #4]
 13982 006a 9B6D     		ldr	r3, [r3, #88]
 13983              		.loc 1 4430 24
 13984 006c 5A1C     		adds	r2, r3, #1
 13985 006e 7B68     		ldr	r3, [r7, #4]
 13986 0070 9A65     		str	r2, [r3, #88]
4431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 13987              		.loc 1 4431 12
 13988 0072 7B68     		ldr	r3, [r7, #4]
 13989 0074 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 13990 0078 9BB2     		uxth	r3, r3
 13991              		.loc 1 4431 25
 13992 007a 013B     		subs	r3, r3, #1
 13993 007c 9AB2     		uxth	r2, r3
 13994 007e 7B68     		ldr	r3, [r7, #4]
 13995 0080 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 13996              		.loc 1 4432 18
 13997 0084 7B68     		ldr	r3, [r7, #4]
 13998 0086 1B68     		ldr	r3, [r3]
 13999              		.loc 1 4432 16
 14000 0088 DB69     		ldr	r3, [r3, #28]
 14001 008a C7F8AC30 		str	r3, [r7, #172]
4433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If some non blocking errors occurred */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 349


4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 14002              		.loc 1 4435 21
 14003 008e D7F8AC30 		ldr	r3, [r7, #172]
 14004 0092 03F00703 		and	r3, r3, #7
 14005              		.loc 1 4435 10
 14006 0096 002B     		cmp	r3, #0
 14007 0098 53D0     		beq	.L841
4436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 14008              		.loc 1 4438 24
 14009 009a D7F8AC30 		ldr	r3, [r7, #172]
 14010 009e 03F00103 		and	r3, r3, #1
 14011              		.loc 1 4438 12
 14012 00a2 002B     		cmp	r3, #0
 14013 00a4 11D0     		beq	.L842
 14014              		.loc 1 4438 59 discriminator 1
 14015 00a6 D7F8A430 		ldr	r3, [r7, #164]
 14016 00aa 03F48073 		and	r3, r3, #256
 14017              		.loc 1 4438 47 discriminator 1
 14018 00ae 002B     		cmp	r3, #0
 14019 00b0 0BD0     		beq	.L842
4439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 14020              		.loc 1 4440 11
 14021 00b2 7B68     		ldr	r3, [r7, #4]
 14022 00b4 1B68     		ldr	r3, [r3]
 14023 00b6 0122     		movs	r2, #1
 14024 00b8 1A62     		str	r2, [r3, #32]
4441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 14025              		.loc 1 4442 16
 14026 00ba 7B68     		ldr	r3, [r7, #4]
 14027 00bc D3F89030 		ldr	r3, [r3, #144]
 14028              		.loc 1 4442 28
 14029 00c0 43F00102 		orr	r2, r3, #1
 14030 00c4 7B68     		ldr	r3, [r7, #4]
 14031 00c6 C3F89020 		str	r2, [r3, #144]
 14032              	.L842:
4443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14033              		.loc 1 4446 24
 14034 00ca D7F8AC30 		ldr	r3, [r7, #172]
 14035 00ce 03F00203 		and	r3, r3, #2
 14036              		.loc 1 4446 12
 14037 00d2 002B     		cmp	r3, #0
 14038 00d4 11D0     		beq	.L843
 14039              		.loc 1 4446 59 discriminator 1
 14040 00d6 D7F8A030 		ldr	r3, [r7, #160]
 14041 00da 03F00103 		and	r3, r3, #1
 14042              		.loc 1 4446 47 discriminator 1
 14043 00de 002B     		cmp	r3, #0
 14044 00e0 0BD0     		beq	.L843
4447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 350


 14045              		.loc 1 4448 11
 14046 00e2 7B68     		ldr	r3, [r7, #4]
 14047 00e4 1B68     		ldr	r3, [r3]
 14048 00e6 0222     		movs	r2, #2
 14049 00e8 1A62     		str	r2, [r3, #32]
4449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 14050              		.loc 1 4450 16
 14051 00ea 7B68     		ldr	r3, [r7, #4]
 14052 00ec D3F89030 		ldr	r3, [r3, #144]
 14053              		.loc 1 4450 28
 14054 00f0 43F00402 		orr	r2, r3, #4
 14055 00f4 7B68     		ldr	r3, [r7, #4]
 14056 00f6 C3F89020 		str	r2, [r3, #144]
 14057              	.L843:
4451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14058              		.loc 1 4454 24
 14059 00fa D7F8AC30 		ldr	r3, [r7, #172]
 14060 00fe 03F00403 		and	r3, r3, #4
 14061              		.loc 1 4454 12
 14062 0102 002B     		cmp	r3, #0
 14063 0104 11D0     		beq	.L844
 14064              		.loc 1 4454 59 discriminator 1
 14065 0106 D7F8A030 		ldr	r3, [r7, #160]
 14066 010a 03F00103 		and	r3, r3, #1
 14067              		.loc 1 4454 47 discriminator 1
 14068 010e 002B     		cmp	r3, #0
 14069 0110 0BD0     		beq	.L844
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 14070              		.loc 1 4456 11
 14071 0112 7B68     		ldr	r3, [r7, #4]
 14072 0114 1B68     		ldr	r3, [r3]
 14073 0116 0422     		movs	r2, #4
 14074 0118 1A62     		str	r2, [r3, #32]
4457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 14075              		.loc 1 4458 16
 14076 011a 7B68     		ldr	r3, [r7, #4]
 14077 011c D3F89030 		ldr	r3, [r3, #144]
 14078              		.loc 1 4458 28
 14079 0120 43F00202 		orr	r2, r3, #2
 14080 0124 7B68     		ldr	r3, [r7, #4]
 14081 0126 C3F89020 		str	r2, [r3, #144]
 14082              	.L844:
4459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 14083              		.loc 1 4462 18
 14084 012a 7B68     		ldr	r3, [r7, #4]
 14085 012c D3F89030 		ldr	r3, [r3, #144]
 14086              		.loc 1 4462 12
 14087 0130 002B     		cmp	r3, #0
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 351


 14088 0132 06D0     		beq	.L841
4463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Error is notified to user through user error callback */
4466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
4469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 14089              		.loc 1 4471 11
 14090 0134 7868     		ldr	r0, [r7, #4]
 14091 0136 FFF7FEFF 		bl	HAL_UART_ErrorCallback
4472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 14092              		.loc 1 4473 28
 14093 013a 7B68     		ldr	r3, [r7, #4]
 14094 013c 0022     		movs	r2, #0
 14095 013e C3F89020 		str	r2, [r3, #144]
 14096              	.L841:
4474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 14097              		.loc 1 4477 16
 14098 0142 7B68     		ldr	r3, [r7, #4]
 14099 0144 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14100 0148 9BB2     		uxth	r3, r3
 14101              		.loc 1 4477 10
 14102 014a 002B     		cmp	r3, #0
 14103 014c 40F0A180 		bne	.L840
 14104              	.L847:
 14105              	.LBB988:
4478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 14106              		.loc 1 4480 9 discriminator 1
 14107 0150 7B68     		ldr	r3, [r7, #4]
 14108 0152 1B68     		ldr	r3, [r3]
 14109 0154 3B67     		str	r3, [r7, #112]
 14110              	.LBB989:
 14111              	.LBB990:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14112              		.loc 2 1155 4
 14113 0156 3B6F     		ldr	r3, [r7, #112]
 14114              		.syntax unified
 14115              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14116 0158 53E8003F 		ldrex r3, [r3]
 14117              	@ 0 "" 2
 14118              		.thumb
 14119              		.syntax unified
 14120 015c FB66     		str	r3, [r7, #108]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14121              		.loc 2 1156 10
 14122 015e FB6E     		ldr	r3, [r7, #108]
 14123              	.LBE990:
 14124              	.LBE989:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 352


 14125              		.loc 1 4480 9 discriminator 1
 14126 0160 23F48073 		bic	r3, r3, #256
 14127 0164 C7F89830 		str	r3, [r7, #152]
 14128 0168 7B68     		ldr	r3, [r7, #4]
 14129 016a 1B68     		ldr	r3, [r3]
 14130 016c 1A46     		mov	r2, r3
 14131 016e D7F89830 		ldr	r3, [r7, #152]
 14132 0172 FB67     		str	r3, [r7, #124]
 14133 0174 BA67     		str	r2, [r7, #120]
 14134              	.LBB991:
 14135              	.LBB992:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14136              		.loc 2 1206 4
 14137 0176 B96F     		ldr	r1, [r7, #120]
 14138 0178 FA6F     		ldr	r2, [r7, #124]
 14139              		.syntax unified
 14140              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14141 017a 41E80023 		strex r3, r2, [r1]
 14142              	@ 0 "" 2
 14143              		.thumb
 14144              		.syntax unified
 14145 017e 7B67     		str	r3, [r7, #116]
 14146              		.loc 2 1207 10
 14147 0180 7B6F     		ldr	r3, [r7, #116]
 14148              	.LBE992:
 14149              	.LBE991:
 14150              		.loc 1 4480 9 discriminator 1
 14151 0182 002B     		cmp	r3, #0
 14152 0184 E4D1     		bne	.L847
 14153              	.L850:
 14154              	.LBE988:
 14155              	.LBB993:
4481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 14156              		.loc 1 4484 9 discriminator 1
 14157 0186 7B68     		ldr	r3, [r7, #4]
 14158 0188 1B68     		ldr	r3, [r3]
 14159 018a 0833     		adds	r3, r3, #8
 14160 018c FB65     		str	r3, [r7, #92]
 14161              	.LBB994:
 14162              	.LBB995:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14163              		.loc 2 1155 4
 14164 018e FB6D     		ldr	r3, [r7, #92]
 14165              		.syntax unified
 14166              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14167 0190 53E8003F 		ldrex r3, [r3]
 14168              	@ 0 "" 2
 14169              		.thumb
 14170              		.syntax unified
 14171 0194 BB65     		str	r3, [r7, #88]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14172              		.loc 2 1156 10
 14173 0196 BA6D     		ldr	r2, [r7, #88]
 14174              	.LBE995:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 353


 14175              	.LBE994:
 14176              		.loc 1 4484 9 discriminator 1
 14177 0198 6F4B     		ldr	r3, .L871
 14178 019a 1340     		ands	r3, r3, r2
 14179 019c C7F89430 		str	r3, [r7, #148]
 14180 01a0 7B68     		ldr	r3, [r7, #4]
 14181 01a2 1B68     		ldr	r3, [r3]
 14182 01a4 0833     		adds	r3, r3, #8
 14183 01a6 D7F89420 		ldr	r2, [r7, #148]
 14184 01aa BA66     		str	r2, [r7, #104]
 14185 01ac 7B66     		str	r3, [r7, #100]
 14186              	.LBB996:
 14187              	.LBB997:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14188              		.loc 2 1206 4
 14189 01ae 796E     		ldr	r1, [r7, #100]
 14190 01b0 BA6E     		ldr	r2, [r7, #104]
 14191              		.syntax unified
 14192              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14193 01b2 41E80023 		strex r3, r2, [r1]
 14194              	@ 0 "" 2
 14195              		.thumb
 14196              		.syntax unified
 14197 01b6 3B66     		str	r3, [r7, #96]
 14198              		.loc 2 1207 10
 14199 01b8 3B6E     		ldr	r3, [r7, #96]
 14200              	.LBE997:
 14201              	.LBE996:
 14202              		.loc 1 4484 9 discriminator 1
 14203 01ba 002B     		cmp	r3, #0
 14204 01bc E3D1     		bne	.L850
 14205              	.LBE993:
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 14206              		.loc 1 4487 24
 14207 01be 7B68     		ldr	r3, [r7, #4]
 14208 01c0 2022     		movs	r2, #32
 14209 01c2 C3F88C20 		str	r2, [r3, #140]
4488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 14210              		.loc 1 4490 22
 14211 01c6 7B68     		ldr	r3, [r7, #4]
 14212 01c8 0022     		movs	r2, #0
 14213 01ca 5A67     		str	r2, [r3, #116]
4491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 14214              		.loc 1 4493 28
 14215 01cc 7B68     		ldr	r3, [r7, #4]
 14216 01ce 0022     		movs	r2, #0
 14217 01d0 1A67     		str	r2, [r3, #112]
4494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 14218              		.loc 1 4495 15
 14219 01d2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 354


 14220 01d4 1B68     		ldr	r3, [r3]
 14221              		.loc 1 4495 12
 14222 01d6 614A     		ldr	r2, .L871+4
 14223 01d8 9342     		cmp	r3, r2
 14224 01da 21D0     		beq	.L851
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 14225              		.loc 1 4498 15
 14226 01dc 7B68     		ldr	r3, [r7, #4]
 14227 01de 1B68     		ldr	r3, [r3]
 14228 01e0 5B68     		ldr	r3, [r3, #4]
 14229 01e2 03F40003 		and	r3, r3, #8388608
 14230              		.loc 1 4498 14
 14231 01e6 002B     		cmp	r3, #0
 14232 01e8 1AD0     		beq	.L851
 14233              	.L854:
 14234              	.LBB998:
4499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
4500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 14235              		.loc 1 4501 13 discriminator 1
 14236 01ea 7B68     		ldr	r3, [r7, #4]
 14237 01ec 1B68     		ldr	r3, [r3]
 14238 01ee BB64     		str	r3, [r7, #72]
 14239              	.LBB999:
 14240              	.LBB1000:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14241              		.loc 2 1155 4
 14242 01f0 BB6C     		ldr	r3, [r7, #72]
 14243              		.syntax unified
 14244              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14245 01f2 53E8003F 		ldrex r3, [r3]
 14246              	@ 0 "" 2
 14247              		.thumb
 14248              		.syntax unified
 14249 01f6 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14250              		.loc 2 1156 10
 14251 01f8 7B6C     		ldr	r3, [r7, #68]
 14252              	.LBE1000:
 14253              	.LBE999:
 14254              		.loc 1 4501 13 discriminator 1
 14255 01fa 23F08063 		bic	r3, r3, #67108864
 14256 01fe C7F89030 		str	r3, [r7, #144]
 14257 0202 7B68     		ldr	r3, [r7, #4]
 14258 0204 1B68     		ldr	r3, [r3]
 14259 0206 1A46     		mov	r2, r3
 14260 0208 D7F89030 		ldr	r3, [r7, #144]
 14261 020c 7B65     		str	r3, [r7, #84]
 14262 020e 3A65     		str	r2, [r7, #80]
 14263              	.LBB1001:
 14264              	.LBB1002:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14265              		.loc 2 1206 4
 14266 0210 396D     		ldr	r1, [r7, #80]
 14267 0212 7A6D     		ldr	r2, [r7, #84]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 355


 14268              		.syntax unified
 14269              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14270 0214 41E80023 		strex r3, r2, [r1]
 14271              	@ 0 "" 2
 14272              		.thumb
 14273              		.syntax unified
 14274 0218 FB64     		str	r3, [r7, #76]
 14275              		.loc 2 1207 10
 14276 021a FB6C     		ldr	r3, [r7, #76]
 14277              	.LBE1002:
 14278              	.LBE1001:
 14279              		.loc 1 4501 13 discriminator 1
 14280 021c 002B     		cmp	r3, #0
 14281 021e E4D1     		bne	.L854
 14282              	.L851:
 14283              	.LBE998:
4502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check current reception Mode :
4506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 14284              		.loc 1 4507 18
 14285 0220 7B68     		ldr	r3, [r7, #4]
 14286 0222 DB6E     		ldr	r3, [r3, #108]
 14287              		.loc 1 4507 12
 14288 0224 012B     		cmp	r3, #1
 14289 0226 30D1     		bne	.L855
4508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set reception type to Standard */
4510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 14290              		.loc 1 4510 32
 14291 0228 7B68     		ldr	r3, [r7, #4]
 14292 022a 0022     		movs	r2, #0
 14293 022c DA66     		str	r2, [r3, #108]
 14294              	.L858:
 14295              	.LBB1003:
4511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable IDLE interrupt */
4513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 14296              		.loc 1 4513 11 discriminator 1
 14297 022e 7B68     		ldr	r3, [r7, #4]
 14298 0230 1B68     		ldr	r3, [r3]
 14299 0232 7B63     		str	r3, [r7, #52]
 14300              	.LBB1004:
 14301              	.LBB1005:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14302              		.loc 2 1155 4
 14303 0234 7B6B     		ldr	r3, [r7, #52]
 14304              		.syntax unified
 14305              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14306 0236 53E8003F 		ldrex r3, [r3]
 14307              	@ 0 "" 2
 14308              		.thumb
 14309              		.syntax unified
 14310 023a 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 356


 14311              		.loc 2 1156 10
 14312 023c 3B6B     		ldr	r3, [r7, #48]
 14313              	.LBE1005:
 14314              	.LBE1004:
 14315              		.loc 1 4513 11 discriminator 1
 14316 023e 23F01003 		bic	r3, r3, #16
 14317 0242 C7F88C30 		str	r3, [r7, #140]
 14318 0246 7B68     		ldr	r3, [r7, #4]
 14319 0248 1B68     		ldr	r3, [r3]
 14320 024a 1A46     		mov	r2, r3
 14321 024c D7F88C30 		ldr	r3, [r7, #140]
 14322 0250 3B64     		str	r3, [r7, #64]
 14323 0252 FA63     		str	r2, [r7, #60]
 14324              	.LBB1006:
 14325              	.LBB1007:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14326              		.loc 2 1206 4
 14327 0254 F96B     		ldr	r1, [r7, #60]
 14328 0256 3A6C     		ldr	r2, [r7, #64]
 14329              		.syntax unified
 14330              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14331 0258 41E80023 		strex r3, r2, [r1]
 14332              	@ 0 "" 2
 14333              		.thumb
 14334              		.syntax unified
 14335 025c BB63     		str	r3, [r7, #56]
 14336              		.loc 2 1207 10
 14337 025e BB6B     		ldr	r3, [r7, #56]
 14338              	.LBE1007:
 14339              	.LBE1006:
 14340              		.loc 1 4513 11 discriminator 1
 14341 0260 002B     		cmp	r3, #0
 14342 0262 E4D1     		bne	.L858
 14343              	.LBE1003:
4514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 14344              		.loc 1 4515 15
 14345 0264 7B68     		ldr	r3, [r7, #4]
 14346 0266 1B68     		ldr	r3, [r3]
 14347 0268 DB69     		ldr	r3, [r3, #28]
 14348 026a 03F01003 		and	r3, r3, #16
 14349              		.loc 1 4515 14
 14350 026e 102B     		cmp	r3, #16
 14351 0270 03D1     		bne	.L859
4516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
4517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Clear IDLE Flag */
4518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 14352              		.loc 1 4518 13
 14353 0272 7B68     		ldr	r3, [r7, #4]
 14354 0274 1B68     		ldr	r3, [r3]
 14355 0276 1022     		movs	r2, #16
 14356 0278 1A62     		str	r2, [r3, #32]
 14357              	.L859:
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
4520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx Event callback*/
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 357


4523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 14358              		.loc 1 4526 11
 14359 027a 7B68     		ldr	r3, [r7, #4]
 14360 027c B3F85C30 		ldrh	r3, [r3, #92]
 14361 0280 1946     		mov	r1, r3
 14362 0282 7868     		ldr	r0, [r7, #4]
 14363 0284 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
4530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Standard reception API called */
4532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 14364              		.loc 1 4540 9
 14365 0288 0EE0     		b	.L861
 14366              	.L855:
4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 14367              		.loc 1 4537 11
 14368 028a 7868     		ldr	r0, [r7, #4]
 14369 028c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 14370              		.loc 1 4540 9
 14371 0290 0AE0     		b	.L861
 14372              	.L840:
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 14373              		.loc 1 4426 30
 14374 0292 B7F89E30 		ldrh	r3, [r7, #158]
 14375 0296 002B     		cmp	r3, #0
 14376 0298 06D0     		beq	.L861
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 14377              		.loc 1 4426 44 discriminator 1
 14378 029a D7F8AC30 		ldr	r3, [r7, #172]
 14379 029e 03F02003 		and	r3, r3, #32
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 14380              		.loc 1 4426 30 discriminator 1
 14381 02a2 002B     		cmp	r3, #0
 14382 02a4 7FF4D0AE 		bne	.L862
 14383              	.L861:
4541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 14384              		.loc 1 4548 17
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 358


 14385 02a8 7B68     		ldr	r3, [r7, #4]
 14386 02aa B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14387 02ae A7F88A30 		strh	r3, [r7, #138]	@ movhi
4549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 14388              		.loc 1 4549 8
 14389 02b2 B7F88A30 		ldrh	r3, [r7, #138]
 14390 02b6 002B     		cmp	r3, #0
 14391 02b8 49D0     		beq	.L870
 14392              		.loc 1 4549 52 discriminator 1
 14393 02ba 7B68     		ldr	r3, [r7, #4]
 14394 02bc B3F86830 		ldrh	r3, [r3, #104]
 14395              		.loc 1 4549 29 discriminator 1
 14396 02c0 B7F88A20 		ldrh	r2, [r7, #138]
 14397 02c4 9A42     		cmp	r2, r3
 14398 02c6 42D2     		bcs	.L870
 14399              	.L866:
 14400              	.LBB1008:
4550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 14401              		.loc 1 4552 7 discriminator 1
 14402 02c8 7B68     		ldr	r3, [r7, #4]
 14403 02ca 1B68     		ldr	r3, [r3]
 14404 02cc 0833     		adds	r3, r3, #8
 14405 02ce 3B62     		str	r3, [r7, #32]
 14406              	.LBB1009:
 14407              	.LBB1010:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14408              		.loc 2 1155 4
 14409 02d0 3B6A     		ldr	r3, [r7, #32]
 14410              		.syntax unified
 14411              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14412 02d2 53E8003F 		ldrex r3, [r3]
 14413              	@ 0 "" 2
 14414              		.thumb
 14415              		.syntax unified
 14416 02d6 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14417              		.loc 2 1156 10
 14418 02d8 FB69     		ldr	r3, [r7, #28]
 14419              	.LBE1010:
 14420              	.LBE1009:
 14421              		.loc 1 4552 7 discriminator 1
 14422 02da 23F08053 		bic	r3, r3, #268435456
 14423 02de C7F88430 		str	r3, [r7, #132]
 14424 02e2 7B68     		ldr	r3, [r7, #4]
 14425 02e4 1B68     		ldr	r3, [r3]
 14426 02e6 0833     		adds	r3, r3, #8
 14427 02e8 D7F88420 		ldr	r2, [r7, #132]
 14428 02ec FA62     		str	r2, [r7, #44]
 14429 02ee BB62     		str	r3, [r7, #40]
 14430              	.LBB1011:
 14431              	.LBB1012:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14432              		.loc 2 1206 4
 14433 02f0 B96A     		ldr	r1, [r7, #40]
 14434 02f2 FA6A     		ldr	r2, [r7, #44]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 359


 14435              		.syntax unified
 14436              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14437 02f4 41E80023 		strex r3, r2, [r1]
 14438              	@ 0 "" 2
 14439              		.thumb
 14440              		.syntax unified
 14441 02f8 7B62     		str	r3, [r7, #36]
 14442              		.loc 2 1207 10
 14443 02fa 7B6A     		ldr	r3, [r7, #36]
 14444              	.LBE1012:
 14445              	.LBE1011:
 14446              		.loc 1 4552 7 discriminator 1
 14447 02fc 002B     		cmp	r3, #0
 14448 02fe E3D1     		bne	.L866
 14449              	.LBE1008:
4553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 14450              		.loc 1 4555 20
 14451 0300 7B68     		ldr	r3, [r7, #4]
 14452 0302 174A     		ldr	r2, .L871+8
 14453 0304 5A67     		str	r2, [r3, #116]
 14454              	.L869:
 14455              	.LBB1013:
4556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 14456              		.loc 1 4558 7 discriminator 1
 14457 0306 7B68     		ldr	r3, [r7, #4]
 14458 0308 1B68     		ldr	r3, [r3]
 14459 030a FB60     		str	r3, [r7, #12]
 14460              	.LBB1014:
 14461              	.LBB1015:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14462              		.loc 2 1155 4
 14463 030c FB68     		ldr	r3, [r7, #12]
 14464              		.syntax unified
 14465              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14466 030e 53E8003F 		ldrex r3, [r3]
 14467              	@ 0 "" 2
 14468              		.thumb
 14469              		.syntax unified
 14470 0312 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14471              		.loc 2 1156 10
 14472 0314 BB68     		ldr	r3, [r7, #8]
 14473              	.LBE1015:
 14474              	.LBE1014:
 14475              		.loc 1 4558 7 discriminator 1
 14476 0316 43F02003 		orr	r3, r3, #32
 14477 031a C7F88030 		str	r3, [r7, #128]
 14478 031e 7B68     		ldr	r3, [r7, #4]
 14479 0320 1B68     		ldr	r3, [r3]
 14480 0322 1A46     		mov	r2, r3
 14481 0324 D7F88030 		ldr	r3, [r7, #128]
 14482 0328 BB61     		str	r3, [r7, #24]
 14483 032a 7A61     		str	r2, [r7, #20]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 360


 14484              	.LBB1016:
 14485              	.LBB1017:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14486              		.loc 2 1206 4
 14487 032c 7969     		ldr	r1, [r7, #20]
 14488 032e BA69     		ldr	r2, [r7, #24]
 14489              		.syntax unified
 14490              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14491 0330 41E80023 		strex r3, r2, [r1]
 14492              	@ 0 "" 2
 14493              		.thumb
 14494              		.syntax unified
 14495 0334 3B61     		str	r3, [r7, #16]
 14496              		.loc 2 1207 10
 14497 0336 3B69     		ldr	r3, [r7, #16]
 14498              	.LBE1017:
 14499              	.LBE1016:
 14500              		.loc 1 4558 7 discriminator 1
 14501 0338 002B     		cmp	r3, #0
 14502 033a E4D1     		bne	.L869
 14503              	.LBE1013:
4559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 14504              		.loc 1 4566 1
 14505 033c 07E0     		b	.L870
 14506              	.L839:
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 14507              		.loc 1 4564 5
 14508 033e 7B68     		ldr	r3, [r7, #4]
 14509 0340 1B68     		ldr	r3, [r3]
 14510 0342 9A69     		ldr	r2, [r3, #24]
 14511 0344 7B68     		ldr	r3, [r7, #4]
 14512 0346 1B68     		ldr	r3, [r3]
 14513 0348 42F00802 		orr	r2, r2, #8
 14514 034c 9A61     		str	r2, [r3, #24]
 14515              	.L870:
 14516              		.loc 1 4566 1
 14517 034e 00BF     		nop
 14518 0350 B037     		adds	r7, r7, #176
 14519              	.LCFI374:
 14520              		.cfi_def_cfa_offset 8
 14521 0352 BD46     		mov	sp, r7
 14522              	.LCFI375:
 14523              		.cfi_def_cfa_register 13
 14524              		@ sp needed
 14525 0354 80BD     		pop	{r7, pc}
 14526              	.L872:
 14527 0356 00BF     		.align	2
 14528              	.L871:
 14529 0358 FEFFFFEF 		.word	-268435458
 14530 035c 000C0058 		.word	1476398080
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 361


 14531 0360 00000000 		.word	UART_RxISR_8BIT
 14532              		.cfi_endproc
 14533              	.LFE212:
 14535              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 14536              		.align	1
 14537              		.syntax unified
 14538              		.thumb
 14539              		.thumb_func
 14541              	UART_RxISR_16BIT_FIFOEN:
 14542              	.LFB213:
4567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
4569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart UART handle.
4573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
4574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 14543              		.loc 1 4576 1
 14544              		.cfi_startproc
 14545              		@ args = 0, pretend = 0, frame = 184
 14546              		@ frame_needed = 1, uses_anonymous_args = 0
 14547 0000 80B5     		push	{r7, lr}
 14548              	.LCFI376:
 14549              		.cfi_def_cfa_offset 8
 14550              		.cfi_offset 7, -8
 14551              		.cfi_offset 14, -4
 14552 0002 AEB0     		sub	sp, sp, #184
 14553              	.LCFI377:
 14554              		.cfi_def_cfa_offset 192
 14555 0004 00AF     		add	r7, sp, #0
 14556              	.LCFI378:
 14557              		.cfi_def_cfa_register 7
 14558 0006 7860     		str	r0, [r7, #4]
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t *tmp;
4578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 14559              		.loc 1 4578 13
 14560 0008 7B68     		ldr	r3, [r7, #4]
 14561 000a B3F86030 		ldrh	r3, [r3, #96]	@ movhi
 14562 000e A7F8B230 		strh	r3, [r7, #178]	@ movhi
4579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
4580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  nb_rx_data;
4581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  rxdatacount;
4582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 14563              		.loc 1 4582 24
 14564 0012 7B68     		ldr	r3, [r7, #4]
 14565 0014 1B68     		ldr	r3, [r3]
 14566              		.loc 1 4582 13
 14567 0016 DB69     		ldr	r3, [r3, #28]
 14568 0018 C7F8B430 		str	r3, [r7, #180]
4583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 14569              		.loc 1 4583 24
 14570 001c 7B68     		ldr	r3, [r7, #4]
 14571 001e 1B68     		ldr	r3, [r3]
 14572              		.loc 1 4583 13
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 362


 14573 0020 1B68     		ldr	r3, [r3]
 14574 0022 C7F8AC30 		str	r3, [r7, #172]
4584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 14575              		.loc 1 4584 24
 14576 0026 7B68     		ldr	r3, [r7, #4]
 14577 0028 1B68     		ldr	r3, [r3]
 14578              		.loc 1 4584 13
 14579 002a 9B68     		ldr	r3, [r3, #8]
 14580 002c C7F8A830 		str	r3, [r7, #168]
4585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 14581              		.loc 1 4587 12
 14582 0030 7B68     		ldr	r3, [r7, #4]
 14583 0032 D3F88C30 		ldr	r3, [r3, #140]
 14584              		.loc 1 4587 6
 14585 0036 222B     		cmp	r3, #34
 14586 0038 40F08581 		bne	.L874
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     nb_rx_data = huart->NbRxDataToProcess;
 14587              		.loc 1 4589 16
 14588 003c 7B68     		ldr	r3, [r7, #4]
 14589 003e B3F86830 		ldrh	r3, [r3, #104]	@ movhi
 14590 0042 A7F8A630 		strh	r3, [r7, #166]	@ movhi
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 14591              		.loc 1 4590 11
 14592 0046 28E1     		b	.L875
 14593              	.L897:
4591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 14594              		.loc 1 4592 27
 14595 0048 7B68     		ldr	r3, [r7, #4]
 14596 004a 1B68     		ldr	r3, [r3]
 14597 004c 5B6A     		ldr	r3, [r3, #36]
 14598              		.loc 1 4592 14
 14599 004e A7F8A430 		strh	r3, [r7, #164]	@ movhi
4593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 14600              		.loc 1 4593 11
 14601 0052 7B68     		ldr	r3, [r7, #4]
 14602 0054 9B6D     		ldr	r3, [r3, #88]
 14603 0056 C7F8A030 		str	r3, [r7, #160]
4594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 14604              		.loc 1 4594 14
 14605 005a B7F8A420 		ldrh	r2, [r7, #164]	@ movhi
 14606 005e B7F8B230 		ldrh	r3, [r7, #178]	@ movhi
 14607 0062 1340     		ands	r3, r3, r2
 14608 0064 9AB2     		uxth	r2, r3
 14609              		.loc 1 4594 12
 14610 0066 D7F8A030 		ldr	r3, [r7, #160]
 14611 006a 1A80     		strh	r2, [r3]	@ movhi
4595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 14612              		.loc 1 4595 12
 14613 006c 7B68     		ldr	r3, [r7, #4]
 14614 006e 9B6D     		ldr	r3, [r3, #88]
 14615              		.loc 1 4595 25
 14616 0070 9A1C     		adds	r2, r3, #2
 14617 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 363


 14618 0074 9A65     		str	r2, [r3, #88]
4596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 14619              		.loc 1 4596 12
 14620 0076 7B68     		ldr	r3, [r7, #4]
 14621 0078 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14622 007c 9BB2     		uxth	r3, r3
 14623              		.loc 1 4596 25
 14624 007e 013B     		subs	r3, r3, #1
 14625 0080 9AB2     		uxth	r2, r3
 14626 0082 7B68     		ldr	r3, [r7, #4]
 14627 0084 A3F85E20 		strh	r2, [r3, #94]	@ movhi
4597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       isrflags = READ_REG(huart->Instance->ISR);
 14628              		.loc 1 4597 18
 14629 0088 7B68     		ldr	r3, [r7, #4]
 14630 008a 1B68     		ldr	r3, [r3]
 14631              		.loc 1 4597 16
 14632 008c DB69     		ldr	r3, [r3, #28]
 14633 008e C7F8B430 		str	r3, [r7, #180]
4598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If some non blocking errors occurred */
4600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 14634              		.loc 1 4600 21
 14635 0092 D7F8B430 		ldr	r3, [r7, #180]
 14636 0096 03F00703 		and	r3, r3, #7
 14637              		.loc 1 4600 10
 14638 009a 002B     		cmp	r3, #0
 14639 009c 53D0     		beq	.L876
4601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART parity error interrupt occurred -------------------------------------*/
4603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 14640              		.loc 1 4603 24
 14641 009e D7F8B430 		ldr	r3, [r7, #180]
 14642 00a2 03F00103 		and	r3, r3, #1
 14643              		.loc 1 4603 12
 14644 00a6 002B     		cmp	r3, #0
 14645 00a8 11D0     		beq	.L877
 14646              		.loc 1 4603 59 discriminator 1
 14647 00aa D7F8AC30 		ldr	r3, [r7, #172]
 14648 00ae 03F48073 		and	r3, r3, #256
 14649              		.loc 1 4603 47 discriminator 1
 14650 00b2 002B     		cmp	r3, #0
 14651 00b4 0BD0     		beq	.L877
4604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 14652              		.loc 1 4605 11
 14653 00b6 7B68     		ldr	r3, [r7, #4]
 14654 00b8 1B68     		ldr	r3, [r3]
 14655 00ba 0122     		movs	r2, #1
 14656 00bc 1A62     		str	r2, [r3, #32]
4606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_PE;
 14657              		.loc 1 4607 16
 14658 00be 7B68     		ldr	r3, [r7, #4]
 14659 00c0 D3F89030 		ldr	r3, [r3, #144]
 14660              		.loc 1 4607 28
 14661 00c4 43F00102 		orr	r2, r3, #1
 14662 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 364


 14663 00ca C3F89020 		str	r2, [r3, #144]
 14664              	.L877:
4608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART frame error interrupt occurred --------------------------------------*/
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14665              		.loc 1 4611 24
 14666 00ce D7F8B430 		ldr	r3, [r7, #180]
 14667 00d2 03F00203 		and	r3, r3, #2
 14668              		.loc 1 4611 12
 14669 00d6 002B     		cmp	r3, #0
 14670 00d8 11D0     		beq	.L878
 14671              		.loc 1 4611 59 discriminator 1
 14672 00da D7F8A830 		ldr	r3, [r7, #168]
 14673 00de 03F00103 		and	r3, r3, #1
 14674              		.loc 1 4611 47 discriminator 1
 14675 00e2 002B     		cmp	r3, #0
 14676 00e4 0BD0     		beq	.L878
4612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 14677              		.loc 1 4613 11
 14678 00e6 7B68     		ldr	r3, [r7, #4]
 14679 00e8 1B68     		ldr	r3, [r3]
 14680 00ea 0222     		movs	r2, #2
 14681 00ec 1A62     		str	r2, [r3, #32]
4614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_FE;
 14682              		.loc 1 4615 16
 14683 00ee 7B68     		ldr	r3, [r7, #4]
 14684 00f0 D3F89030 		ldr	r3, [r3, #144]
 14685              		.loc 1 4615 28
 14686 00f4 43F00402 		orr	r2, r3, #4
 14687 00f8 7B68     		ldr	r3, [r7, #4]
 14688 00fa C3F89020 		str	r2, [r3, #144]
 14689              	.L878:
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* UART noise error interrupt occurred --------------------------------------*/
4619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 14690              		.loc 1 4619 24
 14691 00fe D7F8B430 		ldr	r3, [r7, #180]
 14692 0102 03F00403 		and	r3, r3, #4
 14693              		.loc 1 4619 12
 14694 0106 002B     		cmp	r3, #0
 14695 0108 11D0     		beq	.L879
 14696              		.loc 1 4619 59 discriminator 1
 14697 010a D7F8A830 		ldr	r3, [r7, #168]
 14698 010e 03F00103 		and	r3, r3, #1
 14699              		.loc 1 4619 47 discriminator 1
 14700 0112 002B     		cmp	r3, #0
 14701 0114 0BD0     		beq	.L879
4620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 14702              		.loc 1 4621 11
 14703 0116 7B68     		ldr	r3, [r7, #4]
 14704 0118 1B68     		ldr	r3, [r3]
 14705 011a 0422     		movs	r2, #4
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 365


 14706 011c 1A62     		str	r2, [r3, #32]
4622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode |= HAL_UART_ERROR_NE;
 14707              		.loc 1 4623 16
 14708 011e 7B68     		ldr	r3, [r7, #4]
 14709 0120 D3F89030 		ldr	r3, [r3, #144]
 14710              		.loc 1 4623 28
 14711 0124 43F00202 		orr	r2, r3, #2
 14712 0128 7B68     		ldr	r3, [r7, #4]
 14713 012a C3F89020 		str	r2, [r3, #144]
 14714              	.L879:
4624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call UART Error Call back function if need be ----------------------------*/
4627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 14715              		.loc 1 4627 18
 14716 012e 7B68     		ldr	r3, [r7, #4]
 14717 0130 D3F89030 		ldr	r3, [r3, #144]
 14718              		.loc 1 4627 12
 14719 0134 002B     		cmp	r3, #0
 14720 0136 06D0     		beq	.L876
4628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Non Blocking error : transfer could go on.
4630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           Error is notified to user through user error callback */
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered error callback*/
4633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCallback(huart);
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak error callback*/
4636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 14721              		.loc 1 4636 11
 14722 0138 7868     		ldr	r0, [r7, #4]
 14723 013a FFF7FEFF 		bl	HAL_UART_ErrorCallback
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_NONE;
 14724              		.loc 1 4638 28
 14725 013e 7B68     		ldr	r3, [r7, #4]
 14726 0140 0022     		movs	r2, #0
 14727 0142 C3F89020 		str	r2, [r3, #144]
 14728              	.L876:
4639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
 14729              		.loc 1 4642 16
 14730 0146 7B68     		ldr	r3, [r7, #4]
 14731 0148 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 14732 014c 9BB2     		uxth	r3, r3
 14733              		.loc 1 4642 10
 14734 014e 002B     		cmp	r3, #0
 14735 0150 40F0A380 		bne	.L875
 14736              	.L882:
 14737              	.LBB1018:
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
4644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 14738              		.loc 1 4645 9 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 366


 14739 0154 7B68     		ldr	r3, [r7, #4]
 14740 0156 1B68     		ldr	r3, [r3]
 14741 0158 7B67     		str	r3, [r7, #116]
 14742              	.LBB1019:
 14743              	.LBB1020:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14744              		.loc 2 1155 4
 14745 015a 7B6F     		ldr	r3, [r7, #116]
 14746              		.syntax unified
 14747              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14748 015c 53E8003F 		ldrex r3, [r3]
 14749              	@ 0 "" 2
 14750              		.thumb
 14751              		.syntax unified
 14752 0160 3B67     		str	r3, [r7, #112]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14753              		.loc 2 1156 10
 14754 0162 3B6F     		ldr	r3, [r7, #112]
 14755              	.LBE1020:
 14756              	.LBE1019:
 14757              		.loc 1 4645 9 discriminator 1
 14758 0164 23F48073 		bic	r3, r3, #256
 14759 0168 C7F89C30 		str	r3, [r7, #156]
 14760 016c 7B68     		ldr	r3, [r7, #4]
 14761 016e 1B68     		ldr	r3, [r3]
 14762 0170 1A46     		mov	r2, r3
 14763 0172 D7F89C30 		ldr	r3, [r7, #156]
 14764 0176 C7F88030 		str	r3, [r7, #128]
 14765 017a FA67     		str	r2, [r7, #124]
 14766              	.LBB1021:
 14767              	.LBB1022:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14768              		.loc 2 1206 4
 14769 017c F96F     		ldr	r1, [r7, #124]
 14770 017e D7F88020 		ldr	r2, [r7, #128]
 14771              		.syntax unified
 14772              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14773 0182 41E80023 		strex r3, r2, [r1]
 14774              	@ 0 "" 2
 14775              		.thumb
 14776              		.syntax unified
 14777 0186 BB67     		str	r3, [r7, #120]
 14778              		.loc 2 1207 10
 14779 0188 BB6F     		ldr	r3, [r7, #120]
 14780              	.LBE1022:
 14781              	.LBE1021:
 14782              		.loc 1 4645 9 discriminator 1
 14783 018a 002B     		cmp	r3, #0
 14784 018c E2D1     		bne	.L882
 14785              	.L885:
 14786              	.LBE1018:
 14787              	.LBB1023:
4646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 14788              		.loc 1 4649 9 discriminator 1
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 367


 14789 018e 7B68     		ldr	r3, [r7, #4]
 14790 0190 1B68     		ldr	r3, [r3]
 14791 0192 0833     		adds	r3, r3, #8
 14792 0194 3B66     		str	r3, [r7, #96]
 14793              	.LBB1024:
 14794              	.LBB1025:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14795              		.loc 2 1155 4
 14796 0196 3B6E     		ldr	r3, [r7, #96]
 14797              		.syntax unified
 14798              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14799 0198 53E8003F 		ldrex r3, [r3]
 14800              	@ 0 "" 2
 14801              		.thumb
 14802              		.syntax unified
 14803 019c FB65     		str	r3, [r7, #92]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14804              		.loc 2 1156 10
 14805 019e FA6D     		ldr	r2, [r7, #92]
 14806              	.LBE1025:
 14807              	.LBE1024:
 14808              		.loc 1 4649 9 discriminator 1
 14809 01a0 6F4B     		ldr	r3, .L906
 14810 01a2 1340     		ands	r3, r3, r2
 14811 01a4 C7F89830 		str	r3, [r7, #152]
 14812 01a8 7B68     		ldr	r3, [r7, #4]
 14813 01aa 1B68     		ldr	r3, [r3]
 14814 01ac 0833     		adds	r3, r3, #8
 14815 01ae D7F89820 		ldr	r2, [r7, #152]
 14816 01b2 FA66     		str	r2, [r7, #108]
 14817 01b4 BB66     		str	r3, [r7, #104]
 14818              	.LBB1026:
 14819              	.LBB1027:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14820              		.loc 2 1206 4
 14821 01b6 B96E     		ldr	r1, [r7, #104]
 14822 01b8 FA6E     		ldr	r2, [r7, #108]
 14823              		.syntax unified
 14824              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14825 01ba 41E80023 		strex r3, r2, [r1]
 14826              	@ 0 "" 2
 14827              		.thumb
 14828              		.syntax unified
 14829 01be 7B66     		str	r3, [r7, #100]
 14830              		.loc 2 1207 10
 14831 01c0 7B6E     		ldr	r3, [r7, #100]
 14832              	.LBE1027:
 14833              	.LBE1026:
 14834              		.loc 1 4649 9 discriminator 1
 14835 01c2 002B     		cmp	r3, #0
 14836 01c4 E3D1     		bne	.L885
 14837              	.LBE1023:
4650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 14838              		.loc 1 4652 24
 14839 01c6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 368


 14840 01c8 2022     		movs	r2, #32
 14841 01ca C3F88C20 		str	r2, [r3, #140]
4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Clear RxISR function pointer */
4655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxISR = NULL;
 14842              		.loc 1 4655 22
 14843 01ce 7B68     		ldr	r3, [r7, #4]
 14844 01d0 0022     		movs	r2, #0
 14845 01d2 5A67     		str	r2, [r3, #116]
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Initialize type of RxEvent to Transfer Complete */
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_TC;
 14846              		.loc 1 4658 28
 14847 01d4 7B68     		ldr	r3, [r7, #4]
 14848 01d6 0022     		movs	r2, #0
 14849 01d8 1A67     		str	r2, [r3, #112]
4659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (!(IS_LPUART_INSTANCE(huart->Instance)))
 14850              		.loc 1 4660 15
 14851 01da 7B68     		ldr	r3, [r7, #4]
 14852 01dc 1B68     		ldr	r3, [r3]
 14853              		.loc 1 4660 12
 14854 01de 614A     		ldr	r2, .L906+4
 14855 01e0 9342     		cmp	r3, r2
 14856 01e2 21D0     		beq	.L886
4661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Check that USART RTOEN bit is set */
4663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 14857              		.loc 1 4663 15
 14858 01e4 7B68     		ldr	r3, [r7, #4]
 14859 01e6 1B68     		ldr	r3, [r3]
 14860 01e8 5B68     		ldr	r3, [r3, #4]
 14861 01ea 03F40003 		and	r3, r3, #8388608
 14862              		.loc 1 4663 14
 14863 01ee 002B     		cmp	r3, #0
 14864 01f0 1AD0     		beq	.L886
 14865              	.L889:
 14866              	.LBB1028:
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Enable the UART Receiver Timeout Interrupt */
4666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 14867              		.loc 1 4666 13 discriminator 1
 14868 01f2 7B68     		ldr	r3, [r7, #4]
 14869 01f4 1B68     		ldr	r3, [r3]
 14870 01f6 FB64     		str	r3, [r7, #76]
 14871              	.LBB1029:
 14872              	.LBB1030:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14873              		.loc 2 1155 4
 14874 01f8 FB6C     		ldr	r3, [r7, #76]
 14875              		.syntax unified
 14876              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14877 01fa 53E8003F 		ldrex r3, [r3]
 14878              	@ 0 "" 2
 14879              		.thumb
 14880              		.syntax unified
 14881 01fe BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 369


1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14882              		.loc 2 1156 10
 14883 0200 BB6C     		ldr	r3, [r7, #72]
 14884              	.LBE1030:
 14885              	.LBE1029:
 14886              		.loc 1 4666 13 discriminator 1
 14887 0202 23F08063 		bic	r3, r3, #67108864
 14888 0206 C7F89430 		str	r3, [r7, #148]
 14889 020a 7B68     		ldr	r3, [r7, #4]
 14890 020c 1B68     		ldr	r3, [r3]
 14891 020e 1A46     		mov	r2, r3
 14892 0210 D7F89430 		ldr	r3, [r7, #148]
 14893 0214 BB65     		str	r3, [r7, #88]
 14894 0216 7A65     		str	r2, [r7, #84]
 14895              	.LBB1031:
 14896              	.LBB1032:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14897              		.loc 2 1206 4
 14898 0218 796D     		ldr	r1, [r7, #84]
 14899 021a BA6D     		ldr	r2, [r7, #88]
 14900              		.syntax unified
 14901              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14902 021c 41E80023 		strex r3, r2, [r1]
 14903              	@ 0 "" 2
 14904              		.thumb
 14905              		.syntax unified
 14906 0220 3B65     		str	r3, [r7, #80]
 14907              		.loc 2 1207 10
 14908 0222 3B6D     		ldr	r3, [r7, #80]
 14909              	.LBE1032:
 14910              	.LBE1031:
 14911              		.loc 1 4666 13 discriminator 1
 14912 0224 002B     		cmp	r3, #0
 14913 0226 E4D1     		bne	.L889
 14914              	.L886:
 14915              	.LBE1028:
4667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
4668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Check current reception Mode :
4671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If Reception till IDLE event has been selected : */
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 14916              		.loc 1 4672 18
 14917 0228 7B68     		ldr	r3, [r7, #4]
 14918 022a DB6E     		ldr	r3, [r3, #108]
 14919              		.loc 1 4672 12
 14920 022c 012B     		cmp	r3, #1
 14921 022e 30D1     		bne	.L890
4673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Set reception type to Standard */
4675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 14922              		.loc 1 4675 32
 14923 0230 7B68     		ldr	r3, [r7, #4]
 14924 0232 0022     		movs	r2, #0
 14925 0234 DA66     		str	r2, [r3, #108]
 14926              	.L893:
 14927              	.LBB1033:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 370


4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Disable IDLE interrupt */
4678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 14928              		.loc 1 4678 11 discriminator 1
 14929 0236 7B68     		ldr	r3, [r7, #4]
 14930 0238 1B68     		ldr	r3, [r3]
 14931 023a BB63     		str	r3, [r7, #56]
 14932              	.LBB1034:
 14933              	.LBB1035:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14934              		.loc 2 1155 4
 14935 023c BB6B     		ldr	r3, [r7, #56]
 14936              		.syntax unified
 14937              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14938 023e 53E8003F 		ldrex r3, [r3]
 14939              	@ 0 "" 2
 14940              		.thumb
 14941              		.syntax unified
 14942 0242 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 14943              		.loc 2 1156 10
 14944 0244 7B6B     		ldr	r3, [r7, #52]
 14945              	.LBE1035:
 14946              	.LBE1034:
 14947              		.loc 1 4678 11 discriminator 1
 14948 0246 23F01003 		bic	r3, r3, #16
 14949 024a C7F89030 		str	r3, [r7, #144]
 14950 024e 7B68     		ldr	r3, [r7, #4]
 14951 0250 1B68     		ldr	r3, [r3]
 14952 0252 1A46     		mov	r2, r3
 14953 0254 D7F89030 		ldr	r3, [r7, #144]
 14954 0258 7B64     		str	r3, [r7, #68]
 14955 025a 3A64     		str	r2, [r7, #64]
 14956              	.LBB1036:
 14957              	.LBB1037:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 14958              		.loc 2 1206 4
 14959 025c 396C     		ldr	r1, [r7, #64]
 14960 025e 7A6C     		ldr	r2, [r7, #68]
 14961              		.syntax unified
 14962              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 14963 0260 41E80023 		strex r3, r2, [r1]
 14964              	@ 0 "" 2
 14965              		.thumb
 14966              		.syntax unified
 14967 0264 FB63     		str	r3, [r7, #60]
 14968              		.loc 2 1207 10
 14969 0266 FB6B     		ldr	r3, [r7, #60]
 14970              	.LBE1037:
 14971              	.LBE1036:
 14972              		.loc 1 4678 11 discriminator 1
 14973 0268 002B     		cmp	r3, #0
 14974 026a E4D1     		bne	.L893
 14975              	.LBE1033:
4679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 14976              		.loc 1 4680 15
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 371


 14977 026c 7B68     		ldr	r3, [r7, #4]
 14978 026e 1B68     		ldr	r3, [r3]
 14979 0270 DB69     		ldr	r3, [r3, #28]
 14980 0272 03F01003 		and	r3, r3, #16
 14981              		.loc 1 4680 14
 14982 0276 102B     		cmp	r3, #16
 14983 0278 03D1     		bne	.L894
4681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
4682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Clear IDLE Flag */
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 14984              		.loc 1 4683 13
 14985 027a 7B68     		ldr	r3, [r7, #4]
 14986 027c 1B68     		ldr	r3, [r3]
 14987 027e 1022     		movs	r2, #16
 14988 0280 1A62     		str	r2, [r3, #32]
 14989              	.L894:
4684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
4685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx Event callback*/
4688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxEventCallback(huart, huart->RxXferSize);
4689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx Event callback*/
4691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 14990              		.loc 1 4691 11
 14991 0282 7B68     		ldr	r3, [r7, #4]
 14992 0284 B3F85C30 		ldrh	r3, [r3, #92]
 14993 0288 1946     		mov	r1, r3
 14994 028a 7868     		ldr	r0, [r7, #4]
 14995 028c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
4695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Standard reception API called */
4697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call registered Rx complete callback*/
4699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           huart->RxCpltCallback(huart);
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #else
4701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /*Call legacy weak Rx complete callback*/
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_RxCpltCallback(huart);
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
4705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         break;
 14996              		.loc 1 4705 9
 14997 0290 0EE0     		b	.L896
 14998              	.L890:
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 14999              		.loc 1 4702 11
 15000 0292 7868     		ldr	r0, [r7, #4]
 15001 0294 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 15002              		.loc 1 4705 9
 15003 0298 0AE0     		b	.L896
 15004              	.L875:
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 15005              		.loc 1 4590 30
 15006 029a B7F8A630 		ldrh	r3, [r7, #166]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 372


 15007 029e 002B     		cmp	r3, #0
 15008 02a0 06D0     		beq	.L896
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 15009              		.loc 1 4590 44 discriminator 1
 15010 02a2 D7F8B430 		ldr	r3, [r7, #180]
 15011 02a6 03F02003 		and	r3, r3, #32
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 15012              		.loc 1 4590 30 discriminator 1
 15013 02aa 002B     		cmp	r3, #0
 15014 02ac 7FF4CCAE 		bne	.L897
 15015              	.L896:
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
4707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
4713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
 15016              		.loc 1 4713 17
 15017 02b0 7B68     		ldr	r3, [r7, #4]
 15018 02b2 B3F85E30 		ldrh	r3, [r3, #94]	@ movhi
 15019 02b6 A7F88E30 		strh	r3, [r7, #142]	@ movhi
4714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 15020              		.loc 1 4714 8
 15021 02ba B7F88E30 		ldrh	r3, [r7, #142]
 15022 02be 002B     		cmp	r3, #0
 15023 02c0 49D0     		beq	.L905
 15024              		.loc 1 4714 52 discriminator 1
 15025 02c2 7B68     		ldr	r3, [r7, #4]
 15026 02c4 B3F86830 		ldrh	r3, [r3, #104]
 15027              		.loc 1 4714 29 discriminator 1
 15028 02c8 B7F88E20 		ldrh	r2, [r7, #142]
 15029 02cc 9A42     		cmp	r2, r3
 15030 02ce 42D2     		bcs	.L905
 15031              	.L901:
 15032              	.LBB1038:
4715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
4716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 15033              		.loc 1 4717 7 discriminator 1
 15034 02d0 7B68     		ldr	r3, [r7, #4]
 15035 02d2 1B68     		ldr	r3, [r3]
 15036 02d4 0833     		adds	r3, r3, #8
 15037 02d6 7B62     		str	r3, [r7, #36]
 15038              	.LBB1039:
 15039              	.LBB1040:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15040              		.loc 2 1155 4
 15041 02d8 7B6A     		ldr	r3, [r7, #36]
 15042              		.syntax unified
 15043              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15044 02da 53E8003F 		ldrex r3, [r3]
 15045              	@ 0 "" 2
 15046              		.thumb
 15047              		.syntax unified
 15048 02de 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 373


1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 15049              		.loc 2 1156 10
 15050 02e0 3B6A     		ldr	r3, [r7, #32]
 15051              	.LBE1040:
 15052              	.LBE1039:
 15053              		.loc 1 4717 7 discriminator 1
 15054 02e2 23F08053 		bic	r3, r3, #268435456
 15055 02e6 C7F88830 		str	r3, [r7, #136]
 15056 02ea 7B68     		ldr	r3, [r7, #4]
 15057 02ec 1B68     		ldr	r3, [r3]
 15058 02ee 0833     		adds	r3, r3, #8
 15059 02f0 D7F88820 		ldr	r2, [r7, #136]
 15060 02f4 3A63     		str	r2, [r7, #48]
 15061 02f6 FB62     		str	r3, [r7, #44]
 15062              	.LBB1041:
 15063              	.LBB1042:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15064              		.loc 2 1206 4
 15065 02f8 F96A     		ldr	r1, [r7, #44]
 15066 02fa 3A6B     		ldr	r2, [r7, #48]
 15067              		.syntax unified
 15068              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15069 02fc 41E80023 		strex r3, r2, [r1]
 15070              	@ 0 "" 2
 15071              		.thumb
 15072              		.syntax unified
 15073 0300 BB62     		str	r3, [r7, #40]
 15074              		.loc 2 1207 10
 15075 0302 BB6A     		ldr	r3, [r7, #40]
 15076              	.LBE1042:
 15077              	.LBE1041:
 15078              		.loc 1 4717 7 discriminator 1
 15079 0304 002B     		cmp	r3, #0
 15080 0306 E3D1     		bne	.L901
 15081              	.LBE1038:
4718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Update the RxISR function pointer */
4720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 15082              		.loc 1 4720 20
 15083 0308 7B68     		ldr	r3, [r7, #4]
 15084 030a 174A     		ldr	r2, .L906+8
 15085 030c 5A67     		str	r2, [r3, #116]
 15086              	.L904:
 15087              	.LBB1043:
4721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
4722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 15088              		.loc 1 4723 7 discriminator 1
 15089 030e 7B68     		ldr	r3, [r7, #4]
 15090 0310 1B68     		ldr	r3, [r3]
 15091 0312 3B61     		str	r3, [r7, #16]
 15092              	.LBB1044:
 15093              	.LBB1045:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15094              		.loc 2 1155 4
 15095 0314 3B69     		ldr	r3, [r7, #16]
 15096              		.syntax unified
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 374


 15097              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15098 0316 53E8003F 		ldrex r3, [r3]
 15099              	@ 0 "" 2
 15100              		.thumb
 15101              		.syntax unified
 15102 031a FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 15103              		.loc 2 1156 10
 15104 031c FB68     		ldr	r3, [r7, #12]
 15105              	.LBE1045:
 15106              	.LBE1044:
 15107              		.loc 1 4723 7 discriminator 1
 15108 031e 43F02003 		orr	r3, r3, #32
 15109 0322 C7F88430 		str	r3, [r7, #132]
 15110 0326 7B68     		ldr	r3, [r7, #4]
 15111 0328 1B68     		ldr	r3, [r3]
 15112 032a 1A46     		mov	r2, r3
 15113 032c D7F88430 		ldr	r3, [r7, #132]
 15114 0330 FB61     		str	r3, [r7, #28]
 15115 0332 BA61     		str	r2, [r7, #24]
 15116              	.LBB1046:
 15117              	.LBB1047:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 15118              		.loc 2 1206 4
 15119 0334 B969     		ldr	r1, [r7, #24]
 15120 0336 FA69     		ldr	r2, [r7, #28]
 15121              		.syntax unified
 15122              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 15123 0338 41E80023 		strex r3, r2, [r1]
 15124              	@ 0 "" 2
 15125              		.thumb
 15126              		.syntax unified
 15127 033c 7B61     		str	r3, [r7, #20]
 15128              		.loc 2 1207 10
 15129 033e 7B69     		ldr	r3, [r7, #20]
 15130              	.LBE1047:
 15131              	.LBE1046:
 15132              		.loc 1 4723 7 discriminator 1
 15133 0340 002B     		cmp	r3, #0
 15134 0342 E4D1     		bne	.L904
 15135              	.LBE1043:
4724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
4725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
4728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
4731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 15136              		.loc 1 4731 1
 15137 0344 07E0     		b	.L905
 15138              	.L874:
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 15139              		.loc 1 4729 5
 15140 0346 7B68     		ldr	r3, [r7, #4]
 15141 0348 1B68     		ldr	r3, [r3]
 15142 034a 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 375


 15143 034c 7B68     		ldr	r3, [r7, #4]
 15144 034e 1B68     		ldr	r3, [r3]
 15145 0350 42F00802 		orr	r2, r2, #8
 15146 0354 9A61     		str	r2, [r3, #24]
 15147              	.L905:
 15148              		.loc 1 4731 1
 15149 0356 00BF     		nop
 15150 0358 B837     		adds	r7, r7, #184
 15151              	.LCFI379:
 15152              		.cfi_def_cfa_offset 8
 15153 035a BD46     		mov	sp, r7
 15154              	.LCFI380:
 15155              		.cfi_def_cfa_register 13
 15156              		@ sp needed
 15157 035c 80BD     		pop	{r7, pc}
 15158              	.L907:
 15159 035e 00BF     		.align	2
 15160              	.L906:
 15161 0360 FEFFFFEF 		.word	-268435458
 15162 0364 000C0058 		.word	1476398080
 15163 0368 00000000 		.word	UART_RxISR_16BIT
 15164              		.cfi_endproc
 15165              	.LFE213:
 15167              		.text
 15168              	.Letext0:
 15169              		.file 3 "D:/MSYS2/mingw64/arm-none-eabi/include/machine/_default_types.h"
 15170              		.file 4 "D:/MSYS2/mingw64/arm-none-eabi/include/sys/_stdint.h"
 15171              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 15172              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 15173              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 15174              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 15175              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 15176              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 15177              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 15178              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 15179              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 376


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_uart.c
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:24     .rodata.UARTPrescTable:00000000 UARTPrescTable
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:21     .rodata.UARTPrescTable:00000000 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:38     .text.HAL_UART_Init:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:44     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:714    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9422   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7754   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9633   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:160    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:166    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:290    .text.HAL_LIN_Init:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:296    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:451    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:457    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:602    .text.HAL_UART_DeInit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:608    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:756    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:708    .text.HAL_UART_MspInit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:750    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:792    .text.HAL_UART_Transmit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:798    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9920   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1005   .text.HAL_UART_Receive:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1011   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1286   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1292   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1535   .text.HAL_UART_Transmit_IT:00000118 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12851  .text.UART_TxISR_16BIT_FIFOEN:00000000 UART_TxISR_16BIT_FIFOEN
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12639  .text.UART_TxISR_8BIT_FIFOEN:00000000 UART_TxISR_8BIT_FIFOEN
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12449  .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12265  .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1543   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1549   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10081  .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1684   .text.HAL_UART_Receive_IT:00000094 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1689   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1695   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1894   .text.HAL_UART_Transmit_DMA:000000f4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11206  .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11365  .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11763  .text.UART_DMAError:00000000 UART_DMAError
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1901   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:1907   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10558  .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2042   .text.HAL_UART_Receive_DMA:00000094 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2047   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2053   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2328   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2334   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2600   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2606   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10844  .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10990  .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2849   .text.HAL_UART_Abort:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:2855   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 377


C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3296   .text.HAL_UART_Abort:00000218 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3301   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3307   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3564   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3570   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3886   .text.HAL_UART_AbortReceive:00000168 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3891   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:3897   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6510   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4393   .text.HAL_UART_Abort_IT:0000026c $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11910  .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12023  .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4400   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4406   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6552   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4682   .text.HAL_UART_AbortTransmit_IT:00000140 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12129  .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4687   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:4693   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6594   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5038   .text.HAL_UART_AbortReceive_IT:00000194 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12196  .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5044   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5050   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6468   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5467   .text.HAL_UART_IRQHandler:000002b8 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11862  .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5472   .text.HAL_UART_IRQHandler:000002c4 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6636   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5926   .text.HAL_UART_IRQHandler:0000059c $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:5946   .text.HAL_UART_IRQHandler:000005dc $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13069  .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6289   .text.HAL_UART_IRQHandler:000007a8 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6294   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6300   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6336   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6342   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6378   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6384   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6420   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6426   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6462   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6504   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6546   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6588   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6630   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6674   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6680   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6734   .text.HAL_UART_ReceiverTimeout_Config:00000034 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6739   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6745   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6838   .text.HAL_UART_EnableReceiverTimeout:00000070 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6843   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6849   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6942   .text.HAL_UART_DisableReceiverTimeout:00000070 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6947   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:6953   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 378


C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7062   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7068   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7177   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7183   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7227   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7233   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7398   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7404   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7569   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7575   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7648   .text.HAL_UART_GetState:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7654   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7702   .text.HAL_UART_GetError:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7708   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7748   .text.UART_SetConfig:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7879   .text.UART_SetConfig:000000b4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7920   .text.UART_SetConfig:00000158 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7980   .text.UART_SetConfig:000001ac $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:7986   .text.UART_SetConfig:000001c4 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8046   .text.UART_SetConfig:00000218 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8052   .text.UART_SetConfig:00000230 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8112   .text.UART_SetConfig:00000284 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8118   .text.UART_SetConfig:0000029c $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8178   .text.UART_SetConfig:000002f0 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8184   .text.UART_SetConfig:00000308 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8212   .text.UART_SetConfig:00000328 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8223   .text.UART_SetConfig:0000034c $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8256   .text.UART_SetConfig:00000380 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8297   .text.UART_SetConfig:00000424 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8357   .text.UART_SetConfig:00000478 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8363   .text.UART_SetConfig:00000490 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8423   .text.UART_SetConfig:000004e4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8429   .text.UART_SetConfig:000004fc $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8489   .text.UART_SetConfig:00000554 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8530   .text.UART_SetConfig:000005f8 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8576   .text.UART_SetConfig:00000630 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8583   .text.UART_SetConfig:00000644 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8598   .text.UART_SetConfig:00000660 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8639   .text.UART_SetConfig:00000704 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8699   .text.UART_SetConfig:00000758 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8705   .text.UART_SetConfig:00000770 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8773   .text.UART_SetConfig:000007d4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8804   .text.UART_SetConfig:00000850 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8926   .text.UART_SetConfig:00000900 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:8934   .text.UART_SetConfig:00000918 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9020   .text.UART_SetConfig:000009cc $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9053   .text.UART_SetConfig:00000a50 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9210   .text.UART_SetConfig:00000b4c $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9243   .text.UART_SetConfig:00000bd0 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9303   .text.UART_SetConfig:00000c28 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9309   .text.UART_SetConfig:00000c38 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9409   .text.UART_SetConfig:00000ccc $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9416   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9627   .text.UART_CheckIdleState:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:9914   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10075  .text.UART_Start_Receive_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10544  .text.UART_Start_Receive_IT:00000234 $d
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s 			page 379


C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:14541  .text.UART_RxISR_16BIT_FIFOEN:00000000 UART_RxISR_16BIT_FIFOEN
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13907  .text.UART_RxISR_8BIT_FIFOEN:00000000 UART_RxISR_8BIT_FIFOEN
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13538  .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13167  .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10552  .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10832  .text.UART_Start_Receive_DMA:00000140 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11409  .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11696  .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10839  .text.UART_EndTxTransfer:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:10985  .text.UART_EndRxTransfer:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11196  .text.UART_EndRxTransfer:000000c8 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11201  .text.UART_DMATransmitCplt:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11360  .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11404  .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11691  .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11758  .text.UART_DMAError:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11857  .text.UART_DMAAbortOnError:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:11905  .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12018  .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12124  .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12191  .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12260  .text.UART_TxISR_8BIT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12444  .text.UART_TxISR_16BIT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12634  .text.UART_TxISR_8BIT_FIFOEN:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:12846  .text.UART_TxISR_16BIT_FIFOEN:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13064  .text.UART_EndTransmit_IT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13162  .text.UART_RxISR_8BIT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13528  .text.UART_RxISR_8BIT:000001b4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13533  .text.UART_RxISR_16BIT:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13897  .text.UART_RxISR_16BIT:000001b4 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:13902  .text.UART_RxISR_8BIT_FIFOEN:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:14529  .text.UART_RxISR_8BIT_FIFOEN:00000358 $d
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:14536  .text.UART_RxISR_16BIT_FIFOEN:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccNI1cPV.s:15161  .text.UART_RxISR_16BIT_FIFOEN:00000360 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_TxFifoEmptyCallback
HAL_UARTEx_RxFifoFullCallback
__aeabi_uldivmod
HAL_RCCEx_GetD3PCLK1Freq
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetPLL3ClockFreq
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
