ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32h7xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/system_stm32h7xx.c"
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw"
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 0090D003 		.word	64000000
  26              		.global	SystemD2Clock
  27              		.section	.data.SystemD2Clock,"aw"
  28              		.align	2
  31              	SystemD2Clock:
  32 0000 0090D003 		.word	64000000
  33              		.global	D1CorePrescTable
  34              		.section	.rodata.D1CorePrescTable,"a"
  35              		.align	2
  38              	D1CorePrescTable:
  39 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
  39      01020304 
  39      01020304 
  39      06
  40 000d 070809   		.ascii	"\007\010\011"
  41              		.section	.text.SystemInit,"ax",%progbits
  42              		.align	1
  43              		.global	SystemInit
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	SystemInit:
  49              	.LFB144:
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 2


  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Core/Src/system_stm32h7xx.c ****   *
  32:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  33:Core/Src/system_stm32h7xx.c ****   */
  34:Core/Src/system_stm32h7xx.c **** 
  35:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32h7xx.c ****   * @{
  37:Core/Src/system_stm32h7xx.c ****   */
  38:Core/Src/system_stm32h7xx.c **** 
  39:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Core/Src/system_stm32h7xx.c ****   * @{
  41:Core/Src/system_stm32h7xx.c ****   */
  42:Core/Src/system_stm32h7xx.c **** 
  43:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Core/Src/system_stm32h7xx.c ****   * @{
  45:Core/Src/system_stm32h7xx.c ****   */
  46:Core/Src/system_stm32h7xx.c **** 
  47:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:Core/Src/system_stm32h7xx.c **** 
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 3


  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:Core/Src/system_stm32h7xx.c ****          configuration. */
  85:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  88:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  92:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  95:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  96:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
  98:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 100:Core/Src/system_stm32h7xx.c **** #else
 101:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 103:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 105:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 106:Core/Src/system_stm32h7xx.c **** #else
 107:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 110:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 111:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 113:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 115:Core/Src/system_stm32h7xx.c **** #else
 116:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 118:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 120:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 121:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 122:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 123:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 4


 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @}
 135:Core/Src/system_stm32h7xx.c ****   */
 136:Core/Src/system_stm32h7xx.c **** 
 137:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 138:Core/Src/system_stm32h7xx.c ****   * @{
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 141:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 142:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 143:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 144:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 145:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 146:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 147:Core/Src/system_stm32h7xx.c ****   */
 148:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 149:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 150:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c **** /**
 153:Core/Src/system_stm32h7xx.c ****   * @}
 154:Core/Src/system_stm32h7xx.c ****   */
 155:Core/Src/system_stm32h7xx.c **** 
 156:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 157:Core/Src/system_stm32h7xx.c ****   * @{
 158:Core/Src/system_stm32h7xx.c ****   */
 159:Core/Src/system_stm32h7xx.c **** 
 160:Core/Src/system_stm32h7xx.c **** /**
 161:Core/Src/system_stm32h7xx.c ****   * @}
 162:Core/Src/system_stm32h7xx.c ****   */
 163:Core/Src/system_stm32h7xx.c **** 
 164:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 165:Core/Src/system_stm32h7xx.c ****   * @{
 166:Core/Src/system_stm32h7xx.c ****   */
 167:Core/Src/system_stm32h7xx.c **** 
 168:Core/Src/system_stm32h7xx.c **** /**
 169:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 170:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 171:Core/Src/system_stm32h7xx.c ****   *         configuration.
 172:Core/Src/system_stm32h7xx.c ****   * @param  None
 173:Core/Src/system_stm32h7xx.c ****   * @retval None
 174:Core/Src/system_stm32h7xx.c ****   */
 175:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 176:Core/Src/system_stm32h7xx.c **** {
  50              		.loc 1 176 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 80B4     		push	{r7}
  56              	.LCFI0:
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 5


  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 7, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
 177:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 178:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 179:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 180:Core/Src/system_stm32h7xx.c **** 
 181:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 182:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 183:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  62              		.loc 1 183 8
  63 0004 324B     		ldr	r3, .L4
  64 0006 D3F88830 		ldr	r3, [r3, #136]
  65 000a 314A     		ldr	r2, .L4
  66              		.loc 1 183 16
  67 000c 43F47003 		orr	r3, r3, #15728640
  68 0010 C2F88830 		str	r3, [r2, #136]
 184:Core/Src/system_stm32h7xx.c ****   #endif
 185:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 186:Core/Src/system_stm32h7xx.c **** 
 187:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 188:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  69              		.loc 1 188 32
  70 0014 2F4B     		ldr	r3, .L4+4
  71 0016 1B68     		ldr	r3, [r3]
  72 0018 03F00F03 		and	r3, r3, #15
  73              		.loc 1 188 5
  74 001c 062B     		cmp	r3, #6
  75 001e 07D8     		bhi	.L2
 189:Core/Src/system_stm32h7xx.c ****   {
 190:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 191:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  76              		.loc 1 191 5
  77 0020 2C4B     		ldr	r3, .L4+4
  78 0022 1B68     		ldr	r3, [r3]
  79 0024 23F00F03 		bic	r3, r3, #15
  80 0028 2A4A     		ldr	r2, .L4+4
  81 002a 43F00703 		orr	r3, r3, #7
  82 002e 1360     		str	r3, [r2]
  83              	.L2:
 192:Core/Src/system_stm32h7xx.c ****   }
 193:Core/Src/system_stm32h7xx.c **** 
 194:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 195:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  84              		.loc 1 195 6
  85 0030 294B     		ldr	r3, .L4+8
  86 0032 1B68     		ldr	r3, [r3]
  87 0034 284A     		ldr	r2, .L4+8
  88              		.loc 1 195 11
  89 0036 43F00103 		orr	r3, r3, #1
  90 003a 1360     		str	r3, [r2]
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  91              		.loc 1 198 6
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 6


  92 003c 264B     		ldr	r3, .L4+8
  93              		.loc 1 198 13
  94 003e 0022     		movs	r2, #0
  95 0040 1A61     		str	r2, [r3, #16]
 199:Core/Src/system_stm32h7xx.c **** 
 200:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 201:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  96              		.loc 1 201 6
  97 0042 254B     		ldr	r3, .L4+8
  98 0044 1A68     		ldr	r2, [r3]
  99 0046 2449     		ldr	r1, .L4+8
 100              		.loc 1 201 11
 101 0048 244B     		ldr	r3, .L4+12
 102 004a 1340     		ands	r3, r3, r2
 103 004c 0B60     		str	r3, [r1]
 202:Core/Src/system_stm32h7xx.c **** 
 203:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 204:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 104              		.loc 1 204 32
 105 004e 214B     		ldr	r3, .L4+4
 106 0050 1B68     		ldr	r3, [r3]
 107              		.loc 1 204 29
 108 0052 03F00803 		and	r3, r3, #8
 109              		.loc 1 204 5
 110 0056 002B     		cmp	r3, #0
 111 0058 07D0     		beq	.L3
 205:Core/Src/system_stm32h7xx.c ****   {
 206:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 207:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 112              		.loc 1 207 5
 113 005a 1E4B     		ldr	r3, .L4+4
 114 005c 1B68     		ldr	r3, [r3]
 115 005e 23F00F03 		bic	r3, r3, #15
 116 0062 1C4A     		ldr	r2, .L4+4
 117 0064 43F00703 		orr	r3, r3, #7
 118 0068 1360     		str	r3, [r2]
 119              	.L3:
 208:Core/Src/system_stm32h7xx.c ****   }
 209:Core/Src/system_stm32h7xx.c **** 
 210:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 211:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 212:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
 120              		.loc 1 212 6
 121 006a 1B4B     		ldr	r3, .L4+8
 122              		.loc 1 212 15
 123 006c 0022     		movs	r2, #0
 124 006e 9A61     		str	r2, [r3, #24]
 213:Core/Src/system_stm32h7xx.c **** 
 214:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 215:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
 125              		.loc 1 215 6
 126 0070 194B     		ldr	r3, .L4+8
 127              		.loc 1 215 15
 128 0072 0022     		movs	r2, #0
 129 0074 DA61     		str	r2, [r3, #28]
 216:Core/Src/system_stm32h7xx.c **** 
 217:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 7


 218:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
 130              		.loc 1 218 6
 131 0076 184B     		ldr	r3, .L4+8
 132              		.loc 1 218 15
 133 0078 0022     		movs	r2, #0
 134 007a 1A62     		str	r2, [r3, #32]
 219:Core/Src/system_stm32h7xx.c **** #else
 220:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 221:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 222:Core/Src/system_stm32h7xx.c **** 
 223:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 224:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 225:Core/Src/system_stm32h7xx.c **** 
 226:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 227:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 228:Core/Src/system_stm32h7xx.c **** #endif
 229:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 230:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
 135              		.loc 1 230 6
 136 007c 164B     		ldr	r3, .L4+8
 137              		.loc 1 230 18
 138 007e 184A     		ldr	r2, .L4+16
 139 0080 9A62     		str	r2, [r3, #40]
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 233:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
 140              		.loc 1 233 6
 141 0082 154B     		ldr	r3, .L4+8
 142              		.loc 1 233 16
 143 0084 174A     		ldr	r2, .L4+20
 144 0086 DA62     		str	r2, [r3, #44]
 234:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 235:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 145              		.loc 1 235 6
 146 0088 134B     		ldr	r3, .L4+8
 147              		.loc 1 235 17
 148 008a 174A     		ldr	r2, .L4+24
 149 008c 1A63     		str	r2, [r3, #48]
 236:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 237:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 150              		.loc 1 237 6
 151 008e 124B     		ldr	r3, .L4+8
 152              		.loc 1 237 18
 153 0090 0022     		movs	r2, #0
 154 0092 5A63     		str	r2, [r3, #52]
 238:Core/Src/system_stm32h7xx.c **** 
 239:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 240:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 155              		.loc 1 240 6
 156 0094 104B     		ldr	r3, .L4+8
 157              		.loc 1 240 17
 158 0096 144A     		ldr	r2, .L4+24
 159 0098 9A63     		str	r2, [r3, #56]
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 243:Core/Src/system_stm32h7xx.c **** 
 244:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 8


 160              		.loc 1 244 6
 161 009a 0F4B     		ldr	r3, .L4+8
 162              		.loc 1 244 18
 163 009c 0022     		movs	r2, #0
 164 009e DA63     		str	r2, [r3, #60]
 245:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 246:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 165              		.loc 1 246 6
 166 00a0 0D4B     		ldr	r3, .L4+8
 167              		.loc 1 246 17
 168 00a2 114A     		ldr	r2, .L4+24
 169 00a4 1A64     		str	r2, [r3, #64]
 247:Core/Src/system_stm32h7xx.c **** 
 248:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 249:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 170              		.loc 1 249 6
 171 00a6 0C4B     		ldr	r3, .L4+8
 172              		.loc 1 249 18
 173 00a8 0022     		movs	r2, #0
 174 00aa 5A64     		str	r2, [r3, #68]
 250:Core/Src/system_stm32h7xx.c **** 
 251:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 252:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 175              		.loc 1 252 6
 176 00ac 0A4B     		ldr	r3, .L4+8
 177 00ae 1B68     		ldr	r3, [r3]
 178 00b0 094A     		ldr	r2, .L4+8
 179              		.loc 1 252 11
 180 00b2 23F48023 		bic	r3, r3, #262144
 181 00b6 1360     		str	r3, [r2]
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 255:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 182              		.loc 1 255 6
 183 00b8 074B     		ldr	r3, .L4+8
 184              		.loc 1 255 13
 185 00ba 0022     		movs	r2, #0
 186 00bc 1A66     		str	r2, [r3, #96]
 256:Core/Src/system_stm32h7xx.c **** 
 257:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 258:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 259:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 260:Core/Src/system_stm32h7xx.c ****   {
 261:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 262:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 263:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 264:Core/Src/system_stm32h7xx.c ****   }
 265:Core/Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 266:Core/Src/system_stm32h7xx.c **** 
 267:Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 268:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
 269:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 270:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 271:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 272:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 273:Core/Src/system_stm32h7xx.c **** #else
 274:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 9


 275:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 276:Core/Src/system_stm32h7xx.c **** 
 277:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 278:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 279:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 280:Core/Src/system_stm32h7xx.c **** 
 281:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 282:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 283:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 284:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 285:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 286:Core/Src/system_stm32h7xx.c **** 
 287:Core/Src/system_stm32h7xx.c **** #else
 288:Core/Src/system_stm32h7xx.c ****   /*
 289:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Core/Src/system_stm32h7xx.c ****    */
 293:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 187              		.loc 1 293 14
 188 00be 0B4B     		ldr	r3, .L4+28
 189              		.loc 1 293 24
 190 00c0 43F2D202 		movw	r2, #12498
 191 00c4 1A60     		str	r2, [r3]
 294:Core/Src/system_stm32h7xx.c **** 
 295:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Core/Src/system_stm32h7xx.c **** 
 300:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Core/Src/system_stm32h7xx.c **** }
 192              		.loc 1 301 1
 193 00c6 00BF     		nop
 194 00c8 BD46     		mov	sp, r7
 195              	.LCFI2:
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 00ca 5DF8047B 		ldr	r7, [sp], #4
 199              	.LCFI3:
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 00ce 7047     		bx	lr
 203              	.L5:
 204              		.align	2
 205              	.L4:
 206 00d0 00ED00E0 		.word	-536810240
 207 00d4 00200052 		.word	1375739904
 208 00d8 00440258 		.word	1476543488
 209 00dc 7FEDF6EA 		.word	-352916097
 210 00e0 00020202 		.word	33686016
 211 00e4 0000FF01 		.word	33488896
 212 00e8 80020101 		.word	16843392
 213 00ec 00400052 		.word	1375748096
 214              		.cfi_endproc
 215              	.LFE144:
 217              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 10


 218              		.align	1
 219              		.global	SystemCoreClockUpdate
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	SystemCoreClockUpdate:
 225              	.LFB145:
 302:Core/Src/system_stm32h7xx.c **** 
 303:Core/Src/system_stm32h7xx.c **** /**
 304:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 305:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 306:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 307:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 308:Core/Src/system_stm32h7xx.c ****   *
 309:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 310:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 311:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 312:Core/Src/system_stm32h7xx.c ****   *
 313:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 314:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 315:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 316:Core/Src/system_stm32h7xx.c ****   *
 317:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 318:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 319:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 320:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 321:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 322:Core/Src/system_stm32h7xx.c ****   *
 323:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 324:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 325:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 326:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 327:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 328:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 329:Core/Src/system_stm32h7xx.c ****   *
 330:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 331:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 332:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 333:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 334:Core/Src/system_stm32h7xx.c ****   *
 335:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 336:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 337:Core/Src/system_stm32h7xx.c ****   * @param  None
 338:Core/Src/system_stm32h7xx.c ****   * @retval None
 339:Core/Src/system_stm32h7xx.c ****   */
 340:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 341:Core/Src/system_stm32h7xx.c **** {
 226              		.loc 1 341 1
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 40
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 0002 8BB0     		sub	sp, sp, #44
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 11


 236              	.LCFI5:
 237              		.cfi_def_cfa_offset 48
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI6:
 240              		.cfi_def_cfa_register 7
 342:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 343:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 344:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 345:Core/Src/system_stm32h7xx.c **** 
 346:Core/Src/system_stm32h7xx.c **** 
 347:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 348:Core/Src/system_stm32h7xx.c **** 
 349:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 241              		.loc 1 349 14
 242 0006 B14B     		ldr	r3, .L21
 243 0008 1B69     		ldr	r3, [r3, #16]
 244              		.loc 1 349 21
 245 000a 03F03803 		and	r3, r3, #56
 246              		.loc 1 349 3
 247 000e 182B     		cmp	r3, #24
 248 0010 00F22E81 		bhi	.L7
 249 0014 01A2     		adr	r2, .L9
 250 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 251 001a 00BF     		.p2align 2
 252              	.L9:
 253 001c 81000000 		.word	.L12+1
 254 0020 71020000 		.word	.L7+1
 255 0024 71020000 		.word	.L7+1
 256 0028 71020000 		.word	.L7+1
 257 002c 71020000 		.word	.L7+1
 258 0030 71020000 		.word	.L7+1
 259 0034 71020000 		.word	.L7+1
 260 0038 71020000 		.word	.L7+1
 261 003c 95000000 		.word	.L11+1
 262 0040 71020000 		.word	.L7+1
 263 0044 71020000 		.word	.L7+1
 264 0048 71020000 		.word	.L7+1
 265 004c 71020000 		.word	.L7+1
 266 0050 71020000 		.word	.L7+1
 267 0054 71020000 		.word	.L7+1
 268 0058 71020000 		.word	.L7+1
 269 005c 9B000000 		.word	.L10+1
 270 0060 71020000 		.word	.L7+1
 271 0064 71020000 		.word	.L7+1
 272 0068 71020000 		.word	.L7+1
 273 006c 71020000 		.word	.L7+1
 274 0070 71020000 		.word	.L7+1
 275 0074 71020000 		.word	.L7+1
 276 0078 71020000 		.word	.L7+1
 277 007c A1000000 		.word	.L8+1
 278              		.p2align 1
 279              	.L12:
 350:Core/Src/system_stm32h7xx.c ****   {
 351:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 352:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 280              		.loc 1 352 57
 281 0080 924B     		ldr	r3, .L21
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 12


 282 0082 1B68     		ldr	r3, [r3]
 283              		.loc 1 352 78
 284 0084 DB08     		lsrs	r3, r3, #3
 285 0086 03F00303 		and	r3, r3, #3
 286              		.loc 1 352 25
 287 008a 914A     		ldr	r2, .L21+4
 288 008c 22FA03F3 		lsr	r3, r2, r3
 289 0090 7B62     		str	r3, [r7, #36]
 353:Core/Src/system_stm32h7xx.c ****     break;
 290              		.loc 1 353 5
 291 0092 F7E0     		b	.L13
 292              	.L11:
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 356:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 293              		.loc 1 356 25
 294 0094 8F4B     		ldr	r3, .L21+8
 295 0096 7B62     		str	r3, [r7, #36]
 357:Core/Src/system_stm32h7xx.c ****     break;
 296              		.loc 1 357 5
 297 0098 F4E0     		b	.L13
 298              	.L10:
 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 360:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 299              		.loc 1 360 25
 300 009a 8F4B     		ldr	r3, .L21+12
 301 009c 7B62     		str	r3, [r7, #36]
 361:Core/Src/system_stm32h7xx.c ****     break;
 302              		.loc 1 361 5
 303 009e F1E0     		b	.L13
 304              	.L8:
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 364:Core/Src/system_stm32h7xx.c **** 
 365:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 366:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 367:Core/Src/system_stm32h7xx.c ****     */
 368:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 305              		.loc 1 368 21
 306 00a0 8A4B     		ldr	r3, .L21
 307 00a2 9B6A     		ldr	r3, [r3, #40]
 308              		.loc 1 368 15
 309 00a4 03F00303 		and	r3, r3, #3
 310 00a8 FB61     		str	r3, [r7, #28]
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 311              		.loc 1 369 17
 312 00aa 884B     		ldr	r3, .L21
 313 00ac 9B6A     		ldr	r3, [r3, #40]
 314              		.loc 1 369 51
 315 00ae 1B09     		lsrs	r3, r3, #4
 316              		.loc 1 369 10
 317 00b0 03F03F03 		and	r3, r3, #63
 318 00b4 BB61     		str	r3, [r7, #24]
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 319              		.loc 1 370 22
 320 00b6 854B     		ldr	r3, .L21
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 13


 321 00b8 DB6A     		ldr	r3, [r3, #44]
 322              		.loc 1 370 15
 323 00ba 03F00103 		and	r3, r3, #1
 324 00be 7B61     		str	r3, [r7, #20]
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 325              		.loc 1 371 50
 326 00c0 824B     		ldr	r3, .L21
 327 00c2 5B6B     		ldr	r3, [r3, #52]
 328              		.loc 1 371 85
 329 00c4 DB08     		lsrs	r3, r3, #3
 330 00c6 C3F30C03 		ubfx	r3, r3, #0, #13
 331              		.loc 1 371 23
 332 00ca 7A69     		ldr	r2, [r7, #20]
 333 00cc 02FB03F3 		mul	r3, r2, r3
 334              		.loc 1 371 12
 335 00d0 07EE903A 		vmov	s15, r3	@ int
 336 00d4 F8EE677A 		vcvt.f32.u32	s15, s15
 337 00d8 C7ED047A 		vstr.32	s15, [r7, #16]
 372:Core/Src/system_stm32h7xx.c **** 
 373:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 338              		.loc 1 373 8
 339 00dc BB69     		ldr	r3, [r7, #24]
 340 00de 002B     		cmp	r3, #0
 341 00e0 00F0C380 		beq	.L14
 374:Core/Src/system_stm32h7xx.c ****     {
 375:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 342              		.loc 1 375 7
 343 00e4 FB69     		ldr	r3, [r7, #28]
 344 00e6 022B     		cmp	r3, #2
 345 00e8 59D0     		beq	.L15
 346 00ea FB69     		ldr	r3, [r7, #28]
 347 00ec 022B     		cmp	r3, #2
 348 00ee 78D8     		bhi	.L16
 349 00f0 FB69     		ldr	r3, [r7, #28]
 350 00f2 002B     		cmp	r3, #0
 351 00f4 03D0     		beq	.L17
 352 00f6 FB69     		ldr	r3, [r7, #28]
 353 00f8 012B     		cmp	r3, #1
 354 00fa 2ED0     		beq	.L18
 355 00fc 71E0     		b	.L16
 356              	.L17:
 376:Core/Src/system_stm32h7xx.c ****       {
 377:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 378:Core/Src/system_stm32h7xx.c **** 
 379:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 357              		.loc 1 379 39
 358 00fe 734B     		ldr	r3, .L21
 359 0100 1B68     		ldr	r3, [r3]
 360              		.loc 1 379 60
 361 0102 DB08     		lsrs	r3, r3, #3
 362 0104 03F00303 		and	r3, r3, #3
 363              		.loc 1 379 18
 364 0108 714A     		ldr	r2, .L21+4
 365 010a 22FA03F3 		lsr	r3, r2, r3
 366 010e FB60     		str	r3, [r7, #12]
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 367              		.loc 1 380 20
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 14


 368 0110 FB68     		ldr	r3, [r7, #12]
 369 0112 07EE903A 		vmov	s15, r3	@ int
 370 0116 F8EE676A 		vcvt.f32.u32	s13, s15
 371              		.loc 1 380 40
 372 011a BB69     		ldr	r3, [r7, #24]
 373 011c 07EE903A 		vmov	s15, r3	@ int
 374 0120 F8EE677A 		vcvt.f32.u32	s15, s15
 375              		.loc 1 380 38
 376 0124 86EEA77A 		vdiv.f32	s14, s13, s15
 377              		.loc 1 380 81
 378 0128 684B     		ldr	r3, .L21
 379 012a 1B6B     		ldr	r3, [r3, #48]
 380              		.loc 1 380 67
 381 012c C3F30803 		ubfx	r3, r3, #0, #9
 382              		.loc 1 380 58
 383 0130 07EE903A 		vmov	s15, r3	@ int
 384 0134 F8EE676A 		vcvt.f32.u32	s13, s15
 385              		.loc 1 380 120
 386 0138 97ED046A 		vldr.32	s12, [r7, #16]
 387 013c DFED675A 		vldr.32	s11, .L21+16
 388 0140 C6EE257A 		vdiv.f32	s15, s12, s11
 389              		.loc 1 380 111
 390 0144 76EEA77A 		vadd.f32	s15, s13, s15
 391              		.loc 1 380 138
 392 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 393 014c 77EEA67A 		vadd.f32	s15, s15, s13
 394              		.loc 1 380 16
 395 0150 67EE277A 		vmul.f32	s15, s14, s15
 396 0154 C7ED087A 		vstr.32	s15, [r7, #32]
 381:Core/Src/system_stm32h7xx.c **** 
 382:Core/Src/system_stm32h7xx.c ****         break;
 397              		.loc 1 382 9
 398 0158 71E0     		b	.L19
 399              	.L18:
 383:Core/Src/system_stm32h7xx.c **** 
 384:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 385:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 400              		.loc 1 385 42
 401 015a BB69     		ldr	r3, [r7, #24]
 402 015c 07EE903A 		vmov	s15, r3	@ int
 403 0160 F8EE677A 		vcvt.f32.u32	s15, s15
 404              		.loc 1 385 40
 405 0164 DFED5E6A 		vldr.32	s13, .L21+20
 406 0168 86EEA77A 		vdiv.f32	s14, s13, s15
 407              		.loc 1 385 83
 408 016c 574B     		ldr	r3, .L21
 409 016e 1B6B     		ldr	r3, [r3, #48]
 410              		.loc 1 385 69
 411 0170 C3F30803 		ubfx	r3, r3, #0, #9
 412              		.loc 1 385 60
 413 0174 07EE903A 		vmov	s15, r3	@ int
 414 0178 F8EE676A 		vcvt.f32.u32	s13, s15
 415              		.loc 1 385 122
 416 017c 97ED046A 		vldr.32	s12, [r7, #16]
 417 0180 DFED565A 		vldr.32	s11, .L21+16
 418 0184 C6EE257A 		vdiv.f32	s15, s12, s11
 419              		.loc 1 385 113
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 15


 420 0188 76EEA77A 		vadd.f32	s15, s13, s15
 421              		.loc 1 385 140
 422 018c F7EE006A 		vmov.f32	s13, #1.0e+0
 423 0190 77EEA67A 		vadd.f32	s15, s15, s13
 424              		.loc 1 385 18
 425 0194 67EE277A 		vmul.f32	s15, s14, s15
 426 0198 C7ED087A 		vstr.32	s15, [r7, #32]
 386:Core/Src/system_stm32h7xx.c ****         break;
 427              		.loc 1 386 9
 428 019c 4FE0     		b	.L19
 429              	.L15:
 387:Core/Src/system_stm32h7xx.c **** 
 388:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 389:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 430              		.loc 1 389 42
 431 019e BB69     		ldr	r3, [r7, #24]
 432 01a0 07EE903A 		vmov	s15, r3	@ int
 433 01a4 F8EE677A 		vcvt.f32.u32	s15, s15
 434              		.loc 1 389 40
 435 01a8 DFED4E6A 		vldr.32	s13, .L21+24
 436 01ac 86EEA77A 		vdiv.f32	s14, s13, s15
 437              		.loc 1 389 83
 438 01b0 464B     		ldr	r3, .L21
 439 01b2 1B6B     		ldr	r3, [r3, #48]
 440              		.loc 1 389 69
 441 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 442              		.loc 1 389 60
 443 01b8 07EE903A 		vmov	s15, r3	@ int
 444 01bc F8EE676A 		vcvt.f32.u32	s13, s15
 445              		.loc 1 389 122
 446 01c0 97ED046A 		vldr.32	s12, [r7, #16]
 447 01c4 DFED455A 		vldr.32	s11, .L21+16
 448 01c8 C6EE257A 		vdiv.f32	s15, s12, s11
 449              		.loc 1 389 113
 450 01cc 76EEA77A 		vadd.f32	s15, s13, s15
 451              		.loc 1 389 140
 452 01d0 F7EE006A 		vmov.f32	s13, #1.0e+0
 453 01d4 77EEA67A 		vadd.f32	s15, s15, s13
 454              		.loc 1 389 18
 455 01d8 67EE277A 		vmul.f32	s15, s14, s15
 456 01dc C7ED087A 		vstr.32	s15, [r7, #32]
 390:Core/Src/system_stm32h7xx.c ****         break;
 457              		.loc 1 390 9
 458 01e0 2DE0     		b	.L19
 459              	.L16:
 391:Core/Src/system_stm32h7xx.c **** 
 392:Core/Src/system_stm32h7xx.c ****       default:
 393:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 460              		.loc 1 393 41
 461 01e2 3A4B     		ldr	r3, .L21
 462 01e4 1B68     		ldr	r3, [r3]
 463              		.loc 1 393 62
 464 01e6 DB08     		lsrs	r3, r3, #3
 465 01e8 03F00303 		and	r3, r3, #3
 466              		.loc 1 393 20
 467 01ec 384A     		ldr	r2, .L21+4
 468 01ee 22FA03F3 		lsr	r3, r2, r3
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 16


 469 01f2 FB60     		str	r3, [r7, #12]
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 470              		.loc 1 394 21
 471 01f4 FB68     		ldr	r3, [r7, #12]
 472 01f6 07EE903A 		vmov	s15, r3	@ int
 473 01fa F8EE676A 		vcvt.f32.u32	s13, s15
 474              		.loc 1 394 41
 475 01fe BB69     		ldr	r3, [r7, #24]
 476 0200 07EE903A 		vmov	s15, r3	@ int
 477 0204 F8EE677A 		vcvt.f32.u32	s15, s15
 478              		.loc 1 394 39
 479 0208 86EEA77A 		vdiv.f32	s14, s13, s15
 480              		.loc 1 394 82
 481 020c 2F4B     		ldr	r3, .L21
 482 020e 1B6B     		ldr	r3, [r3, #48]
 483              		.loc 1 394 68
 484 0210 C3F30803 		ubfx	r3, r3, #0, #9
 485              		.loc 1 394 59
 486 0214 07EE903A 		vmov	s15, r3	@ int
 487 0218 F8EE676A 		vcvt.f32.u32	s13, s15
 488              		.loc 1 394 121
 489 021c 97ED046A 		vldr.32	s12, [r7, #16]
 490 0220 DFED2E5A 		vldr.32	s11, .L21+16
 491 0224 C6EE257A 		vdiv.f32	s15, s12, s11
 492              		.loc 1 394 112
 493 0228 76EEA77A 		vadd.f32	s15, s13, s15
 494              		.loc 1 394 139
 495 022c F7EE006A 		vmov.f32	s13, #1.0e+0
 496 0230 77EEA67A 		vadd.f32	s15, s15, s13
 497              		.loc 1 394 18
 498 0234 67EE277A 		vmul.f32	s15, s14, s15
 499 0238 C7ED087A 		vstr.32	s15, [r7, #32]
 395:Core/Src/system_stm32h7xx.c ****         break;
 500              		.loc 1 395 9
 501 023c 00BF     		nop
 502              	.L19:
 396:Core/Src/system_stm32h7xx.c ****       }
 397:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 503              		.loc 1 397 20
 504 023e 234B     		ldr	r3, .L21
 505 0240 1B6B     		ldr	r3, [r3, #48]
 506              		.loc 1 397 50
 507 0242 5B0A     		lsrs	r3, r3, #9
 508 0244 03F07F03 		and	r3, r3, #127
 509              		.loc 1 397 12
 510 0248 0133     		adds	r3, r3, #1
 511 024a BB60     		str	r3, [r7, #8]
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 512              		.loc 1 398 57
 513 024c BB68     		ldr	r3, [r7, #8]
 514 024e 07EE903A 		vmov	s15, r3	@ int
 515 0252 B8EE677A 		vcvt.f32.u32	s14, s15
 516              		.loc 1 398 40
 517 0256 D7ED086A 		vldr.32	s13, [r7, #32]
 518 025a C6EE877A 		vdiv.f32	s15, s13, s14
 519              		.loc 1 398 27
 520 025e FCEEE77A 		vcvt.u32.f32	s15, s15
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 17


 521 0262 17EE903A 		vmov	r3, s15	@ int
 522 0266 7B62     		str	r3, [r7, #36]
 399:Core/Src/system_stm32h7xx.c ****     }
 400:Core/Src/system_stm32h7xx.c ****     else
 401:Core/Src/system_stm32h7xx.c ****     {
 402:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 403:Core/Src/system_stm32h7xx.c ****     }
 404:Core/Src/system_stm32h7xx.c ****     break;
 523              		.loc 1 404 5
 524 0268 0CE0     		b	.L13
 525              	.L14:
 402:Core/Src/system_stm32h7xx.c ****     }
 526              		.loc 1 402 27
 527 026a 0023     		movs	r3, #0
 528 026c 7B62     		str	r3, [r7, #36]
 529              		.loc 1 404 5
 530 026e 09E0     		b	.L13
 531              	.L7:
 405:Core/Src/system_stm32h7xx.c **** 
 406:Core/Src/system_stm32h7xx.c ****   default:
 407:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 532              		.loc 1 407 57
 533 0270 164B     		ldr	r3, .L21
 534 0272 1B68     		ldr	r3, [r3]
 535              		.loc 1 407 78
 536 0274 DB08     		lsrs	r3, r3, #3
 537 0276 03F00303 		and	r3, r3, #3
 538              		.loc 1 407 25
 539 027a 154A     		ldr	r2, .L21+4
 540 027c 22FA03F3 		lsr	r3, r2, r3
 541 0280 7B62     		str	r3, [r7, #36]
 408:Core/Src/system_stm32h7xx.c ****     break;
 542              		.loc 1 408 5
 543 0282 00BF     		nop
 544              	.L13:
 409:Core/Src/system_stm32h7xx.c ****   }
 410:Core/Src/system_stm32h7xx.c **** 
 411:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 412:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 413:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 545              		.loc 1 413 30
 546 0284 114B     		ldr	r3, .L21
 547 0286 9B69     		ldr	r3, [r3, #24]
 548              		.loc 1 413 59
 549 0288 1B0A     		lsrs	r3, r3, #8
 550 028a 03F00F03 		and	r3, r3, #15
 551              		.loc 1 413 25
 552 028e 164A     		ldr	r2, .L21+28
 553 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 554              		.loc 1 413 7
 555 0292 7B60     		str	r3, [r7, #4]
 414:Core/Src/system_stm32h7xx.c **** 
 415:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 416:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 556              		.loc 1 416 23
 557 0294 7A6A     		ldr	r2, [r7, #36]
 558 0296 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 18


 559 0298 22FA03F3 		lsr	r3, r2, r3
 560 029c 7B62     		str	r3, [r7, #36]
 417:Core/Src/system_stm32h7xx.c **** 
 418:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 419:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 561              		.loc 1 419 66
 562 029e 0B4B     		ldr	r3, .L21
 563 02a0 9B69     		ldr	r3, [r3, #24]
 564              		.loc 1 419 93
 565 02a2 03F00F03 		and	r3, r3, #15
 566              		.loc 1 419 61
 567 02a6 104A     		ldr	r2, .L21+28
 568 02a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 569              		.loc 1 419 118
 570 02aa 03F01F03 		and	r3, r3, #31
 571              		.loc 1 419 40
 572 02ae 7A6A     		ldr	r2, [r7, #36]
 573 02b0 22FA03F3 		lsr	r3, r2, r3
 574              		.loc 1 419 17
 575 02b4 0D4A     		ldr	r2, .L21+32
 576 02b6 1360     		str	r3, [r2]
 420:Core/Src/system_stm32h7xx.c **** 
 421:Core/Src/system_stm32h7xx.c **** #else
 422:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 423:Core/Src/system_stm32h7xx.c **** 
 424:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 425:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 426:Core/Src/system_stm32h7xx.c **** 
 427:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 428:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 429:Core/Src/system_stm32h7xx.c **** 
 430:Core/Src/system_stm32h7xx.c **** #endif
 431:Core/Src/system_stm32h7xx.c **** 
 432:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 433:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 434:Core/Src/system_stm32h7xx.c **** #else
 435:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 577              		.loc 1 435 19
 578 02b8 0D4A     		ldr	r2, .L21+36
 579 02ba 7B6A     		ldr	r3, [r7, #36]
 580 02bc 1360     		str	r3, [r2]
 436:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 437:Core/Src/system_stm32h7xx.c **** }
 581              		.loc 1 437 1
 582 02be 00BF     		nop
 583 02c0 2C37     		adds	r7, r7, #44
 584              	.LCFI7:
 585              		.cfi_def_cfa_offset 4
 586 02c2 BD46     		mov	sp, r7
 587              	.LCFI8:
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 02c4 5DF8047B 		ldr	r7, [sp], #4
 591              	.LCFI9:
 592              		.cfi_restore 7
 593              		.cfi_def_cfa_offset 0
 594 02c8 7047     		bx	lr
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 19


 595              	.L22:
 596 02ca 00BF     		.align	2
 597              	.L21:
 598 02cc 00440258 		.word	1476543488
 599 02d0 0090D003 		.word	64000000
 600 02d4 00093D00 		.word	4000000
 601 02d8 00366E01 		.word	24000000
 602 02dc 00000046 		.word	1174405120
 603 02e0 0024744A 		.word	1249125376
 604 02e4 001BB74B 		.word	1270291200
 605 02e8 00000000 		.word	D1CorePrescTable
 606 02ec 00000000 		.word	SystemD2Clock
 607 02f0 00000000 		.word	SystemCoreClock
 608              		.cfi_endproc
 609              	.LFE145:
 611              		.text
 612              	.Letext0:
 613              		.file 2 "D:/MSYS2/mingw64/arm-none-eabi/include/machine/_default_types.h"
 614              		.file 3 "D:/MSYS2/mingw64/arm-none-eabi/include/sys/_stdint.h"
 615              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 616              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 617              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 618              		.file 7 "D:/MSYS2/mingw64/arm-none-eabi/include/math.h"
ARM GAS  C:\Users\23671\AppData\Local\Temp\ccYA6gau.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:24     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:21     .data.SystemCoreClock:00000000 $d
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:31     .data.SystemD2Clock:00000000 SystemD2Clock
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:28     .data.SystemD2Clock:00000000 $d
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:38     .rodata.D1CorePrescTable:00000000 D1CorePrescTable
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:35     .rodata.D1CorePrescTable:00000000 $d
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:42     .text.SystemInit:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:48     .text.SystemInit:00000000 SystemInit
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:206    .text.SystemInit:000000d0 $d
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:218    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:224    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:253    .text.SystemCoreClockUpdate:0000001c $d
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:278    .text.SystemCoreClockUpdate:00000080 $t
C:\Users\23671\AppData\Local\Temp\ccYA6gau.s:598    .text.SystemCoreClockUpdate:000002cc $d

NO UNDEFINED SYMBOLS
