ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_fdcan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c"
  19              		.section	.rodata.DLCtoBytes,"a"
  20              		.align	2
  23              	DLCtoBytes:
  24 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\014\020\024\030"
  24      04050607 
  24      080C1014 
  24      18
  25 000d 203040   		.ascii	" 0@"
  26              		.section	.rodata
  27              		.align	2
  28              	.LC0:
  29 0000 00000000 		.word	0
  30 0004 00000000 		.word	0
  31 0008 00000000 		.word	0
  32 000c 00000000 		.word	0
  33 0010 00000000 		.word	0
  34 0014 01000000 		.word	1
  35 0018 02000000 		.word	2
  36 001c 03000000 		.word	3
  37 0020 04000000 		.word	4
  38 0024 00000000 		.word	0
  39 0028 05000000 		.word	5
  40 002c 00000000 		.word	0
  41 0030 00000000 		.word	0
  42 0034 00000000 		.word	0
  43 0038 06000000 		.word	6
  44 003c 00000000 		.word	0
  45 0040 00000000 		.word	0
  46 0044 00000000 		.word	0
  47 0048 07000000 		.word	7
  48              		.section	.text.HAL_FDCAN_Init,"ax",%progbits
  49              		.align	1
  50              		.global	HAL_FDCAN_Init
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	HAL_FDCAN_Init:
  56              	.LFB144:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 2


   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @file    stm32h7xx_hal_fdcan.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief   FDCAN HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          functionalities of the Flexible DataRate Controller Area Network
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          (FDCAN) peripheral:
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + IO operation functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Peripheral Configuration and Control functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Peripheral State and Error functions
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @attention
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * All rights reserved.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * in the root directory of this software component.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   @verbatim
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         ##### How to use this driver #####
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Initialize the FDCAN peripheral using HAL_FDCAN_Init function.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) If needed , configure the reception filters and optional features using
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           the following configuration functions:
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigClockCalibration
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigFilter
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigGlobalFilter
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigExtendedIdMask
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigRxFifoOverwrite
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigFifoWatermark
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigRamWatchdog
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTimestampCounter
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTimestampCounter
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTimestampCounter
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTimeoutCounter
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTimeoutCounter
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTimeoutCounter
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTxDelayCompensation
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTxDelayCompensation
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTxDelayCompensation
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableISOMode
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableISOMode
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableEdgeFiltering
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableEdgeFiltering
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigOperation
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigReferenceMessage
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigTrigger
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Start the FDCAN module using HAL_FDCAN_Start function. At this level
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           the node is active on the bus: it can send and receive messages.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 3


  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) The following Tx control functions can only be called when the FDCAN
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           module is started:
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_AddMessageToTxFifoQ
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTxBufferRequest
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_AbortTxRequest
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) After having submitted a Tx request in Tx Fifo or Queue, it is possible to
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           get Tx buffer location used to place the Tx request thanks to
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_GetLatestTxFifoQRequestBuffer API.
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           It is then possible to abort later on the corresponding Tx Request using
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_AbortTxRequest API.
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) When a message is received into the FDCAN message RAM, it can be
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           retrieved using the HAL_FDCAN_GetRxMessage function.
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Calling the HAL_FDCAN_Stop function stops the FDCAN module by entering
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           it to initialization mode and re-enabling access to configuration
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           registers through the configuration functions listed here above.
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) All other control functions can be called any time after initialization
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           phase, no matter if the FDCAN module is started or stopped.
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *** Polling mode operation ***
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ==============================
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) Reception and transmission states can be monitored via the following
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             functions:
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_IsRxBufferMessageAvailable
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_IsTxBufferMessagePending
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_GetRxFifoFillLevel
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_GetTxFifoFreeLevel
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ================================
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       [..]
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) There are two interrupt lines: line 0 and 1.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             By default, all interrupts are assigned to line 0. Interrupt lines
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             can be configured using HAL_FDCAN_ConfigInterruptLines function.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) Notifications are activated using HAL_FDCAN_ActivateNotification
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             function. Then, the process can be controlled through one of the
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             available user callbacks: HAL_FDCAN_xxxCallback.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *** Callback registration ***
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   =============================================
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   The compilation define USE_HAL_FDCAN_REGISTER_CALLBACKS when set to 1
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   allows the user to configure dynamically the driver callbacks.
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Use Function HAL_FDCAN_RegisterCallback() or HAL_FDCAN_RegisterXXXCallback()
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   to register an interrupt callback.
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Function HAL_FDCAN_RegisterCallback() allows to register following callbacks:
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TxFifoEmptyCallback          : Tx Fifo Empty Callback.
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) RxBufferNewMessageCallback   : Rx Buffer New Message Callback.
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) HighPriorityMessageCallback  : High Priority Message Callback.
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimestampWraparoundCallback  : Timestamp Wraparound Callback.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 4


 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimeoutOccurredCallback      : Timeout Occurred Callback.
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) ErrorCallback                : Error Callback.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspInitCallback              : FDCAN MspInit.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspDeInitCallback            : FDCAN MspDeInit.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   and a pointer to the user callback function.
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   For specific callbacks ClockCalibrationCallback, TxEventFifoCallback, RxFifo0Callback, RxFifo1Cal
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxBufferCompleteCallback, TxBufferAbortCallback, ErrorStatusCallback, TT_ScheduleSyncCallback, TT
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TT_StopWatchCallback and TT_GlobalTimeCallback, use dedicated register callbacks:
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   respectively HAL_FDCAN_RegisterClockCalibrationCallback(), HAL_FDCAN_RegisterTxEventFifoCallback(
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterRxFifo0Callback(), HAL_FDCAN_RegisterRxFifo1Callback(),
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterTxBufferCompleCallback(), HAL_FDCAN_RegisterTxBufferAbortCallback(),
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterErrorStatusCallback(), HAL_FDCAN_TT_RegisterScheduleSyncCallback(),
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_RegisterTimeMarkCallback(), HAL_FDCAN_TT_RegisterStopWatchCallback() and
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_RegisterGlobalTimeCallback().
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Use function HAL_FDCAN_UnRegisterCallback() to reset a callback to the default
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   weak function.
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   and the Callback ID.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   This function allows to reset following callbacks:
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TxFifoEmptyCallback          : Tx Fifo Empty Callback.
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) RxBufferNewMessageCallback   : Rx Buffer New Message Callback.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) HighPriorityMessageCallback  : High Priority Message Callback.
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimestampWraparoundCallback  : Timestamp Wraparound Callback.
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimeoutOccurredCallback      : Timeout Occurred Callback.
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) ErrorCallback                : Error Callback.
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspInitCallback              : FDCAN MspInit.
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspDeInitCallback            : FDCAN MspDeInit.
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   For specific callbacks ClockCalibrationCallback, TxEventFifoCallback, RxFifo0Callback,
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1Callback, TxBufferCompleteCallback, TxBufferAbortCallback, TT_ScheduleSyncCallback,
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TT_TimeMarkCallback, TT_StopWatchCallback and TT_GlobalTimeCallback, use dedicated
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   register callbacks: respectively HAL_FDCAN_UnRegisterClockCalibrationCallback(),
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterTxEventFifoCallback(), HAL_FDCAN_UnRegisterRxFifo0Callback(),
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterRxFifo1Callback(), HAL_FDCAN_UnRegisterTxBufferCompleCallback(),
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterTxBufferAbortCallback(), HAL_FDCAN_UnRegisterErrorStatusCallback(),
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_UnRegisterScheduleSyncCallback(), HAL_FDCAN_TT_UnRegisterTimeMarkCallback(),
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_UnRegisterStopWatchCallback() and HAL_FDCAN_TT_UnRegisterGlobalTimeCallback().
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   By default, after the HAL_FDCAN_Init() and when the state is HAL_FDCAN_STATE_RESET,
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   all callbacks are set to the corresponding weak functions:
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   examples HAL_FDCAN_ErrorCallback().
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Exception done for MspInit and MspDeInit functions that are
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   reset to the legacy weak function in the HAL_FDCAN_Init()/ HAL_FDCAN_DeInit() only when
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   these callbacks are null (not registered beforehand).
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if not, MspInit or MspDeInit are not null, the HAL_FDCAN_Init()/ HAL_FDCAN_DeInit()
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Callbacks can be registered/unregistered in HAL_FDCAN_STATE_READY state only.
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   in HAL_FDCAN_STATE_READY or HAL_FDCAN_STATE_RESET state,
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   In that case first register the MspInit/MspDeInit user callbacks
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   using HAL_FDCAN_RegisterCallback() before calling HAL_FDCAN_DeInit()
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   or HAL_FDCAN_Init() function.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 5


 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   When The compilation define USE_HAL_FDCAN_REGISTER_CALLBACKS is set to 0 or
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   not defined, the callback registration feature is not available and all callbacks
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   are set to the corresponding weak functions.
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   @endverbatim
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Includes ------------------------------------------------------------------*/
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #include "stm32h7xx_hal.h"
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if defined(FDCAN1)
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup STM32H7xx_HAL_Driver
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN FDCAN
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief FDCAN HAL module driver
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #ifdef HAL_FDCAN_MODULE_ENABLED
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private typedef -----------------------------------------------------------*/
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private define ------------------------------------------------------------*/
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Constants
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TIMEOUT_VALUE 10U
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TIMEOUT_COUNT 50U
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TX_EVENT_FIFO_MASK (FDCAN_IR_TEFL | FDCAN_IR_TEFF | FDCAN_IR_TEFW | FDCAN_IR_TEFN)
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_RX_FIFO0_MASK (FDCAN_IR_RF0L | FDCAN_IR_RF0F | FDCAN_IR_RF0W | FDCAN_IR_RF0N)
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_RX_FIFO1_MASK (FDCAN_IR_RF1L | FDCAN_IR_RF1F | FDCAN_IR_RF1W | FDCAN_IR_RF1N)
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ERROR_MASK (FDCAN_IR_ELO | FDCAN_IR_WDI | FDCAN_IR_PEA | FDCAN_IR_PED | FDCAN_IR_ARA)
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ERROR_STATUS_MASK (FDCAN_IR_EP | FDCAN_IR_EW | FDCAN_IR_BO)
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_SCHEDULE_SYNC_MASK (FDCAN_TTIR_SBC | FDCAN_TTIR_SMC | FDCAN_TTIR_CSM | FDCAN_TTIR_
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_TIME_MARK_MASK (FDCAN_TTIR_RTMI | FDCAN_TTIR_TTMI)
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_GLOBAL_TIME_MASK (FDCAN_TTIR_GTW | FDCAN_TTIR_GTD)
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_DISTURBING_ERROR_MASK (FDCAN_TTIR_GTE | FDCAN_TTIR_TXU | FDCAN_TTIR_TXO | \
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                         FDCAN_TTIR_SE1 | FDCAN_TTIR_SE2 | FDCAN_TTIR_ELC)
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_FATAL_ERROR_MASK (FDCAN_TTIR_IWT | FDCAN_TTIR_WT | FDCAN_TTIR_AW | FDCAN_TTIR_CER)
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_STDID ((uint32_t)0x1FFC0000U) /* Standard Identifier         */
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_EXTID ((uint32_t)0x1FFFFFFFU) /* Extended Identifier         */
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_RTR   ((uint32_t)0x20000000U) /* Remote Transmission Request */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_XTD   ((uint32_t)0x40000000U) /* Extended Identifier         */
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ESI   ((uint32_t)0x80000000U) /* Error State Indicator       */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_TS    ((uint32_t)0x0000FFFFU) /* Timestamp                   */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_DLC   ((uint32_t)0x000F0000U) /* Data Length Code            */
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_BRS   ((uint32_t)0x00100000U) /* Bit Rate Switch             */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_FDF   ((uint32_t)0x00200000U) /* FD Format                   */
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_EFC   ((uint32_t)0x00800000U) /* Event FIFO Control          */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_MM    ((uint32_t)0xFF000000U) /* Message Marker              */
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_FIDX  ((uint32_t)0x7F000000U) /* Filter Index                */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 6


 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ANMF  ((uint32_t)0x80000000U) /* Accepted Non-matching Frame */
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ET    ((uint32_t)0x00C00000U) /* Event type                  */
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_MESSAGE_RAM_SIZE 0x2800U
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_MESSAGE_RAM_END_ADDRESS (SRAMCAN_BASE + FDCAN_MESSAGE_RAM_SIZE - 0x4U) /* Message RAM
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private macro -------------------------------------------------------------*/
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private variables ---------------------------------------------------------*/
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Variables
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static const uint8_t DLCtoBytes[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 20, 24, 32, 48, 64};
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private function prototypes -----------------------------------------------*/
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Functions_Prototypes
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static HAL_StatusTypeDef FDCAN_CalcultateRamBlockAddresses(FDCAN_HandleTypeDef *hfdcan);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static void FDCAN_CopyMessageToRAM(const FDCAN_HandleTypeDef *hfdcan, const FDCAN_TxHeaderTypeDef *
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                    const uint8_t *pTxData, uint32_t BufferIndex);
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Exported functions --------------------------------------------------------*/
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions FDCAN Exported Functions
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group1 Initialization and de-initialization functions
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief    Initialization and Configuration functions
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### Initialization and de-initialization functions #####
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Initialize and configure the FDCAN.
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) De-initialize the FDCAN.
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Enter FDCAN peripheral in power down mode.
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Exit power down mode.
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Register callbacks.
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Unregister callbacks.
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initializes the FDCAN peripheral according to the specified
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 7


 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_InitTypeDef structure.
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Init(FDCAN_HandleTypeDef *hfdcan)
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
  57              		.loc 1 293 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 96
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 98B0     		sub	sp, sp, #96
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 104
  69 0004 00AF     		add	r7, sp, #0
  70              	.LCFI2:
  71              		.cfi_def_cfa_register 7
  72 0006 7860     		str	r0, [r7, #4]
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status;
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   const uint32_t CvtEltSize[] = {0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7};
  73              		.loc 1 296 18
  74 0008 844A     		ldr	r2, .L27
  75 000a 07F10C03 		add	r3, r7, #12
  76 000e 1146     		mov	r1, r2
  77 0010 4C22     		movs	r2, #76
  78 0012 1846     		mov	r0, r3
  79 0014 FFF7FEFF 		bl	memcpy
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN handle */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan == NULL)
  80              		.loc 1 299 6
  81 0018 7B68     		ldr	r3, [r7, #4]
  82 001a 002B     		cmp	r3, #0
  83 001c 01D1     		bne	.L2
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
  84              		.loc 1 301 12
  85 001e 0123     		movs	r3, #1
  86 0020 C6E1     		b	.L26
  87              	.L2:
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN instance */
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
  88              		.loc 1 305 13
  89 0022 7B68     		ldr	r3, [r7, #4]
  90 0024 1B68     		ldr	r3, [r3]
  91              		.loc 1 305 6
  92 0026 7E4A     		ldr	r2, .L27+4
  93 0028 9342     		cmp	r3, r2
  94 002a 06D1     		bne	.L4
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 8


 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ttcan = (TTCAN_TypeDef *)((uint32_t)hfdcan->Instance + 0x100U);
  95              		.loc 1 307 55
  96 002c 7B68     		ldr	r3, [r7, #4]
  97 002e 1B68     		ldr	r3, [r3]
  98              		.loc 1 307 66
  99 0030 03F58073 		add	r3, r3, #256
 100              		.loc 1 307 21
 101 0034 1A46     		mov	r2, r3
 102              		.loc 1 307 19
 103 0036 7B68     		ldr	r3, [r7, #4]
 104 0038 5A60     		str	r2, [r3, #4]
 105              	.L4:
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ALL_INSTANCE(hfdcan->Instance));
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_FORMAT(hfdcan->Init.FrameFormat));
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MODE(hfdcan->Init.Mode));
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.AutoRetransmission));
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.TransmitPause));
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.ProtocolException));
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_PRESCALER(hfdcan->Init.NominalPrescaler));
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_SJW(hfdcan->Init.NominalSyncJumpWidth));
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_TSEG1(hfdcan->Init.NominalTimeSeg1));
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_TSEG2(hfdcan->Init.NominalTimeSeg2));
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_PRESCALER(hfdcan->Init.DataPrescaler));
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SJW(hfdcan->Init.DataSyncJumpWidth));
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_TSEG1(hfdcan->Init.DataTimeSeg1));
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_TSEG2(hfdcan->Init.DataTimeSeg2));
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.StdFiltersNbr, 128U));
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.ExtFiltersNbr, 64U));
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxFifo0ElmtsNbr, 64U));
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo0ElmtsNbr > 0U)
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxFifo0ElmtSize));
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxFifo1ElmtsNbr, 64U));
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo1ElmtsNbr > 0U)
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxFifo1ElmtSize));
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxBuffersNbr, 64U));
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxBuffersNbr > 0U)
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxBufferSize));
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.TxEventsNbr, 32U));
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr), 3
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TxFifoQueueElmtsNbr > 0U)
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TX_FIFO_QUEUE_MODE(hfdcan->Init.TxFifoQueueMode));
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr) > 0U)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 9


 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.TxElmtSize));
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Allocate lock resource and initialize it */
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Lock = HAL_UNLOCKED;
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset callbacks to legacy functions */
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback    = HAL_FDCAN_ClockCalibrationCallback;    /* ClockCalibratio
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback         = HAL_FDCAN_TxEventFifoCallback;         /* TxEventFifoCall
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback             = HAL_FDCAN_RxFifo0Callback;             /* RxFifo0Callback
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback             = HAL_FDCAN_RxFifo1Callback;             /* RxFifo1Callback
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxFifoEmptyCallback         = HAL_FDCAN_TxFifoEmptyCallback;         /* TxFifoEmptyCall
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback    = HAL_FDCAN_TxBufferCompleteCallback;    /* TxBufferComplet
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback       = HAL_FDCAN_TxBufferAbortCallback;       /* TxBufferAbortCa
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxBufferNewMessageCallback  = HAL_FDCAN_RxBufferNewMessageCallback;  /* RxBufferNewMess
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->HighPriorityMessageCallback = HAL_FDCAN_HighPriorityMessageCallback; /* HighPriorityMes
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TimestampWraparoundCallback = HAL_FDCAN_TimestampWraparoundCallback; /* TimestampWrapar
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TimeoutOccurredCallback     = HAL_FDCAN_TimeoutOccurredCallback;     /* TimeoutOccurred
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCallback               = HAL_FDCAN_ErrorCallback;               /* ErrorCallback  
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback         = HAL_FDCAN_ErrorStatusCallback;         /* ErrorStatusCall
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback     = HAL_FDCAN_TT_ScheduleSyncCallback;     /* TT_ScheduleSync
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback         = HAL_FDCAN_TT_TimeMarkCallback;         /* TT_TimeMarkCall
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback        = HAL_FDCAN_TT_StopWatchCallback;        /* TT_StopWatchCal
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback       = HAL_FDCAN_TT_GlobalTimeCallback;       /* TT_GlobalTimeCa
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->MspInitCallback == NULL)
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->MspInitCallback = HAL_FDCAN_MspInit;  /* Legacy weak MspInit */
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Init the low level hardware: CLOCK, NVIC */
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->MspInitCallback(hfdcan);
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 106              		.loc 1 390 13
 107 003a 7B68     		ldr	r3, [r7, #4]
 108 003c 93F89830 		ldrb	r3, [r3, #152]
 109 0040 DBB2     		uxtb	r3, r3
 110              		.loc 1 390 6
 111 0042 002B     		cmp	r3, #0
 112 0044 06D1     		bne	.L5
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Allocate lock resource and initialize it */
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Lock = HAL_UNLOCKED;
 113              		.loc 1 393 18
 114 0046 7B68     		ldr	r3, [r7, #4]
 115 0048 0022     		movs	r2, #0
 116 004a 83F89920 		strb	r2, [r3, #153]
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Init the low level hardware: CLOCK, NVIC */
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_MspInit(hfdcan);
 117              		.loc 1 396 5
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 10


 118 004e 7868     		ldr	r0, [r7, #4]
 119 0050 FFF7FEFF 		bl	HAL_FDCAN_MspInit
 120              	.L5:
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Exit from Sleep mode */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 121              		.loc 1 401 3
 122 0054 7B68     		ldr	r3, [r7, #4]
 123 0056 1B68     		ldr	r3, [r3]
 124 0058 9A69     		ldr	r2, [r3, #24]
 125 005a 7B68     		ldr	r3, [r7, #4]
 126 005c 1B68     		ldr	r3, [r3]
 127 005e 22F01002 		bic	r2, r2, #16
 128 0062 9A61     		str	r2, [r3, #24]
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 129              		.loc 1 404 15
 130 0064 FFF7FEFF 		bl	HAL_GetTick
 131 0068 F865     		str	r0, [r7, #92]
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check Sleep mode acknowledge */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 132              		.loc 1 407 9
 133 006a 14E0     		b	.L6
 134              	.L7:
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 135              		.loc 1 409 10
 136 006c FFF7FEFF 		bl	HAL_GetTick
 137 0070 0246     		mov	r2, r0
 138              		.loc 1 409 24 discriminator 1
 139 0072 FB6D     		ldr	r3, [r7, #92]
 140 0074 D31A     		subs	r3, r2, r3
 141              		.loc 1 409 8 discriminator 1
 142 0076 0A2B     		cmp	r3, #10
 143 0078 0DD9     		bls	.L6
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 144              		.loc 1 412 13
 145 007a 7B68     		ldr	r3, [r7, #4]
 146 007c D3F89C30 		ldr	r3, [r3, #156]
 147              		.loc 1 412 25
 148 0080 43F00102 		orr	r2, r3, #1
 149 0084 7B68     		ldr	r3, [r7, #4]
 150 0086 C3F89C20 		str	r2, [r3, #156]
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 151              		.loc 1 415 21
 152 008a 7B68     		ldr	r3, [r7, #4]
 153 008c 0322     		movs	r2, #3
 154 008e 83F89820 		strb	r2, [r3, #152]
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 11


 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 155              		.loc 1 417 14
 156 0092 0123     		movs	r3, #1
 157 0094 8CE1     		b	.L26
 158              	.L6:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 159              		.loc 1 407 17
 160 0096 7B68     		ldr	r3, [r7, #4]
 161 0098 1B68     		ldr	r3, [r3]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 162              		.loc 1 407 27
 163 009a 9B69     		ldr	r3, [r3, #24]
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 164              		.loc 1 407 34
 165 009c 03F00803 		and	r3, r3, #8
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 166              		.loc 1 407 52
 167 00a0 082B     		cmp	r3, #8
 168 00a2 E3D0     		beq	.L7
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Request initialisation */
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 169              		.loc 1 422 3
 170 00a4 7B68     		ldr	r3, [r7, #4]
 171 00a6 1B68     		ldr	r3, [r3]
 172 00a8 9A69     		ldr	r2, [r3, #24]
 173 00aa 7B68     		ldr	r3, [r7, #4]
 174 00ac 1B68     		ldr	r3, [r3]
 175 00ae 42F00102 		orr	r2, r2, #1
 176 00b2 9A61     		str	r2, [r3, #24]
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 177              		.loc 1 425 15
 178 00b4 FFF7FEFF 		bl	HAL_GetTick
 179 00b8 F865     		str	r0, [r7, #92]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until the INIT bit into CCCR register is set */
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
 180              		.loc 1 428 9
 181 00ba 14E0     		b	.L8
 182              	.L9:
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check for the Timeout */
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 183              		.loc 1 431 10
 184 00bc FFF7FEFF 		bl	HAL_GetTick
 185 00c0 0246     		mov	r2, r0
 186              		.loc 1 431 24 discriminator 1
 187 00c2 FB6D     		ldr	r3, [r7, #92]
 188 00c4 D31A     		subs	r3, r2, r3
 189              		.loc 1 431 8 discriminator 1
 190 00c6 0A2B     		cmp	r3, #10
 191 00c8 0DD9     		bls	.L8
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 12


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 192              		.loc 1 434 13
 193 00ca 7B68     		ldr	r3, [r7, #4]
 194 00cc D3F89C30 		ldr	r3, [r3, #156]
 195              		.loc 1 434 25
 196 00d0 43F00102 		orr	r2, r3, #1
 197 00d4 7B68     		ldr	r3, [r7, #4]
 198 00d6 C3F89C20 		str	r2, [r3, #156]
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 199              		.loc 1 437 21
 200 00da 7B68     		ldr	r3, [r7, #4]
 201 00dc 0322     		movs	r2, #3
 202 00de 83F89820 		strb	r2, [r3, #152]
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 203              		.loc 1 439 14
 204 00e2 0123     		movs	r3, #1
 205 00e4 64E1     		b	.L26
 206              	.L8:
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 207              		.loc 1 428 17
 208 00e6 7B68     		ldr	r3, [r7, #4]
 209 00e8 1B68     		ldr	r3, [r3]
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 210              		.loc 1 428 27
 211 00ea 9B69     		ldr	r3, [r3, #24]
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 212              		.loc 1 428 34
 213 00ec 03F00103 		and	r3, r3, #1
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 214              		.loc 1 428 53
 215 00f0 002B     		cmp	r3, #0
 216 00f2 E3D0     		beq	.L9
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Enable configuration change */
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CCE);
 217              		.loc 1 444 3
 218 00f4 7B68     		ldr	r3, [r7, #4]
 219 00f6 1B68     		ldr	r3, [r3]
 220 00f8 9A69     		ldr	r2, [r3, #24]
 221 00fa 7B68     		ldr	r3, [r7, #4]
 222 00fc 1B68     		ldr	r3, [r3]
 223 00fe 42F00202 		orr	r2, r2, #2
 224 0102 9A61     		str	r2, [r3, #24]
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the no automatic retransmission */
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.AutoRetransmission == ENABLE)
 225              		.loc 1 447 19
 226 0104 7B68     		ldr	r3, [r7, #4]
 227 0106 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 228              		.loc 1 447 6
 229 0108 012B     		cmp	r3, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 13


 230 010a 08D1     		bne	.L10
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
 231              		.loc 1 449 5
 232 010c 7B68     		ldr	r3, [r7, #4]
 233 010e 1B68     		ldr	r3, [r3]
 234 0110 9A69     		ldr	r2, [r3, #24]
 235 0112 7B68     		ldr	r3, [r7, #4]
 236 0114 1B68     		ldr	r3, [r3]
 237 0116 22F04002 		bic	r2, r2, #64
 238 011a 9A61     		str	r2, [r3, #24]
 239 011c 07E0     		b	.L11
 240              	.L10:
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
 241              		.loc 1 453 5
 242 011e 7B68     		ldr	r3, [r7, #4]
 243 0120 1B68     		ldr	r3, [r3]
 244 0122 9A69     		ldr	r2, [r3, #24]
 245 0124 7B68     		ldr	r3, [r7, #4]
 246 0126 1B68     		ldr	r3, [r3]
 247 0128 42F04002 		orr	r2, r2, #64
 248 012c 9A61     		str	r2, [r3, #24]
 249              	.L11:
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the transmit pause feature */
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TransmitPause == ENABLE)
 250              		.loc 1 457 19
 251 012e 7B68     		ldr	r3, [r7, #4]
 252 0130 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 253              		.loc 1 457 6
 254 0132 012B     		cmp	r3, #1
 255 0134 08D1     		bne	.L12
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
 256              		.loc 1 459 5
 257 0136 7B68     		ldr	r3, [r7, #4]
 258 0138 1B68     		ldr	r3, [r3]
 259 013a 9A69     		ldr	r2, [r3, #24]
 260 013c 7B68     		ldr	r3, [r7, #4]
 261 013e 1B68     		ldr	r3, [r3]
 262 0140 42F48042 		orr	r2, r2, #16384
 263 0144 9A61     		str	r2, [r3, #24]
 264 0146 07E0     		b	.L13
 265              	.L12:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
 266              		.loc 1 463 5
 267 0148 7B68     		ldr	r3, [r7, #4]
 268 014a 1B68     		ldr	r3, [r3]
 269 014c 9A69     		ldr	r2, [r3, #24]
 270 014e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 14


 271 0150 1B68     		ldr	r3, [r3]
 272 0152 22F48042 		bic	r2, r2, #16384
 273 0156 9A61     		str	r2, [r3, #24]
 274              	.L13:
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the Protocol Exception Handling */
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.ProtocolException == ENABLE)
 275              		.loc 1 467 19
 276 0158 7B68     		ldr	r3, [r7, #4]
 277 015a 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 278              		.loc 1 467 6
 279 015c 012B     		cmp	r3, #1
 280 015e 08D1     		bne	.L14
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
 281              		.loc 1 469 5
 282 0160 7B68     		ldr	r3, [r7, #4]
 283 0162 1B68     		ldr	r3, [r3]
 284 0164 9A69     		ldr	r2, [r3, #24]
 285 0166 7B68     		ldr	r3, [r7, #4]
 286 0168 1B68     		ldr	r3, [r3]
 287 016a 22F48052 		bic	r2, r2, #4096
 288 016e 9A61     		str	r2, [r3, #24]
 289 0170 07E0     		b	.L15
 290              	.L14:
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
 291              		.loc 1 473 5
 292 0172 7B68     		ldr	r3, [r7, #4]
 293 0174 1B68     		ldr	r3, [r3]
 294 0176 9A69     		ldr	r2, [r3, #24]
 295 0178 7B68     		ldr	r3, [r7, #4]
 296 017a 1B68     		ldr	r3, [r3]
 297 017c 42F48052 		orr	r2, r2, #4096
 298 0180 9A61     		str	r2, [r3, #24]
 299              	.L15:
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set FDCAN Frame Format */
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->CCCR, FDCAN_FRAME_FD_BRS, hfdcan->Init.FrameFormat);
 300              		.loc 1 477 3
 301 0182 7B68     		ldr	r3, [r7, #4]
 302 0184 1B68     		ldr	r3, [r3]
 303 0186 9B69     		ldr	r3, [r3, #24]
 304 0188 23F44071 		bic	r1, r3, #768
 305 018c 7B68     		ldr	r3, [r7, #4]
 306 018e 9A68     		ldr	r2, [r3, #8]
 307 0190 7B68     		ldr	r3, [r7, #4]
 308 0192 1B68     		ldr	r3, [r3]
 309 0194 0A43     		orrs	r2, r2, r1
 310 0196 9A61     		str	r2, [r3, #24]
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset FDCAN Operation Mode */
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, (FDCAN_CCCR_TEST | FDCAN_CCCR_MON | FDCAN_CCCR_ASM));
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 15


 311              		.loc 1 480 3
 312 0198 7B68     		ldr	r3, [r7, #4]
 313 019a 1B68     		ldr	r3, [r3]
 314 019c 9A69     		ldr	r2, [r3, #24]
 315 019e 7B68     		ldr	r3, [r7, #4]
 316 01a0 1B68     		ldr	r3, [r3]
 317 01a2 22F0A402 		bic	r2, r2, #164
 318 01a6 9A61     		str	r2, [r3, #24]
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
 319              		.loc 1 481 3
 320 01a8 7B68     		ldr	r3, [r7, #4]
 321 01aa 1B68     		ldr	r3, [r3]
 322 01ac 1A69     		ldr	r2, [r3, #16]
 323 01ae 7B68     		ldr	r3, [r7, #4]
 324 01b0 1B68     		ldr	r3, [r3]
 325 01b2 22F01002 		bic	r2, r2, #16
 326 01b6 1A61     		str	r2, [r3, #16]
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set FDCAN Operating Mode:
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                | Normal | Restricted |    Bus     | Internal | External
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                |        | Operation  | Monitoring | LoopBack | LoopBack
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.TEST |   0    |     0      |     0      |    1     |    1
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.MON  |   0    |     0      |     1      |    1     |    0
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      TEST.LBCK |   0    |     0      |     0      |    1     |    1
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.ASM  |   0    |     1      |     0      |    0     |    0
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.Mode == FDCAN_MODE_RESTRICTED_OPERATION)
 327              		.loc 1 491 19
 328 01b8 7B68     		ldr	r3, [r7, #4]
 329 01ba DB68     		ldr	r3, [r3, #12]
 330              		.loc 1 491 6
 331 01bc 012B     		cmp	r3, #1
 332 01be 08D1     		bne	.L16
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Restricted Operation mode */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_ASM);
 333              		.loc 1 494 5
 334 01c0 7B68     		ldr	r3, [r7, #4]
 335 01c2 1B68     		ldr	r3, [r3]
 336 01c4 9A69     		ldr	r2, [r3, #24]
 337 01c6 7B68     		ldr	r3, [r7, #4]
 338 01c8 1B68     		ldr	r3, [r3]
 339 01ca 42F00402 		orr	r2, r2, #4
 340 01ce 9A61     		str	r2, [r3, #24]
 341 01d0 30E0     		b	.L17
 342              	.L16:
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->Init.Mode != FDCAN_MODE_NORMAL)
 343              		.loc 1 496 24
 344 01d2 7B68     		ldr	r3, [r7, #4]
 345 01d4 DB68     		ldr	r3, [r3, #12]
 346              		.loc 1 496 11
 347 01d6 002B     		cmp	r3, #0
 348 01d8 2CD0     		beq	.L17
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->Init.Mode != FDCAN_MODE_BUS_MONITORING)
 349              		.loc 1 498 21
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 16


 350 01da 7B68     		ldr	r3, [r7, #4]
 351 01dc DB68     		ldr	r3, [r3, #12]
 352              		.loc 1 498 8
 353 01de 022B     		cmp	r3, #2
 354 01e0 20D0     		beq	.L18
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable write access to TEST register */
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TEST);
 355              		.loc 1 501 7
 356 01e2 7B68     		ldr	r3, [r7, #4]
 357 01e4 1B68     		ldr	r3, [r3]
 358 01e6 9A69     		ldr	r2, [r3, #24]
 359 01e8 7B68     		ldr	r3, [r7, #4]
 360 01ea 1B68     		ldr	r3, [r3]
 361 01ec 42F08002 		orr	r2, r2, #128
 362 01f0 9A61     		str	r2, [r3, #24]
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable LoopBack mode */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
 363              		.loc 1 504 7
 364 01f2 7B68     		ldr	r3, [r7, #4]
 365 01f4 1B68     		ldr	r3, [r3]
 366 01f6 1A69     		ldr	r2, [r3, #16]
 367 01f8 7B68     		ldr	r3, [r7, #4]
 368 01fa 1B68     		ldr	r3, [r3]
 369 01fc 42F01002 		orr	r2, r2, #16
 370 0200 1A61     		str	r2, [r3, #16]
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (hfdcan->Init.Mode == FDCAN_MODE_INTERNAL_LOOPBACK)
 371              		.loc 1 506 23
 372 0202 7B68     		ldr	r3, [r7, #4]
 373 0204 DB68     		ldr	r3, [r3, #12]
 374              		.loc 1 506 10
 375 0206 032B     		cmp	r3, #3
 376 0208 14D1     		bne	.L17
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
 377              		.loc 1 508 9
 378 020a 7B68     		ldr	r3, [r7, #4]
 379 020c 1B68     		ldr	r3, [r3]
 380 020e 9A69     		ldr	r2, [r3, #24]
 381 0210 7B68     		ldr	r3, [r7, #4]
 382 0212 1B68     		ldr	r3, [r3]
 383 0214 42F02002 		orr	r2, r2, #32
 384 0218 9A61     		str	r2, [r3, #24]
 385 021a 0BE0     		b	.L17
 386              	.L28:
 387              		.align	2
 388              	.L27:
 389 021c 00000000 		.word	.LC0
 390 0220 00A00040 		.word	1073782784
 391              	.L18:
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable bus monitoring mode */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 17


 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
 392              		.loc 1 514 7
 393 0224 7B68     		ldr	r3, [r7, #4]
 394 0226 1B68     		ldr	r3, [r3]
 395 0228 9A69     		ldr	r2, [r3, #24]
 396 022a 7B68     		ldr	r3, [r7, #4]
 397 022c 1B68     		ldr	r3, [r3]
 398 022e 42F02002 		orr	r2, r2, #32
 399 0232 9A61     		str	r2, [r3, #24]
 400              	.L17:
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Nothing to do: normal mode */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the nominal bit timing register */
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_
 401              		.loc 1 523 53
 402 0234 7B68     		ldr	r3, [r7, #4]
 403 0236 9B69     		ldr	r3, [r3, #24]
 404              		.loc 1 523 75
 405 0238 013B     		subs	r3, r3, #1
 406              		.loc 1 523 81
 407 023a 5A06     		lsls	r2, r3, #25
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 408              		.loc 1 524 53
 409 023c 7B68     		ldr	r3, [r7, #4]
 410 023e DB69     		ldr	r3, [r3, #28]
 411              		.loc 1 524 70
 412 0240 013B     		subs	r3, r3, #1
 413              		.loc 1 524 76
 414 0242 1B02     		lsls	r3, r3, #8
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 415              		.loc 1 523 105
 416 0244 1A43     		orrs	r2, r2, r3
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos
 417              		.loc 1 525 53
 418 0246 7B68     		ldr	r3, [r7, #4]
 419 0248 1B6A     		ldr	r3, [r3, #32]
 420              		.loc 1 525 76
 421 024a 013B     		subs	r3, r3, #1
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 422              		.loc 1 524 105
 423 024c 42EA0301 		orr	r1, r2, r3
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalPrescaler - 1U) << FDCAN_NBTP_NBRP_Pos)
 424              		.loc 1 526 53
 425 0250 7B68     		ldr	r3, [r7, #4]
 426 0252 5B69     		ldr	r3, [r3, #20]
 427              		.loc 1 526 71
 428 0254 013B     		subs	r3, r3, #1
 429              		.loc 1 526 77
 430 0256 1A04     		lsls	r2, r3, #16
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 431              		.loc 1 523 9
 432 0258 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 18


 433 025a 1B68     		ldr	r3, [r3]
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos
 434              		.loc 1 525 105
 435 025c 0A43     		orrs	r2, r2, r1
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 436              		.loc 1 523 26
 437 025e DA61     		str	r2, [r3, #28]
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* If FD operation with BRS is selected, set the data bit timing register */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
 438              		.loc 1 529 19
 439 0260 7B68     		ldr	r3, [r7, #4]
 440 0262 9B68     		ldr	r3, [r3, #8]
 441              		.loc 1 529 6
 442 0264 B3F5407F 		cmp	r3, #768
 443 0268 15D1     		bne	.L19
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->DBTP = ((((uint32_t)hfdcan->Init.DataSyncJumpWidth - 1U) << FDCAN_DBTP_DSJW_P
 444              		.loc 1 531 55
 445 026a 7B68     		ldr	r3, [r7, #4]
 446 026c 9B6A     		ldr	r3, [r3, #40]
 447              		.loc 1 531 80
 448 026e 5A1E     		subs	r2, r3, #1
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 449              		.loc 1 532 55
 450 0270 7B68     		ldr	r3, [r7, #4]
 451 0272 DB6A     		ldr	r3, [r3, #44]
 452              		.loc 1 532 69
 453 0274 013B     		subs	r3, r3, #1
 454              		.loc 1 532 75
 455 0276 1B02     		lsls	r3, r3, #8
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 456              		.loc 1 531 105
 457 0278 1A43     		orrs	r2, r2, r3
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)
 458              		.loc 1 533 55
 459 027a 7B68     		ldr	r3, [r7, #4]
 460 027c 1B6B     		ldr	r3, [r3, #48]
 461              		.loc 1 533 69
 462 027e 013B     		subs	r3, r3, #1
 463              		.loc 1 533 75
 464 0280 1B01     		lsls	r3, r3, #4
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 465              		.loc 1 532 105
 466 0282 42EA0301 		orr	r1, r2, r3
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataPrescaler - 1U) << FDCAN_DBTP_DBRP_Pos))
 467              		.loc 1 534 55
 468 0286 7B68     		ldr	r3, [r7, #4]
 469 0288 5B6A     		ldr	r3, [r3, #36]
 470              		.loc 1 534 70
 471 028a 013B     		subs	r3, r3, #1
 472              		.loc 1 534 76
 473 028c 1A04     		lsls	r2, r3, #16
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 474              		.loc 1 531 11
 475 028e 7B68     		ldr	r3, [r7, #4]
 476 0290 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 19


 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)
 477              		.loc 1 533 105
 478 0292 0A43     		orrs	r2, r2, r1
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 479              		.loc 1 531 28
 480 0294 DA60     		str	r2, [r3, #12]
 481              	.L19:
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TxFifoQueueElmtsNbr > 0U)
 482              		.loc 1 537 19
 483 0296 7B68     		ldr	r3, [r7, #4]
 484 0298 1B6E     		ldr	r3, [r3, #96]
 485              		.loc 1 537 6
 486 029a 002B     		cmp	r3, #0
 487 029c 0AD0     		beq	.L20
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select between Tx FIFO and Tx Queue operation modes */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->TXBC, hfdcan->Init.TxFifoQueueMode);
 488              		.loc 1 540 5
 489 029e 7B68     		ldr	r3, [r7, #4]
 490 02a0 1B68     		ldr	r3, [r3]
 491 02a2 D3F8C010 		ldr	r1, [r3, #192]
 492 02a6 7B68     		ldr	r3, [r7, #4]
 493 02a8 5A6E     		ldr	r2, [r3, #100]
 494 02aa 7B68     		ldr	r3, [r7, #4]
 495 02ac 1B68     		ldr	r3, [r3]
 496 02ae 0A43     		orrs	r2, r2, r1
 497 02b0 C3F8C020 		str	r2, [r3, #192]
 498              	.L20:
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Tx element size */
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr) > 0U)
 499              		.loc 1 544 20
 500 02b4 7B68     		ldr	r3, [r7, #4]
 501 02b6 DA6D     		ldr	r2, [r3, #92]
 502              		.loc 1 544 48
 503 02b8 7B68     		ldr	r3, [r7, #4]
 504 02ba 1B6E     		ldr	r3, [r3, #96]
 505              		.loc 1 544 34
 506 02bc 1344     		add	r3, r3, r2
 507              		.loc 1 544 6
 508 02be 002B     		cmp	r3, #0
 509 02c0 11D0     		beq	.L21
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TXESC, FDCAN_TXESC_TBDS, CvtEltSize[hfdcan->Init.TxElmtSize]);
 510              		.loc 1 546 5
 511 02c2 7B68     		ldr	r3, [r7, #4]
 512 02c4 1B68     		ldr	r3, [r3]
 513 02c6 D3F8C830 		ldr	r3, [r3, #200]
 514 02ca 23F00701 		bic	r1, r3, #7
 515 02ce 7B68     		ldr	r3, [r7, #4]
 516 02d0 9B6E     		ldr	r3, [r3, #104]
 517 02d2 9B00     		lsls	r3, r3, #2
 518 02d4 6033     		adds	r3, r3, #96
 519 02d6 3B44     		add	r3, r3, r7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 20


 520 02d8 53F8542C 		ldr	r2, [r3, #-84]
 521 02dc 7B68     		ldr	r3, [r7, #4]
 522 02de 1B68     		ldr	r3, [r3]
 523 02e0 0A43     		orrs	r2, r2, r1
 524 02e2 C3F8C820 		str	r2, [r3, #200]
 525              	.L21:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx FIFO 0 element size */
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo0ElmtsNbr > 0U)
 526              		.loc 1 550 19
 527 02e6 7B68     		ldr	r3, [r7, #4]
 528 02e8 1B6C     		ldr	r3, [r3, #64]
 529              		.loc 1 550 6
 530 02ea 002B     		cmp	r3, #0
 531 02ec 11D0     		beq	.L22
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F0DS,
 532              		.loc 1 552 5
 533 02ee 7B68     		ldr	r3, [r7, #4]
 534 02f0 1B68     		ldr	r3, [r3]
 535 02f2 D3F8BC30 		ldr	r3, [r3, #188]
 536 02f6 23F00701 		bic	r1, r3, #7
 537 02fa 7B68     		ldr	r3, [r7, #4]
 538 02fc 5B6C     		ldr	r3, [r3, #68]
 539 02fe 9B00     		lsls	r3, r3, #2
 540 0300 6033     		adds	r3, r3, #96
 541 0302 3B44     		add	r3, r3, r7
 542 0304 53F8542C 		ldr	r2, [r3, #-84]
 543 0308 7B68     		ldr	r3, [r7, #4]
 544 030a 1B68     		ldr	r3, [r3]
 545 030c 0A43     		orrs	r2, r2, r1
 546 030e C3F8BC20 		str	r2, [r3, #188]
 547              	.L22:
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (CvtEltSize[hfdcan->Init.RxFifo0ElmtSize] << FDCAN_RXESC_F0DS_Pos));
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx FIFO 1 element size */
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo1ElmtsNbr > 0U)
 548              		.loc 1 557 19
 549 0312 7B68     		ldr	r3, [r7, #4]
 550 0314 9B6C     		ldr	r3, [r3, #72]
 551              		.loc 1 557 6
 552 0316 002B     		cmp	r3, #0
 553 0318 12D0     		beq	.L23
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F1DS,
 554              		.loc 1 559 5
 555 031a 7B68     		ldr	r3, [r7, #4]
 556 031c 1B68     		ldr	r3, [r3]
 557 031e D3F8BC30 		ldr	r3, [r3, #188]
 558 0322 23F07001 		bic	r1, r3, #112
 559 0326 7B68     		ldr	r3, [r7, #4]
 560 0328 DB6C     		ldr	r3, [r3, #76]
 561 032a 9B00     		lsls	r3, r3, #2
 562 032c 6033     		adds	r3, r3, #96
 563 032e 3B44     		add	r3, r3, r7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 21


 564 0330 53F8543C 		ldr	r3, [r3, #-84]
 565 0334 1A01     		lsls	r2, r3, #4
 566 0336 7B68     		ldr	r3, [r7, #4]
 567 0338 1B68     		ldr	r3, [r3]
 568 033a 0A43     		orrs	r2, r2, r1
 569 033c C3F8BC20 		str	r2, [r3, #188]
 570              	.L23:
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (CvtEltSize[hfdcan->Init.RxFifo1ElmtSize] << FDCAN_RXESC_F1DS_Pos));
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx buffer element size */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxBuffersNbr > 0U)
 571              		.loc 1 564 19
 572 0340 7B68     		ldr	r3, [r7, #4]
 573 0342 1B6D     		ldr	r3, [r3, #80]
 574              		.loc 1 564 6
 575 0344 002B     		cmp	r3, #0
 576 0346 12D0     		beq	.L24
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_RBDS,
 577              		.loc 1 566 5
 578 0348 7B68     		ldr	r3, [r7, #4]
 579 034a 1B68     		ldr	r3, [r3]
 580 034c D3F8BC30 		ldr	r3, [r3, #188]
 581 0350 23F4E061 		bic	r1, r3, #1792
 582 0354 7B68     		ldr	r3, [r7, #4]
 583 0356 5B6D     		ldr	r3, [r3, #84]
 584 0358 9B00     		lsls	r3, r3, #2
 585 035a 6033     		adds	r3, r3, #96
 586 035c 3B44     		add	r3, r3, r7
 587 035e 53F8543C 		ldr	r3, [r3, #-84]
 588 0362 1A02     		lsls	r2, r3, #8
 589 0364 7B68     		ldr	r3, [r7, #4]
 590 0366 1B68     		ldr	r3, [r3]
 591 0368 0A43     		orrs	r2, r2, r1
 592 036a C3F8BC20 		str	r2, [r3, #188]
 593              	.L24:
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (CvtEltSize[hfdcan->Init.RxBufferSize] << FDCAN_RXESC_RBDS_Pos));
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* By default operation mode is set to Event-driven communication.
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      If Time-triggered communication is needed, user should call the
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      HAL_FDCAN_TT_ConfigOperation function just after the HAL_FDCAN_Init */
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
 594              		.loc 1 573 13
 595 036e 7B68     		ldr	r3, [r7, #4]
 596 0370 1B68     		ldr	r3, [r3]
 597              		.loc 1 573 6
 598 0372 114A     		ldr	r2, .L29
 599 0374 9342     		cmp	r3, r2
 600 0376 07D1     		bne	.L25
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCF, FDCAN_TTOCF_OM);
 601              		.loc 1 575 5
 602 0378 7B68     		ldr	r3, [r7, #4]
 603 037a 5B68     		ldr	r3, [r3, #4]
 604 037c 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 22


 605 037e 7B68     		ldr	r3, [r7, #4]
 606 0380 5B68     		ldr	r3, [r3, #4]
 607 0382 22F00302 		bic	r2, r2, #3
 608 0386 9A60     		str	r2, [r3, #8]
 609              	.L25:
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the Latest Tx FIFO/Queue request buffer index */
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->LatestTxFifoQRequest = 0U;
 610              		.loc 1 579 32
 611 0388 7B68     		ldr	r3, [r7, #4]
 612 038a 0022     		movs	r2, #0
 613 038c C3F89420 		str	r2, [r3, #148]
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the error code */
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 614              		.loc 1 582 21
 615 0390 7B68     		ldr	r3, [r7, #4]
 616 0392 0022     		movs	r2, #0
 617 0394 C3F89C20 		str	r2, [r3, #156]
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the FDCAN state */
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->State = HAL_FDCAN_STATE_READY;
 618              		.loc 1 585 17
 619 0398 7B68     		ldr	r3, [r7, #4]
 620 039a 0122     		movs	r2, #1
 621 039c 83F89820 		strb	r2, [r3, #152]
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Calculate each RAM block address */
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   status = FDCAN_CalcultateRamBlockAddresses(hfdcan);
 622              		.loc 1 588 12
 623 03a0 7868     		ldr	r0, [r7, #4]
 624 03a2 FFF7FEFF 		bl	FDCAN_CalcultateRamBlockAddresses
 625 03a6 0346     		mov	r3, r0
 626 03a8 87F85B30 		strb	r3, [r7, #91]
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 627              		.loc 1 591 10
 628 03ac 97F85B30 		ldrb	r3, [r7, #91]	@ zero_extendqisi2
 629              	.L26:
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 630              		.loc 1 592 1
 631 03b0 1846     		mov	r0, r3
 632 03b2 6037     		adds	r7, r7, #96
 633              	.LCFI3:
 634              		.cfi_def_cfa_offset 8
 635 03b4 BD46     		mov	sp, r7
 636              	.LCFI4:
 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 03b6 80BD     		pop	{r7, pc}
 640              	.L30:
 641              		.align	2
 642              	.L29:
 643 03b8 00A00040 		.word	1073782784
 644              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 23


 645              	.LFE144:
 647              		.section	.text.HAL_FDCAN_DeInit,"ax",%progbits
 648              		.align	1
 649              		.global	HAL_FDCAN_DeInit
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	HAL_FDCAN_DeInit:
 655              	.LFB145:
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Deinitializes the FDCAN peripheral registers to their default reset values.
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DeInit(FDCAN_HandleTypeDef *hfdcan)
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 656              		.loc 1 601 1
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 8
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660 0000 80B5     		push	{r7, lr}
 661              	.LCFI5:
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 82B0     		sub	sp, sp, #8
 666              	.LCFI6:
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              	.LCFI7:
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN handle */
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan == NULL)
 672              		.loc 1 603 6
 673 0008 7B68     		ldr	r3, [r7, #4]
 674 000a 002B     		cmp	r3, #0
 675 000c 01D1     		bne	.L32
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 676              		.loc 1 605 12
 677 000e 0123     		movs	r3, #1
 678 0010 16E0     		b	.L33
 679              	.L32:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ALL_INSTANCE(hfdcan->Instance));
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Stop the FDCAN module: return value is voluntary ignored */
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   (void)HAL_FDCAN_Stop(hfdcan);
 680              		.loc 1 612 9
 681 0012 7868     		ldr	r0, [r7, #4]
 682 0014 FFF7FEFF 		bl	HAL_FDCAN_Stop
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 24


 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Disable Interrupt lines */
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->ILE, (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1));
 683              		.loc 1 615 3
 684 0018 7B68     		ldr	r3, [r7, #4]
 685 001a 1B68     		ldr	r3, [r3]
 686 001c DA6D     		ldr	r2, [r3, #92]
 687 001e 7B68     		ldr	r3, [r7, #4]
 688 0020 1B68     		ldr	r3, [r3]
 689 0022 22F00302 		bic	r2, r2, #3
 690 0026 DA65     		str	r2, [r3, #92]
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->MspDeInitCallback == NULL)
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit; /* Legacy weak MspDeInit */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->MspDeInitCallback(hfdcan);
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_MspDeInit(hfdcan);
 691              		.loc 1 627 3
 692 0028 7868     		ldr	r0, [r7, #4]
 693 002a FFF7FEFF 		bl	HAL_FDCAN_MspDeInit
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset the FDCAN ErrorCode */
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 694              		.loc 1 631 21
 695 002e 7B68     		ldr	r3, [r7, #4]
 696 0030 0022     		movs	r2, #0
 697 0032 C3F89C20 		str	r2, [r3, #156]
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Change FDCAN state */
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->State = HAL_FDCAN_STATE_RESET;
 698              		.loc 1 634 17
 699 0036 7B68     		ldr	r3, [r7, #4]
 700 0038 0022     		movs	r2, #0
 701 003a 83F89820 		strb	r2, [r3, #152]
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 702              		.loc 1 637 10
 703 003e 0023     		movs	r3, #0
 704              	.L33:
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 705              		.loc 1 638 1
 706 0040 1846     		mov	r0, r3
 707 0042 0837     		adds	r7, r7, #8
 708              	.LCFI8:
 709              		.cfi_def_cfa_offset 8
 710 0044 BD46     		mov	sp, r7
 711              	.LCFI9:
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0046 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 25


 715              		.cfi_endproc
 716              	.LFE145:
 718              		.section	.text.HAL_FDCAN_MspInit,"ax",%progbits
 719              		.align	1
 720              		.weak	HAL_FDCAN_MspInit
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	HAL_FDCAN_MspInit:
 726              	.LFB146:
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initializes the FDCAN MSP.
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef *hfdcan)
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 727              		.loc 1 647 1
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 8
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732 0000 80B4     		push	{r7}
 733              	.LCFI10:
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 7, -4
 736 0002 83B0     		sub	sp, sp, #12
 737              	.LCFI11:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI12:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_MspInit could be implemented in the user file
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 743              		.loc 1 653 1
 744 0008 00BF     		nop
 745 000a 0C37     		adds	r7, r7, #12
 746              	.LCFI13:
 747              		.cfi_def_cfa_offset 4
 748 000c BD46     		mov	sp, r7
 749              	.LCFI14:
 750              		.cfi_def_cfa_register 13
 751              		@ sp needed
 752 000e 5DF8047B 		ldr	r7, [sp], #4
 753              	.LCFI15:
 754              		.cfi_restore 7
 755              		.cfi_def_cfa_offset 0
 756 0012 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE146:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 26


 760              		.section	.text.HAL_FDCAN_MspDeInit,"ax",%progbits
 761              		.align	1
 762              		.weak	HAL_FDCAN_MspDeInit
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	HAL_FDCAN_MspDeInit:
 768              	.LFB147:
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  DeInitializes the FDCAN MSP.
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_MspDeInit(FDCAN_HandleTypeDef *hfdcan)
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 769              		.loc 1 662 1
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 8
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774 0000 80B4     		push	{r7}
 775              	.LCFI16:
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 7, -4
 778 0002 83B0     		sub	sp, sp, #12
 779              	.LCFI17:
 780              		.cfi_def_cfa_offset 16
 781 0004 00AF     		add	r7, sp, #0
 782              	.LCFI18:
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_MspDeInit could be implemented in the user file
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 785              		.loc 1 668 1
 786 0008 00BF     		nop
 787 000a 0C37     		adds	r7, r7, #12
 788              	.LCFI19:
 789              		.cfi_def_cfa_offset 4
 790 000c BD46     		mov	sp, r7
 791              	.LCFI20:
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 000e 5DF8047B 		ldr	r7, [sp], #4
 795              	.LCFI21:
 796              		.cfi_restore 7
 797              		.cfi_def_cfa_offset 0
 798 0012 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE147:
 802              		.section	.text.HAL_FDCAN_EnterPowerDownMode,"ax",%progbits
 803              		.align	1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 27


 804              		.global	HAL_FDCAN_EnterPowerDownMode
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 809              	HAL_FDCAN_EnterPowerDownMode:
 810              	.LFB148:
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enter FDCAN peripheral in sleep mode.
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnterPowerDownMode(FDCAN_HandleTypeDef *hfdcan)
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 811              		.loc 1 677 1
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 16
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              	.LCFI22:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 84B0     		sub	sp, sp, #16
 821              	.LCFI23:
 822              		.cfi_def_cfa_offset 24
 823 0004 00AF     		add	r7, sp, #0
 824              	.LCFI24:
 825              		.cfi_def_cfa_register 7
 826 0006 7860     		str	r0, [r7, #4]
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Request clock stop */
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 827              		.loc 1 681 3
 828 0008 7B68     		ldr	r3, [r7, #4]
 829 000a 1B68     		ldr	r3, [r3]
 830 000c 9A69     		ldr	r2, [r3, #24]
 831 000e 7B68     		ldr	r3, [r7, #4]
 832 0010 1B68     		ldr	r3, [r3]
 833 0012 42F01002 		orr	r2, r2, #16
 834 0016 9A61     		str	r2, [r3, #24]
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 835              		.loc 1 684 15
 836 0018 FFF7FEFF 		bl	HAL_GetTick
 837 001c F860     		str	r0, [r7, #12]
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until FDCAN is ready for power down */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == 0U)
 838              		.loc 1 687 9
 839 001e 14E0     		b	.L37
 840              	.L39:
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 28


 841              		.loc 1 689 10
 842 0020 FFF7FEFF 		bl	HAL_GetTick
 843 0024 0246     		mov	r2, r0
 844              		.loc 1 689 24 discriminator 1
 845 0026 FB68     		ldr	r3, [r7, #12]
 846 0028 D31A     		subs	r3, r2, r3
 847              		.loc 1 689 8 discriminator 1
 848 002a 0A2B     		cmp	r3, #10
 849 002c 0DD9     		bls	.L37
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 850              		.loc 1 692 13
 851 002e 7B68     		ldr	r3, [r7, #4]
 852 0030 D3F89C30 		ldr	r3, [r3, #156]
 853              		.loc 1 692 25
 854 0034 43F00102 		orr	r2, r3, #1
 855 0038 7B68     		ldr	r3, [r7, #4]
 856 003a C3F89C20 		str	r2, [r3, #156]
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 857              		.loc 1 695 21
 858 003e 7B68     		ldr	r3, [r7, #4]
 859 0040 0322     		movs	r2, #3
 860 0042 83F89820 		strb	r2, [r3, #152]
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 861              		.loc 1 697 14
 862 0046 0123     		movs	r3, #1
 863 0048 07E0     		b	.L38
 864              	.L37:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 865              		.loc 1 687 17
 866 004a 7B68     		ldr	r3, [r7, #4]
 867 004c 1B68     		ldr	r3, [r3]
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 868              		.loc 1 687 27
 869 004e 9B69     		ldr	r3, [r3, #24]
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 870              		.loc 1 687 34
 871 0050 03F00803 		and	r3, r3, #8
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 872              		.loc 1 687 52
 873 0054 002B     		cmp	r3, #0
 874 0056 E3D0     		beq	.L39
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 875              		.loc 1 702 10
 876 0058 0023     		movs	r3, #0
 877              	.L38:
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 878              		.loc 1 703 1
 879 005a 1846     		mov	r0, r3
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 29


 880 005c 1037     		adds	r7, r7, #16
 881              	.LCFI25:
 882              		.cfi_def_cfa_offset 8
 883 005e BD46     		mov	sp, r7
 884              	.LCFI26:
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0060 80BD     		pop	{r7, pc}
 888              		.cfi_endproc
 889              	.LFE148:
 891              		.section	.text.HAL_FDCAN_ExitPowerDownMode,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_FDCAN_ExitPowerDownMode
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 898              	HAL_FDCAN_ExitPowerDownMode:
 899              	.LFB149:
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Exit power down mode.
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ExitPowerDownMode(FDCAN_HandleTypeDef *hfdcan)
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 900              		.loc 1 712 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 16
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 80B5     		push	{r7, lr}
 905              	.LCFI27:
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 84B0     		sub	sp, sp, #16
 910              	.LCFI28:
 911              		.cfi_def_cfa_offset 24
 912 0004 00AF     		add	r7, sp, #0
 913              	.LCFI29:
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset clock stop request */
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 916              		.loc 1 716 3
 917 0008 7B68     		ldr	r3, [r7, #4]
 918 000a 1B68     		ldr	r3, [r3]
 919 000c 9A69     		ldr	r2, [r3, #24]
 920 000e 7B68     		ldr	r3, [r7, #4]
 921 0010 1B68     		ldr	r3, [r3]
 922 0012 22F01002 		bic	r2, r2, #16
 923 0016 9A61     		str	r2, [r3, #24]
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 30


 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 924              		.loc 1 719 15
 925 0018 FFF7FEFF 		bl	HAL_GetTick
 926 001c F860     		str	r0, [r7, #12]
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until FDCAN exits sleep mode */
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 927              		.loc 1 722 9
 928 001e 14E0     		b	.L41
 929              	.L43:
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 930              		.loc 1 724 10
 931 0020 FFF7FEFF 		bl	HAL_GetTick
 932 0024 0246     		mov	r2, r0
 933              		.loc 1 724 24 discriminator 1
 934 0026 FB68     		ldr	r3, [r7, #12]
 935 0028 D31A     		subs	r3, r2, r3
 936              		.loc 1 724 8 discriminator 1
 937 002a 0A2B     		cmp	r3, #10
 938 002c 0DD9     		bls	.L41
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 939              		.loc 1 727 13
 940 002e 7B68     		ldr	r3, [r7, #4]
 941 0030 D3F89C30 		ldr	r3, [r3, #156]
 942              		.loc 1 727 25
 943 0034 43F00102 		orr	r2, r3, #1
 944 0038 7B68     		ldr	r3, [r7, #4]
 945 003a C3F89C20 		str	r2, [r3, #156]
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 946              		.loc 1 730 21
 947 003e 7B68     		ldr	r3, [r7, #4]
 948 0040 0322     		movs	r2, #3
 949 0042 83F89820 		strb	r2, [r3, #152]
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 950              		.loc 1 732 14
 951 0046 0123     		movs	r3, #1
 952 0048 0FE0     		b	.L42
 953              	.L41:
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 954              		.loc 1 722 17
 955 004a 7B68     		ldr	r3, [r7, #4]
 956 004c 1B68     		ldr	r3, [r3]
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 957              		.loc 1 722 27
 958 004e 9B69     		ldr	r3, [r3, #24]
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 959              		.loc 1 722 34
 960 0050 03F00803 		and	r3, r3, #8
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 961              		.loc 1 722 52
 962 0054 082B     		cmp	r3, #8
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 31


 963 0056 E3D0     		beq	.L43
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Enter normal operation */
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 964              		.loc 1 737 3
 965 0058 7B68     		ldr	r3, [r7, #4]
 966 005a 1B68     		ldr	r3, [r3]
 967 005c 9A69     		ldr	r2, [r3, #24]
 968 005e 7B68     		ldr	r3, [r7, #4]
 969 0060 1B68     		ldr	r3, [r3]
 970 0062 22F00102 		bic	r2, r2, #1
 971 0066 9A61     		str	r2, [r3, #24]
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 972              		.loc 1 740 10
 973 0068 0023     		movs	r3, #0
 974              	.L42:
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 975              		.loc 1 741 1
 976 006a 1846     		mov	r0, r3
 977 006c 1037     		adds	r7, r7, #16
 978              	.LCFI30:
 979              		.cfi_def_cfa_offset 8
 980 006e BD46     		mov	sp, r7
 981              	.LCFI31:
 982              		.cfi_def_cfa_register 13
 983              		@ sp needed
 984 0070 80BD     		pop	{r7, pc}
 985              		.cfi_endproc
 986              	.LFE149:
 988              		.section	.text.HAL_FDCAN_ConfigClockCalibration,"ax",%progbits
 989              		.align	1
 990              		.global	HAL_FDCAN_ConfigClockCalibration
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 995              	HAL_FDCAN_ConfigClockCalibration:
 996              	.LFB150:
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register a FDCAN CallBack.
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak predefined callback
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to a FDCAN_HandleTypeDef structure that contains
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for FDCAN module
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CallbackID ID of the callback to be registered
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty callback ID
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID Rx buffer new message callback ID
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID High priority message callback ID
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID Timestamp wraparound callback ID
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID Timeout occurred callback ID
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_ERROR_CALLBACK_CB_ID Error callback ID
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPINIT_CB_ID MspInit callback ID
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 32


 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPDEINIT_CB_ID MspDeInit callback ID
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Callback function
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterCallback(FDCAN_HandleTypeDef *hfdcan, HAL_FDCAN_CallbackIDTypeD
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                              void (* pCallback)(FDCAN_HandleTypeDef *_hFDCAN))
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TX_FIFO_EMPTY_CB_ID :
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TxFifoEmptyCallback = pCallback;
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID :
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->RxBufferNewMessageCallback = pCallback;
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID :
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->HighPriorityMessageCallback = pCallback;
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID :
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimestampWraparoundCallback = pCallback;
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID :
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimeoutOccurredCallback = pCallback;
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_ERROR_CALLBACK_CB_ID :
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCallback = pCallback;
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = pCallback;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = pCallback;
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 33


 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = pCallback;
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = pCallback;
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Unregister a FDCAN CallBack.
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         FDCAN callback is redirected to the weak predefined callback
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to a FDCAN_HandleTypeDef structure that contains
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for FDCAN module
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CallbackID ID of the callback to be unregistered
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty callback ID
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID Rx buffer new message callback ID
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID High priority message callback ID
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID Timestamp wraparound callback ID
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID Timeout occurred callback ID
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_ERROR_CALLBACK_CB_ID Error callback ID
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPINIT_CB_ID MspInit callback ID
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPDEINIT_CB_ID MspDeInit callback ID
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterCallback(FDCAN_HandleTypeDef *hfdcan, HAL_FDCAN_CallbackIDTyp
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 34


 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TX_FIFO_EMPTY_CB_ID :
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TxFifoEmptyCallback = HAL_FDCAN_TxFifoEmptyCallback;
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID :
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->RxBufferNewMessageCallback = HAL_FDCAN_RxBufferNewMessageCallback;
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID :
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->HighPriorityMessageCallback = HAL_FDCAN_HighPriorityMessageCallback;
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID :
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimestampWraparoundCallback = HAL_FDCAN_TimestampWraparoundCallback;
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID :
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimeoutOccurredCallback = HAL_FDCAN_TimeoutOccurredCallback;
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_ERROR_CALLBACK_CB_ID :
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCallback = HAL_FDCAN_ErrorCallback;
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = HAL_FDCAN_MspInit;
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit;
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = HAL_FDCAN_MspInit;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 35


 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Clock Calibration FDCAN Callback
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_ClockCalibrationCallback() predefined callback
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Clock Calibration Callback function
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan,
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                              pFDCAN_ClockCalibrationCallbackTypeDef
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback = pCallback;
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 36


 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Clock Calibration FDCAN Callback
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Clock Calibration FDCAN Callback is redirected to the weak
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         HAL_FDCAN_ClockCalibrationCallback() predefined callback
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan)
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback = HAL_FDCAN_ClockCalibrationCallback; /* Legacy weak ClockCali
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Event Fifo FDCAN Callback
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxEventFifoCallback() predefined callback
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Event Fifo Callback function
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan,
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                         pFDCAN_TxEventFifoCallbackTypeDef pCallback
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback = pCallback;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 37


1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Event Fifo FDCAN Callback
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Event Fifo FDCAN Callback is redirected to the weak HAL_FDCAN_TxEventFifoCallback() 
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan)
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback = HAL_FDCAN_TxEventFifoCallback; /* Legacy weak TxEventFifoCallback
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Rx Fifo 0 FDCAN Callback
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_RxFifo0Callback() predefined callback
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Rx Fifo 0 Callback function
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterRxFifo0Callback(FDCAN_HandleTypeDef *hfdcan,
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     pFDCAN_RxFifo0CallbackTypeDef pCallback)
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback = pCallback;
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 38


1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Rx Fifo 0 FDCAN Callback
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Rx Fifo 0 FDCAN Callback is redirected to the weak HAL_FDCAN_RxFifo0Callback() predefin
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterRxFifo0Callback(FDCAN_HandleTypeDef *hfdcan)
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback = HAL_FDCAN_RxFifo0Callback; /* Legacy weak RxFifo0Callback  */
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Rx Fifo 1 FDCAN Callback
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_RxFifo1Callback() predefined callback
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Rx Fifo 1 Callback function
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterRxFifo1Callback(FDCAN_HandleTypeDef *hfdcan,
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     pFDCAN_RxFifo1CallbackTypeDef pCallback)
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 39


1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback = pCallback;
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Rx Fifo 1 FDCAN Callback
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Rx Fifo 1 FDCAN Callback is redirected to the weak HAL_FDCAN_RxFifo1Callback() predefin
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterRxFifo1Callback(FDCAN_HandleTypeDef *hfdcan)
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback = HAL_FDCAN_RxFifo1Callback; /* Legacy weak RxFifo1Callback  */
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Buffer Complete FDCAN Callback
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxBufferCompleteCallback() predefined callback
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Buffer Complete Callback function
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan,
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                              pFDCAN_TxBufferCompleteCallbackTypeDef
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 40


1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback = pCallback;
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Buffer Complete FDCAN Callback
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Buffer Complete FDCAN Callback is redirected to
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the weak HAL_FDCAN_TxBufferCompleteCallback() predefined callback
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan)
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback = HAL_FDCAN_TxBufferCompleteCallback; /* Legacy weak TxBufferC
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Buffer Abort FDCAN Callback
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxBufferAbortCallback() predefined callback
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Buffer Abort Callback function
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan,
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                           pFDCAN_TxBufferAbortCallbackTypeDef pCall
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 41


1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback = pCallback;
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Buffer Abort FDCAN Callback
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Buffer Abort FDCAN Callback is redirected to
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the weak HAL_FDCAN_TxBufferAbortCallback() predefined callback
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan)
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback = HAL_FDCAN_TxBufferAbortCallback; /* Legacy weak TxBufferAbortCa
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Error Status FDCAN Callback
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_ErrorStatusCallback() predefined callback
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Error Status Callback function
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 42


1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan,
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                         pFDCAN_ErrorStatusCallbackTypeDef pCallback
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback = pCallback;
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Error Status FDCAN Callback
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Error Status FDCAN Callback is redirected to the weak HAL_FDCAN_ErrorStatusCallback() p
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan)
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback = HAL_FDCAN_ErrorStatusCallback; /* Legacy weak ErrorStatusCallback
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Schedule Synchronization FDCAN Callback
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_ScheduleSyncCallback() predefined callback
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 43


1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Schedule Synchronization Callback function
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan,
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                            pFDCAN_TT_ScheduleSyncCallbackTypeDef pC
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback = pCallback;
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Schedule Synchronization FDCAN Callback
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Schedule Synchronization Callback is redirected to the weak
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         HAL_FDCAN_TT_ScheduleSyncCallback() predefined callback
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan)
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback = HAL_FDCAN_TT_ScheduleSyncCallback; /* Legacy weak TT_Schedule
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 44


1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Time Mark FDCAN Callback
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_TimeMarkCallback() predefined callback
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Time Mark Callback function
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTTimeMarkCallback(FDCAN_HandleTypeDef *hfdcan,
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                        pFDCAN_TT_TimeMarkCallbackTypeDef pCallback)
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback = pCallback;
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Time Mark FDCAN Callback
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Time Mark Callback is redirected to the weak HAL_FDCAN_TT_TimeMarkCallback() predefi
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTTimeMarkCallback(FDCAN_HandleTypeDef *hfdcan)
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback = HAL_FDCAN_TT_TimeMarkCallback; /* Legacy weak TT_TimeMarkCallback
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 45


1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Stop Watch FDCAN Callback
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_StopWatchCallback() predefined callback
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Stop Watch Callback function
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTStopWatchCallback(FDCAN_HandleTypeDef *hfdcan,
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                         pFDCAN_TT_StopWatchCallbackTypeDef pCallbac
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback = pCallback;
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Stop Watch FDCAN Callback
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Stop Watch Callback is redirected to the weak HAL_FDCAN_TT_StopWatchCallback() prede
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTStopWatchCallback(FDCAN_HandleTypeDef *hfdcan)
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback = HAL_FDCAN_TT_StopWatchCallback; /* Legacy weak TT_StopWatchCallb
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 46


1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Global Time FDCAN Callback
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_GlobalTimeCallback() predefined callback
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Global Time Callback function
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTGlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan,
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                          pFDCAN_TT_GlobalTimeCallbackTypeDef pCallb
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback = pCallback;
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Global Time FDCAN Callback
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Global Time Callback is redirected to the weak HAL_FDCAN_TT_GlobalTimeCallback() pre
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTGlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan)
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 47


1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback = HAL_FDCAN_TT_GlobalTimeCallback; /* Legacy weak TT_GlobalTimeCa
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group2 Configuration functions
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief    FDCAN Configuration functions.
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### Configuration functions #####
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigClockCalibration        : Configure the FDCAN clock calibration unit
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetClockCalibrationState      : Get the clock calibration state
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetClockCalibrationState    : Reset the clock calibration state
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetClockCalibrationCounter    : Get the clock calibration counters values
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigFilter                  : Configure the FDCAN reception filters
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigGlobalFilter            : Configure the FDCAN global filter
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigExtendedIdMask          : Configure the extended ID mask
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigRxFifoOverwrite         : Configure the Rx FIFO operation mode
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigFifoWatermark           : Configure the FIFO watermark
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigRamWatchdog             : Configure the RAM watchdog
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTimestampCounter        : Configure the timestamp counter
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTimestampCounter        : Enable the timestamp counter
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTimestampCounter       : Disable the timestamp counter
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetTimestampCounter           : Get the timestamp counter value
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetTimestampCounter         : Reset the timestamp counter to zero
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTimeoutCounter          : Configure the timeout counter
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTimeoutCounter          : Enable the timeout counter
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTimeoutCounter         : Disable the timeout counter
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetTimeoutCounter             : Get the timeout counter value
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetTimeoutCounter           : Reset the timeout counter to its start value
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTxDelayCompensation     : Configure the transmitter delay compensation
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTxDelayCompensation     : Enable the transmitter delay compensation
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTxDelayCompensation    : Disable the transmitter delay compensation
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableISOMode                 : Enable ISO 11898-1 protocol mode
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DisableISOMode                : Disable ISO 11898-1 protocol mode
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableEdgeFiltering           : Enable edge filtering during bus integration
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DisableEdgeFiltering          : Disable edge filtering during bus integration
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 48


1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN clock calibration unit according to the specified
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_ClkCalUnitTypeDef structure.
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sCcuConfig pointer to an FDCAN_ClkCalUnitTypeDef structure that
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the clock calibration information
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigClockCalibration(FDCAN_HandleTypeDef *hfdcan,
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                    const FDCAN_ClkCalUnitTypeDef *sCcuConfig)
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 997              		.loc 1 1684 1
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 8
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002 0000 80B4     		push	{r7}
 1003              	.LCFI32:
 1004              		.cfi_def_cfa_offset 4
 1005              		.cfi_offset 7, -4
 1006 0002 83B0     		sub	sp, sp, #12
 1007              	.LCFI33:
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              	.LCFI34:
 1011              		.cfi_def_cfa_register 7
 1012 0006 7860     		str	r0, [r7, #4]
 1013 0008 3960     		str	r1, [r7]
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_CLOCK_CALIBRATION(sCcuConfig->ClockCalibration));
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sCcuConfig->ClockCalibration == FDCAN_CLOCK_CALIBRATION_DISABLE)
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_CKDIV(sCcuConfig->ClockDivider));
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->MinOscClkPeriods, 0xFFU));
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_CALIBRATION_FIELD_LENGTH(sCcuConfig->CalFieldLength));
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MIN_VALUE(sCcuConfig->TimeQuantaPerBitTime, 4U));
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->TimeQuantaPerBitTime, 0x25U));
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->WatchdogStartValue, 0xFFFFU));
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* FDCAN1 should be initialized in order to use clock calibration */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance != FDCAN1)
 1014              		.loc 1 1701 13
 1015 000a 7B68     		ldr	r3, [r7, #4]
 1016 000c 1B68     		ldr	r3, [r3]
 1017              		.loc 1 1701 6
 1018 000e 2C4A     		ldr	r2, .L50
 1019 0010 9342     		cmp	r3, r2
 1020 0012 09D0     		beq	.L45
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 49


1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 1021              		.loc 1 1704 11
 1022 0014 7B68     		ldr	r3, [r7, #4]
 1023 0016 D3F89C30 		ldr	r3, [r3, #156]
 1024              		.loc 1 1704 23
 1025 001a 43F02002 		orr	r2, r3, #32
 1026 001e 7B68     		ldr	r3, [r7, #4]
 1027 0020 C3F89C20 		str	r2, [r3, #156]
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1028              		.loc 1 1706 12
 1029 0024 0123     		movs	r3, #1
 1030 0026 44E0     		b	.L46
 1031              	.L45:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1032              		.loc 1 1709 13
 1033 0028 7B68     		ldr	r3, [r7, #4]
 1034 002a 93F89830 		ldrb	r3, [r3, #152]
 1035 002e DBB2     		uxtb	r3, r3
 1036              		.loc 1 1709 6
 1037 0030 012B     		cmp	r3, #1
 1038 0032 35D1     		bne	.L47
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sCcuConfig->ClockCalibration == FDCAN_CLOCK_CALIBRATION_DISABLE)
 1039              		.loc 1 1711 19
 1040 0034 3B68     		ldr	r3, [r7]
 1041 0036 1B68     		ldr	r3, [r3]
 1042              		.loc 1 1711 8
 1043 0038 002B     		cmp	r3, #0
 1044 003a 10D1     		bne	.L48
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Bypass clock calibration */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_BCC);
 1045              		.loc 1 1714 7
 1046 003c 214B     		ldr	r3, .L50+4
 1047 003e 5B68     		ldr	r3, [r3, #4]
 1048 0040 204A     		ldr	r2, .L50+4
 1049 0042 43F04003 		orr	r3, r3, #64
 1050 0046 5360     		str	r3, [r2, #4]
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure clock divider */
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CCFG, FDCANCCU_CCFG_CDIV,
 1051              		.loc 1 1717 7
 1052 0048 1E4B     		ldr	r3, .L50+4
 1053 004a 5B68     		ldr	r3, [r3, #4]
 1054 004c 23F47022 		bic	r2, r3, #983040
 1055 0050 3B68     		ldr	r3, [r7]
 1056 0052 5B68     		ldr	r3, [r3, #4]
 1057 0054 1B04     		lsls	r3, r3, #16
 1058 0056 1B49     		ldr	r1, .L50+4
 1059 0058 1343     		orrs	r3, r3, r2
 1060 005a 4B60     		str	r3, [r1, #4]
 1061 005c 1EE0     		b	.L49
 1062              	.L48:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 50


1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (sCcuConfig->ClockDivider << FDCANCCU_CCFG_CDIV_Pos));
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sCcuConfig->ClockCalibration == ENABLE */
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clock calibration unit generates time quanta clock */
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_BCC);
 1063              		.loc 1 1723 7
 1064 005e 194B     		ldr	r3, .L50+4
 1065 0060 5B68     		ldr	r3, [r3, #4]
 1066 0062 184A     		ldr	r2, .L50+4
 1067 0064 23F04003 		bic	r3, r3, #64
 1068 0068 5360     		str	r3, [r2, #4]
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure clock calibration unit */
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CCFG,
 1069              		.loc 1 1726 7
 1070 006a 164B     		ldr	r3, .L50+4
 1071 006c 5A68     		ldr	r2, [r3, #4]
 1072 006e 164B     		ldr	r3, .L50+8
 1073 0070 1340     		ands	r3, r3, r2
 1074 0072 3A68     		ldr	r2, [r7]
 1075 0074 1169     		ldr	r1, [r2, #16]
 1076 0076 3A68     		ldr	r2, [r7]
 1077 0078 D268     		ldr	r2, [r2, #12]
 1078 007a 1143     		orrs	r1, r1, r2
 1079 007c 3A68     		ldr	r2, [r7]
 1080 007e 9268     		ldr	r2, [r2, #8]
 1081 0080 1202     		lsls	r2, r2, #8
 1082 0082 0A43     		orrs	r2, r2, r1
 1083 0084 0F49     		ldr	r1, .L50+4
 1084 0086 1343     		orrs	r3, r3, r2
 1085 0088 4B60     		str	r3, [r1, #4]
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCANCCU_CCFG_TQBT | FDCANCCU_CCFG_CFL | FDCANCCU_CCFG_OCPM),
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  ((sCcuConfig->TimeQuantaPerBitTime << FDCANCCU_CCFG_TQBT_Pos) |
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   sCcuConfig->CalFieldLength | (sCcuConfig->MinOscClkPeriods << FDCANCCU_CCFG_OCPM_
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure the start value of the calibration watchdog counter */
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CWD, FDCANCCU_CWD_WDC, sCcuConfig->WatchdogStartValue);
 1086              		.loc 1 1732 7
 1087 008a 0E4B     		ldr	r3, .L50+4
 1088 008c DA68     		ldr	r2, [r3, #12]
 1089 008e 0F4B     		ldr	r3, .L50+12
 1090 0090 1340     		ands	r3, r3, r2
 1091 0092 3A68     		ldr	r2, [r7]
 1092 0094 5269     		ldr	r2, [r2, #20]
 1093 0096 0B49     		ldr	r1, .L50+4
 1094 0098 1343     		orrs	r3, r3, r2
 1095 009a CB60     		str	r3, [r1, #12]
 1096              	.L49:
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1097              		.loc 1 1736 12
 1098 009c 0023     		movs	r3, #0
 1099 009e 08E0     		b	.L46
 1100              	.L47:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 51


1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1101              		.loc 1 1741 11
 1102 00a0 7B68     		ldr	r3, [r7, #4]
 1103 00a2 D3F89C30 		ldr	r3, [r3, #156]
 1104              		.loc 1 1741 23
 1105 00a6 43F00402 		orr	r2, r3, #4
 1106 00aa 7B68     		ldr	r3, [r7, #4]
 1107 00ac C3F89C20 		str	r2, [r3, #156]
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1108              		.loc 1 1743 12
 1109 00b0 0123     		movs	r3, #1
 1110              	.L46:
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1111              		.loc 1 1745 1
 1112 00b2 1846     		mov	r0, r3
 1113 00b4 0C37     		adds	r7, r7, #12
 1114              	.LCFI35:
 1115              		.cfi_def_cfa_offset 4
 1116 00b6 BD46     		mov	sp, r7
 1117              	.LCFI36:
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 00b8 5DF8047B 		ldr	r7, [sp], #4
 1121              	.LCFI37:
 1122              		.cfi_restore 7
 1123              		.cfi_def_cfa_offset 0
 1124 00bc 7047     		bx	lr
 1125              	.L51:
 1126 00be 00BF     		.align	2
 1127              	.L50:
 1128 00c0 00A00040 		.word	1073782784
 1129 00c4 00A80040 		.word	1073784832
 1130 00c8 6000FFFF 		.word	-65440
 1131 00cc 0000FFFF 		.word	-65536
 1132              		.cfi_endproc
 1133              	.LFE150:
 1135              		.section	.text.HAL_FDCAN_GetClockCalibrationState,"ax",%progbits
 1136              		.align	1
 1137              		.global	HAL_FDCAN_GetClockCalibrationState
 1138              		.syntax unified
 1139              		.thumb
 1140              		.thumb_func
 1142              	HAL_FDCAN_GetClockCalibrationState:
 1143              	.LFB151:
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the clock calibration state.
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval State clock calibration state (can be a value of @arg FDCAN_calibration_state)
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 52


1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetClockCalibrationState(const FDCAN_HandleTypeDef *hfdcan)
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1144              		.loc 1 1754 1
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 8
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0000 80B4     		push	{r7}
 1150              	.LCFI38:
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 7, -4
 1153 0002 83B0     		sub	sp, sp, #12
 1154              	.LCFI39:
 1155              		.cfi_def_cfa_offset 16
 1156 0004 00AF     		add	r7, sp, #0
 1157              	.LCFI40:
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_CALS);
 1160              		.loc 1 1758 20
 1161 0008 044B     		ldr	r3, .L54
 1162 000a 9B68     		ldr	r3, [r3, #8]
 1163              		.loc 1 1758 28
 1164 000c 03F04043 		and	r3, r3, #-1073741824
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1165              		.loc 1 1759 1
 1166 0010 1846     		mov	r0, r3
 1167 0012 0C37     		adds	r7, r7, #12
 1168              	.LCFI41:
 1169              		.cfi_def_cfa_offset 4
 1170 0014 BD46     		mov	sp, r7
 1171              	.LCFI42:
 1172              		.cfi_def_cfa_register 13
 1173              		@ sp needed
 1174 0016 5DF8047B 		ldr	r7, [sp], #4
 1175              	.LCFI43:
 1176              		.cfi_restore 7
 1177              		.cfi_def_cfa_offset 0
 1178 001a 7047     		bx	lr
 1179              	.L55:
 1180              		.align	2
 1181              	.L54:
 1182 001c 00A80040 		.word	1073784832
 1183              		.cfi_endproc
 1184              	.LFE151:
 1186              		.section	.text.HAL_FDCAN_ResetClockCalibrationState,"ax",%progbits
 1187              		.align	1
 1188              		.global	HAL_FDCAN_ResetClockCalibrationState
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1193              	HAL_FDCAN_ResetClockCalibrationState:
 1194              	.LFB152:
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 53


1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the clock calibration state.
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetClockCalibrationState(FDCAN_HandleTypeDef *hfdcan)
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1195              		.loc 1 1768 1
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 8
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 0000 80B4     		push	{r7}
 1201              	.LCFI44:
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 0002 83B0     		sub	sp, sp, #12
 1205              	.LCFI45:
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              	.LCFI46:
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* FDCAN1 should be initialized in order to use clock calibration */
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance != FDCAN1)
 1211              		.loc 1 1770 13
 1212 0008 7B68     		ldr	r3, [r7, #4]
 1213 000a 1B68     		ldr	r3, [r3]
 1214              		.loc 1 1770 6
 1215 000c 144A     		ldr	r2, .L60
 1216 000e 9342     		cmp	r3, r2
 1217 0010 09D0     		beq	.L57
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 1218              		.loc 1 1773 11
 1219 0012 7B68     		ldr	r3, [r7, #4]
 1220 0014 D3F89C30 		ldr	r3, [r3, #156]
 1221              		.loc 1 1773 23
 1222 0018 43F02002 		orr	r2, r3, #32
 1223 001c 7B68     		ldr	r3, [r7, #4]
 1224 001e C3F89C20 		str	r2, [r3, #156]
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1225              		.loc 1 1775 12
 1226 0022 0123     		movs	r3, #1
 1227 0024 16E0     		b	.L58
 1228              	.L57:
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1229              		.loc 1 1778 13
 1230 0026 7B68     		ldr	r3, [r7, #4]
 1231 0028 93F89830 		ldrb	r3, [r3, #152]
 1232 002c DBB2     		uxtb	r3, r3
 1233              		.loc 1 1778 6
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 54


 1234 002e 012B     		cmp	r3, #1
 1235 0030 07D1     		bne	.L59
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calibration software reset */
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_SWR);
 1236              		.loc 1 1781 5
 1237 0032 0C4B     		ldr	r3, .L60+4
 1238 0034 5B68     		ldr	r3, [r3, #4]
 1239 0036 0B4A     		ldr	r2, .L60+4
 1240 0038 43F00043 		orr	r3, r3, #-2147483648
 1241 003c 5360     		str	r3, [r2, #4]
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1242              		.loc 1 1784 12
 1243 003e 0023     		movs	r3, #0
 1244 0040 08E0     		b	.L58
 1245              	.L59:
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1246              		.loc 1 1789 11
 1247 0042 7B68     		ldr	r3, [r7, #4]
 1248 0044 D3F89C30 		ldr	r3, [r3, #156]
 1249              		.loc 1 1789 23
 1250 0048 43F00402 		orr	r2, r3, #4
 1251 004c 7B68     		ldr	r3, [r7, #4]
 1252 004e C3F89C20 		str	r2, [r3, #156]
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1253              		.loc 1 1791 12
 1254 0052 0123     		movs	r3, #1
 1255              	.L58:
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1256              		.loc 1 1793 1
 1257 0054 1846     		mov	r0, r3
 1258 0056 0C37     		adds	r7, r7, #12
 1259              	.LCFI47:
 1260              		.cfi_def_cfa_offset 4
 1261 0058 BD46     		mov	sp, r7
 1262              	.LCFI48:
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 005a 5DF8047B 		ldr	r7, [sp], #4
 1266              	.LCFI49:
 1267              		.cfi_restore 7
 1268              		.cfi_def_cfa_offset 0
 1269 005e 7047     		bx	lr
 1270              	.L61:
 1271              		.align	2
 1272              	.L60:
 1273 0060 00A00040 		.word	1073782784
 1274 0064 00A80040 		.word	1073784832
 1275              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 55


 1276              	.LFE152:
 1278              		.section	.text.HAL_FDCAN_GetClockCalibrationCounter,"ax",%progbits
 1279              		.align	1
 1280              		.global	HAL_FDCAN_GetClockCalibrationCounter
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1285              	HAL_FDCAN_GetClockCalibrationCounter:
 1286              	.LFB153:
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the clock calibration counter value.
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Counter clock calibration counter.
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_calibration_counter.
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Value clock calibration counter value
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetClockCalibrationCounter(const FDCAN_HandleTypeDef *hfdcan, uint32_t Counter)
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1287              		.loc 1 1804 1
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 8
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291              		@ link register save eliminated.
 1292 0000 80B4     		push	{r7}
 1293              	.LCFI50:
 1294              		.cfi_def_cfa_offset 4
 1295              		.cfi_offset 7, -4
 1296 0002 83B0     		sub	sp, sp, #12
 1297              	.LCFI51:
 1298              		.cfi_def_cfa_offset 16
 1299 0004 00AF     		add	r7, sp, #0
 1300              	.LCFI52:
 1301              		.cfi_def_cfa_register 7
 1302 0006 7860     		str	r0, [r7, #4]
 1303 0008 3960     		str	r1, [r7]
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_CALIBRATION_COUNTER(Counter));
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (Counter == FDCAN_CALIB_TIME_QUANTA_COUNTER)
 1304              		.loc 1 1811 6
 1305 000a 3B68     		ldr	r3, [r7]
 1306 000c 002B     		cmp	r3, #0
 1307 000e 05D1     		bne	.L63
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return ((FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_TQC) >> FDCANCCU_CSTAT_TQC_Pos);
 1308              		.loc 1 1813 23
 1309 0010 0B4B     		ldr	r3, .L66
 1310 0012 9B68     		ldr	r3, [r3, #8]
 1311              		.loc 1 1813 53
 1312 0014 9B0C     		lsrs	r3, r3, #18
 1313 0016 C3F30A03 		ubfx	r3, r3, #0, #11
 1314 001a 0BE0     		b	.L64
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 56


 1315              	.L63:
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (Counter == FDCAN_CALIB_CLOCK_PERIOD_COUNTER)
 1316              		.loc 1 1815 11
 1317 001c 3B68     		ldr	r3, [r7]
 1318 001e 012B     		cmp	r3, #1
 1319 0020 04D1     		bne	.L65
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return (FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_OCPC);
 1320              		.loc 1 1817 22
 1321 0022 074B     		ldr	r3, .L66
 1322 0024 9B68     		ldr	r3, [r3, #8]
 1323              		.loc 1 1817 30
 1324 0026 C3F31103 		ubfx	r3, r3, #0, #18
 1325 002a 03E0     		b	.L64
 1326              	.L65:
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* Counter == FDCAN_CALIB_WATCHDOG_COUNTER */
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return ((FDCAN_CCU->CWD & FDCANCCU_CWD_WDV) >> FDCANCCU_CWD_WDV_Pos);
 1327              		.loc 1 1821 23
 1328 002c 044B     		ldr	r3, .L66
 1329 002e DB68     		ldr	r3, [r3, #12]
 1330              		.loc 1 1821 49
 1331 0030 1B0C     		lsrs	r3, r3, #16
 1332 0032 9BB2     		uxth	r3, r3
 1333              	.L64:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1334              		.loc 1 1823 1
 1335 0034 1846     		mov	r0, r3
 1336 0036 0C37     		adds	r7, r7, #12
 1337              	.LCFI53:
 1338              		.cfi_def_cfa_offset 4
 1339 0038 BD46     		mov	sp, r7
 1340              	.LCFI54:
 1341              		.cfi_def_cfa_register 13
 1342              		@ sp needed
 1343 003a 5DF8047B 		ldr	r7, [sp], #4
 1344              	.LCFI55:
 1345              		.cfi_restore 7
 1346              		.cfi_def_cfa_offset 0
 1347 003e 7047     		bx	lr
 1348              	.L67:
 1349              		.align	2
 1350              	.L66:
 1351 0040 00A80040 		.word	1073784832
 1352              		.cfi_endproc
 1353              	.LFE153:
 1355              		.section	.text.HAL_FDCAN_ConfigFilter,"ax",%progbits
 1356              		.align	1
 1357              		.global	HAL_FDCAN_ConfigFilter
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1362              	HAL_FDCAN_ConfigFilter:
 1363              	.LFB154:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 57


1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN reception filter according to the specified
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_FilterTypeDef structure.
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sFilterConfig pointer to an FDCAN_FilterTypeDef structure that
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the filter configuration information
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigFilter(FDCAN_HandleTypeDef *hfdcan, const FDCAN_FilterTypeDef *sF
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1364              		.loc 1 1835 1
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 24
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              	.LCFI56:
 1371              		.cfi_def_cfa_offset 4
 1372              		.cfi_offset 7, -4
 1373 0002 87B0     		sub	sp, sp, #28
 1374              	.LCFI57:
 1375              		.cfi_def_cfa_offset 32
 1376 0004 00AF     		add	r7, sp, #0
 1377              	.LCFI58:
 1378              		.cfi_def_cfa_register 7
 1379 0006 7860     		str	r0, [r7, #4]
 1380 0008 3960     		str	r1, [r7]
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FilterElementW1;
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FilterElementW2;
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *FilterAddress;
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 1381              		.loc 1 1839 26
 1382 000a 7B68     		ldr	r3, [r7, #4]
 1383 000c 93F89830 		ldrb	r3, [r3, #152]
 1384 0010 FB73     		strb	r3, [r7, #15]
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 1385              		.loc 1 1841 6
 1386 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1387 0014 012B     		cmp	r3, #1
 1388 0016 02D0     		beq	.L69
 1389              		.loc 1 1841 40 discriminator 1
 1390 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1391 001a 022B     		cmp	r3, #2
 1392 001c 57D1     		bne	.L70
 1393              	.L69:
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check function parameters */
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_ID_TYPE(sFilterConfig->IdType));
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_FILTER_CFG(sFilterConfig->FilterConfig));
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->RxBufferIndex, 63U));
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->IsCalibrationMsg, 1U));
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 58


1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sFilterConfig->IdType == FDCAN_STANDARD_ID)
 1394              		.loc 1 1852 22
 1395 001e 3B68     		ldr	r3, [r7]
 1396 0020 1B68     		ldr	r3, [r3]
 1397              		.loc 1 1852 8
 1398 0022 002B     		cmp	r3, #0
 1399 0024 2BD1     		bne	.L71
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check function parameters */
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterIndex, (hfdcan->Init.StdFiltersNbr - 1U)
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID1, 0x7FFU));
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig != FDCAN_FILTER_TO_RXBUFFER)
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID2, 0x7FFU));
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_STD_FILTER_TYPE(sFilterConfig->FilterType));
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build filter element */
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
 1400              		.loc 1 1864 24
 1401 0026 3B68     		ldr	r3, [r7]
 1402 0028 DB68     		ldr	r3, [r3, #12]
 1403              		.loc 1 1864 10
 1404 002a 072B     		cmp	r3, #7
 1405 002c 0DD1     		bne	.L72
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW1 = ((FDCAN_FILTER_TO_RXBUFFER << 27U)       |
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)       |
 1406              		.loc 1 1867 42
 1407 002e 3B68     		ldr	r3, [r7]
 1408 0030 1B69     		ldr	r3, [r3, #16]
 1409              		.loc 1 1867 54
 1410 0032 1A04     		lsls	r2, r3, #16
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 1411              		.loc 1 1868 42
 1412 0034 3B68     		ldr	r3, [r7]
 1413 0036 DB69     		ldr	r3, [r3, #28]
 1414              		.loc 1 1868 61
 1415 0038 1B02     		lsls	r3, r3, #8
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 1416              		.loc 1 1867 68
 1417 003a 1A43     		orrs	r2, r2, r3
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            sFilterConfig->RxBufferIndex);
 1418              		.loc 1 1869 41
 1419 003c 3B68     		ldr	r3, [r7]
 1420 003e 9B69     		ldr	r3, [r3, #24]
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 1421              		.loc 1 1868 68
 1422 0040 1343     		orrs	r3, r3, r2
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)       |
 1423              		.loc 1 1866 25
 1424 0042 43F06053 		orr	r3, r3, #939524096
 1425 0046 7B61     		str	r3, [r7, #20]
 1426 0048 0EE0     		b	.L73
 1427              	.L72:
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 59


1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW1 = ((sFilterConfig->FilterType << 30U)   |
 1428              		.loc 1 1873 42
 1429 004a 3B68     		ldr	r3, [r7]
 1430 004c 9B68     		ldr	r3, [r3, #8]
 1431              		.loc 1 1873 55
 1432 004e 9A07     		lsls	r2, r3, #30
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 1433              		.loc 1 1874 42
 1434 0050 3B68     		ldr	r3, [r7]
 1435 0052 DB68     		ldr	r3, [r3, #12]
 1436              		.loc 1 1874 57
 1437 0054 DB06     		lsls	r3, r3, #27
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 1438              		.loc 1 1873 65
 1439 0056 1A43     		orrs	r2, r2, r3
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)    |
 1440              		.loc 1 1875 42
 1441 0058 3B68     		ldr	r3, [r7]
 1442 005a 1B69     		ldr	r3, [r3, #16]
 1443              		.loc 1 1875 54
 1444 005c 1B04     		lsls	r3, r3, #16
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 1445              		.loc 1 1874 65
 1446 005e 1A43     		orrs	r2, r2, r3
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            sFilterConfig->FilterID2);
 1447              		.loc 1 1876 41
 1448 0060 3B68     		ldr	r3, [r7]
 1449 0062 5B69     		ldr	r3, [r3, #20]
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 1450              		.loc 1 1873 25
 1451 0064 1343     		orrs	r3, r3, r2
 1452 0066 7B61     		str	r3, [r7, #20]
 1453              	.L73:
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate filter address */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress = (uint32_t *)(hfdcan->msgRam.StandardFilterSA + (sFilterConfig->FilterIndex * 
 1454              		.loc 1 1880 50
 1455 0068 7B68     		ldr	r3, [r7, #4]
 1456 006a DA6E     		ldr	r2, [r3, #108]
 1457              		.loc 1 1880 84
 1458 006c 3B68     		ldr	r3, [r7]
 1459 006e 5B68     		ldr	r3, [r3, #4]
 1460              		.loc 1 1880 98
 1461 0070 9B00     		lsls	r3, r3, #2
 1462              		.loc 1 1880 68
 1463 0072 1344     		add	r3, r3, r2
 1464              		.loc 1 1880 21
 1465 0074 BB60     		str	r3, [r7, #8]
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Write filter element to the message RAM */
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW1;
 1466              		.loc 1 1883 22
 1467 0076 BB68     		ldr	r3, [r7, #8]
 1468 0078 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 60


 1469 007a 1A60     		str	r2, [r3]
 1470 007c 25E0     		b	.L74
 1471              	.L71:
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sFilterConfig->IdType == FDCAN_EXTENDED_ID */
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check function parameters */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterIndex, (hfdcan->Init.ExtFiltersNbr - 1U)
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID1, 0x1FFFFFFFU));
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig != FDCAN_FILTER_TO_RXBUFFER)
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID2, 0x1FFFFFFFU));
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_EXT_FILTER_TYPE(sFilterConfig->FilterType));
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build first word of filter element */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterElementW1 = ((sFilterConfig->FilterConfig << 29U) | sFilterConfig->FilterID1);
 1472              		.loc 1 1897 40
 1473 007e 3B68     		ldr	r3, [r7]
 1474 0080 DB68     		ldr	r3, [r3, #12]
 1475              		.loc 1 1897 55
 1476 0082 5A07     		lsls	r2, r3, #29
 1477              		.loc 1 1897 78
 1478 0084 3B68     		ldr	r3, [r7]
 1479 0086 1B69     		ldr	r3, [r3, #16]
 1480              		.loc 1 1897 23
 1481 0088 1343     		orrs	r3, r3, r2
 1482 008a 7B61     		str	r3, [r7, #20]
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build second word of filter element */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
 1483              		.loc 1 1900 24
 1484 008c 3B68     		ldr	r3, [r7]
 1485 008e DB68     		ldr	r3, [r3, #12]
 1486              		.loc 1 1900 10
 1487 0090 072B     		cmp	r3, #7
 1488 0092 03D1     		bne	.L75
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW2 = sFilterConfig->RxBufferIndex;
 1489              		.loc 1 1902 25
 1490 0094 3B68     		ldr	r3, [r7]
 1491 0096 9B69     		ldr	r3, [r3, #24]
 1492 0098 3B61     		str	r3, [r7, #16]
 1493 009a 06E0     		b	.L76
 1494              	.L75:
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW2 = ((sFilterConfig->FilterType << 30U) | sFilterConfig->FilterID2);
 1495              		.loc 1 1906 42
 1496 009c 3B68     		ldr	r3, [r7]
 1497 009e 9B68     		ldr	r3, [r3, #8]
 1498              		.loc 1 1906 55
 1499 00a0 9A07     		lsls	r2, r3, #30
 1500              		.loc 1 1906 78
 1501 00a2 3B68     		ldr	r3, [r7]
 1502 00a4 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 61


 1503              		.loc 1 1906 25
 1504 00a6 1343     		orrs	r3, r3, r2
 1505 00a8 3B61     		str	r3, [r7, #16]
 1506              	.L76:
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate filter address */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress = (uint32_t *)(hfdcan->msgRam.ExtendedFilterSA + (sFilterConfig->FilterIndex * 
 1507              		.loc 1 1910 50
 1508 00aa 7B68     		ldr	r3, [r7, #4]
 1509 00ac 1A6F     		ldr	r2, [r3, #112]
 1510              		.loc 1 1910 84
 1511 00ae 3B68     		ldr	r3, [r7]
 1512 00b0 5B68     		ldr	r3, [r3, #4]
 1513              		.loc 1 1910 103
 1514 00b2 DB00     		lsls	r3, r3, #3
 1515              		.loc 1 1910 68
 1516 00b4 1344     		add	r3, r3, r2
 1517              		.loc 1 1910 21
 1518 00b6 BB60     		str	r3, [r7, #8]
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Write filter element to the message RAM */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW1;
 1519              		.loc 1 1913 22
 1520 00b8 BB68     		ldr	r3, [r7, #8]
 1521 00ba 7A69     		ldr	r2, [r7, #20]
 1522 00bc 1A60     		str	r2, [r3]
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress++;
 1523              		.loc 1 1914 20
 1524 00be BB68     		ldr	r3, [r7, #8]
 1525 00c0 0433     		adds	r3, r3, #4
 1526 00c2 BB60     		str	r3, [r7, #8]
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW2;
 1527              		.loc 1 1915 22
 1528 00c4 BB68     		ldr	r3, [r7, #8]
 1529 00c6 3A69     		ldr	r2, [r7, #16]
 1530 00c8 1A60     		str	r2, [r3]
 1531              	.L74:
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1532              		.loc 1 1919 12
 1533 00ca 0023     		movs	r3, #0
 1534 00cc 08E0     		b	.L77
 1535              	.L70:
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 1536              		.loc 1 1924 11
 1537 00ce 7B68     		ldr	r3, [r7, #4]
 1538 00d0 D3F89C30 		ldr	r3, [r3, #156]
 1539              		.loc 1 1924 23
 1540 00d4 43F00202 		orr	r2, r3, #2
 1541 00d8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 62


 1542 00da C3F89C20 		str	r2, [r3, #156]
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1543              		.loc 1 1926 12
 1544 00de 0123     		movs	r3, #1
 1545              	.L77:
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1546              		.loc 1 1928 1
 1547 00e0 1846     		mov	r0, r3
 1548 00e2 1C37     		adds	r7, r7, #28
 1549              	.LCFI59:
 1550              		.cfi_def_cfa_offset 4
 1551 00e4 BD46     		mov	sp, r7
 1552              	.LCFI60:
 1553              		.cfi_def_cfa_register 13
 1554              		@ sp needed
 1555 00e6 5DF8047B 		ldr	r7, [sp], #4
 1556              	.LCFI61:
 1557              		.cfi_restore 7
 1558              		.cfi_def_cfa_offset 0
 1559 00ea 7047     		bx	lr
 1560              		.cfi_endproc
 1561              	.LFE154:
 1563              		.section	.text.HAL_FDCAN_ConfigGlobalFilter,"ax",%progbits
 1564              		.align	1
 1565              		.global	HAL_FDCAN_ConfigGlobalFilter
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1570              	HAL_FDCAN_ConfigGlobalFilter:
 1571              	.LFB155:
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN global filter.
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NonMatchingStd Defines how received messages with 11-bit IDs that
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         do not match any element of the filter list are treated.
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Non_Matching_Frames.
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NonMatchingExt Defines how received messages with 29-bit IDs that
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         do not match any element of the filter list are treated.
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Non_Matching_Frames.
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RejectRemoteStd Filter or reject all the remote 11-bit IDs frames.
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Reject_Remote_Frames.
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RejectRemoteExt Filter or reject all the remote 29-bit IDs frames.
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Reject_Remote_Frames.
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigGlobalFilter(FDCAN_HandleTypeDef *hfdcan,
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t NonMatchingStd,
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t NonMatchingExt,
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t RejectRemoteStd,
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t RejectRemoteExt)
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1572              		.loc 1 1951 1
 1573              		.cfi_startproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 63


 1574              		@ args = 4, pretend = 0, frame = 16
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577 0000 80B4     		push	{r7}
 1578              	.LCFI62:
 1579              		.cfi_def_cfa_offset 4
 1580              		.cfi_offset 7, -4
 1581 0002 85B0     		sub	sp, sp, #20
 1582              	.LCFI63:
 1583              		.cfi_def_cfa_offset 24
 1584 0004 00AF     		add	r7, sp, #0
 1585              	.LCFI64:
 1586              		.cfi_def_cfa_register 7
 1587 0006 F860     		str	r0, [r7, #12]
 1588 0008 B960     		str	r1, [r7, #8]
 1589 000a 7A60     		str	r2, [r7, #4]
 1590 000c 3B60     		str	r3, [r7]
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NON_MATCHING(NonMatchingStd));
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NON_MATCHING(NonMatchingExt));
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_REJECT_REMOTE(RejectRemoteStd));
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_REJECT_REMOTE(RejectRemoteExt));
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1591              		.loc 1 1958 13
 1592 000e FB68     		ldr	r3, [r7, #12]
 1593 0010 93F89830 		ldrb	r3, [r3, #152]
 1594 0014 DBB2     		uxtb	r3, r3
 1595              		.loc 1 1958 6
 1596 0016 012B     		cmp	r3, #1
 1597 0018 10D1     		bne	.L79
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure global filter */
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->GFC = ((NonMatchingStd << FDCAN_GFC_ANFS_Pos)  |
 1598              		.loc 1 1961 46
 1599 001a BB68     		ldr	r3, [r7, #8]
 1600 001c 1A01     		lsls	r2, r3, #4
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 1601              		.loc 1 1962 46
 1602 001e 7B68     		ldr	r3, [r7, #4]
 1603 0020 9B00     		lsls	r3, r3, #2
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 1604              		.loc 1 1961 70
 1605 0022 1A43     		orrs	r2, r2, r3
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (RejectRemoteStd << FDCAN_GFC_RRFS_Pos) |
 1606              		.loc 1 1963 47
 1607 0024 3B68     		ldr	r3, [r7]
 1608 0026 5B00     		lsls	r3, r3, #1
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 1609              		.loc 1 1962 70
 1610 0028 42EA0301 		orr	r1, r2, r3
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 1611              		.loc 1 1961 11
 1612 002c FB68     		ldr	r3, [r7, #12]
 1613 002e 1B68     		ldr	r3, [r3]
 1614              		.loc 1 1963 70
 1615 0030 BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 64


 1616 0032 0A43     		orrs	r2, r2, r1
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 1617              		.loc 1 1961 27
 1618 0034 C3F88020 		str	r2, [r3, #128]
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (RejectRemoteExt << FDCAN_GFC_RRFE_Pos));
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1619              		.loc 1 1967 12
 1620 0038 0023     		movs	r3, #0
 1621 003a 08E0     		b	.L80
 1622              	.L79:
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1623              		.loc 1 1972 11
 1624 003c FB68     		ldr	r3, [r7, #12]
 1625 003e D3F89C30 		ldr	r3, [r3, #156]
 1626              		.loc 1 1972 23
 1627 0042 43F00402 		orr	r2, r3, #4
 1628 0046 FB68     		ldr	r3, [r7, #12]
 1629 0048 C3F89C20 		str	r2, [r3, #156]
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1630              		.loc 1 1974 12
 1631 004c 0123     		movs	r3, #1
 1632              	.L80:
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1633              		.loc 1 1976 1
 1634 004e 1846     		mov	r0, r3
 1635 0050 1437     		adds	r7, r7, #20
 1636              	.LCFI65:
 1637              		.cfi_def_cfa_offset 4
 1638 0052 BD46     		mov	sp, r7
 1639              	.LCFI66:
 1640              		.cfi_def_cfa_register 13
 1641              		@ sp needed
 1642 0054 5DF8047B 		ldr	r7, [sp], #4
 1643              	.LCFI67:
 1644              		.cfi_restore 7
 1645              		.cfi_def_cfa_offset 0
 1646 0058 7047     		bx	lr
 1647              		.cfi_endproc
 1648              	.LFE155:
 1650              		.section	.text.HAL_FDCAN_ConfigExtendedIdMask,"ax",%progbits
 1651              		.align	1
 1652              		.global	HAL_FDCAN_ConfigExtendedIdMask
 1653              		.syntax unified
 1654              		.thumb
 1655              		.thumb_func
 1657              	HAL_FDCAN_ConfigExtendedIdMask:
 1658              	.LFB156:
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 65


1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the extended ID mask.
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Mask Extended ID Mask.
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0x1FFFFFFF.
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigExtendedIdMask(FDCAN_HandleTypeDef *hfdcan, uint32_t Mask)
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1659              		.loc 1 1987 1
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 8
 1662              		@ frame_needed = 1, uses_anonymous_args = 0
 1663              		@ link register save eliminated.
 1664 0000 80B4     		push	{r7}
 1665              	.LCFI68:
 1666              		.cfi_def_cfa_offset 4
 1667              		.cfi_offset 7, -4
 1668 0002 83B0     		sub	sp, sp, #12
 1669              	.LCFI69:
 1670              		.cfi_def_cfa_offset 16
 1671 0004 00AF     		add	r7, sp, #0
 1672              	.LCFI70:
 1673              		.cfi_def_cfa_register 7
 1674 0006 7860     		str	r0, [r7, #4]
 1675 0008 3960     		str	r1, [r7]
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(Mask, 0x1FFFFFFFU));
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1676              		.loc 1 1991 13
 1677 000a 7B68     		ldr	r3, [r7, #4]
 1678 000c 93F89830 		ldrb	r3, [r3, #152]
 1679 0010 DBB2     		uxtb	r3, r3
 1680              		.loc 1 1991 6
 1681 0012 012B     		cmp	r3, #1
 1682 0014 06D1     		bne	.L82
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure the extended ID mask */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->XIDAM = Mask;
 1683              		.loc 1 1994 11
 1684 0016 7B68     		ldr	r3, [r7, #4]
 1685 0018 1B68     		ldr	r3, [r3]
 1686              		.loc 1 1994 29
 1687 001a 3A68     		ldr	r2, [r7]
 1688 001c C3F89020 		str	r2, [r3, #144]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1689              		.loc 1 1997 12
 1690 0020 0023     		movs	r3, #0
 1691 0022 08E0     		b	.L83
 1692              	.L82:
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 66


2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1693              		.loc 1 2002 11
 1694 0024 7B68     		ldr	r3, [r7, #4]
 1695 0026 D3F89C30 		ldr	r3, [r3, #156]
 1696              		.loc 1 2002 23
 1697 002a 43F00402 		orr	r2, r3, #4
 1698 002e 7B68     		ldr	r3, [r7, #4]
 1699 0030 C3F89C20 		str	r2, [r3, #156]
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1700              		.loc 1 2004 12
 1701 0034 0123     		movs	r3, #1
 1702              	.L83:
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1703              		.loc 1 2006 1
 1704 0036 1846     		mov	r0, r3
 1705 0038 0C37     		adds	r7, r7, #12
 1706              	.LCFI71:
 1707              		.cfi_def_cfa_offset 4
 1708 003a BD46     		mov	sp, r7
 1709              	.LCFI72:
 1710              		.cfi_def_cfa_register 13
 1711              		@ sp needed
 1712 003c 5DF8047B 		ldr	r7, [sp], #4
 1713              	.LCFI73:
 1714              		.cfi_restore 7
 1715              		.cfi_def_cfa_offset 0
 1716 0040 7047     		bx	lr
 1717              		.cfi_endproc
 1718              	.LFE156:
 1720              		.section	.text.HAL_FDCAN_ConfigRxFifoOverwrite,"ax",%progbits
 1721              		.align	1
 1722              		.global	HAL_FDCAN_ConfigRxFifoOverwrite
 1723              		.syntax unified
 1724              		.thumb
 1725              		.thumb_func
 1727              	HAL_FDCAN_ConfigRxFifoOverwrite:
 1728              	.LFB157:
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the Rx FIFO operation mode.
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo Rx FIFO.
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO0: Rx FIFO 0
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO1: Rx FIFO 1
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  OperationMode operation mode.
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Rx_FIFO_operation_mode.
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigRxFifoOverwrite(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo, uin
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1729              		.loc 1 2021 1
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 67


 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734 0000 80B4     		push	{r7}
 1735              	.LCFI74:
 1736              		.cfi_def_cfa_offset 4
 1737              		.cfi_offset 7, -4
 1738 0002 85B0     		sub	sp, sp, #20
 1739              	.LCFI75:
 1740              		.cfi_def_cfa_offset 24
 1741 0004 00AF     		add	r7, sp, #0
 1742              	.LCFI76:
 1743              		.cfi_def_cfa_register 7
 1744 0006 F860     		str	r0, [r7, #12]
 1745 0008 B960     		str	r1, [r7, #8]
 1746 000a 7A60     		str	r2, [r7, #4]
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO(RxFifo));
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO_MODE(OperationMode));
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1747              		.loc 1 2026 13
 1748 000c FB68     		ldr	r3, [r7, #12]
 1749 000e 93F89830 		ldrb	r3, [r3, #152]
 1750 0012 DBB2     		uxtb	r3, r3
 1751              		.loc 1 2026 6
 1752 0014 012B     		cmp	r3, #1
 1753 0016 1FD1     		bne	.L85
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxFifo == FDCAN_RX_FIFO0)
 1754              		.loc 1 2028 8
 1755 0018 BB68     		ldr	r3, [r7, #8]
 1756 001a 402B     		cmp	r3, #64
 1757 001c 0DD1     		bne	.L86
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Select FIFO 0 Operation Mode */
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0OM, (OperationMode << FDCAN_RXF0C_F0OM_Pos)
 1758              		.loc 1 2031 7
 1759 001e FB68     		ldr	r3, [r7, #12]
 1760 0020 1B68     		ldr	r3, [r3]
 1761 0022 D3F8A030 		ldr	r3, [r3, #160]
 1762 0026 23F00041 		bic	r1, r3, #-2147483648
 1763 002a 7B68     		ldr	r3, [r7, #4]
 1764 002c DA07     		lsls	r2, r3, #31
 1765 002e FB68     		ldr	r3, [r7, #12]
 1766 0030 1B68     		ldr	r3, [r3]
 1767 0032 0A43     		orrs	r2, r2, r1
 1768 0034 C3F8A020 		str	r2, [r3, #160]
 1769 0038 0CE0     		b	.L87
 1770              	.L86:
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* RxFifo == FDCAN_RX_FIFO1 */
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Select FIFO 1 Operation Mode */
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1OM, (OperationMode << FDCAN_RXF1C_F1OM_Pos)
 1771              		.loc 1 2036 7
 1772 003a FB68     		ldr	r3, [r7, #12]
 1773 003c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 68


 1774 003e D3F8B030 		ldr	r3, [r3, #176]
 1775 0042 23F00041 		bic	r1, r3, #-2147483648
 1776 0046 7B68     		ldr	r3, [r7, #4]
 1777 0048 DA07     		lsls	r2, r3, #31
 1778 004a FB68     		ldr	r3, [r7, #12]
 1779 004c 1B68     		ldr	r3, [r3]
 1780 004e 0A43     		orrs	r2, r2, r1
 1781 0050 C3F8B020 		str	r2, [r3, #176]
 1782              	.L87:
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1783              		.loc 1 2040 12
 1784 0054 0023     		movs	r3, #0
 1785 0056 08E0     		b	.L88
 1786              	.L85:
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1787              		.loc 1 2045 11
 1788 0058 FB68     		ldr	r3, [r7, #12]
 1789 005a D3F89C30 		ldr	r3, [r3, #156]
 1790              		.loc 1 2045 23
 1791 005e 43F00402 		orr	r2, r3, #4
 1792 0062 FB68     		ldr	r3, [r7, #12]
 1793 0064 C3F89C20 		str	r2, [r3, #156]
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1794              		.loc 1 2047 12
 1795 0068 0123     		movs	r3, #1
 1796              	.L88:
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1797              		.loc 1 2049 1
 1798 006a 1846     		mov	r0, r3
 1799 006c 1437     		adds	r7, r7, #20
 1800              	.LCFI77:
 1801              		.cfi_def_cfa_offset 4
 1802 006e BD46     		mov	sp, r7
 1803              	.LCFI78:
 1804              		.cfi_def_cfa_register 13
 1805              		@ sp needed
 1806 0070 5DF8047B 		ldr	r7, [sp], #4
 1807              	.LCFI79:
 1808              		.cfi_restore 7
 1809              		.cfi_def_cfa_offset 0
 1810 0074 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE157:
 1814              		.section	.text.HAL_FDCAN_ConfigFifoWatermark,"ax",%progbits
 1815              		.align	1
 1816              		.global	HAL_FDCAN_ConfigFifoWatermark
 1817              		.syntax unified
 1818              		.thumb
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 69


 1819              		.thumb_func
 1821              	HAL_FDCAN_ConfigFifoWatermark:
 1822              	.LFB158:
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FIFO watermark.
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  FIFO select the FIFO to be configured.
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_FIFO_watermark.
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Watermark level for FIFO watermark interrupt.
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 32, if FIFO is FDCAN_CFG_TX_EVENT_FIFO
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 64, if FIFO is FDCAN_CFG_RX_FIFO0 or FDCAN_CFG_RX_FIFO1
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigFifoWatermark(FDCAN_HandleTypeDef *hfdcan, uint32_t FIFO, uint32_
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1823              		.loc 1 2064 1
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 16
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
 1828 0000 80B4     		push	{r7}
 1829              	.LCFI80:
 1830              		.cfi_def_cfa_offset 4
 1831              		.cfi_offset 7, -4
 1832 0002 85B0     		sub	sp, sp, #20
 1833              	.LCFI81:
 1834              		.cfi_def_cfa_offset 24
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI82:
 1837              		.cfi_def_cfa_register 7
 1838 0006 F860     		str	r0, [r7, #12]
 1839 0008 B960     		str	r1, [r7, #8]
 1840 000a 7A60     		str	r2, [r7, #4]
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FIFO_WATERMARK(FIFO));
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FIFO == FDCAN_CFG_TX_EVENT_FIFO)
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Watermark, 32U));
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* (FIFO == FDCAN_CFG_RX_FIFO0) || (FIFO == FDCAN_CFG_RX_FIFO1) */
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Watermark, 64U));
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1841              		.loc 1 2076 13
 1842 000c FB68     		ldr	r3, [r7, #12]
 1843 000e 93F89830 		ldrb	r3, [r3, #152]
 1844 0012 DBB2     		uxtb	r3, r3
 1845              		.loc 1 2076 6
 1846 0014 012B     		cmp	r3, #1
 1847 0016 30D1     		bne	.L90
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Set the level for FIFO watermark interrupt */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 70


2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FIFO == FDCAN_CFG_TX_EVENT_FIFO)
 1848              		.loc 1 2079 8
 1849 0018 BB68     		ldr	r3, [r7, #8]
 1850 001a 002B     		cmp	r3, #0
 1851 001c 0DD1     		bne	.L91
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFWM, (Watermark << FDCAN_TXEFC_EFWM_Pos));
 1852              		.loc 1 2081 7
 1853 001e FB68     		ldr	r3, [r7, #12]
 1854 0020 1B68     		ldr	r3, [r3]
 1855 0022 D3F8F030 		ldr	r3, [r3, #240]
 1856 0026 23F07C51 		bic	r1, r3, #1056964608
 1857 002a 7B68     		ldr	r3, [r7, #4]
 1858 002c 1A06     		lsls	r2, r3, #24
 1859 002e FB68     		ldr	r3, [r7, #12]
 1860 0030 1B68     		ldr	r3, [r3]
 1861 0032 0A43     		orrs	r2, r2, r1
 1862 0034 C3F8F020 		str	r2, [r3, #240]
 1863 0038 1DE0     		b	.L92
 1864              	.L91:
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (FIFO == FDCAN_CFG_RX_FIFO0)
 1865              		.loc 1 2083 13
 1866 003a BB68     		ldr	r3, [r7, #8]
 1867 003c 012B     		cmp	r3, #1
 1868 003e 0DD1     		bne	.L93
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0WM, (Watermark << FDCAN_RXF0C_F0WM_Pos));
 1869              		.loc 1 2085 7
 1870 0040 FB68     		ldr	r3, [r7, #12]
 1871 0042 1B68     		ldr	r3, [r3]
 1872 0044 D3F8A030 		ldr	r3, [r3, #160]
 1873 0048 23F0FE41 		bic	r1, r3, #2130706432
 1874 004c 7B68     		ldr	r3, [r7, #4]
 1875 004e 1A06     		lsls	r2, r3, #24
 1876 0050 FB68     		ldr	r3, [r7, #12]
 1877 0052 1B68     		ldr	r3, [r3]
 1878 0054 0A43     		orrs	r2, r2, r1
 1879 0056 C3F8A020 		str	r2, [r3, #160]
 1880 005a 0CE0     		b	.L92
 1881              	.L93:
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* FIFO == FDCAN_CFG_RX_FIFO1 */
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1WM, (Watermark << FDCAN_RXF1C_F1WM_Pos));
 1882              		.loc 1 2089 7
 1883 005c FB68     		ldr	r3, [r7, #12]
 1884 005e 1B68     		ldr	r3, [r3]
 1885 0060 D3F8B030 		ldr	r3, [r3, #176]
 1886 0064 23F0FE41 		bic	r1, r3, #2130706432
 1887 0068 7B68     		ldr	r3, [r7, #4]
 1888 006a 1A06     		lsls	r2, r3, #24
 1889 006c FB68     		ldr	r3, [r7, #12]
 1890 006e 1B68     		ldr	r3, [r3]
 1891 0070 0A43     		orrs	r2, r2, r1
 1892 0072 C3F8B020 		str	r2, [r3, #176]
 1893              	.L92:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 71


2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1894              		.loc 1 2093 12
 1895 0076 0023     		movs	r3, #0
 1896 0078 08E0     		b	.L94
 1897              	.L90:
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1898              		.loc 1 2098 11
 1899 007a FB68     		ldr	r3, [r7, #12]
 1900 007c D3F89C30 		ldr	r3, [r3, #156]
 1901              		.loc 1 2098 23
 1902 0080 43F00402 		orr	r2, r3, #4
 1903 0084 FB68     		ldr	r3, [r7, #12]
 1904 0086 C3F89C20 		str	r2, [r3, #156]
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1905              		.loc 1 2100 12
 1906 008a 0123     		movs	r3, #1
 1907              	.L94:
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1908              		.loc 1 2102 1
 1909 008c 1846     		mov	r0, r3
 1910 008e 1437     		adds	r7, r7, #20
 1911              	.LCFI83:
 1912              		.cfi_def_cfa_offset 4
 1913 0090 BD46     		mov	sp, r7
 1914              	.LCFI84:
 1915              		.cfi_def_cfa_register 13
 1916              		@ sp needed
 1917 0092 5DF8047B 		ldr	r7, [sp], #4
 1918              	.LCFI85:
 1919              		.cfi_restore 7
 1920              		.cfi_def_cfa_offset 0
 1921 0096 7047     		bx	lr
 1922              		.cfi_endproc
 1923              	.LFE158:
 1925              		.section	.text.HAL_FDCAN_ConfigRamWatchdog,"ax",%progbits
 1926              		.align	1
 1927              		.global	HAL_FDCAN_ConfigRamWatchdog
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1932              	HAL_FDCAN_ConfigRamWatchdog:
 1933              	.LFB159:
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the RAM watchdog.
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CounterStartValue Start value of the Message RAM Watchdog Counter,
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 72


2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0xFF,
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         with the reset value of 0x00 the counter is disabled.
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigRamWatchdog(FDCAN_HandleTypeDef *hfdcan, uint32_t CounterStartVal
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1934              		.loc 1 2114 1
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 8
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
 1939 0000 80B4     		push	{r7}
 1940              	.LCFI86:
 1941              		.cfi_def_cfa_offset 4
 1942              		.cfi_offset 7, -4
 1943 0002 83B0     		sub	sp, sp, #12
 1944              	.LCFI87:
 1945              		.cfi_def_cfa_offset 16
 1946 0004 00AF     		add	r7, sp, #0
 1947              	.LCFI88:
 1948              		.cfi_def_cfa_register 7
 1949 0006 7860     		str	r0, [r7, #4]
 1950 0008 3960     		str	r1, [r7]
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(CounterStartValue, 0xFFU));
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1951              		.loc 1 2118 13
 1952 000a 7B68     		ldr	r3, [r7, #4]
 1953 000c 93F89830 		ldrb	r3, [r3, #152]
 1954 0010 DBB2     		uxtb	r3, r3
 1955              		.loc 1 2118 6
 1956 0012 012B     		cmp	r3, #1
 1957 0014 0BD1     		bne	.L96
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure the RAM watchdog counter start value */
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RWD, FDCAN_RWD_WDC, CounterStartValue);
 1958              		.loc 1 2121 5
 1959 0016 7B68     		ldr	r3, [r7, #4]
 1960 0018 1B68     		ldr	r3, [r3]
 1961 001a 5B69     		ldr	r3, [r3, #20]
 1962 001c 23F0FF01 		bic	r1, r3, #255
 1963 0020 7B68     		ldr	r3, [r7, #4]
 1964 0022 1B68     		ldr	r3, [r3]
 1965 0024 3A68     		ldr	r2, [r7]
 1966 0026 0A43     		orrs	r2, r2, r1
 1967 0028 5A61     		str	r2, [r3, #20]
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 1968              		.loc 1 2124 12
 1969 002a 0023     		movs	r3, #0
 1970 002c 08E0     		b	.L97
 1971              	.L96:
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 73


2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 1972              		.loc 1 2129 11
 1973 002e 7B68     		ldr	r3, [r7, #4]
 1974 0030 D3F89C30 		ldr	r3, [r3, #156]
 1975              		.loc 1 2129 23
 1976 0034 43F00402 		orr	r2, r3, #4
 1977 0038 7B68     		ldr	r3, [r7, #4]
 1978 003a C3F89C20 		str	r2, [r3, #156]
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1979              		.loc 1 2131 12
 1980 003e 0123     		movs	r3, #1
 1981              	.L97:
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1982              		.loc 1 2133 1
 1983 0040 1846     		mov	r0, r3
 1984 0042 0C37     		adds	r7, r7, #12
 1985              	.LCFI89:
 1986              		.cfi_def_cfa_offset 4
 1987 0044 BD46     		mov	sp, r7
 1988              	.LCFI90:
 1989              		.cfi_def_cfa_register 13
 1990              		@ sp needed
 1991 0046 5DF8047B 		ldr	r7, [sp], #4
 1992              	.LCFI91:
 1993              		.cfi_restore 7
 1994              		.cfi_def_cfa_offset 0
 1995 004a 7047     		bx	lr
 1996              		.cfi_endproc
 1997              	.LFE159:
 1999              		.section	.text.HAL_FDCAN_ConfigTimestampCounter,"ax",%progbits
 2000              		.align	1
 2001              		.global	HAL_FDCAN_ConfigTimestampCounter
 2002              		.syntax unified
 2003              		.thumb
 2004              		.thumb_func
 2006              	HAL_FDCAN_ConfigTimestampCounter:
 2007              	.LFB160:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the timestamp counter.
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimestampPrescaler Timestamp Counter Prescaler.
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timestamp_Prescaler.
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTimestampCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimestampP
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2008              		.loc 1 2144 1
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 8
 2011              		@ frame_needed = 1, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013 0000 80B4     		push	{r7}
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 74


 2014              	.LCFI92:
 2015              		.cfi_def_cfa_offset 4
 2016              		.cfi_offset 7, -4
 2017 0002 83B0     		sub	sp, sp, #12
 2018              	.LCFI93:
 2019              		.cfi_def_cfa_offset 16
 2020 0004 00AF     		add	r7, sp, #0
 2021              	.LCFI94:
 2022              		.cfi_def_cfa_register 7
 2023 0006 7860     		str	r0, [r7, #4]
 2024 0008 3960     		str	r1, [r7]
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMESTAMP_PRESCALER(TimestampPrescaler));
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2025              		.loc 1 2148 13
 2026 000a 7B68     		ldr	r3, [r7, #4]
 2027 000c 93F89830 		ldrb	r3, [r3, #152]
 2028 0010 DBB2     		uxtb	r3, r3
 2029              		.loc 1 2148 6
 2030 0012 012B     		cmp	r3, #1
 2031 0014 0BD1     		bne	.L99
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure prescaler */
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TSCC, FDCAN_TSCC_TCP, TimestampPrescaler);
 2032              		.loc 1 2151 5
 2033 0016 7B68     		ldr	r3, [r7, #4]
 2034 0018 1B68     		ldr	r3, [r3]
 2035 001a 1B6A     		ldr	r3, [r3, #32]
 2036 001c 23F47021 		bic	r1, r3, #983040
 2037 0020 7B68     		ldr	r3, [r7, #4]
 2038 0022 1B68     		ldr	r3, [r3]
 2039 0024 3A68     		ldr	r2, [r7]
 2040 0026 0A43     		orrs	r2, r2, r1
 2041 0028 1A62     		str	r2, [r3, #32]
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2042              		.loc 1 2154 12
 2043 002a 0023     		movs	r3, #0
 2044 002c 08E0     		b	.L100
 2045              	.L99:
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2046              		.loc 1 2159 11
 2047 002e 7B68     		ldr	r3, [r7, #4]
 2048 0030 D3F89C30 		ldr	r3, [r3, #156]
 2049              		.loc 1 2159 23
 2050 0034 43F00402 		orr	r2, r3, #4
 2051 0038 7B68     		ldr	r3, [r7, #4]
 2052 003a C3F89C20 		str	r2, [r3, #156]
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2053              		.loc 1 2161 12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 75


 2054 003e 0123     		movs	r3, #1
 2055              	.L100:
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2056              		.loc 1 2163 1
 2057 0040 1846     		mov	r0, r3
 2058 0042 0C37     		adds	r7, r7, #12
 2059              	.LCFI95:
 2060              		.cfi_def_cfa_offset 4
 2061 0044 BD46     		mov	sp, r7
 2062              	.LCFI96:
 2063              		.cfi_def_cfa_register 13
 2064              		@ sp needed
 2065 0046 5DF8047B 		ldr	r7, [sp], #4
 2066              	.LCFI97:
 2067              		.cfi_restore 7
 2068              		.cfi_def_cfa_offset 0
 2069 004a 7047     		bx	lr
 2070              		.cfi_endproc
 2071              	.LFE160:
 2073              		.section	.text.HAL_FDCAN_EnableTimestampCounter,"ax",%progbits
 2074              		.align	1
 2075              		.global	HAL_FDCAN_EnableTimestampCounter
 2076              		.syntax unified
 2077              		.thumb
 2078              		.thumb_func
 2080              	HAL_FDCAN_EnableTimestampCounter:
 2081              	.LFB161:
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the timestamp counter.
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimestampOperation Timestamp counter operation.
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timestamp.
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTimestampCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimestampO
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2082              		.loc 1 2174 1
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 8
 2085              		@ frame_needed = 1, uses_anonymous_args = 0
 2086              		@ link register save eliminated.
 2087 0000 80B4     		push	{r7}
 2088              	.LCFI98:
 2089              		.cfi_def_cfa_offset 4
 2090              		.cfi_offset 7, -4
 2091 0002 83B0     		sub	sp, sp, #12
 2092              	.LCFI99:
 2093              		.cfi_def_cfa_offset 16
 2094 0004 00AF     		add	r7, sp, #0
 2095              	.LCFI100:
 2096              		.cfi_def_cfa_register 7
 2097 0006 7860     		str	r0, [r7, #4]
 2098 0008 3960     		str	r1, [r7]
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 76


2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMESTAMP(TimestampOperation));
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2099              		.loc 1 2178 13
 2100 000a 7B68     		ldr	r3, [r7, #4]
 2101 000c 93F89830 		ldrb	r3, [r3, #152]
 2102 0010 DBB2     		uxtb	r3, r3
 2103              		.loc 1 2178 6
 2104 0012 012B     		cmp	r3, #1
 2105 0014 0BD1     		bne	.L102
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable timestamp counter */
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TSCC, FDCAN_TSCC_TSS, TimestampOperation);
 2106              		.loc 1 2181 5
 2107 0016 7B68     		ldr	r3, [r7, #4]
 2108 0018 1B68     		ldr	r3, [r3]
 2109 001a 1B6A     		ldr	r3, [r3, #32]
 2110 001c 23F00301 		bic	r1, r3, #3
 2111 0020 7B68     		ldr	r3, [r7, #4]
 2112 0022 1B68     		ldr	r3, [r3]
 2113 0024 3A68     		ldr	r2, [r7]
 2114 0026 0A43     		orrs	r2, r2, r1
 2115 0028 1A62     		str	r2, [r3, #32]
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2116              		.loc 1 2184 12
 2117 002a 0023     		movs	r3, #0
 2118 002c 08E0     		b	.L103
 2119              	.L102:
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2120              		.loc 1 2189 11
 2121 002e 7B68     		ldr	r3, [r7, #4]
 2122 0030 D3F89C30 		ldr	r3, [r3, #156]
 2123              		.loc 1 2189 23
 2124 0034 43F00402 		orr	r2, r3, #4
 2125 0038 7B68     		ldr	r3, [r7, #4]
 2126 003a C3F89C20 		str	r2, [r3, #156]
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2127              		.loc 1 2191 12
 2128 003e 0123     		movs	r3, #1
 2129              	.L103:
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2130              		.loc 1 2193 1
 2131 0040 1846     		mov	r0, r3
 2132 0042 0C37     		adds	r7, r7, #12
 2133              	.LCFI101:
 2134              		.cfi_def_cfa_offset 4
 2135 0044 BD46     		mov	sp, r7
 2136              	.LCFI102:
 2137              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 77


 2138              		@ sp needed
 2139 0046 5DF8047B 		ldr	r7, [sp], #4
 2140              	.LCFI103:
 2141              		.cfi_restore 7
 2142              		.cfi_def_cfa_offset 0
 2143 004a 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE161:
 2147              		.section	.text.HAL_FDCAN_DisableTimestampCounter,"ax",%progbits
 2148              		.align	1
 2149              		.global	HAL_FDCAN_DisableTimestampCounter
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2154              	HAL_FDCAN_DisableTimestampCounter:
 2155              	.LFB162:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the timestamp counter.
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTimestampCounter(FDCAN_HandleTypeDef *hfdcan)
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2156              		.loc 1 2202 1
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 8
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160              		@ link register save eliminated.
 2161 0000 80B4     		push	{r7}
 2162              	.LCFI104:
 2163              		.cfi_def_cfa_offset 4
 2164              		.cfi_offset 7, -4
 2165 0002 83B0     		sub	sp, sp, #12
 2166              	.LCFI105:
 2167              		.cfi_def_cfa_offset 16
 2168 0004 00AF     		add	r7, sp, #0
 2169              	.LCFI106:
 2170              		.cfi_def_cfa_register 7
 2171 0006 7860     		str	r0, [r7, #4]
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2172              		.loc 1 2203 13
 2173 0008 7B68     		ldr	r3, [r7, #4]
 2174 000a 93F89830 		ldrb	r3, [r3, #152]
 2175 000e DBB2     		uxtb	r3, r3
 2176              		.loc 1 2203 6
 2177 0010 012B     		cmp	r3, #1
 2178 0012 09D1     		bne	.L105
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable timestamp counter */
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->TSCC, FDCAN_TSCC_TSS);
 2179              		.loc 1 2206 5
 2180 0014 7B68     		ldr	r3, [r7, #4]
 2181 0016 1B68     		ldr	r3, [r3]
 2182 0018 1A6A     		ldr	r2, [r3, #32]
 2183 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 78


 2184 001c 1B68     		ldr	r3, [r3]
 2185 001e 22F00302 		bic	r2, r2, #3
 2186 0022 1A62     		str	r2, [r3, #32]
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2187              		.loc 1 2209 12
 2188 0024 0023     		movs	r3, #0
 2189 0026 08E0     		b	.L106
 2190              	.L105:
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2191              		.loc 1 2214 11
 2192 0028 7B68     		ldr	r3, [r7, #4]
 2193 002a D3F89C30 		ldr	r3, [r3, #156]
 2194              		.loc 1 2214 23
 2195 002e 43F00402 		orr	r2, r3, #4
 2196 0032 7B68     		ldr	r3, [r7, #4]
 2197 0034 C3F89C20 		str	r2, [r3, #156]
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2198              		.loc 1 2216 12
 2199 0038 0123     		movs	r3, #1
 2200              	.L106:
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2201              		.loc 1 2218 1
 2202 003a 1846     		mov	r0, r3
 2203 003c 0C37     		adds	r7, r7, #12
 2204              	.LCFI107:
 2205              		.cfi_def_cfa_offset 4
 2206 003e BD46     		mov	sp, r7
 2207              	.LCFI108:
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 0040 5DF8047B 		ldr	r7, [sp], #4
 2211              	.LCFI109:
 2212              		.cfi_restore 7
 2213              		.cfi_def_cfa_offset 0
 2214 0044 7047     		bx	lr
 2215              		.cfi_endproc
 2216              	.LFE162:
 2218              		.section	.text.HAL_FDCAN_GetTimestampCounter,"ax",%progbits
 2219              		.align	1
 2220              		.global	HAL_FDCAN_GetTimestampCounter
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2225              	HAL_FDCAN_GetTimestampCounter:
 2226              	.LFB163:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the timestamp counter value.
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 79


2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Timestamp counter value
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint16_t HAL_FDCAN_GetTimestampCounter(const FDCAN_HandleTypeDef *hfdcan)
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2227              		.loc 1 2227 1
 2228              		.cfi_startproc
 2229              		@ args = 0, pretend = 0, frame = 8
 2230              		@ frame_needed = 1, uses_anonymous_args = 0
 2231              		@ link register save eliminated.
 2232 0000 80B4     		push	{r7}
 2233              	.LCFI110:
 2234              		.cfi_def_cfa_offset 4
 2235              		.cfi_offset 7, -4
 2236 0002 83B0     		sub	sp, sp, #12
 2237              	.LCFI111:
 2238              		.cfi_def_cfa_offset 16
 2239 0004 00AF     		add	r7, sp, #0
 2240              	.LCFI112:
 2241              		.cfi_def_cfa_register 7
 2242 0006 7860     		str	r0, [r7, #4]
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (uint16_t)(hfdcan->Instance->TSCV);
 2243              		.loc 1 2228 27
 2244 0008 7B68     		ldr	r3, [r7, #4]
 2245 000a 1B68     		ldr	r3, [r3]
 2246              		.loc 1 2228 37
 2247 000c 5B6A     		ldr	r3, [r3, #36]
 2248              		.loc 1 2228 10
 2249 000e 9BB2     		uxth	r3, r3
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2250              		.loc 1 2229 1
 2251 0010 1846     		mov	r0, r3
 2252 0012 0C37     		adds	r7, r7, #12
 2253              	.LCFI113:
 2254              		.cfi_def_cfa_offset 4
 2255 0014 BD46     		mov	sp, r7
 2256              	.LCFI114:
 2257              		.cfi_def_cfa_register 13
 2258              		@ sp needed
 2259 0016 5DF8047B 		ldr	r7, [sp], #4
 2260              	.LCFI115:
 2261              		.cfi_restore 7
 2262              		.cfi_def_cfa_offset 0
 2263 001a 7047     		bx	lr
 2264              		.cfi_endproc
 2265              	.LFE163:
 2267              		.section	.text.HAL_FDCAN_ResetTimestampCounter,"ax",%progbits
 2268              		.align	1
 2269              		.global	HAL_FDCAN_ResetTimestampCounter
 2270              		.syntax unified
 2271              		.thumb
 2272              		.thumb_func
 2274              	HAL_FDCAN_ResetTimestampCounter:
 2275              	.LFB164:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the timestamp counter to zero.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 80


2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetTimestampCounter(FDCAN_HandleTypeDef *hfdcan)
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2276              		.loc 1 2238 1
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281 0000 80B4     		push	{r7}
 2282              	.LCFI116:
 2283              		.cfi_def_cfa_offset 4
 2284              		.cfi_offset 7, -4
 2285 0002 83B0     		sub	sp, sp, #12
 2286              	.LCFI117:
 2287              		.cfi_def_cfa_offset 16
 2288 0004 00AF     		add	r7, sp, #0
 2289              	.LCFI118:
 2290              		.cfi_def_cfa_register 7
 2291 0006 7860     		str	r0, [r7, #4]
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TSCC & FDCAN_TSCC_TSS) != FDCAN_TIMESTAMP_EXTERNAL)
 2292              		.loc 1 2239 14
 2293 0008 7B68     		ldr	r3, [r7, #4]
 2294 000a 1B68     		ldr	r3, [r3]
 2295              		.loc 1 2239 24
 2296 000c 1B6A     		ldr	r3, [r3, #32]
 2297              		.loc 1 2239 31
 2298 000e 03F00303 		and	r3, r3, #3
 2299              		.loc 1 2239 6
 2300 0012 022B     		cmp	r3, #2
 2301 0014 05D0     		beq	.L110
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset timestamp counter.
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Actually any write operation to TSCV clears the counter */
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_REG(hfdcan->Instance->TSCV);
 2302              		.loc 1 2243 5
 2303 0016 7B68     		ldr	r3, [r7, #4]
 2304 0018 1B68     		ldr	r3, [r3]
 2305 001a 0022     		movs	r2, #0
 2306 001c 5A62     		str	r2, [r3, #36]
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Unable to reset external counter */
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 2307              		.loc 1 2255 10
 2308 001e 0023     		movs	r3, #0
 2309 0020 08E0     		b	.L112
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 81


 2310              	.L110:
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 2311              		.loc 1 2249 11
 2312 0022 7B68     		ldr	r3, [r7, #4]
 2313 0024 D3F89C30 		ldr	r3, [r3, #156]
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 2314              		.loc 1 2249 23
 2315 0028 43F01002 		orr	r2, r3, #16
 2316 002c 7B68     		ldr	r3, [r7, #4]
 2317 002e C3F89C20 		str	r2, [r3, #156]
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 2318              		.loc 1 2251 12
 2319 0032 0123     		movs	r3, #1
 2320              	.L112:
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2321              		.loc 1 2256 1
 2322 0034 1846     		mov	r0, r3
 2323 0036 0C37     		adds	r7, r7, #12
 2324              	.LCFI119:
 2325              		.cfi_def_cfa_offset 4
 2326 0038 BD46     		mov	sp, r7
 2327              	.LCFI120:
 2328              		.cfi_def_cfa_register 13
 2329              		@ sp needed
 2330 003a 5DF8047B 		ldr	r7, [sp], #4
 2331              	.LCFI121:
 2332              		.cfi_restore 7
 2333              		.cfi_def_cfa_offset 0
 2334 003e 7047     		bx	lr
 2335              		.cfi_endproc
 2336              	.LFE164:
 2338              		.section	.text.HAL_FDCAN_ConfigTimeoutCounter,"ax",%progbits
 2339              		.align	1
 2340              		.global	HAL_FDCAN_ConfigTimeoutCounter
 2341              		.syntax unified
 2342              		.thumb
 2343              		.thumb_func
 2345              	HAL_FDCAN_ConfigTimeoutCounter:
 2346              	.LFB165:
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the timeout counter.
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeoutOperation Timeout counter operation.
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timeout_Operation.
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeoutPeriod Start value of the timeout down-counter.
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x0000 and 0xFFFF
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTimeoutCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimeoutOpera
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                  uint32_t TimeoutPeriod)
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2347              		.loc 1 2270 1
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 16
 2350              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 82


 2351              		@ link register save eliminated.
 2352 0000 80B4     		push	{r7}
 2353              	.LCFI122:
 2354              		.cfi_def_cfa_offset 4
 2355              		.cfi_offset 7, -4
 2356 0002 85B0     		sub	sp, sp, #20
 2357              	.LCFI123:
 2358              		.cfi_def_cfa_offset 24
 2359 0004 00AF     		add	r7, sp, #0
 2360              	.LCFI124:
 2361              		.cfi_def_cfa_register 7
 2362 0006 F860     		str	r0, [r7, #12]
 2363 0008 B960     		str	r1, [r7, #8]
 2364 000a 7A60     		str	r2, [r7, #4]
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMEOUT(TimeoutOperation));
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TimeoutPeriod, 0xFFFFU));
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2365              		.loc 1 2275 13
 2366 000c FB68     		ldr	r3, [r7, #12]
 2367 000e 93F89830 		ldrb	r3, [r3, #152]
 2368 0012 DBB2     		uxtb	r3, r3
 2369              		.loc 1 2275 6
 2370 0014 012B     		cmp	r3, #1
 2371 0016 0FD1     		bne	.L114
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select timeout operation and configure period */
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TOCC,
 2372              		.loc 1 2278 5
 2373 0018 FB68     		ldr	r3, [r7, #12]
 2374 001a 1B68     		ldr	r3, [r3]
 2375 001c 9A6A     		ldr	r2, [r3, #40]
 2376 001e 4FF6F973 		movw	r3, #65529
 2377 0022 1340     		ands	r3, r3, r2
 2378 0024 7A68     		ldr	r2, [r7, #4]
 2379 0026 1104     		lsls	r1, r2, #16
 2380 0028 BA68     		ldr	r2, [r7, #8]
 2381 002a 1143     		orrs	r1, r1, r2
 2382 002c FA68     		ldr	r2, [r7, #12]
 2383 002e 1268     		ldr	r2, [r2]
 2384 0030 0B43     		orrs	r3, r3, r1
 2385 0032 9362     		str	r3, [r2, #40]
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TOCC_TOS | FDCAN_TOCC_TOP), (TimeoutOperation | (TimeoutPeriod << FDCAN_TOCC_
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2386              		.loc 1 2282 12
 2387 0034 0023     		movs	r3, #0
 2388 0036 08E0     		b	.L115
 2389              	.L114:
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2390              		.loc 1 2287 11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 83


 2391 0038 FB68     		ldr	r3, [r7, #12]
 2392 003a D3F89C30 		ldr	r3, [r3, #156]
 2393              		.loc 1 2287 23
 2394 003e 43F00402 		orr	r2, r3, #4
 2395 0042 FB68     		ldr	r3, [r7, #12]
 2396 0044 C3F89C20 		str	r2, [r3, #156]
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2397              		.loc 1 2289 12
 2398 0048 0123     		movs	r3, #1
 2399              	.L115:
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2400              		.loc 1 2291 1
 2401 004a 1846     		mov	r0, r3
 2402 004c 1437     		adds	r7, r7, #20
 2403              	.LCFI125:
 2404              		.cfi_def_cfa_offset 4
 2405 004e BD46     		mov	sp, r7
 2406              	.LCFI126:
 2407              		.cfi_def_cfa_register 13
 2408              		@ sp needed
 2409 0050 5DF8047B 		ldr	r7, [sp], #4
 2410              	.LCFI127:
 2411              		.cfi_restore 7
 2412              		.cfi_def_cfa_offset 0
 2413 0054 7047     		bx	lr
 2414              		.cfi_endproc
 2415              	.LFE165:
 2417              		.section	.text.HAL_FDCAN_EnableTimeoutCounter,"ax",%progbits
 2418              		.align	1
 2419              		.global	HAL_FDCAN_EnableTimeoutCounter
 2420              		.syntax unified
 2421              		.thumb
 2422              		.thumb_func
 2424              	HAL_FDCAN_EnableTimeoutCounter:
 2425              	.LFB166:
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the timeout counter.
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2426              		.loc 1 2300 1
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 8
 2429              		@ frame_needed = 1, uses_anonymous_args = 0
 2430              		@ link register save eliminated.
 2431 0000 80B4     		push	{r7}
 2432              	.LCFI128:
 2433              		.cfi_def_cfa_offset 4
 2434              		.cfi_offset 7, -4
 2435 0002 83B0     		sub	sp, sp, #12
 2436              	.LCFI129:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 84


 2437              		.cfi_def_cfa_offset 16
 2438 0004 00AF     		add	r7, sp, #0
 2439              	.LCFI130:
 2440              		.cfi_def_cfa_register 7
 2441 0006 7860     		str	r0, [r7, #4]
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2442              		.loc 1 2301 13
 2443 0008 7B68     		ldr	r3, [r7, #4]
 2444 000a 93F89830 		ldrb	r3, [r3, #152]
 2445 000e DBB2     		uxtb	r3, r3
 2446              		.loc 1 2301 6
 2447 0010 012B     		cmp	r3, #1
 2448 0012 09D1     		bne	.L117
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable timeout counter */
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->TOCC, FDCAN_TOCC_ETOC);
 2449              		.loc 1 2304 5
 2450 0014 7B68     		ldr	r3, [r7, #4]
 2451 0016 1B68     		ldr	r3, [r3]
 2452 0018 9A6A     		ldr	r2, [r3, #40]
 2453 001a 7B68     		ldr	r3, [r7, #4]
 2454 001c 1B68     		ldr	r3, [r3]
 2455 001e 42F00102 		orr	r2, r2, #1
 2456 0022 9A62     		str	r2, [r3, #40]
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2457              		.loc 1 2307 12
 2458 0024 0023     		movs	r3, #0
 2459 0026 08E0     		b	.L118
 2460              	.L117:
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2461              		.loc 1 2312 11
 2462 0028 7B68     		ldr	r3, [r7, #4]
 2463 002a D3F89C30 		ldr	r3, [r3, #156]
 2464              		.loc 1 2312 23
 2465 002e 43F00402 		orr	r2, r3, #4
 2466 0032 7B68     		ldr	r3, [r7, #4]
 2467 0034 C3F89C20 		str	r2, [r3, #156]
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2468              		.loc 1 2314 12
 2469 0038 0123     		movs	r3, #1
 2470              	.L118:
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2471              		.loc 1 2316 1
 2472 003a 1846     		mov	r0, r3
 2473 003c 0C37     		adds	r7, r7, #12
 2474              	.LCFI131:
 2475              		.cfi_def_cfa_offset 4
 2476 003e BD46     		mov	sp, r7
 2477              	.LCFI132:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 85


 2478              		.cfi_def_cfa_register 13
 2479              		@ sp needed
 2480 0040 5DF8047B 		ldr	r7, [sp], #4
 2481              	.LCFI133:
 2482              		.cfi_restore 7
 2483              		.cfi_def_cfa_offset 0
 2484 0044 7047     		bx	lr
 2485              		.cfi_endproc
 2486              	.LFE166:
 2488              		.section	.text.HAL_FDCAN_DisableTimeoutCounter,"ax",%progbits
 2489              		.align	1
 2490              		.global	HAL_FDCAN_DisableTimeoutCounter
 2491              		.syntax unified
 2492              		.thumb
 2493              		.thumb_func
 2495              	HAL_FDCAN_DisableTimeoutCounter:
 2496              	.LFB167:
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the timeout counter.
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2497              		.loc 1 2325 1
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 8
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501              		@ link register save eliminated.
 2502 0000 80B4     		push	{r7}
 2503              	.LCFI134:
 2504              		.cfi_def_cfa_offset 4
 2505              		.cfi_offset 7, -4
 2506 0002 83B0     		sub	sp, sp, #12
 2507              	.LCFI135:
 2508              		.cfi_def_cfa_offset 16
 2509 0004 00AF     		add	r7, sp, #0
 2510              	.LCFI136:
 2511              		.cfi_def_cfa_register 7
 2512 0006 7860     		str	r0, [r7, #4]
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2513              		.loc 1 2326 13
 2514 0008 7B68     		ldr	r3, [r7, #4]
 2515 000a 93F89830 		ldrb	r3, [r3, #152]
 2516 000e DBB2     		uxtb	r3, r3
 2517              		.loc 1 2326 6
 2518 0010 012B     		cmp	r3, #1
 2519 0012 09D1     		bne	.L120
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable timeout counter */
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->TOCC, FDCAN_TOCC_ETOC);
 2520              		.loc 1 2329 5
 2521 0014 7B68     		ldr	r3, [r7, #4]
 2522 0016 1B68     		ldr	r3, [r3]
 2523 0018 9A6A     		ldr	r2, [r3, #40]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 86


 2524 001a 7B68     		ldr	r3, [r7, #4]
 2525 001c 1B68     		ldr	r3, [r3]
 2526 001e 22F00102 		bic	r2, r2, #1
 2527 0022 9A62     		str	r2, [r3, #40]
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2528              		.loc 1 2332 12
 2529 0024 0023     		movs	r3, #0
 2530 0026 08E0     		b	.L121
 2531              	.L120:
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2532              		.loc 1 2337 11
 2533 0028 7B68     		ldr	r3, [r7, #4]
 2534 002a D3F89C30 		ldr	r3, [r3, #156]
 2535              		.loc 1 2337 23
 2536 002e 43F00402 		orr	r2, r3, #4
 2537 0032 7B68     		ldr	r3, [r7, #4]
 2538 0034 C3F89C20 		str	r2, [r3, #156]
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2539              		.loc 1 2339 12
 2540 0038 0123     		movs	r3, #1
 2541              	.L121:
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2542              		.loc 1 2341 1
 2543 003a 1846     		mov	r0, r3
 2544 003c 0C37     		adds	r7, r7, #12
 2545              	.LCFI137:
 2546              		.cfi_def_cfa_offset 4
 2547 003e BD46     		mov	sp, r7
 2548              	.LCFI138:
 2549              		.cfi_def_cfa_register 13
 2550              		@ sp needed
 2551 0040 5DF8047B 		ldr	r7, [sp], #4
 2552              	.LCFI139:
 2553              		.cfi_restore 7
 2554              		.cfi_def_cfa_offset 0
 2555 0044 7047     		bx	lr
 2556              		.cfi_endproc
 2557              	.LFE167:
 2559              		.section	.text.HAL_FDCAN_GetTimeoutCounter,"ax",%progbits
 2560              		.align	1
 2561              		.global	HAL_FDCAN_GetTimeoutCounter
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2566              	HAL_FDCAN_GetTimeoutCounter:
 2567              	.LFB168:
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the timeout counter value.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 87


2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Timeout counter value
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint16_t HAL_FDCAN_GetTimeoutCounter(const FDCAN_HandleTypeDef *hfdcan)
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2568              		.loc 1 2350 1
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 8
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
 2573 0000 80B4     		push	{r7}
 2574              	.LCFI140:
 2575              		.cfi_def_cfa_offset 4
 2576              		.cfi_offset 7, -4
 2577 0002 83B0     		sub	sp, sp, #12
 2578              	.LCFI141:
 2579              		.cfi_def_cfa_offset 16
 2580 0004 00AF     		add	r7, sp, #0
 2581              	.LCFI142:
 2582              		.cfi_def_cfa_register 7
 2583 0006 7860     		str	r0, [r7, #4]
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (uint16_t)(hfdcan->Instance->TOCV);
 2584              		.loc 1 2351 27
 2585 0008 7B68     		ldr	r3, [r7, #4]
 2586 000a 1B68     		ldr	r3, [r3]
 2587              		.loc 1 2351 37
 2588 000c DB6A     		ldr	r3, [r3, #44]
 2589              		.loc 1 2351 10
 2590 000e 9BB2     		uxth	r3, r3
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2591              		.loc 1 2352 1
 2592 0010 1846     		mov	r0, r3
 2593 0012 0C37     		adds	r7, r7, #12
 2594              	.LCFI143:
 2595              		.cfi_def_cfa_offset 4
 2596 0014 BD46     		mov	sp, r7
 2597              	.LCFI144:
 2598              		.cfi_def_cfa_register 13
 2599              		@ sp needed
 2600 0016 5DF8047B 		ldr	r7, [sp], #4
 2601              	.LCFI145:
 2602              		.cfi_restore 7
 2603              		.cfi_def_cfa_offset 0
 2604 001a 7047     		bx	lr
 2605              		.cfi_endproc
 2606              	.LFE168:
 2608              		.section	.text.HAL_FDCAN_ResetTimeoutCounter,"ax",%progbits
 2609              		.align	1
 2610              		.global	HAL_FDCAN_ResetTimeoutCounter
 2611              		.syntax unified
 2612              		.thumb
 2613              		.thumb_func
 2615              	HAL_FDCAN_ResetTimeoutCounter:
 2616              	.LFB169:
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 88


2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the timeout counter to its start value.
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2617              		.loc 1 2361 1
 2618              		.cfi_startproc
 2619              		@ args = 0, pretend = 0, frame = 8
 2620              		@ frame_needed = 1, uses_anonymous_args = 0
 2621              		@ link register save eliminated.
 2622 0000 80B4     		push	{r7}
 2623              	.LCFI146:
 2624              		.cfi_def_cfa_offset 4
 2625              		.cfi_offset 7, -4
 2626 0002 83B0     		sub	sp, sp, #12
 2627              	.LCFI147:
 2628              		.cfi_def_cfa_offset 16
 2629 0004 00AF     		add	r7, sp, #0
 2630              	.LCFI148:
 2631              		.cfi_def_cfa_register 7
 2632 0006 7860     		str	r0, [r7, #4]
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TOCC & FDCAN_TOCC_TOS) == FDCAN_TIMEOUT_CONTINUOUS)
 2633              		.loc 1 2362 14
 2634 0008 7B68     		ldr	r3, [r7, #4]
 2635 000a 1B68     		ldr	r3, [r3]
 2636              		.loc 1 2362 24
 2637 000c 9B6A     		ldr	r3, [r3, #40]
 2638              		.loc 1 2362 31
 2639 000e 03F00603 		and	r3, r3, #6
 2640              		.loc 1 2362 6
 2641 0012 002B     		cmp	r3, #0
 2642 0014 05D1     		bne	.L125
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset timeout counter to start value */
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_REG(hfdcan->Instance->TOCV);
 2643              		.loc 1 2365 5
 2644 0016 7B68     		ldr	r3, [r7, #4]
 2645 0018 1B68     		ldr	r3, [r3]
 2646 001a 0022     		movs	r2, #0
 2647 001c DA62     		str	r2, [r3, #44]
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2648              		.loc 1 2368 12
 2649 001e 0023     		movs	r3, #0
 2650 0020 08E0     		b	.L126
 2651              	.L125:
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Unable to reset counter: controlled only by FIFO empty state */
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 2652              		.loc 1 2374 11
 2653 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 89


 2654 0024 D3F89C30 		ldr	r3, [r3, #156]
 2655              		.loc 1 2374 23
 2656 0028 43F01002 		orr	r2, r3, #16
 2657 002c 7B68     		ldr	r3, [r7, #4]
 2658 002e C3F89C20 		str	r2, [r3, #156]
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2659              		.loc 1 2376 12
 2660 0032 0123     		movs	r3, #1
 2661              	.L126:
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2662              		.loc 1 2378 1
 2663 0034 1846     		mov	r0, r3
 2664 0036 0C37     		adds	r7, r7, #12
 2665              	.LCFI149:
 2666              		.cfi_def_cfa_offset 4
 2667 0038 BD46     		mov	sp, r7
 2668              	.LCFI150:
 2669              		.cfi_def_cfa_register 13
 2670              		@ sp needed
 2671 003a 5DF8047B 		ldr	r7, [sp], #4
 2672              	.LCFI151:
 2673              		.cfi_restore 7
 2674              		.cfi_def_cfa_offset 0
 2675 003e 7047     		bx	lr
 2676              		.cfi_endproc
 2677              	.LFE169:
 2679              		.section	.text.HAL_FDCAN_ConfigTxDelayCompensation,"ax",%progbits
 2680              		.align	1
 2681              		.global	HAL_FDCAN_ConfigTxDelayCompensation
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2686              	HAL_FDCAN_ConfigTxDelayCompensation:
 2687              	.LFB170:
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the transmitter delay compensation.
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TdcOffset Transmitter Delay Compensation Offset.
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0x7F.
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TdcFilter Transmitter Delay Compensation Filter Window Length.
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0x7F.
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan, uint32_t TdcOffs
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t TdcFilter)
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2688              		.loc 1 2392 1
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 16
 2691              		@ frame_needed = 1, uses_anonymous_args = 0
 2692              		@ link register save eliminated.
 2693 0000 80B4     		push	{r7}
 2694              	.LCFI152:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 90


 2695              		.cfi_def_cfa_offset 4
 2696              		.cfi_offset 7, -4
 2697 0002 85B0     		sub	sp, sp, #20
 2698              	.LCFI153:
 2699              		.cfi_def_cfa_offset 24
 2700 0004 00AF     		add	r7, sp, #0
 2701              	.LCFI154:
 2702              		.cfi_def_cfa_register 7
 2703 0006 F860     		str	r0, [r7, #12]
 2704 0008 B960     		str	r1, [r7, #8]
 2705 000a 7A60     		str	r2, [r7, #4]
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TdcOffset, 0x7FU));
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TdcFilter, 0x7FU));
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2706              		.loc 1 2397 13
 2707 000c FB68     		ldr	r3, [r7, #12]
 2708 000e 93F89830 		ldrb	r3, [r3, #152]
 2709 0012 DBB2     		uxtb	r3, r3
 2710              		.loc 1 2397 6
 2711 0014 012B     		cmp	r3, #1
 2712 0016 08D1     		bne	.L128
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TDC offset and filter window */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TDCR = ((TdcFilter << FDCAN_TDCR_TDCF_Pos) | (TdcOffset << FDCAN_TDCR_TDCO_Po
 2713              		.loc 1 2400 79
 2714 0018 BB68     		ldr	r3, [r7, #8]
 2715 001a 1902     		lsls	r1, r3, #8
 2716              		.loc 1 2400 11
 2717 001c FB68     		ldr	r3, [r7, #12]
 2718 001e 1B68     		ldr	r3, [r3]
 2719              		.loc 1 2400 66
 2720 0020 7A68     		ldr	r2, [r7, #4]
 2721 0022 0A43     		orrs	r2, r2, r1
 2722              		.loc 1 2400 28
 2723 0024 9A64     		str	r2, [r3, #72]
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2724              		.loc 1 2403 12
 2725 0026 0023     		movs	r3, #0
 2726 0028 08E0     		b	.L129
 2727              	.L128:
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2728              		.loc 1 2408 11
 2729 002a FB68     		ldr	r3, [r7, #12]
 2730 002c D3F89C30 		ldr	r3, [r3, #156]
 2731              		.loc 1 2408 23
 2732 0030 43F00402 		orr	r2, r3, #4
 2733 0034 FB68     		ldr	r3, [r7, #12]
 2734 0036 C3F89C20 		str	r2, [r3, #156]
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 91


2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2735              		.loc 1 2410 12
 2736 003a 0123     		movs	r3, #1
 2737              	.L129:
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2738              		.loc 1 2412 1
 2739 003c 1846     		mov	r0, r3
 2740 003e 1437     		adds	r7, r7, #20
 2741              	.LCFI155:
 2742              		.cfi_def_cfa_offset 4
 2743 0040 BD46     		mov	sp, r7
 2744              	.LCFI156:
 2745              		.cfi_def_cfa_register 13
 2746              		@ sp needed
 2747 0042 5DF8047B 		ldr	r7, [sp], #4
 2748              	.LCFI157:
 2749              		.cfi_restore 7
 2750              		.cfi_def_cfa_offset 0
 2751 0046 7047     		bx	lr
 2752              		.cfi_endproc
 2753              	.LFE170:
 2755              		.section	.text.HAL_FDCAN_EnableTxDelayCompensation,"ax",%progbits
 2756              		.align	1
 2757              		.global	HAL_FDCAN_EnableTxDelayCompensation
 2758              		.syntax unified
 2759              		.thumb
 2760              		.thumb_func
 2762              	HAL_FDCAN_EnableTxDelayCompensation:
 2763              	.LFB171:
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the transmitter delay compensation.
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan)
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2764              		.loc 1 2421 1
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 8
 2767              		@ frame_needed = 1, uses_anonymous_args = 0
 2768              		@ link register save eliminated.
 2769 0000 80B4     		push	{r7}
 2770              	.LCFI158:
 2771              		.cfi_def_cfa_offset 4
 2772              		.cfi_offset 7, -4
 2773 0002 83B0     		sub	sp, sp, #12
 2774              	.LCFI159:
 2775              		.cfi_def_cfa_offset 16
 2776 0004 00AF     		add	r7, sp, #0
 2777              	.LCFI160:
 2778              		.cfi_def_cfa_register 7
 2779 0006 7860     		str	r0, [r7, #4]
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2780              		.loc 1 2422 13
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 92


 2781 0008 7B68     		ldr	r3, [r7, #4]
 2782 000a 93F89830 		ldrb	r3, [r3, #152]
 2783 000e DBB2     		uxtb	r3, r3
 2784              		.loc 1 2422 6
 2785 0010 012B     		cmp	r3, #1
 2786 0012 09D1     		bne	.L131
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable transmitter delay compensation */
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);
 2787              		.loc 1 2425 5
 2788 0014 7B68     		ldr	r3, [r7, #4]
 2789 0016 1B68     		ldr	r3, [r3]
 2790 0018 DA68     		ldr	r2, [r3, #12]
 2791 001a 7B68     		ldr	r3, [r7, #4]
 2792 001c 1B68     		ldr	r3, [r3]
 2793 001e 42F40002 		orr	r2, r2, #8388608
 2794 0022 DA60     		str	r2, [r3, #12]
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2795              		.loc 1 2428 12
 2796 0024 0023     		movs	r3, #0
 2797 0026 08E0     		b	.L132
 2798              	.L131:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2799              		.loc 1 2433 11
 2800 0028 7B68     		ldr	r3, [r7, #4]
 2801 002a D3F89C30 		ldr	r3, [r3, #156]
 2802              		.loc 1 2433 23
 2803 002e 43F00402 		orr	r2, r3, #4
 2804 0032 7B68     		ldr	r3, [r7, #4]
 2805 0034 C3F89C20 		str	r2, [r3, #156]
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2806              		.loc 1 2435 12
 2807 0038 0123     		movs	r3, #1
 2808              	.L132:
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2809              		.loc 1 2437 1
 2810 003a 1846     		mov	r0, r3
 2811 003c 0C37     		adds	r7, r7, #12
 2812              	.LCFI161:
 2813              		.cfi_def_cfa_offset 4
 2814 003e BD46     		mov	sp, r7
 2815              	.LCFI162:
 2816              		.cfi_def_cfa_register 13
 2817              		@ sp needed
 2818 0040 5DF8047B 		ldr	r7, [sp], #4
 2819              	.LCFI163:
 2820              		.cfi_restore 7
 2821              		.cfi_def_cfa_offset 0
 2822 0044 7047     		bx	lr
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 93


 2823              		.cfi_endproc
 2824              	.LFE171:
 2826              		.section	.text.HAL_FDCAN_DisableTxDelayCompensation,"ax",%progbits
 2827              		.align	1
 2828              		.global	HAL_FDCAN_DisableTxDelayCompensation
 2829              		.syntax unified
 2830              		.thumb
 2831              		.thumb_func
 2833              	HAL_FDCAN_DisableTxDelayCompensation:
 2834              	.LFB172:
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the transmitter delay compensation.
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan)
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2835              		.loc 1 2446 1
 2836              		.cfi_startproc
 2837              		@ args = 0, pretend = 0, frame = 8
 2838              		@ frame_needed = 1, uses_anonymous_args = 0
 2839              		@ link register save eliminated.
 2840 0000 80B4     		push	{r7}
 2841              	.LCFI164:
 2842              		.cfi_def_cfa_offset 4
 2843              		.cfi_offset 7, -4
 2844 0002 83B0     		sub	sp, sp, #12
 2845              	.LCFI165:
 2846              		.cfi_def_cfa_offset 16
 2847 0004 00AF     		add	r7, sp, #0
 2848              	.LCFI166:
 2849              		.cfi_def_cfa_register 7
 2850 0006 7860     		str	r0, [r7, #4]
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2851              		.loc 1 2447 13
 2852 0008 7B68     		ldr	r3, [r7, #4]
 2853 000a 93F89830 		ldrb	r3, [r3, #152]
 2854 000e DBB2     		uxtb	r3, r3
 2855              		.loc 1 2447 6
 2856 0010 012B     		cmp	r3, #1
 2857 0012 09D1     		bne	.L134
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable transmitter delay compensation */
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);
 2858              		.loc 1 2450 5
 2859 0014 7B68     		ldr	r3, [r7, #4]
 2860 0016 1B68     		ldr	r3, [r3]
 2861 0018 DA68     		ldr	r2, [r3, #12]
 2862 001a 7B68     		ldr	r3, [r7, #4]
 2863 001c 1B68     		ldr	r3, [r3]
 2864 001e 22F40002 		bic	r2, r2, #8388608
 2865 0022 DA60     		str	r2, [r3, #12]
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 94


 2866              		.loc 1 2453 12
 2867 0024 0023     		movs	r3, #0
 2868 0026 08E0     		b	.L135
 2869              	.L134:
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2870              		.loc 1 2458 11
 2871 0028 7B68     		ldr	r3, [r7, #4]
 2872 002a D3F89C30 		ldr	r3, [r3, #156]
 2873              		.loc 1 2458 23
 2874 002e 43F00402 		orr	r2, r3, #4
 2875 0032 7B68     		ldr	r3, [r7, #4]
 2876 0034 C3F89C20 		str	r2, [r3, #156]
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2877              		.loc 1 2460 12
 2878 0038 0123     		movs	r3, #1
 2879              	.L135:
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2880              		.loc 1 2462 1
 2881 003a 1846     		mov	r0, r3
 2882 003c 0C37     		adds	r7, r7, #12
 2883              	.LCFI167:
 2884              		.cfi_def_cfa_offset 4
 2885 003e BD46     		mov	sp, r7
 2886              	.LCFI168:
 2887              		.cfi_def_cfa_register 13
 2888              		@ sp needed
 2889 0040 5DF8047B 		ldr	r7, [sp], #4
 2890              	.LCFI169:
 2891              		.cfi_restore 7
 2892              		.cfi_def_cfa_offset 0
 2893 0044 7047     		bx	lr
 2894              		.cfi_endproc
 2895              	.LFE172:
 2897              		.section	.text.HAL_FDCAN_EnableISOMode,"ax",%progbits
 2898              		.align	1
 2899              		.global	HAL_FDCAN_EnableISOMode
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2904              	HAL_FDCAN_EnableISOMode:
 2905              	.LFB173:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable ISO 11898-1 protocol mode.
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         CAN FD frame format is according to ISO 11898-1 standard.
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableISOMode(FDCAN_HandleTypeDef *hfdcan)
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 95


 2906              		.loc 1 2472 1
 2907              		.cfi_startproc
 2908              		@ args = 0, pretend = 0, frame = 8
 2909              		@ frame_needed = 1, uses_anonymous_args = 0
 2910              		@ link register save eliminated.
 2911 0000 80B4     		push	{r7}
 2912              	.LCFI170:
 2913              		.cfi_def_cfa_offset 4
 2914              		.cfi_offset 7, -4
 2915 0002 83B0     		sub	sp, sp, #12
 2916              	.LCFI171:
 2917              		.cfi_def_cfa_offset 16
 2918 0004 00AF     		add	r7, sp, #0
 2919              	.LCFI172:
 2920              		.cfi_def_cfa_register 7
 2921 0006 7860     		str	r0, [r7, #4]
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2922              		.loc 1 2473 13
 2923 0008 7B68     		ldr	r3, [r7, #4]
 2924 000a 93F89830 		ldrb	r3, [r3, #152]
 2925 000e DBB2     		uxtb	r3, r3
 2926              		.loc 1 2473 6
 2927 0010 012B     		cmp	r3, #1
 2928 0012 09D1     		bne	.L137
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable Non ISO protocol mode */
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_NISO);
 2929              		.loc 1 2476 5
 2930 0014 7B68     		ldr	r3, [r7, #4]
 2931 0016 1B68     		ldr	r3, [r3]
 2932 0018 9A69     		ldr	r2, [r3, #24]
 2933 001a 7B68     		ldr	r3, [r7, #4]
 2934 001c 1B68     		ldr	r3, [r3]
 2935 001e 22F40042 		bic	r2, r2, #32768
 2936 0022 9A61     		str	r2, [r3, #24]
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 2937              		.loc 1 2479 12
 2938 0024 0023     		movs	r3, #0
 2939 0026 08E0     		b	.L138
 2940              	.L137:
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 2941              		.loc 1 2484 11
 2942 0028 7B68     		ldr	r3, [r7, #4]
 2943 002a D3F89C30 		ldr	r3, [r3, #156]
 2944              		.loc 1 2484 23
 2945 002e 43F00402 		orr	r2, r3, #4
 2946 0032 7B68     		ldr	r3, [r7, #4]
 2947 0034 C3F89C20 		str	r2, [r3, #156]
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2948              		.loc 1 2486 12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 96


 2949 0038 0123     		movs	r3, #1
 2950              	.L138:
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2951              		.loc 1 2488 1
 2952 003a 1846     		mov	r0, r3
 2953 003c 0C37     		adds	r7, r7, #12
 2954              	.LCFI173:
 2955              		.cfi_def_cfa_offset 4
 2956 003e BD46     		mov	sp, r7
 2957              	.LCFI174:
 2958              		.cfi_def_cfa_register 13
 2959              		@ sp needed
 2960 0040 5DF8047B 		ldr	r7, [sp], #4
 2961              	.LCFI175:
 2962              		.cfi_restore 7
 2963              		.cfi_def_cfa_offset 0
 2964 0044 7047     		bx	lr
 2965              		.cfi_endproc
 2966              	.LFE173:
 2968              		.section	.text.HAL_FDCAN_DisableISOMode,"ax",%progbits
 2969              		.align	1
 2970              		.global	HAL_FDCAN_DisableISOMode
 2971              		.syntax unified
 2972              		.thumb
 2973              		.thumb_func
 2975              	HAL_FDCAN_DisableISOMode:
 2976              	.LFB174:
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable ISO 11898-1 protocol mode.
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         CAN FD frame format is according to Bosch CAN FD specification V1.0.
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableISOMode(FDCAN_HandleTypeDef *hfdcan)
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2977              		.loc 1 2498 1
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 8
 2980              		@ frame_needed = 1, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
 2982 0000 80B4     		push	{r7}
 2983              	.LCFI176:
 2984              		.cfi_def_cfa_offset 4
 2985              		.cfi_offset 7, -4
 2986 0002 83B0     		sub	sp, sp, #12
 2987              	.LCFI177:
 2988              		.cfi_def_cfa_offset 16
 2989 0004 00AF     		add	r7, sp, #0
 2990              	.LCFI178:
 2991              		.cfi_def_cfa_register 7
 2992 0006 7860     		str	r0, [r7, #4]
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2993              		.loc 1 2499 13
 2994 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 97


 2995 000a 93F89830 		ldrb	r3, [r3, #152]
 2996 000e DBB2     		uxtb	r3, r3
 2997              		.loc 1 2499 6
 2998 0010 012B     		cmp	r3, #1
 2999 0012 09D1     		bne	.L140
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Non ISO protocol mode */
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_NISO);
 3000              		.loc 1 2502 5
 3001 0014 7B68     		ldr	r3, [r7, #4]
 3002 0016 1B68     		ldr	r3, [r3]
 3003 0018 9A69     		ldr	r2, [r3, #24]
 3004 001a 7B68     		ldr	r3, [r7, #4]
 3005 001c 1B68     		ldr	r3, [r3]
 3006 001e 42F40042 		orr	r2, r2, #32768
 3007 0022 9A61     		str	r2, [r3, #24]
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3008              		.loc 1 2505 12
 3009 0024 0023     		movs	r3, #0
 3010 0026 08E0     		b	.L141
 3011              	.L140:
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3012              		.loc 1 2510 11
 3013 0028 7B68     		ldr	r3, [r7, #4]
 3014 002a D3F89C30 		ldr	r3, [r3, #156]
 3015              		.loc 1 2510 23
 3016 002e 43F00402 		orr	r2, r3, #4
 3017 0032 7B68     		ldr	r3, [r7, #4]
 3018 0034 C3F89C20 		str	r2, [r3, #156]
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3019              		.loc 1 2512 12
 3020 0038 0123     		movs	r3, #1
 3021              	.L141:
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3022              		.loc 1 2514 1
 3023 003a 1846     		mov	r0, r3
 3024 003c 0C37     		adds	r7, r7, #12
 3025              	.LCFI179:
 3026              		.cfi_def_cfa_offset 4
 3027 003e BD46     		mov	sp, r7
 3028              	.LCFI180:
 3029              		.cfi_def_cfa_register 13
 3030              		@ sp needed
 3031 0040 5DF8047B 		ldr	r7, [sp], #4
 3032              	.LCFI181:
 3033              		.cfi_restore 7
 3034              		.cfi_def_cfa_offset 0
 3035 0044 7047     		bx	lr
 3036              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 98


 3037              	.LFE174:
 3039              		.section	.text.HAL_FDCAN_EnableEdgeFiltering,"ax",%progbits
 3040              		.align	1
 3041              		.global	HAL_FDCAN_EnableEdgeFiltering
 3042              		.syntax unified
 3043              		.thumb
 3044              		.thumb_func
 3046              	HAL_FDCAN_EnableEdgeFiltering:
 3047              	.LFB175:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable edge filtering during bus integration.
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Two consecutive dominant tq are required to detect an edge for hard synchronization.
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableEdgeFiltering(FDCAN_HandleTypeDef *hfdcan)
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3048              		.loc 1 2524 1
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 8
 3051              		@ frame_needed = 1, uses_anonymous_args = 0
 3052              		@ link register save eliminated.
 3053 0000 80B4     		push	{r7}
 3054              	.LCFI182:
 3055              		.cfi_def_cfa_offset 4
 3056              		.cfi_offset 7, -4
 3057 0002 83B0     		sub	sp, sp, #12
 3058              	.LCFI183:
 3059              		.cfi_def_cfa_offset 16
 3060 0004 00AF     		add	r7, sp, #0
 3061              	.LCFI184:
 3062              		.cfi_def_cfa_register 7
 3063 0006 7860     		str	r0, [r7, #4]
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3064              		.loc 1 2525 13
 3065 0008 7B68     		ldr	r3, [r7, #4]
 3066 000a 93F89830 		ldrb	r3, [r3, #152]
 3067 000e DBB2     		uxtb	r3, r3
 3068              		.loc 1 2525 6
 3069 0010 012B     		cmp	r3, #1
 3070 0012 09D1     		bne	.L143
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable edge filtering */
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_EFBI);
 3071              		.loc 1 2528 5
 3072 0014 7B68     		ldr	r3, [r7, #4]
 3073 0016 1B68     		ldr	r3, [r3]
 3074 0018 9A69     		ldr	r2, [r3, #24]
 3075 001a 7B68     		ldr	r3, [r7, #4]
 3076 001c 1B68     		ldr	r3, [r3]
 3077 001e 42F40052 		orr	r2, r2, #8192
 3078 0022 9A61     		str	r2, [r3, #24]
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 99


 3079              		.loc 1 2531 12
 3080 0024 0023     		movs	r3, #0
 3081 0026 08E0     		b	.L144
 3082              	.L143:
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3083              		.loc 1 2536 11
 3084 0028 7B68     		ldr	r3, [r7, #4]
 3085 002a D3F89C30 		ldr	r3, [r3, #156]
 3086              		.loc 1 2536 23
 3087 002e 43F00402 		orr	r2, r3, #4
 3088 0032 7B68     		ldr	r3, [r7, #4]
 3089 0034 C3F89C20 		str	r2, [r3, #156]
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3090              		.loc 1 2538 12
 3091 0038 0123     		movs	r3, #1
 3092              	.L144:
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3093              		.loc 1 2540 1
 3094 003a 1846     		mov	r0, r3
 3095 003c 0C37     		adds	r7, r7, #12
 3096              	.LCFI185:
 3097              		.cfi_def_cfa_offset 4
 3098 003e BD46     		mov	sp, r7
 3099              	.LCFI186:
 3100              		.cfi_def_cfa_register 13
 3101              		@ sp needed
 3102 0040 5DF8047B 		ldr	r7, [sp], #4
 3103              	.LCFI187:
 3104              		.cfi_restore 7
 3105              		.cfi_def_cfa_offset 0
 3106 0044 7047     		bx	lr
 3107              		.cfi_endproc
 3108              	.LFE175:
 3110              		.section	.text.HAL_FDCAN_DisableEdgeFiltering,"ax",%progbits
 3111              		.align	1
 3112              		.global	HAL_FDCAN_DisableEdgeFiltering
 3113              		.syntax unified
 3114              		.thumb
 3115              		.thumb_func
 3117              	HAL_FDCAN_DisableEdgeFiltering:
 3118              	.LFB176:
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable edge filtering during bus integration.
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         One dominant tq is required to detect an edge for hard synchronization.
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableEdgeFiltering(FDCAN_HandleTypeDef *hfdcan)
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 100


 3119              		.loc 1 2550 1
 3120              		.cfi_startproc
 3121              		@ args = 0, pretend = 0, frame = 8
 3122              		@ frame_needed = 1, uses_anonymous_args = 0
 3123              		@ link register save eliminated.
 3124 0000 80B4     		push	{r7}
 3125              	.LCFI188:
 3126              		.cfi_def_cfa_offset 4
 3127              		.cfi_offset 7, -4
 3128 0002 83B0     		sub	sp, sp, #12
 3129              	.LCFI189:
 3130              		.cfi_def_cfa_offset 16
 3131 0004 00AF     		add	r7, sp, #0
 3132              	.LCFI190:
 3133              		.cfi_def_cfa_register 7
 3134 0006 7860     		str	r0, [r7, #4]
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3135              		.loc 1 2551 13
 3136 0008 7B68     		ldr	r3, [r7, #4]
 3137 000a 93F89830 		ldrb	r3, [r3, #152]
 3138 000e DBB2     		uxtb	r3, r3
 3139              		.loc 1 2551 6
 3140 0010 012B     		cmp	r3, #1
 3141 0012 09D1     		bne	.L146
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable edge filtering */
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_EFBI);
 3142              		.loc 1 2554 5
 3143 0014 7B68     		ldr	r3, [r7, #4]
 3144 0016 1B68     		ldr	r3, [r3]
 3145 0018 9A69     		ldr	r2, [r3, #24]
 3146 001a 7B68     		ldr	r3, [r7, #4]
 3147 001c 1B68     		ldr	r3, [r3]
 3148 001e 22F40052 		bic	r2, r2, #8192
 3149 0022 9A61     		str	r2, [r3, #24]
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3150              		.loc 1 2557 12
 3151 0024 0023     		movs	r3, #0
 3152 0026 08E0     		b	.L147
 3153              	.L146:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3154              		.loc 1 2562 11
 3155 0028 7B68     		ldr	r3, [r7, #4]
 3156 002a D3F89C30 		ldr	r3, [r3, #156]
 3157              		.loc 1 2562 23
 3158 002e 43F00402 		orr	r2, r3, #4
 3159 0032 7B68     		ldr	r3, [r7, #4]
 3160 0034 C3F89C20 		str	r2, [r3, #156]
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3161              		.loc 1 2564 12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 101


 3162 0038 0123     		movs	r3, #1
 3163              	.L147:
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3164              		.loc 1 2566 1
 3165 003a 1846     		mov	r0, r3
 3166 003c 0C37     		adds	r7, r7, #12
 3167              	.LCFI191:
 3168              		.cfi_def_cfa_offset 4
 3169 003e BD46     		mov	sp, r7
 3170              	.LCFI192:
 3171              		.cfi_def_cfa_register 13
 3172              		@ sp needed
 3173 0040 5DF8047B 		ldr	r7, [sp], #4
 3174              	.LCFI193:
 3175              		.cfi_restore 7
 3176              		.cfi_def_cfa_offset 0
 3177 0044 7047     		bx	lr
 3178              		.cfi_endproc
 3179              	.LFE176:
 3181              		.section	.text.HAL_FDCAN_Start,"ax",%progbits
 3182              		.align	1
 3183              		.global	HAL_FDCAN_Start
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3188              	HAL_FDCAN_Start:
 3189              	.LFB177:
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group3 Control functions
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief    Control functions
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                           ##### Control functions #####
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_Start                         : Start the FDCAN module
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_Stop                          : Stop the FDCAN module and enable access to conf
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AddMessageToTxFifoQ           : Add a message to the Tx FIFO/Queue and activate
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     transmission request
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AddMessageToTxBuffer          : Add a message to a dedicated Tx buffer
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableTxBufferRequest         : Enable transmission request
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetLatestTxFifoQRequestBuffer : Get Tx buffer index of latest Tx FIFO/Queue req
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AbortTxRequest                : Abort transmission request
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetRxMessage                  : Get an FDCAN frame from the Rx Buffer/FIFO zone
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     message RAM
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetTxEvent                    : Get an FDCAN Tx event from the Tx Event FIFO zo
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     into the message RAM
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetHighPriorityMessageStatus  : Get high priority message status
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetProtocolStatus             : Get protocol status
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetErrorCounters              : Get error counter values
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsRxBufferMessageAvailable    : Check if a new message is received in the selec
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 102


2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsTxBufferMessagePending      : Check if a transmission request is pending
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     on the selected Tx buffer
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetRxFifoFillLevel            : Return Rx FIFO fill level
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetTxFifoFreeLevel            : Return Tx FIFO free level
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsRestrictedOperationMode     : Check if the FDCAN peripheral entered Restricte
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ExitRestrictedOperationMode   : Exit Restricted Operation Mode
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Start the FDCAN module.
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Start(FDCAN_HandleTypeDef *hfdcan)
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3190              		.loc 1 2614 1
 3191              		.cfi_startproc
 3192              		@ args = 0, pretend = 0, frame = 8
 3193              		@ frame_needed = 1, uses_anonymous_args = 0
 3194              		@ link register save eliminated.
 3195 0000 80B4     		push	{r7}
 3196              	.LCFI194:
 3197              		.cfi_def_cfa_offset 4
 3198              		.cfi_offset 7, -4
 3199 0002 83B0     		sub	sp, sp, #12
 3200              	.LCFI195:
 3201              		.cfi_def_cfa_offset 16
 3202 0004 00AF     		add	r7, sp, #0
 3203              	.LCFI196:
 3204              		.cfi_def_cfa_register 7
 3205 0006 7860     		str	r0, [r7, #4]
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3206              		.loc 1 2615 13
 3207 0008 7B68     		ldr	r3, [r7, #4]
 3208 000a 93F89830 		ldrb	r3, [r3, #152]
 3209 000e DBB2     		uxtb	r3, r3
 3210              		.loc 1 2615 6
 3211 0010 012B     		cmp	r3, #1
 3212 0012 11D1     		bne	.L149
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN peripheral state */
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_BUSY;
 3213              		.loc 1 2618 19
 3214 0014 7B68     		ldr	r3, [r7, #4]
 3215 0016 0222     		movs	r2, #2
 3216 0018 83F89820 		strb	r2, [r3, #152]
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Request leave initialisation */
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 3217              		.loc 1 2621 5
 3218 001c 7B68     		ldr	r3, [r7, #4]
 3219 001e 1B68     		ldr	r3, [r3]
 3220 0020 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 103


 3221 0022 7B68     		ldr	r3, [r7, #4]
 3222 0024 1B68     		ldr	r3, [r3]
 3223 0026 22F00102 		bic	r2, r2, #1
 3224 002a 9A61     		str	r2, [r3, #24]
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset the FDCAN ErrorCode */
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 3225              		.loc 1 2624 23
 3226 002c 7B68     		ldr	r3, [r7, #4]
 3227 002e 0022     		movs	r2, #0
 3228 0030 C3F89C20 		str	r2, [r3, #156]
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3229              		.loc 1 2627 12
 3230 0034 0023     		movs	r3, #0
 3231 0036 08E0     		b	.L150
 3232              	.L149:
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3233              		.loc 1 2632 11
 3234 0038 7B68     		ldr	r3, [r7, #4]
 3235 003a D3F89C30 		ldr	r3, [r3, #156]
 3236              		.loc 1 2632 23
 3237 003e 43F00402 		orr	r2, r3, #4
 3238 0042 7B68     		ldr	r3, [r7, #4]
 3239 0044 C3F89C20 		str	r2, [r3, #156]
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3240              		.loc 1 2634 12
 3241 0048 0123     		movs	r3, #1
 3242              	.L150:
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3243              		.loc 1 2636 1
 3244 004a 1846     		mov	r0, r3
 3245 004c 0C37     		adds	r7, r7, #12
 3246              	.LCFI197:
 3247              		.cfi_def_cfa_offset 4
 3248 004e BD46     		mov	sp, r7
 3249              	.LCFI198:
 3250              		.cfi_def_cfa_register 13
 3251              		@ sp needed
 3252 0050 5DF8047B 		ldr	r7, [sp], #4
 3253              	.LCFI199:
 3254              		.cfi_restore 7
 3255              		.cfi_def_cfa_offset 0
 3256 0054 7047     		bx	lr
 3257              		.cfi_endproc
 3258              	.LFE177:
 3260              		.section	.text.HAL_FDCAN_Stop,"ax",%progbits
 3261              		.align	1
 3262              		.global	HAL_FDCAN_Stop
 3263              		.syntax unified
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 104


 3264              		.thumb
 3265              		.thumb_func
 3267              	HAL_FDCAN_Stop:
 3268              	.LFB178:
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Stop the FDCAN module and enable access to configuration registers.
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Stop(FDCAN_HandleTypeDef *hfdcan)
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3269              		.loc 1 2645 1
 3270              		.cfi_startproc
 3271              		@ args = 0, pretend = 0, frame = 16
 3272              		@ frame_needed = 1, uses_anonymous_args = 0
 3273              		@ link register save eliminated.
 3274 0000 80B4     		push	{r7}
 3275              	.LCFI200:
 3276              		.cfi_def_cfa_offset 4
 3277              		.cfi_offset 7, -4
 3278 0002 85B0     		sub	sp, sp, #20
 3279              	.LCFI201:
 3280              		.cfi_def_cfa_offset 24
 3281 0004 00AF     		add	r7, sp, #0
 3282              	.LCFI202:
 3283              		.cfi_def_cfa_register 7
 3284 0006 7860     		str	r0, [r7, #4]
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 3285              		.loc 1 2646 12
 3286 0008 0023     		movs	r3, #0
 3287 000a FB60     		str	r3, [r7, #12]
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 3288              		.loc 1 2648 13
 3289 000c 7B68     		ldr	r3, [r7, #4]
 3290 000e 93F89830 		ldrb	r3, [r3, #152]
 3291 0012 DBB2     		uxtb	r3, r3
 3292              		.loc 1 2648 6
 3293 0014 022B     		cmp	r3, #2
 3294 0016 5BD1     		bne	.L152
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Request initialisation */
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 3295              		.loc 1 2651 5
 3296 0018 7B68     		ldr	r3, [r7, #4]
 3297 001a 1B68     		ldr	r3, [r3]
 3298 001c 9A69     		ldr	r2, [r3, #24]
 3299 001e 7B68     		ldr	r3, [r7, #4]
 3300 0020 1B68     		ldr	r3, [r3]
 3301 0022 42F00102 		orr	r2, r2, #1
 3302 0026 9A61     		str	r2, [r3, #24]
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the INIT bit into CCCR register is set */
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
 3303              		.loc 1 2654 11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 105


 3304 0028 13E0     		b	.L153
 3305              	.L156:
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 3306              		.loc 1 2657 10
 3307 002a FB68     		ldr	r3, [r7, #12]
 3308 002c 322B     		cmp	r3, #50
 3309 002e 0DD9     		bls	.L154
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 3310              		.loc 1 2660 15
 3311 0030 7B68     		ldr	r3, [r7, #4]
 3312 0032 D3F89C30 		ldr	r3, [r3, #156]
 3313              		.loc 1 2660 27
 3314 0036 43F00102 		orr	r2, r3, #1
 3315 003a 7B68     		ldr	r3, [r7, #4]
 3316 003c C3F89C20 		str	r2, [r3, #156]
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 3317              		.loc 1 2663 23
 3318 0040 7B68     		ldr	r3, [r7, #4]
 3319 0042 0322     		movs	r2, #3
 3320 0044 83F89820 		strb	r2, [r3, #152]
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 3321              		.loc 1 2665 16
 3322 0048 0123     		movs	r3, #1
 3323 004a 4AE0     		b	.L155
 3324              	.L154:
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 3325              		.loc 1 2669 14
 3326 004c FB68     		ldr	r3, [r7, #12]
 3327 004e 0133     		adds	r3, r3, #1
 3328 0050 FB60     		str	r3, [r7, #12]
 3329              	.L153:
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3330              		.loc 1 2654 19
 3331 0052 7B68     		ldr	r3, [r7, #4]
 3332 0054 1B68     		ldr	r3, [r3]
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3333              		.loc 1 2654 29
 3334 0056 9B69     		ldr	r3, [r3, #24]
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3335              		.loc 1 2654 36
 3336 0058 03F00103 		and	r3, r3, #1
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3337              		.loc 1 2654 55
 3338 005c 002B     		cmp	r3, #0
 3339 005e E4D0     		beq	.L156
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 106


2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset counter */
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     Counter = 0U;
 3340              		.loc 1 2673 13
 3341 0060 0023     		movs	r3, #0
 3342 0062 FB60     		str	r3, [r7, #12]
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Exit from Sleep mode */
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 3343              		.loc 1 2676 5
 3344 0064 7B68     		ldr	r3, [r7, #4]
 3345 0066 1B68     		ldr	r3, [r3]
 3346 0068 9A69     		ldr	r2, [r3, #24]
 3347 006a 7B68     		ldr	r3, [r7, #4]
 3348 006c 1B68     		ldr	r3, [r3]
 3349 006e 22F01002 		bic	r2, r2, #16
 3350 0072 9A61     		str	r2, [r3, #24]
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until FDCAN exits sleep mode */
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 3351              		.loc 1 2679 11
 3352 0074 13E0     		b	.L157
 3353              	.L159:
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 3354              		.loc 1 2682 10
 3355 0076 FB68     		ldr	r3, [r7, #12]
 3356 0078 322B     		cmp	r3, #50
 3357 007a 0DD9     		bls	.L158
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 3358              		.loc 1 2685 15
 3359 007c 7B68     		ldr	r3, [r7, #4]
 3360 007e D3F89C30 		ldr	r3, [r3, #156]
 3361              		.loc 1 2685 27
 3362 0082 43F00102 		orr	r2, r3, #1
 3363 0086 7B68     		ldr	r3, [r7, #4]
 3364 0088 C3F89C20 		str	r2, [r3, #156]
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 3365              		.loc 1 2688 23
 3366 008c 7B68     		ldr	r3, [r7, #4]
 3367 008e 0322     		movs	r2, #3
 3368 0090 83F89820 		strb	r2, [r3, #152]
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 3369              		.loc 1 2690 16
 3370 0094 0123     		movs	r3, #1
 3371 0096 24E0     		b	.L155
 3372              	.L158:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 3373              		.loc 1 2694 14
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 107


 3374 0098 FB68     		ldr	r3, [r7, #12]
 3375 009a 0133     		adds	r3, r3, #1
 3376 009c FB60     		str	r3, [r7, #12]
 3377              	.L157:
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3378              		.loc 1 2679 19
 3379 009e 7B68     		ldr	r3, [r7, #4]
 3380 00a0 1B68     		ldr	r3, [r3]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3381              		.loc 1 2679 29
 3382 00a2 9B69     		ldr	r3, [r3, #24]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3383              		.loc 1 2679 36
 3384 00a4 03F00803 		and	r3, r3, #8
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 3385              		.loc 1 2679 54
 3386 00a8 082B     		cmp	r3, #8
 3387 00aa E4D0     		beq	.L159
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable configuration change */
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CCE);
 3388              		.loc 1 2698 5
 3389 00ac 7B68     		ldr	r3, [r7, #4]
 3390 00ae 1B68     		ldr	r3, [r3]
 3391 00b0 9A69     		ldr	r2, [r3, #24]
 3392 00b2 7B68     		ldr	r3, [r7, #4]
 3393 00b4 1B68     		ldr	r3, [r3]
 3394 00b6 42F00202 		orr	r2, r2, #2
 3395 00ba 9A61     		str	r2, [r3, #24]
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset Latest Tx FIFO/Queue Request Buffer Index */
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->LatestTxFifoQRequest = 0U;
 3396              		.loc 1 2701 34
 3397 00bc 7B68     		ldr	r3, [r7, #4]
 3398 00be 0022     		movs	r2, #0
 3399 00c0 C3F89420 		str	r2, [r3, #148]
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN peripheral state */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_READY;
 3400              		.loc 1 2704 19
 3401 00c4 7B68     		ldr	r3, [r7, #4]
 3402 00c6 0122     		movs	r2, #1
 3403 00c8 83F89820 		strb	r2, [r3, #152]
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3404              		.loc 1 2707 12
 3405 00cc 0023     		movs	r3, #0
 3406 00ce 08E0     		b	.L155
 3407              	.L152:
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 3408              		.loc 1 2712 11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 108


 3409 00d0 7B68     		ldr	r3, [r7, #4]
 3410 00d2 D3F89C30 		ldr	r3, [r3, #156]
 3411              		.loc 1 2712 23
 3412 00d6 43F00802 		orr	r2, r3, #8
 3413 00da 7B68     		ldr	r3, [r7, #4]
 3414 00dc C3F89C20 		str	r2, [r3, #156]
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3415              		.loc 1 2714 12
 3416 00e0 0123     		movs	r3, #1
 3417              	.L155:
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3418              		.loc 1 2716 1
 3419 00e2 1846     		mov	r0, r3
 3420 00e4 1437     		adds	r7, r7, #20
 3421              	.LCFI203:
 3422              		.cfi_def_cfa_offset 4
 3423 00e6 BD46     		mov	sp, r7
 3424              	.LCFI204:
 3425              		.cfi_def_cfa_register 13
 3426              		@ sp needed
 3427 00e8 5DF8047B 		ldr	r7, [sp], #4
 3428              	.LCFI205:
 3429              		.cfi_restore 7
 3430              		.cfi_def_cfa_offset 0
 3431 00ec 7047     		bx	lr
 3432              		.cfi_endproc
 3433              	.LFE178:
 3435              		.section	.text.HAL_FDCAN_AddMessageToTxFifoQ,"ax",%progbits
 3436              		.align	1
 3437              		.global	HAL_FDCAN_AddMessageToTxFifoQ
 3438              		.syntax unified
 3439              		.thumb
 3440              		.thumb_func
 3442              	HAL_FDCAN_AddMessageToTxFifoQ:
 3443              	.LFB179:
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Add a message to the Tx FIFO/Queue and activate the corresponding transmission request
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AddMessageToTxFifoQ(FDCAN_HandleTypeDef *hfdcan, const FDCAN_TxHeaderTy
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                 const uint8_t *pTxData)
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3444              		.loc 1 2728 1
 3445              		.cfi_startproc
 3446              		@ args = 0, pretend = 0, frame = 24
 3447              		@ frame_needed = 1, uses_anonymous_args = 0
 3448 0000 80B5     		push	{r7, lr}
 3449              	.LCFI206:
 3450              		.cfi_def_cfa_offset 8
 3451              		.cfi_offset 7, -8
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 109


 3452              		.cfi_offset 14, -4
 3453 0002 86B0     		sub	sp, sp, #24
 3454              	.LCFI207:
 3455              		.cfi_def_cfa_offset 32
 3456 0004 00AF     		add	r7, sp, #0
 3457              	.LCFI208:
 3458              		.cfi_def_cfa_register 7
 3459 0006 F860     		str	r0, [r7, #12]
 3460 0008 B960     		str	r1, [r7, #8]
 3461 000a 7A60     		str	r2, [r7, #4]
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t PutIndex;
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(pTxHeader->IdType));
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x7FFU));
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x1FFFFFFFU));
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_TYPE(pTxHeader->TxFrameType));
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_DLC(pTxHeader->DataLength));
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ESI(pTxHeader->ErrorStateIndicator));
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_BRS(pTxHeader->BitRateSwitch));
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FDF(pTxHeader->FDFormat));
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_EFC(pTxHeader->TxEventFifoControl));
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->MessageMarker, 0xFFU));
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 3462              		.loc 1 2749 13
 3463 000c FB68     		ldr	r3, [r7, #12]
 3464 000e 93F89830 		ldrb	r3, [r3, #152]
 3465 0012 DBB2     		uxtb	r3, r3
 3466              		.loc 1 2749 6
 3467 0014 022B     		cmp	r3, #2
 3468 0016 41D1     		bne	.L161
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx FIFO/Queue has an allocated area into the RAM */
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXBC & FDCAN_TXBC_TFQS) == 0U)
 3469              		.loc 1 2752 16
 3470 0018 FB68     		ldr	r3, [r7, #12]
 3471 001a 1B68     		ldr	r3, [r3]
 3472              		.loc 1 2752 26
 3473 001c D3F8C030 		ldr	r3, [r3, #192]
 3474              		.loc 1 2752 33
 3475 0020 03F07C53 		and	r3, r3, #1056964608
 3476              		.loc 1 2752 8
 3477 0024 002B     		cmp	r3, #0
 3478 0026 09D1     		bne	.L162
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 3479              		.loc 1 2755 13
 3480 0028 FB68     		ldr	r3, [r7, #12]
 3481 002a D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 110


 3482              		.loc 1 2755 25
 3483 002e 43F02002 		orr	r2, r3, #32
 3484 0032 FB68     		ldr	r3, [r7, #12]
 3485 0034 C3F89C20 		str	r2, [r3, #156]
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 3486              		.loc 1 2757 14
 3487 0038 0123     		movs	r3, #1
 3488 003a 38E0     		b	.L163
 3489              	.L162:
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx FIFO/Queue is not full */
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQF) != 0U)
 3490              		.loc 1 2761 16
 3491 003c FB68     		ldr	r3, [r7, #12]
 3492 003e 1B68     		ldr	r3, [r3]
 3493              		.loc 1 2761 26
 3494 0040 D3F8C430 		ldr	r3, [r3, #196]
 3495              		.loc 1 2761 34
 3496 0044 03F40013 		and	r3, r3, #2097152
 3497              		.loc 1 2761 8
 3498 0048 002B     		cmp	r3, #0
 3499 004a 09D0     		beq	.L164
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_FULL;
 3500              		.loc 1 2764 13
 3501 004c FB68     		ldr	r3, [r7, #12]
 3502 004e D3F89C30 		ldr	r3, [r3, #156]
 3503              		.loc 1 2764 25
 3504 0052 43F40072 		orr	r2, r3, #512
 3505 0056 FB68     		ldr	r3, [r7, #12]
 3506 0058 C3F89C20 		str	r2, [r3, #156]
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 3507              		.loc 1 2766 14
 3508 005c 0123     		movs	r3, #1
 3509 005e 26E0     		b	.L163
 3510              	.L164:
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Retrieve the Tx FIFO PutIndex */
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       PutIndex = ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQPI) >> FDCAN_TXFQS_TFQPI_Pos);
 3511              		.loc 1 2771 26
 3512 0060 FB68     		ldr	r3, [r7, #12]
 3513 0062 1B68     		ldr	r3, [r3]
 3514              		.loc 1 2771 36
 3515 0064 D3F8C430 		ldr	r3, [r3, #196]
 3516              		.loc 1 2771 65
 3517 0068 1B0C     		lsrs	r3, r3, #16
 3518              		.loc 1 2771 16
 3519 006a 03F01F03 		and	r3, r3, #31
 3520 006e 7B61     		str	r3, [r7, #20]
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Add the message to the Tx FIFO/Queue */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 111


2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FDCAN_CopyMessageToRAM(hfdcan, pTxHeader, pTxData, PutIndex);
 3521              		.loc 1 2774 7
 3522 0070 7B69     		ldr	r3, [r7, #20]
 3523 0072 7A68     		ldr	r2, [r7, #4]
 3524 0074 B968     		ldr	r1, [r7, #8]
 3525 0076 F868     		ldr	r0, [r7, #12]
 3526 0078 FFF7FEFF 		bl	FDCAN_CopyMessageToRAM
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Activate the corresponding transmission request */
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->TXBAR = ((uint32_t)1 << PutIndex);
 3527              		.loc 1 2777 13
 3528 007c FB68     		ldr	r3, [r7, #12]
 3529 007e 1B68     		ldr	r3, [r3]
 3530              		.loc 1 2777 46
 3531 0080 0121     		movs	r1, #1
 3532 0082 7A69     		ldr	r2, [r7, #20]
 3533 0084 01FA02F2 		lsl	r2, r1, r2
 3534              		.loc 1 2777 31
 3535 0088 C3F8D020 		str	r2, [r3, #208]
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Store the Latest Tx FIFO/Queue Request Buffer Index */
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->LatestTxFifoQRequest = ((uint32_t)1 << PutIndex);
 3536              		.loc 1 2780 51
 3537 008c 0122     		movs	r2, #1
 3538 008e 7B69     		ldr	r3, [r7, #20]
 3539 0090 9A40     		lsls	r2, r2, r3
 3540              		.loc 1 2780 36
 3541 0092 FB68     		ldr	r3, [r7, #12]
 3542 0094 C3F89420 		str	r2, [r3, #148]
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3543              		.loc 1 2784 12
 3544 0098 0023     		movs	r3, #0
 3545 009a 08E0     		b	.L163
 3546              	.L161:
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 3547              		.loc 1 2789 11
 3548 009c FB68     		ldr	r3, [r7, #12]
 3549 009e D3F89C30 		ldr	r3, [r3, #156]
 3550              		.loc 1 2789 23
 3551 00a2 43F00802 		orr	r2, r3, #8
 3552 00a6 FB68     		ldr	r3, [r7, #12]
 3553 00a8 C3F89C20 		str	r2, [r3, #156]
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3554              		.loc 1 2791 12
 3555 00ac 0123     		movs	r3, #1
 3556              	.L163:
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3557              		.loc 1 2793 1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 112


 3558 00ae 1846     		mov	r0, r3
 3559 00b0 1837     		adds	r7, r7, #24
 3560              	.LCFI209:
 3561              		.cfi_def_cfa_offset 8
 3562 00b2 BD46     		mov	sp, r7
 3563              	.LCFI210:
 3564              		.cfi_def_cfa_register 13
 3565              		@ sp needed
 3566 00b4 80BD     		pop	{r7, pc}
 3567              		.cfi_endproc
 3568              	.LFE179:
 3570              		.section	.text.HAL_FDCAN_AddMessageToTxBuffer,"ax",%progbits
 3571              		.align	1
 3572              		.global	HAL_FDCAN_AddMessageToTxBuffer
 3573              		.syntax unified
 3574              		.thumb
 3575              		.thumb_func
 3577              	HAL_FDCAN_AddMessageToTxBuffer:
 3578              	.LFB180:
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Add a message to a dedicated Tx buffer
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex index of the buffer to be configured.
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Tx_location.
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AddMessageToTxBuffer(FDCAN_HandleTypeDef *hfdcan, const FDCAN_TxHeaderT
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                  const uint8_t *pTxData, uint32_t BufferIndex)
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3579              		.loc 1 2807 1
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 48
 3582              		@ frame_needed = 1, uses_anonymous_args = 0
 3583 0000 80B5     		push	{r7, lr}
 3584              	.LCFI211:
 3585              		.cfi_def_cfa_offset 8
 3586              		.cfi_offset 7, -8
 3587              		.cfi_offset 14, -4
 3588 0002 8CB0     		sub	sp, sp, #48
 3589              	.LCFI212:
 3590              		.cfi_def_cfa_offset 56
 3591 0004 00AF     		add	r7, sp, #0
 3592              	.LCFI213:
 3593              		.cfi_def_cfa_register 7
 3594 0006 F860     		str	r0, [r7, #12]
 3595 0008 B960     		str	r1, [r7, #8]
 3596 000a 7A60     		str	r2, [r7, #4]
 3597 000c 3B60     		str	r3, [r7]
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 3598              		.loc 1 2808 26
 3599 000e FB68     		ldr	r3, [r7, #12]
 3600 0010 93F89830 		ldrb	r3, [r3, #152]
 3601 0014 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 113


2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(pTxHeader->IdType));
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x7FFU));
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x1FFFFFFFU));
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_TYPE(pTxHeader->TxFrameType));
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_DLC(pTxHeader->DataLength));
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ESI(pTxHeader->ErrorStateIndicator));
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_BRS(pTxHeader->BitRateSwitch));
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FDF(pTxHeader->FDFormat));
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_EFC(pTxHeader->TxEventFifoControl));
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->MessageMarker, 0xFFU));
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TX_LOCATION(BufferIndex));
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 3602              		.loc 1 2829 6
 3603 0018 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3604 001c 012B     		cmp	r3, #1
 3605 001e 03D0     		beq	.L166
 3606              		.loc 1 2829 40 discriminator 1
 3607 0020 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3608 0024 022B     		cmp	r3, #2
 3609 0026 4ED1     		bne	.L167
 3610              	.L166:
 3611 0028 3B68     		ldr	r3, [r7]
 3612 002a 7B62     		str	r3, [r7, #36]
 3613              	.LBB14:
 3614              	.LBB15:
 3615              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 114


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 115


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 116


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 117


 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 118


 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 119


 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 120


 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 121


 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 122


 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 123


 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 124


 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 125


 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 126


 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 127


 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 128


 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 129


 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 130


 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 131


 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 132


1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 3616              		.loc 2 1055 4
 3617 002c 7B6A     		ldr	r3, [r7, #36]
 3618              		.syntax unified
 3619              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3620 002e 93FAA3F3 		rbit r3, r3
 3621              	@ 0 "" 2
 3622              		.thumb
 3623              		.syntax unified
 3624 0032 3B62     		str	r3, [r7, #32]
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 3625              		.loc 2 1068 10
 3626 0034 3B6A     		ldr	r3, [r7, #32]
 3627 0036 BB62     		str	r3, [r7, #40]
 3628              	.LBE15:
 3629              	.LBE14:
 3630              	.LBB16:
 3631              	.LBB17:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 133


 3632              		.loc 2 1089 6
 3633 0038 BB6A     		ldr	r3, [r7, #40]
 3634 003a 002B     		cmp	r3, #0
 3635 003c 01D1     		bne	.L169
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 3636              		.loc 2 1091 12
 3637 003e 2023     		movs	r3, #32
 3638 0040 03E0     		b	.L170
 3639              	.L169:
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 3640              		.loc 2 1093 10
 3641 0042 BB6A     		ldr	r3, [r7, #40]
 3642 0044 B3FA83F3 		clz	r3, r3
 3643              		.loc 2 1093 10 is_stmt 0 discriminator 1
 3644 0048 DBB2     		uxtb	r3, r3
 3645              	.L170:
 3646              	.LBE17:
 3647              	.LBE16:
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the selected buffer has an allocated area into the RAM */
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (POSITION_VAL(BufferIndex) >= ((hfdcan->Instance->TXBC & FDCAN_TXBC_NDTB) >> FDCAN_TXBC_NDTB
 3648              		.loc 1 2832 9 is_stmt 1 discriminator 2
 3649 004a 1A46     		mov	r2, r3
 3650              		.loc 1 2832 46 discriminator 2
 3651 004c FB68     		ldr	r3, [r7, #12]
 3652 004e 1B68     		ldr	r3, [r3]
 3653              		.loc 1 2832 56 discriminator 2
 3654 0050 D3F8C030 		ldr	r3, [r3, #192]
 3655              		.loc 1 2832 82 discriminator 2
 3656 0054 1B0C     		lsrs	r3, r3, #16
 3657 0056 03F03F03 		and	r3, r3, #63
 3658              		.loc 1 2832 8 discriminator 2
 3659 005a 9A42     		cmp	r2, r3
 3660 005c 09D3     		bcc	.L171
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 3661              		.loc 1 2835 13
 3662 005e FB68     		ldr	r3, [r7, #12]
 3663 0060 D3F89C30 		ldr	r3, [r3, #156]
 3664              		.loc 1 2835 25
 3665 0064 43F02002 		orr	r2, r3, #32
 3666 0068 FB68     		ldr	r3, [r7, #12]
 3667 006a C3F89C20 		str	r2, [r3, #156]
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 3668              		.loc 1 2837 14
 3669 006e 0123     		movs	r3, #1
 3670 0070 32E0     		b	.L172
 3671              	.L171:
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that there is no transmission request pending for the selected buffer */
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXBRP & BufferIndex) != 0U)
 3672              		.loc 1 2841 16
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 134


 3673 0072 FB68     		ldr	r3, [r7, #12]
 3674 0074 1B68     		ldr	r3, [r3]
 3675              		.loc 1 2841 26
 3676 0076 D3F8CC20 		ldr	r2, [r3, #204]
 3677              		.loc 1 2841 34
 3678 007a 3B68     		ldr	r3, [r7]
 3679 007c 1340     		ands	r3, r3, r2
 3680              		.loc 1 2841 8
 3681 007e 002B     		cmp	r3, #0
 3682 0080 09D0     		beq	.L173
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 3683              		.loc 1 2844 13
 3684 0082 FB68     		ldr	r3, [r7, #12]
 3685 0084 D3F89C30 		ldr	r3, [r3, #156]
 3686              		.loc 1 2844 25
 3687 0088 43F04002 		orr	r2, r3, #64
 3688 008c FB68     		ldr	r3, [r7, #12]
 3689 008e C3F89C20 		str	r2, [r3, #156]
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 3690              		.loc 1 2846 14
 3691 0092 0123     		movs	r3, #1
 3692 0094 20E0     		b	.L172
 3693              	.L173:
 3694 0096 3B68     		ldr	r3, [r7]
 3695 0098 BB61     		str	r3, [r7, #24]
 3696              	.LBB18:
 3697              	.LBB19:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3698              		.loc 2 1055 4
 3699 009a BB69     		ldr	r3, [r7, #24]
 3700              		.syntax unified
 3701              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3702 009c 93FAA3F3 		rbit r3, r3
 3703              	@ 0 "" 2
 3704              		.thumb
 3705              		.syntax unified
 3706 00a0 7B61     		str	r3, [r7, #20]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3707              		.loc 2 1068 10
 3708 00a2 7B69     		ldr	r3, [r7, #20]
 3709 00a4 FB61     		str	r3, [r7, #28]
 3710              	.LBE19:
 3711              	.LBE18:
 3712              	.LBB20:
 3713              	.LBB21:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3714              		.loc 2 1089 6
 3715 00a6 FB69     		ldr	r3, [r7, #28]
 3716 00a8 002B     		cmp	r3, #0
 3717 00aa 01D1     		bne	.L175
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3718              		.loc 2 1091 12
 3719 00ac 2023     		movs	r3, #32
 3720 00ae 03E0     		b	.L176
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 135


 3721              	.L175:
 3722              		.loc 2 1093 10
 3723 00b0 FB69     		ldr	r3, [r7, #28]
 3724 00b2 B3FA83F3 		clz	r3, r3
 3725              		.loc 2 1093 10 is_stmt 0 discriminator 1
 3726 00b6 DBB2     		uxtb	r3, r3
 3727              	.L176:
 3728              	.LBE21:
 3729              	.LBE20:
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Add the message to the Tx buffer */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FDCAN_CopyMessageToRAM(hfdcan, pTxHeader, pTxData, POSITION_VAL(BufferIndex));
 3730              		.loc 1 2851 7 is_stmt 1 discriminator 2
 3731 00b8 7A68     		ldr	r2, [r7, #4]
 3732 00ba B968     		ldr	r1, [r7, #8]
 3733 00bc F868     		ldr	r0, [r7, #12]
 3734 00be FFF7FEFF 		bl	FDCAN_CopyMessageToRAM
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3735              		.loc 1 2855 12
 3736 00c2 0023     		movs	r3, #0
 3737 00c4 08E0     		b	.L172
 3738              	.L167:
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 3739              		.loc 1 2860 11
 3740 00c6 FB68     		ldr	r3, [r7, #12]
 3741 00c8 D3F89C30 		ldr	r3, [r3, #156]
 3742              		.loc 1 2860 23
 3743 00cc 43F00202 		orr	r2, r3, #2
 3744 00d0 FB68     		ldr	r3, [r7, #12]
 3745 00d2 C3F89C20 		str	r2, [r3, #156]
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3746              		.loc 1 2862 12
 3747 00d6 0123     		movs	r3, #1
 3748              	.L172:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3749              		.loc 1 2864 1
 3750 00d8 1846     		mov	r0, r3
 3751 00da 3037     		adds	r7, r7, #48
 3752              	.LCFI214:
 3753              		.cfi_def_cfa_offset 8
 3754 00dc BD46     		mov	sp, r7
 3755              	.LCFI215:
 3756              		.cfi_def_cfa_register 13
 3757              		@ sp needed
 3758 00de 80BD     		pop	{r7, pc}
 3759              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 136


 3760              	.LFE180:
 3762              		.section	.text.HAL_FDCAN_EnableTxBufferRequest,"ax",%progbits
 3763              		.align	1
 3764              		.global	HAL_FDCAN_EnableTxBufferRequest
 3765              		.syntax unified
 3766              		.thumb
 3767              		.thumb_func
 3769              	HAL_FDCAN_EnableTxBufferRequest:
 3770              	.LFB181:
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable transmission request.
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex buffer index.
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTxBufferRequest(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndex
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3771              		.loc 1 2875 1
 3772              		.cfi_startproc
 3773              		@ args = 0, pretend = 0, frame = 8
 3774              		@ frame_needed = 1, uses_anonymous_args = 0
 3775              		@ link register save eliminated.
 3776 0000 80B4     		push	{r7}
 3777              	.LCFI216:
 3778              		.cfi_def_cfa_offset 4
 3779              		.cfi_offset 7, -4
 3780 0002 83B0     		sub	sp, sp, #12
 3781              	.LCFI217:
 3782              		.cfi_def_cfa_offset 16
 3783 0004 00AF     		add	r7, sp, #0
 3784              	.LCFI218:
 3785              		.cfi_def_cfa_register 7
 3786 0006 7860     		str	r0, [r7, #4]
 3787 0008 3960     		str	r1, [r7]
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 3788              		.loc 1 2876 13
 3789 000a 7B68     		ldr	r3, [r7, #4]
 3790 000c 93F89830 		ldrb	r3, [r3, #152]
 3791 0010 DBB2     		uxtb	r3, r3
 3792              		.loc 1 2876 6
 3793 0012 022B     		cmp	r3, #2
 3794 0014 06D1     		bne	.L178
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Add transmission request */
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXBAR = BufferIndex;
 3795              		.loc 1 2879 11
 3796 0016 7B68     		ldr	r3, [r7, #4]
 3797 0018 1B68     		ldr	r3, [r3]
 3798              		.loc 1 2879 29
 3799 001a 3A68     		ldr	r2, [r7]
 3800 001c C3F8D020 		str	r2, [r3, #208]
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 137


 3801              		.loc 1 2882 12
 3802 0020 0023     		movs	r3, #0
 3803 0022 08E0     		b	.L179
 3804              	.L178:
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 3805              		.loc 1 2887 11
 3806 0024 7B68     		ldr	r3, [r7, #4]
 3807 0026 D3F89C30 		ldr	r3, [r3, #156]
 3808              		.loc 1 2887 23
 3809 002a 43F00802 		orr	r2, r3, #8
 3810 002e 7B68     		ldr	r3, [r7, #4]
 3811 0030 C3F89C20 		str	r2, [r3, #156]
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3812              		.loc 1 2889 12
 3813 0034 0123     		movs	r3, #1
 3814              	.L179:
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3815              		.loc 1 2891 1
 3816 0036 1846     		mov	r0, r3
 3817 0038 0C37     		adds	r7, r7, #12
 3818              	.LCFI219:
 3819              		.cfi_def_cfa_offset 4
 3820 003a BD46     		mov	sp, r7
 3821              	.LCFI220:
 3822              		.cfi_def_cfa_register 13
 3823              		@ sp needed
 3824 003c 5DF8047B 		ldr	r7, [sp], #4
 3825              	.LCFI221:
 3826              		.cfi_restore 7
 3827              		.cfi_def_cfa_offset 0
 3828 0040 7047     		bx	lr
 3829              		.cfi_endproc
 3830              	.LFE181:
 3832              		.section	.text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer,"ax",%progbits
 3833              		.align	1
 3834              		.global	HAL_FDCAN_GetLatestTxFifoQRequestBuffer
 3835              		.syntax unified
 3836              		.thumb
 3837              		.thumb_func
 3839              	HAL_FDCAN_GetLatestTxFifoQRequestBuffer:
 3840              	.LFB182:
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get Tx buffer index of latest Tx FIFO/Queue request
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Tx buffer index of last Tx FIFO/Queue request
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - Any value of @arg FDCAN_Tx_location if Tx request has been submitted.
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 if no Tx FIFO/Queue request have been submitted.
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetLatestTxFifoQRequestBuffer(const FDCAN_HandleTypeDef *hfdcan)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 138


2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3841              		.loc 1 2902 1
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 8
 3844              		@ frame_needed = 1, uses_anonymous_args = 0
 3845              		@ link register save eliminated.
 3846 0000 80B4     		push	{r7}
 3847              	.LCFI222:
 3848              		.cfi_def_cfa_offset 4
 3849              		.cfi_offset 7, -4
 3850 0002 83B0     		sub	sp, sp, #12
 3851              	.LCFI223:
 3852              		.cfi_def_cfa_offset 16
 3853 0004 00AF     		add	r7, sp, #0
 3854              	.LCFI224:
 3855              		.cfi_def_cfa_register 7
 3856 0006 7860     		str	r0, [r7, #4]
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Last Tx FIFO/Queue Request Buffer */
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->LatestTxFifoQRequest;
 3857              		.loc 1 2904 16
 3858 0008 7B68     		ldr	r3, [r7, #4]
 3859 000a D3F89430 		ldr	r3, [r3, #148]
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3860              		.loc 1 2905 1
 3861 000e 1846     		mov	r0, r3
 3862 0010 0C37     		adds	r7, r7, #12
 3863              	.LCFI225:
 3864              		.cfi_def_cfa_offset 4
 3865 0012 BD46     		mov	sp, r7
 3866              	.LCFI226:
 3867              		.cfi_def_cfa_register 13
 3868              		@ sp needed
 3869 0014 5DF8047B 		ldr	r7, [sp], #4
 3870              	.LCFI227:
 3871              		.cfi_restore 7
 3872              		.cfi_def_cfa_offset 0
 3873 0018 7047     		bx	lr
 3874              		.cfi_endproc
 3875              	.LFE182:
 3877              		.section	.text.HAL_FDCAN_AbortTxRequest,"ax",%progbits
 3878              		.align	1
 3879              		.global	HAL_FDCAN_AbortTxRequest
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3884              	HAL_FDCAN_AbortTxRequest:
 3885              	.LFB183:
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Abort transmission request
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex buffer index.
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AbortTxRequest(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndex)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 139


2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3886              		.loc 1 2916 1
 3887              		.cfi_startproc
 3888              		@ args = 0, pretend = 0, frame = 8
 3889              		@ frame_needed = 1, uses_anonymous_args = 0
 3890              		@ link register save eliminated.
 3891 0000 80B4     		push	{r7}
 3892              	.LCFI228:
 3893              		.cfi_def_cfa_offset 4
 3894              		.cfi_offset 7, -4
 3895 0002 83B0     		sub	sp, sp, #12
 3896              	.LCFI229:
 3897              		.cfi_def_cfa_offset 16
 3898 0004 00AF     		add	r7, sp, #0
 3899              	.LCFI230:
 3900              		.cfi_def_cfa_register 7
 3901 0006 7860     		str	r0, [r7, #4]
 3902 0008 3960     		str	r1, [r7]
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 3903              		.loc 1 2917 13
 3904 000a 7B68     		ldr	r3, [r7, #4]
 3905 000c 93F89830 		ldrb	r3, [r3, #152]
 3906 0010 DBB2     		uxtb	r3, r3
 3907              		.loc 1 2917 6
 3908 0012 022B     		cmp	r3, #2
 3909 0014 06D1     		bne	.L183
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Add cancellation request */
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXBCR = BufferIndex;
 3910              		.loc 1 2920 11
 3911 0016 7B68     		ldr	r3, [r7, #4]
 3912 0018 1B68     		ldr	r3, [r3]
 3913              		.loc 1 2920 29
 3914 001a 3A68     		ldr	r2, [r7]
 3915 001c C3F8D420 		str	r2, [r3, #212]
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3916              		.loc 1 2923 12
 3917 0020 0023     		movs	r3, #0
 3918 0022 08E0     		b	.L184
 3919              	.L183:
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 3920              		.loc 1 2928 11
 3921 0024 7B68     		ldr	r3, [r7, #4]
 3922 0026 D3F89C30 		ldr	r3, [r3, #156]
 3923              		.loc 1 2928 23
 3924 002a 43F00802 		orr	r2, r3, #8
 3925 002e 7B68     		ldr	r3, [r7, #4]
 3926 0030 C3F89C20 		str	r2, [r3, #156]
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3927              		.loc 1 2930 12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 140


 3928 0034 0123     		movs	r3, #1
 3929              	.L184:
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3930              		.loc 1 2932 1
 3931 0036 1846     		mov	r0, r3
 3932 0038 0C37     		adds	r7, r7, #12
 3933              	.LCFI231:
 3934              		.cfi_def_cfa_offset 4
 3935 003a BD46     		mov	sp, r7
 3936              	.LCFI232:
 3937              		.cfi_def_cfa_register 13
 3938              		@ sp needed
 3939 003c 5DF8047B 		ldr	r7, [sp], #4
 3940              	.LCFI233:
 3941              		.cfi_restore 7
 3942              		.cfi_def_cfa_offset 0
 3943 0040 7047     		bx	lr
 3944              		.cfi_endproc
 3945              	.LFE183:
 3947              		.section	.text.HAL_FDCAN_GetRxMessage,"ax",%progbits
 3948              		.align	1
 3949              		.global	HAL_FDCAN_GetRxMessage
 3950              		.syntax unified
 3951              		.thumb
 3952              		.thumb_func
 3954              	HAL_FDCAN_GetRxMessage:
 3955              	.LFB184:
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get an FDCAN frame from the Rx Buffer/FIFO zone into the message RAM.
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxLocation Location of the received message to be read.
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Rx_location.
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pRxHeader pointer to a FDCAN_RxHeaderTypeDef structure.
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pRxData pointer to a buffer where the payload of the Rx frame will be stored.
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetRxMessage(FDCAN_HandleTypeDef *hfdcan, uint32_t RxLocation,
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                          FDCAN_RxHeaderTypeDef *pRxHeader, uint8_t *pRxData)
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3956              		.loc 1 2946 1
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 40
 3959              		@ frame_needed = 1, uses_anonymous_args = 0
 3960              		@ link register save eliminated.
 3961 0000 80B4     		push	{r7}
 3962              	.LCFI234:
 3963              		.cfi_def_cfa_offset 4
 3964              		.cfi_offset 7, -4
 3965 0002 8BB0     		sub	sp, sp, #44
 3966              	.LCFI235:
 3967              		.cfi_def_cfa_offset 48
 3968 0004 00AF     		add	r7, sp, #0
 3969              	.LCFI236:
 3970              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 141


 3971 0006 F860     		str	r0, [r7, #12]
 3972 0008 B960     		str	r1, [r7, #8]
 3973 000a 7A60     		str	r2, [r7, #4]
 3974 000c 3B60     		str	r3, [r7]
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *RxAddress;
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint8_t  *pData;
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ByteCounter;
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t GetIndex = 0;
 3975              		.loc 1 2950 12
 3976 000e 0023     		movs	r3, #0
 3977 0010 FB61     		str	r3, [r7, #28]
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 3978              		.loc 1 2951 26
 3979 0012 FB68     		ldr	r3, [r7, #12]
 3980 0014 93F89830 		ldrb	r3, [r3, #152]
 3981 0018 FB76     		strb	r3, [r7, #27]
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (state == HAL_FDCAN_STATE_BUSY)
 3982              		.loc 1 2953 6
 3983 001a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3984 001c 022B     		cmp	r3, #2
 3985 001e 40F04981 		bne	.L186
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
 3986              		.loc 1 2955 8
 3987 0022 BB68     		ldr	r3, [r7, #8]
 3988 0024 402B     		cmp	r3, #64
 3989 0026 4CD1     		bne	.L187
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 0 has an allocated area into the RAM */
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0S) == 0U)
 3990              		.loc 1 2958 18
 3991 0028 FB68     		ldr	r3, [r7, #12]
 3992 002a 1B68     		ldr	r3, [r3]
 3993              		.loc 1 2958 28
 3994 002c D3F8A030 		ldr	r3, [r3, #160]
 3995              		.loc 1 2958 36
 3996 0030 03F4FE03 		and	r3, r3, #8323072
 3997              		.loc 1 2958 10
 3998 0034 002B     		cmp	r3, #0
 3999 0036 09D1     		bne	.L188
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 4000              		.loc 1 2961 15
 4001 0038 FB68     		ldr	r3, [r7, #12]
 4002 003a D3F89C30 		ldr	r3, [r3, #156]
 4003              		.loc 1 2961 27
 4004 003e 43F02002 		orr	r2, r3, #32
 4005 0042 FB68     		ldr	r3, [r7, #12]
 4006 0044 C3F89C20 		str	r2, [r3, #156]
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 4007              		.loc 1 2963 16
 4008 0048 0123     		movs	r3, #1
 4009 004a 3CE1     		b	.L189
 4010              	.L188:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 142


2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 0 is not empty */
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL) == 0U)
 4011              		.loc 1 2967 18
 4012 004c FB68     		ldr	r3, [r7, #12]
 4013 004e 1B68     		ldr	r3, [r3]
 4014              		.loc 1 2967 28
 4015 0050 D3F8A430 		ldr	r3, [r3, #164]
 4016              		.loc 1 2967 36
 4017 0054 03F07F03 		and	r3, r3, #127
 4018              		.loc 1 2967 10
 4019 0058 002B     		cmp	r3, #0
 4020 005a 09D1     		bne	.L190
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 4021              		.loc 1 2970 15
 4022 005c FB68     		ldr	r3, [r7, #12]
 4023 005e D3F89C30 		ldr	r3, [r3, #156]
 4024              		.loc 1 2970 27
 4025 0062 43F48072 		orr	r2, r3, #256
 4026 0066 FB68     		ldr	r3, [r7, #12]
 4027 0068 C3F89C20 		str	r2, [r3, #156]
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 4028              		.loc 1 2972 16
 4029 006c 0123     		movs	r3, #1
 4030 006e 2AE1     		b	.L189
 4031              	.L190:
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check that the Rx FIFO 0 is full & overwrite mode is on */
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0F) >> FDCAN_RXF0S_F0F_Pos) == 1U)
 4032              		.loc 1 2977 21
 4033 0070 FB68     		ldr	r3, [r7, #12]
 4034 0072 1B68     		ldr	r3, [r3]
 4035              		.loc 1 2977 31
 4036 0074 D3F8A430 		ldr	r3, [r3, #164]
 4037              		.loc 1 2977 82
 4038 0078 03F08073 		and	r3, r3, #16777216
 4039              		.loc 1 2977 12
 4040 007c B3F1807F 		cmp	r3, #16777216
 4041 0080 0AD1     		bne	.L191
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           if (((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0OM) >> FDCAN_RXF0C_F0OM_Pos) == FDCAN_RX_FI
 4042              		.loc 1 2979 23
 4043 0082 FB68     		ldr	r3, [r7, #12]
 4044 0084 1B68     		ldr	r3, [r3]
 4045              		.loc 1 2979 33
 4046 0086 D3F8A030 		ldr	r3, [r3, #160]
 4047              		.loc 1 2979 86
 4048 008a 03F00043 		and	r3, r3, #-2147483648
 4049              		.loc 1 2979 14
 4050 008e B3F1004F 		cmp	r3, #-2147483648
 4051 0092 01D1     		bne	.L191
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 143


2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           {
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             /* When overwrite status is on discard first message in FIFO */
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             GetIndex = 1U;
 4052              		.loc 1 2982 22
 4053 0094 0123     		movs	r3, #1
 4054 0096 FB61     		str	r3, [r7, #28]
 4055              	.L191:
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           }
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 0 element index */
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
 4056              		.loc 1 2987 29
 4057 0098 FB68     		ldr	r3, [r7, #12]
 4058 009a 1B68     		ldr	r3, [r3]
 4059              		.loc 1 2987 39
 4060 009c D3F8A430 		ldr	r3, [r3, #164]
 4061              		.loc 1 2987 67
 4062 00a0 1B0A     		lsrs	r3, r3, #8
 4063 00a2 03F03F03 		and	r3, r3, #63
 4064              		.loc 1 2987 18
 4065 00a6 FA69     		ldr	r2, [r7, #28]
 4066 00a8 1344     		add	r3, r3, r2
 4067 00aa FB61     		str	r3, [r7, #28]
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 0 element address */
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSiz
 4068              		.loc 1 2990 48
 4069 00ac FB68     		ldr	r3, [r7, #12]
 4070 00ae 5A6F     		ldr	r2, [r3, #116]
 4071              		.loc 1 2990 85
 4072 00b0 FB68     		ldr	r3, [r7, #12]
 4073 00b2 5B6C     		ldr	r3, [r3, #68]
 4074              		.loc 1 2990 71
 4075 00b4 F969     		ldr	r1, [r7, #28]
 4076 00b6 01FB03F3 		mul	r3, r1, r3
 4077              		.loc 1 2990 102
 4078 00ba 9B00     		lsls	r3, r3, #2
 4079              		.loc 1 2990 59
 4080 00bc 1344     		add	r3, r3, r2
 4081              		.loc 1 2990 19
 4082 00be 7B62     		str	r3, [r7, #36]
 4083 00c0 68E0     		b	.L192
 4084              	.L187:
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
 4085              		.loc 1 2993 13
 4086 00c2 BB68     		ldr	r3, [r7, #8]
 4087 00c4 412B     		cmp	r3, #65
 4088 00c6 4CD1     		bne	.L193
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 1 has an allocated area into the RAM */
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1S) == 0U)
 4089              		.loc 1 2996 18
 4090 00c8 FB68     		ldr	r3, [r7, #12]
 4091 00ca 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 144


 4092              		.loc 1 2996 28
 4093 00cc D3F8B030 		ldr	r3, [r3, #176]
 4094              		.loc 1 2996 36
 4095 00d0 03F4FE03 		and	r3, r3, #8323072
 4096              		.loc 1 2996 10
 4097 00d4 002B     		cmp	r3, #0
 4098 00d6 09D1     		bne	.L194
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 4099              		.loc 1 2999 15
 4100 00d8 FB68     		ldr	r3, [r7, #12]
 4101 00da D3F89C30 		ldr	r3, [r3, #156]
 4102              		.loc 1 2999 27
 4103 00de 43F02002 		orr	r2, r3, #32
 4104 00e2 FB68     		ldr	r3, [r7, #12]
 4105 00e4 C3F89C20 		str	r2, [r3, #156]
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 4106              		.loc 1 3001 16
 4107 00e8 0123     		movs	r3, #1
 4108 00ea ECE0     		b	.L189
 4109              	.L194:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 1 is not empty */
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL) == 0U)
 4110              		.loc 1 3005 18
 4111 00ec FB68     		ldr	r3, [r7, #12]
 4112 00ee 1B68     		ldr	r3, [r3]
 4113              		.loc 1 3005 28
 4114 00f0 D3F8B430 		ldr	r3, [r3, #180]
 4115              		.loc 1 3005 36
 4116 00f4 03F07F03 		and	r3, r3, #127
 4117              		.loc 1 3005 10
 4118 00f8 002B     		cmp	r3, #0
 4119 00fa 09D1     		bne	.L195
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 4120              		.loc 1 3008 15
 4121 00fc FB68     		ldr	r3, [r7, #12]
 4122 00fe D3F89C30 		ldr	r3, [r3, #156]
 4123              		.loc 1 3008 27
 4124 0102 43F48072 		orr	r2, r3, #256
 4125 0106 FB68     		ldr	r3, [r7, #12]
 4126 0108 C3F89C20 		str	r2, [r3, #156]
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 4127              		.loc 1 3010 16
 4128 010c 0123     		movs	r3, #1
 4129 010e DAE0     		b	.L189
 4130              	.L195:
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check that the Rx FIFO 1 is full & overwrite mode is on */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 145


3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1F) >> FDCAN_RXF1S_F1F_Pos) == 1U)
 4131              		.loc 1 3015 21
 4132 0110 FB68     		ldr	r3, [r7, #12]
 4133 0112 1B68     		ldr	r3, [r3]
 4134              		.loc 1 3015 31
 4135 0114 D3F8B430 		ldr	r3, [r3, #180]
 4136              		.loc 1 3015 82
 4137 0118 03F08073 		and	r3, r3, #16777216
 4138              		.loc 1 3015 12
 4139 011c B3F1807F 		cmp	r3, #16777216
 4140 0120 0AD1     		bne	.L196
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           if (((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1OM) >> FDCAN_RXF1C_F1OM_Pos) == FDCAN_RX_FI
 4141              		.loc 1 3017 23
 4142 0122 FB68     		ldr	r3, [r7, #12]
 4143 0124 1B68     		ldr	r3, [r3]
 4144              		.loc 1 3017 33
 4145 0126 D3F8B030 		ldr	r3, [r3, #176]
 4146              		.loc 1 3017 86
 4147 012a 03F00043 		and	r3, r3, #-2147483648
 4148              		.loc 1 3017 14
 4149 012e B3F1004F 		cmp	r3, #-2147483648
 4150 0132 01D1     		bne	.L196
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           {
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             /* When overwrite status is on discard first message in FIFO */
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             GetIndex = 1U;
 4151              		.loc 1 3020 22
 4152 0134 0123     		movs	r3, #1
 4153 0136 FB61     		str	r3, [r7, #28]
 4154              	.L196:
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           }
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 1 element index */
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
 4155              		.loc 1 3025 29
 4156 0138 FB68     		ldr	r3, [r7, #12]
 4157 013a 1B68     		ldr	r3, [r3]
 4158              		.loc 1 3025 39
 4159 013c D3F8B430 		ldr	r3, [r3, #180]
 4160              		.loc 1 3025 67
 4161 0140 1B0A     		lsrs	r3, r3, #8
 4162 0142 03F03F03 		and	r3, r3, #63
 4163              		.loc 1 3025 18
 4164 0146 FA69     		ldr	r2, [r7, #28]
 4165 0148 1344     		add	r3, r3, r2
 4166 014a FB61     		str	r3, [r7, #28]
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 1 element address */
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSiz
 4167              		.loc 1 3028 48
 4168 014c FB68     		ldr	r3, [r7, #12]
 4169 014e 9A6F     		ldr	r2, [r3, #120]
 4170              		.loc 1 3028 85
 4171 0150 FB68     		ldr	r3, [r7, #12]
 4172 0152 DB6C     		ldr	r3, [r3, #76]
 4173              		.loc 1 3028 71
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 146


 4174 0154 F969     		ldr	r1, [r7, #28]
 4175 0156 01FB03F3 		mul	r3, r1, r3
 4176              		.loc 1 3028 102
 4177 015a 9B00     		lsls	r3, r3, #2
 4178              		.loc 1 3028 59
 4179 015c 1344     		add	r3, r3, r2
 4180              		.loc 1 3028 19
 4181 015e 7B62     		str	r3, [r7, #36]
 4182 0160 18E0     		b	.L192
 4183              	.L193:
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Rx element is assigned to a dedicated Rx buffer */
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the selected buffer has an allocated area into the RAM */
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RxLocation >= hfdcan->Init.RxBuffersNbr)
 4184              		.loc 1 3034 37
 4185 0162 FB68     		ldr	r3, [r7, #12]
 4186 0164 1B6D     		ldr	r3, [r3, #80]
 4187              		.loc 1 3034 10
 4188 0166 BA68     		ldr	r2, [r7, #8]
 4189 0168 9A42     		cmp	r2, r3
 4190 016a 09D3     		bcc	.L197
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 4191              		.loc 1 3037 15
 4192 016c FB68     		ldr	r3, [r7, #12]
 4193 016e D3F89C30 		ldr	r3, [r3, #156]
 4194              		.loc 1 3037 27
 4195 0172 43F02002 		orr	r2, r3, #32
 4196 0176 FB68     		ldr	r3, [r7, #12]
 4197 0178 C3F89C20 		str	r2, [r3, #156]
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 4198              		.loc 1 3039 16
 4199 017c 0123     		movs	r3, #1
 4200 017e A2E0     		b	.L189
 4201              	.L197:
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx buffer address */
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSiz
 4202              		.loc 1 3044 48
 4203 0180 FB68     		ldr	r3, [r7, #12]
 4204 0182 DA6F     		ldr	r2, [r3, #124]
 4205              		.loc 1 3044 88
 4206 0184 FB68     		ldr	r3, [r7, #12]
 4207 0186 5B6D     		ldr	r3, [r3, #84]
 4208              		.loc 1 3044 74
 4209 0188 B968     		ldr	r1, [r7, #8]
 4210 018a 01FB03F3 		mul	r3, r1, r3
 4211              		.loc 1 3044 102
 4212 018e 9B00     		lsls	r3, r3, #2
 4213              		.loc 1 3044 60
 4214 0190 1344     		add	r3, r3, r2
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 147


 4215              		.loc 1 3044 19
 4216 0192 7B62     		str	r3, [r7, #36]
 4217              	.L192:
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve IdType */
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->IdType = *RxAddress & FDCAN_ELEMENT_MASK_XTD;
 4218              		.loc 1 3049 25
 4219 0194 7B6A     		ldr	r3, [r7, #36]
 4220 0196 1B68     		ldr	r3, [r3]
 4221              		.loc 1 3049 36
 4222 0198 03F08042 		and	r2, r3, #1073741824
 4223              		.loc 1 3049 23
 4224 019c 7B68     		ldr	r3, [r7, #4]
 4225 019e 5A60     		str	r2, [r3, #4]
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Identifier */
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pRxHeader->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
 4226              		.loc 1 3052 18
 4227 01a0 7B68     		ldr	r3, [r7, #4]
 4228 01a2 5B68     		ldr	r3, [r3, #4]
 4229              		.loc 1 3052 8
 4230 01a4 002B     		cmp	r3, #0
 4231 01a6 07D1     		bne	.L198
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxHeader->Identifier = ((*RxAddress & FDCAN_ELEMENT_MASK_STDID) >> 18U);
 4232              		.loc 1 3054 33
 4233 01a8 7B6A     		ldr	r3, [r7, #36]
 4234 01aa 1B68     		ldr	r3, [r3]
 4235              		.loc 1 3054 72
 4236 01ac 9B0C     		lsrs	r3, r3, #18
 4237 01ae C3F30A02 		ubfx	r2, r3, #0, #11
 4238              		.loc 1 3054 29
 4239 01b2 7B68     		ldr	r3, [r7, #4]
 4240 01b4 1A60     		str	r2, [r3]
 4241 01b6 05E0     		b	.L199
 4242              	.L198:
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Extended ID element */
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxHeader->Identifier = (*RxAddress & FDCAN_ELEMENT_MASK_EXTID);
 4243              		.loc 1 3058 32
 4244 01b8 7B6A     		ldr	r3, [r7, #36]
 4245 01ba 1B68     		ldr	r3, [r3]
 4246              		.loc 1 3058 43
 4247 01bc 23F06042 		bic	r2, r3, #-536870912
 4248              		.loc 1 3058 29
 4249 01c0 7B68     		ldr	r3, [r7, #4]
 4250 01c2 1A60     		str	r2, [r3]
 4251              	.L199:
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve RxFrameType */
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->RxFrameType = (*RxAddress & FDCAN_ELEMENT_MASK_RTR);
 4252              		.loc 1 3062 31
 4253 01c4 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 148


 4254 01c6 1B68     		ldr	r3, [r3]
 4255              		.loc 1 3062 42
 4256 01c8 03F00052 		and	r2, r3, #536870912
 4257              		.loc 1 3062 28
 4258 01cc 7B68     		ldr	r3, [r7, #4]
 4259 01ce 9A60     		str	r2, [r3, #8]
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve ErrorStateIndicator */
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->ErrorStateIndicator = (*RxAddress & FDCAN_ELEMENT_MASK_ESI);
 4260              		.loc 1 3065 39
 4261 01d0 7B6A     		ldr	r3, [r7, #36]
 4262 01d2 1B68     		ldr	r3, [r3]
 4263              		.loc 1 3065 50
 4264 01d4 03F00042 		and	r2, r3, #-2147483648
 4265              		.loc 1 3065 36
 4266 01d8 7B68     		ldr	r3, [r7, #4]
 4267 01da 1A61     		str	r2, [r3, #16]
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment RxAddress pointer to second word of Rx FIFO element */
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     RxAddress++;
 4268              		.loc 1 3068 14
 4269 01dc 7B6A     		ldr	r3, [r7, #36]
 4270 01de 0433     		adds	r3, r3, #4
 4271 01e0 7B62     		str	r3, [r7, #36]
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve RxTimestamp */
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->RxTimestamp = (*RxAddress & FDCAN_ELEMENT_MASK_TS);
 4272              		.loc 1 3071 31
 4273 01e2 7B6A     		ldr	r3, [r7, #36]
 4274 01e4 1B68     		ldr	r3, [r3]
 4275              		.loc 1 3071 42
 4276 01e6 9AB2     		uxth	r2, r3
 4277              		.loc 1 3071 28
 4278 01e8 7B68     		ldr	r3, [r7, #4]
 4279 01ea DA61     		str	r2, [r3, #28]
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve DataLength */
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->DataLength = ((*RxAddress & FDCAN_ELEMENT_MASK_DLC) >> 16U);
 4280              		.loc 1 3074 31
 4281 01ec 7B6A     		ldr	r3, [r7, #36]
 4282 01ee 1B68     		ldr	r3, [r3]
 4283              		.loc 1 3074 68
 4284 01f0 1B0C     		lsrs	r3, r3, #16
 4285 01f2 03F00F02 		and	r2, r3, #15
 4286              		.loc 1 3074 27
 4287 01f6 7B68     		ldr	r3, [r7, #4]
 4288 01f8 DA60     		str	r2, [r3, #12]
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve BitRateSwitch */
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->BitRateSwitch = (*RxAddress & FDCAN_ELEMENT_MASK_BRS);
 4289              		.loc 1 3077 33
 4290 01fa 7B6A     		ldr	r3, [r7, #36]
 4291 01fc 1B68     		ldr	r3, [r3]
 4292              		.loc 1 3077 44
 4293 01fe 03F48012 		and	r2, r3, #1048576
 4294              		.loc 1 3077 30
 4295 0202 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 149


 4296 0204 5A61     		str	r2, [r3, #20]
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FDFormat */
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->FDFormat = (*RxAddress & FDCAN_ELEMENT_MASK_FDF);
 4297              		.loc 1 3080 28
 4298 0206 7B6A     		ldr	r3, [r7, #36]
 4299 0208 1B68     		ldr	r3, [r3]
 4300              		.loc 1 3080 39
 4301 020a 03F40012 		and	r2, r3, #2097152
 4302              		.loc 1 3080 25
 4303 020e 7B68     		ldr	r3, [r7, #4]
 4304 0210 9A61     		str	r2, [r3, #24]
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FilterIndex */
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->FilterIndex = ((*RxAddress & FDCAN_ELEMENT_MASK_FIDX) >> 24U);
 4305              		.loc 1 3083 32
 4306 0212 7B6A     		ldr	r3, [r7, #36]
 4307 0214 1B68     		ldr	r3, [r3]
 4308              		.loc 1 3083 70
 4309 0216 1B0E     		lsrs	r3, r3, #24
 4310 0218 03F07F02 		and	r2, r3, #127
 4311              		.loc 1 3083 28
 4312 021c 7B68     		ldr	r3, [r7, #4]
 4313 021e 1A62     		str	r2, [r3, #32]
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve NonMatchingFrame */
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->IsFilterMatchingFrame = ((*RxAddress & FDCAN_ELEMENT_MASK_ANMF) >> 31U);
 4314              		.loc 1 3086 42
 4315 0220 7B6A     		ldr	r3, [r7, #36]
 4316 0222 1B68     		ldr	r3, [r3]
 4317              		.loc 1 3086 80
 4318 0224 DA0F     		lsrs	r2, r3, #31
 4319              		.loc 1 3086 38
 4320 0226 7B68     		ldr	r3, [r7, #4]
 4321 0228 5A62     		str	r2, [r3, #36]
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment RxAddress pointer to payload of Rx FIFO element */
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     RxAddress++;
 4322              		.loc 1 3089 14
 4323 022a 7B6A     		ldr	r3, [r7, #36]
 4324 022c 0433     		adds	r3, r3, #4
 4325 022e 7B62     		str	r3, [r7, #36]
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Rx payload */
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pData = (uint8_t *)RxAddress;
 4326              		.loc 1 3092 11
 4327 0230 7B6A     		ldr	r3, [r7, #36]
 4328 0232 7B61     		str	r3, [r7, #20]
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength]; ByteCounter++)
 4329              		.loc 1 3093 22
 4330 0234 0023     		movs	r3, #0
 4331 0236 3B62     		str	r3, [r7, #32]
 4332              		.loc 1 3093 5
 4333 0238 0AE0     		b	.L200
 4334              	.L201:
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxData[ByteCounter] = pData[ByteCounter];
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 150


 4335              		.loc 1 3095 35
 4336 023a 7A69     		ldr	r2, [r7, #20]
 4337 023c 3B6A     		ldr	r3, [r7, #32]
 4338 023e 1A44     		add	r2, r2, r3
 4339              		.loc 1 3095 14
 4340 0240 3968     		ldr	r1, [r7]
 4341 0242 3B6A     		ldr	r3, [r7, #32]
 4342 0244 0B44     		add	r3, r3, r1
 4343              		.loc 1 3095 35
 4344 0246 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4345              		.loc 1 3095 28
 4346 0248 1A70     		strb	r2, [r3]
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength]; ByteCounter++)
 4347              		.loc 1 3093 87 discriminator 3
 4348 024a 3B6A     		ldr	r3, [r7, #32]
 4349 024c 0133     		adds	r3, r3, #1
 4350 024e 3B62     		str	r3, [r7, #32]
 4351              	.L200:
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength]; ByteCounter++)
 4352              		.loc 1 3093 61 discriminator 1
 4353 0250 7B68     		ldr	r3, [r7, #4]
 4354 0252 DB68     		ldr	r3, [r3, #12]
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength]; ByteCounter++)
 4355              		.loc 1 3093 51 discriminator 1
 4356 0254 1F4A     		ldr	r2, .L206
 4357 0256 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4358 0258 1A46     		mov	r2, r3
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength]; ByteCounter++)
 4359              		.loc 1 3093 39 discriminator 1
 4360 025a 3B6A     		ldr	r3, [r7, #32]
 4361 025c 9342     		cmp	r3, r2
 4362 025e ECD3     		bcc	.L201
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
 4363              		.loc 1 3098 8
 4364 0260 BB68     		ldr	r3, [r7, #8]
 4365 0262 402B     		cmp	r3, #64
 4366 0264 05D1     		bne	.L202
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Acknowledge the Rx FIFO 0 that the oldest element is read so that it increments the GetInd
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->RXF0A = GetIndex;
 4367              		.loc 1 3101 13
 4368 0266 FB68     		ldr	r3, [r7, #12]
 4369 0268 1B68     		ldr	r3, [r3]
 4370              		.loc 1 3101 31
 4371 026a FA69     		ldr	r2, [r7, #28]
 4372 026c C3F8A820 		str	r2, [r3, #168]
 4373 0270 1EE0     		b	.L203
 4374              	.L202:
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
 4375              		.loc 1 3103 13
 4376 0272 BB68     		ldr	r3, [r7, #8]
 4377 0274 412B     		cmp	r3, #65
 4378 0276 05D1     		bne	.L204
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 151


3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Acknowledge the Rx FIFO 1 that the oldest element is read so that it increments the GetInd
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->RXF1A = GetIndex;
 4379              		.loc 1 3106 13
 4380 0278 FB68     		ldr	r3, [r7, #12]
 4381 027a 1B68     		ldr	r3, [r3]
 4382              		.loc 1 3106 31
 4383 027c FA69     		ldr	r2, [r7, #28]
 4384 027e C3F8B820 		str	r2, [r3, #184]
 4385 0282 15E0     		b	.L203
 4386              	.L204:
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Rx element is assigned to a dedicated Rx buffer */
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the New Data flag of the current Rx buffer */
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RxLocation < FDCAN_RX_BUFFER32)
 4387              		.loc 1 3111 10
 4388 0284 BB68     		ldr	r3, [r7, #8]
 4389 0286 1F2B     		cmp	r3, #31
 4390 0288 08D8     		bhi	.L205
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->Instance->NDAT1 = ((uint32_t)1U << RxLocation);
 4391              		.loc 1 3113 15
 4392 028a FB68     		ldr	r3, [r7, #12]
 4393 028c 1B68     		ldr	r3, [r3]
 4394              		.loc 1 3113 49
 4395 028e 0121     		movs	r1, #1
 4396 0290 BA68     		ldr	r2, [r7, #8]
 4397 0292 01FA02F2 		lsl	r2, r1, r2
 4398              		.loc 1 3113 33
 4399 0296 C3F89820 		str	r2, [r3, #152]
 4400 029a 09E0     		b	.L203
 4401              	.L205:
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else /* FDCAN_RX_BUFFER32 <= RxLocation <= FDCAN_RX_BUFFER63 */
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->Instance->NDAT2 = ((uint32_t)1U << (RxLocation & 0x1FU));
 4402              		.loc 1 3117 64
 4403 029c BB68     		ldr	r3, [r7, #8]
 4404 029e 03F01F02 		and	r2, r3, #31
 4405              		.loc 1 3117 15
 4406 02a2 FB68     		ldr	r3, [r7, #12]
 4407 02a4 1B68     		ldr	r3, [r3]
 4408              		.loc 1 3117 49
 4409 02a6 0121     		movs	r1, #1
 4410 02a8 01FA02F2 		lsl	r2, r1, r2
 4411              		.loc 1 3117 33
 4412 02ac C3F89C20 		str	r2, [r3, #156]
 4413              	.L203:
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4414              		.loc 1 3122 12
 4415 02b0 0023     		movs	r3, #0
 4416 02b2 08E0     		b	.L189
 4417              	.L186:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 152


3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 4418              		.loc 1 3127 11
 4419 02b4 FB68     		ldr	r3, [r7, #12]
 4420 02b6 D3F89C30 		ldr	r3, [r3, #156]
 4421              		.loc 1 3127 23
 4422 02ba 43F00802 		orr	r2, r3, #8
 4423 02be FB68     		ldr	r3, [r7, #12]
 4424 02c0 C3F89C20 		str	r2, [r3, #156]
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4425              		.loc 1 3129 12
 4426 02c4 0123     		movs	r3, #1
 4427              	.L189:
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4428              		.loc 1 3131 1
 4429 02c6 1846     		mov	r0, r3
 4430 02c8 2C37     		adds	r7, r7, #44
 4431              	.LCFI237:
 4432              		.cfi_def_cfa_offset 4
 4433 02ca BD46     		mov	sp, r7
 4434              	.LCFI238:
 4435              		.cfi_def_cfa_register 13
 4436              		@ sp needed
 4437 02cc 5DF8047B 		ldr	r7, [sp], #4
 4438              	.LCFI239:
 4439              		.cfi_restore 7
 4440              		.cfi_def_cfa_offset 0
 4441 02d0 7047     		bx	lr
 4442              	.L207:
 4443 02d2 00BF     		.align	2
 4444              	.L206:
 4445 02d4 00000000 		.word	DLCtoBytes
 4446              		.cfi_endproc
 4447              	.LFE184:
 4449              		.section	.text.HAL_FDCAN_GetTxEvent,"ax",%progbits
 4450              		.align	1
 4451              		.global	HAL_FDCAN_GetTxEvent
 4452              		.syntax unified
 4453              		.thumb
 4454              		.thumb_func
 4456              	HAL_FDCAN_GetTxEvent:
 4457              	.LFB185:
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get an FDCAN Tx event from the Tx Event FIFO zone into the message RAM.
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxEvent pointer to a FDCAN_TxEventFifoTypeDef structure.
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetTxEvent(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxEventFifoTypeDef *pTxEv
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 153


 4458              		.loc 1 3141 1
 4459              		.cfi_startproc
 4460              		@ args = 0, pretend = 0, frame = 24
 4461              		@ frame_needed = 1, uses_anonymous_args = 0
 4462              		@ link register save eliminated.
 4463 0000 80B4     		push	{r7}
 4464              	.LCFI240:
 4465              		.cfi_def_cfa_offset 4
 4466              		.cfi_offset 7, -4
 4467 0002 87B0     		sub	sp, sp, #28
 4468              	.LCFI241:
 4469              		.cfi_def_cfa_offset 32
 4470 0004 00AF     		add	r7, sp, #0
 4471              	.LCFI242:
 4472              		.cfi_def_cfa_register 7
 4473 0006 7860     		str	r0, [r7, #4]
 4474 0008 3960     		str	r1, [r7]
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TxEventAddress;
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t GetIndex;
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 4475              		.loc 1 3144 26
 4476 000a 7B68     		ldr	r3, [r7, #4]
 4477 000c 93F89830 		ldrb	r3, [r3, #152]
 4478 0010 FB75     		strb	r3, [r7, #23]
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MIN_VALUE(hfdcan->Init.TxEventsNbr, 1U));
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (state == HAL_FDCAN_STATE_BUSY)
 4479              		.loc 1 3149 6
 4480 0012 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4481 0014 022B     		cmp	r3, #2
 4482 0016 40F08480 		bne	.L209
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx Event FIFO has an allocated area into the RAM */
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXEFC & FDCAN_TXEFC_EFS) == 0U)
 4483              		.loc 1 3152 16
 4484 001a 7B68     		ldr	r3, [r7, #4]
 4485 001c 1B68     		ldr	r3, [r3]
 4486              		.loc 1 3152 26
 4487 001e D3F8F030 		ldr	r3, [r3, #240]
 4488              		.loc 1 3152 34
 4489 0022 03F47C13 		and	r3, r3, #4128768
 4490              		.loc 1 3152 8
 4491 0026 002B     		cmp	r3, #0
 4492 0028 09D1     		bne	.L210
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 4493              		.loc 1 3155 13
 4494 002a 7B68     		ldr	r3, [r7, #4]
 4495 002c D3F89C30 		ldr	r3, [r3, #156]
 4496              		.loc 1 3155 25
 4497 0030 43F02002 		orr	r2, r3, #32
 4498 0034 7B68     		ldr	r3, [r7, #4]
 4499 0036 C3F89C20 		str	r2, [r3, #156]
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 154


3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 4500              		.loc 1 3157 14
 4501 003a 0123     		movs	r3, #1
 4502 003c 7AE0     		b	.L211
 4503              	.L210:
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx event FIFO is not empty */
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXEFS & FDCAN_TXEFS_EFFL) == 0U)
 4504              		.loc 1 3161 16
 4505 003e 7B68     		ldr	r3, [r7, #4]
 4506 0040 1B68     		ldr	r3, [r3]
 4507              		.loc 1 3161 26
 4508 0042 D3F8F430 		ldr	r3, [r3, #244]
 4509              		.loc 1 3161 34
 4510 0046 03F03F03 		and	r3, r3, #63
 4511              		.loc 1 3161 8
 4512 004a 002B     		cmp	r3, #0
 4513 004c 09D1     		bne	.L212
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 4514              		.loc 1 3164 13
 4515 004e 7B68     		ldr	r3, [r7, #4]
 4516 0050 D3F89C30 		ldr	r3, [r3, #156]
 4517              		.loc 1 3164 25
 4518 0054 43F48072 		orr	r2, r3, #256
 4519 0058 7B68     		ldr	r3, [r7, #4]
 4520 005a C3F89C20 		str	r2, [r3, #156]
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 4521              		.loc 1 3166 14
 4522 005e 0123     		movs	r3, #1
 4523 0060 68E0     		b	.L211
 4524              	.L212:
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate Tx event FIFO element address */
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     GetIndex = ((hfdcan->Instance->TXEFS & FDCAN_TXEFS_EFGI) >> FDCAN_TXEFS_EFGI_Pos);
 4525              		.loc 1 3170 24
 4526 0062 7B68     		ldr	r3, [r7, #4]
 4527 0064 1B68     		ldr	r3, [r3]
 4528              		.loc 1 3170 34
 4529 0066 D3F8F430 		ldr	r3, [r3, #244]
 4530              		.loc 1 3170 62
 4531 006a 1B0A     		lsrs	r3, r3, #8
 4532              		.loc 1 3170 14
 4533 006c 03F01F03 		and	r3, r3, #31
 4534 0070 3B61     		str	r3, [r7, #16]
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxEventAddress = (uint32_t *)(hfdcan->msgRam.TxEventFIFOSA + (GetIndex * 2U * 4U));
 4535              		.loc 1 3171 49
 4536 0072 7B68     		ldr	r3, [r7, #4]
 4537 0074 D3F88020 		ldr	r2, [r3, #128]
 4538              		.loc 1 3171 81
 4539 0078 3B69     		ldr	r3, [r7, #16]
 4540 007a DB00     		lsls	r3, r3, #3
 4541              		.loc 1 3171 64
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 155


 4542 007c 1344     		add	r3, r3, r2
 4543              		.loc 1 3171 20
 4544 007e FB60     		str	r3, [r7, #12]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve IdType */
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->IdType = *TxEventAddress & FDCAN_ELEMENT_MASK_XTD;
 4545              		.loc 1 3174 24
 4546 0080 FB68     		ldr	r3, [r7, #12]
 4547 0082 1B68     		ldr	r3, [r3]
 4548              		.loc 1 3174 40
 4549 0084 03F08042 		and	r2, r3, #1073741824
 4550              		.loc 1 3174 22
 4551 0088 3B68     		ldr	r3, [r7]
 4552 008a 5A60     		str	r2, [r3, #4]
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Identifier */
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTxEvent->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
 4553              		.loc 1 3177 17
 4554 008c 3B68     		ldr	r3, [r7]
 4555 008e 5B68     		ldr	r3, [r3, #4]
 4556              		.loc 1 3177 8
 4557 0090 002B     		cmp	r3, #0
 4558 0092 07D1     		bne	.L213
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pTxEvent->Identifier = ((*TxEventAddress & FDCAN_ELEMENT_MASK_STDID) >> 18U);
 4559              		.loc 1 3179 32
 4560 0094 FB68     		ldr	r3, [r7, #12]
 4561 0096 1B68     		ldr	r3, [r3]
 4562              		.loc 1 3179 76
 4563 0098 9B0C     		lsrs	r3, r3, #18
 4564 009a C3F30A02 		ubfx	r2, r3, #0, #11
 4565              		.loc 1 3179 28
 4566 009e 3B68     		ldr	r3, [r7]
 4567 00a0 1A60     		str	r2, [r3]
 4568 00a2 05E0     		b	.L214
 4569              	.L213:
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Extended ID element */
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pTxEvent->Identifier = (*TxEventAddress & FDCAN_ELEMENT_MASK_EXTID);
 4570              		.loc 1 3183 31
 4571 00a4 FB68     		ldr	r3, [r7, #12]
 4572 00a6 1B68     		ldr	r3, [r3]
 4573              		.loc 1 3183 47
 4574 00a8 23F06042 		bic	r2, r3, #-536870912
 4575              		.loc 1 3183 28
 4576 00ac 3B68     		ldr	r3, [r7]
 4577 00ae 1A60     		str	r2, [r3]
 4578              	.L214:
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve TxFrameType */
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->TxFrameType = (*TxEventAddress & FDCAN_ELEMENT_MASK_RTR);
 4579              		.loc 1 3187 30
 4580 00b0 FB68     		ldr	r3, [r7, #12]
 4581 00b2 1B68     		ldr	r3, [r3]
 4582              		.loc 1 3187 46
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 156


 4583 00b4 03F00052 		and	r2, r3, #536870912
 4584              		.loc 1 3187 27
 4585 00b8 3B68     		ldr	r3, [r7]
 4586 00ba 9A60     		str	r2, [r3, #8]
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve ErrorStateIndicator */
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->ErrorStateIndicator = (*TxEventAddress & FDCAN_ELEMENT_MASK_ESI);
 4587              		.loc 1 3190 38
 4588 00bc FB68     		ldr	r3, [r7, #12]
 4589 00be 1B68     		ldr	r3, [r3]
 4590              		.loc 1 3190 54
 4591 00c0 03F00042 		and	r2, r3, #-2147483648
 4592              		.loc 1 3190 35
 4593 00c4 3B68     		ldr	r3, [r7]
 4594 00c6 1A61     		str	r2, [r3, #16]
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment TxEventAddress pointer to second word of Tx Event FIFO element */
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxEventAddress++;
 4595              		.loc 1 3193 19
 4596 00c8 FB68     		ldr	r3, [r7, #12]
 4597 00ca 0433     		adds	r3, r3, #4
 4598 00cc FB60     		str	r3, [r7, #12]
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve TxTimestamp */
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->TxTimestamp = (*TxEventAddress & FDCAN_ELEMENT_MASK_TS);
 4599              		.loc 1 3196 30
 4600 00ce FB68     		ldr	r3, [r7, #12]
 4601 00d0 1B68     		ldr	r3, [r3]
 4602              		.loc 1 3196 46
 4603 00d2 9AB2     		uxth	r2, r3
 4604              		.loc 1 3196 27
 4605 00d4 3B68     		ldr	r3, [r7]
 4606 00d6 DA61     		str	r2, [r3, #28]
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve DataLength */
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->DataLength = ((*TxEventAddress & FDCAN_ELEMENT_MASK_DLC) >> 16U);
 4607              		.loc 1 3199 30
 4608 00d8 FB68     		ldr	r3, [r7, #12]
 4609 00da 1B68     		ldr	r3, [r3]
 4610              		.loc 1 3199 72
 4611 00dc 1B0C     		lsrs	r3, r3, #16
 4612 00de 03F00F02 		and	r2, r3, #15
 4613              		.loc 1 3199 26
 4614 00e2 3B68     		ldr	r3, [r7]
 4615 00e4 DA60     		str	r2, [r3, #12]
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve BitRateSwitch */
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->BitRateSwitch = (*TxEventAddress & FDCAN_ELEMENT_MASK_BRS);
 4616              		.loc 1 3202 32
 4617 00e6 FB68     		ldr	r3, [r7, #12]
 4618 00e8 1B68     		ldr	r3, [r3]
 4619              		.loc 1 3202 48
 4620 00ea 03F48012 		and	r2, r3, #1048576
 4621              		.loc 1 3202 29
 4622 00ee 3B68     		ldr	r3, [r7]
 4623 00f0 5A61     		str	r2, [r3, #20]
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 157


3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FDFormat */
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->FDFormat = (*TxEventAddress & FDCAN_ELEMENT_MASK_FDF);
 4624              		.loc 1 3205 27
 4625 00f2 FB68     		ldr	r3, [r7, #12]
 4626 00f4 1B68     		ldr	r3, [r3]
 4627              		.loc 1 3205 43
 4628 00f6 03F40012 		and	r2, r3, #2097152
 4629              		.loc 1 3205 24
 4630 00fa 3B68     		ldr	r3, [r7]
 4631 00fc 9A61     		str	r2, [r3, #24]
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve EventType */
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->EventType = (*TxEventAddress & FDCAN_ELEMENT_MASK_ET);
 4632              		.loc 1 3208 28
 4633 00fe FB68     		ldr	r3, [r7, #12]
 4634 0100 1B68     		ldr	r3, [r3]
 4635              		.loc 1 3208 44
 4636 0102 03F44002 		and	r2, r3, #12582912
 4637              		.loc 1 3208 25
 4638 0106 3B68     		ldr	r3, [r7]
 4639 0108 5A62     		str	r2, [r3, #36]
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve MessageMarker */
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->MessageMarker = ((*TxEventAddress & FDCAN_ELEMENT_MASK_MM) >> 24U);
 4640              		.loc 1 3211 33
 4641 010a FB68     		ldr	r3, [r7, #12]
 4642 010c 1B68     		ldr	r3, [r3]
 4643              		.loc 1 3211 74
 4644 010e 1A0E     		lsrs	r2, r3, #24
 4645              		.loc 1 3211 29
 4646 0110 3B68     		ldr	r3, [r7]
 4647 0112 1A62     		str	r2, [r3, #32]
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Acknowledge the Tx Event FIFO that the oldest element is read so that it increments the GetI
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXEFA = GetIndex;
 4648              		.loc 1 3214 11
 4649 0114 7B68     		ldr	r3, [r7, #4]
 4650 0116 1B68     		ldr	r3, [r3]
 4651              		.loc 1 3214 29
 4652 0118 3A69     		ldr	r2, [r7, #16]
 4653 011a C3F8F820 		str	r2, [r3, #248]
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4654              		.loc 1 3217 12
 4655 011e 0023     		movs	r3, #0
 4656 0120 08E0     		b	.L211
 4657              	.L209:
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 4658              		.loc 1 3222 11
 4659 0122 7B68     		ldr	r3, [r7, #4]
 4660 0124 D3F89C30 		ldr	r3, [r3, #156]
 4661              		.loc 1 3222 23
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 158


 4662 0128 43F00802 		orr	r2, r3, #8
 4663 012c 7B68     		ldr	r3, [r7, #4]
 4664 012e C3F89C20 		str	r2, [r3, #156]
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4665              		.loc 1 3224 12
 4666 0132 0123     		movs	r3, #1
 4667              	.L211:
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4668              		.loc 1 3226 1
 4669 0134 1846     		mov	r0, r3
 4670 0136 1C37     		adds	r7, r7, #28
 4671              	.LCFI243:
 4672              		.cfi_def_cfa_offset 4
 4673 0138 BD46     		mov	sp, r7
 4674              	.LCFI244:
 4675              		.cfi_def_cfa_register 13
 4676              		@ sp needed
 4677 013a 5DF8047B 		ldr	r7, [sp], #4
 4678              	.LCFI245:
 4679              		.cfi_restore 7
 4680              		.cfi_def_cfa_offset 0
 4681 013e 7047     		bx	lr
 4682              		.cfi_endproc
 4683              	.LFE185:
 4685              		.section	.text.HAL_FDCAN_GetHighPriorityMessageStatus,"ax",%progbits
 4686              		.align	1
 4687              		.global	HAL_FDCAN_GetHighPriorityMessageStatus
 4688              		.syntax unified
 4689              		.thumb
 4690              		.thumb_func
 4692              	HAL_FDCAN_GetHighPriorityMessageStatus:
 4693              	.LFB186:
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get high priority message status.
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  HpMsgStatus pointer to an FDCAN_HpMsgStatusTypeDef structure.
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetHighPriorityMessageStatus(const FDCAN_HandleTypeDef *hfdcan,
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                          FDCAN_HpMsgStatusTypeDef *HpMsgStatus)
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4694              		.loc 1 3237 1
 4695              		.cfi_startproc
 4696              		@ args = 0, pretend = 0, frame = 8
 4697              		@ frame_needed = 1, uses_anonymous_args = 0
 4698              		@ link register save eliminated.
 4699 0000 80B4     		push	{r7}
 4700              	.LCFI246:
 4701              		.cfi_def_cfa_offset 4
 4702              		.cfi_offset 7, -4
 4703 0002 83B0     		sub	sp, sp, #12
 4704              	.LCFI247:
 4705              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 159


 4706 0004 00AF     		add	r7, sp, #0
 4707              	.LCFI248:
 4708              		.cfi_def_cfa_register 7
 4709 0006 7860     		str	r0, [r7, #4]
 4710 0008 3960     		str	r1, [r7]
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->FilterList = ((hfdcan->Instance->HPMS & FDCAN_HPMS_FLST) >> FDCAN_HPMS_FLST_Pos);
 4711              		.loc 1 3238 37
 4712 000a 7B68     		ldr	r3, [r7, #4]
 4713 000c 1B68     		ldr	r3, [r3]
 4714              		.loc 1 3238 47
 4715 000e D3F89430 		ldr	r3, [r3, #148]
 4716              		.loc 1 3238 73
 4717 0012 DB0B     		lsrs	r3, r3, #15
 4718 0014 03F00102 		and	r2, r3, #1
 4719              		.loc 1 3238 27
 4720 0018 3B68     		ldr	r3, [r7]
 4721 001a 1A60     		str	r2, [r3]
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->FilterIndex = ((hfdcan->Instance->HPMS & FDCAN_HPMS_FIDX) >> FDCAN_HPMS_FIDX_Pos);
 4722              		.loc 1 3239 38
 4723 001c 7B68     		ldr	r3, [r7, #4]
 4724 001e 1B68     		ldr	r3, [r3]
 4725              		.loc 1 3239 48
 4726 0020 D3F89430 		ldr	r3, [r3, #148]
 4727              		.loc 1 3239 74
 4728 0024 1B0A     		lsrs	r3, r3, #8
 4729 0026 03F07F02 		and	r2, r3, #127
 4730              		.loc 1 3239 28
 4731 002a 3B68     		ldr	r3, [r7]
 4732 002c 5A60     		str	r2, [r3, #4]
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->MessageStorage = (hfdcan->Instance->HPMS & FDCAN_HPMS_MSI);
 4733              		.loc 1 3240 40
 4734 002e 7B68     		ldr	r3, [r7, #4]
 4735 0030 1B68     		ldr	r3, [r3]
 4736              		.loc 1 3240 50
 4737 0032 D3F89430 		ldr	r3, [r3, #148]
 4738              		.loc 1 3240 57
 4739 0036 03F0C002 		and	r2, r3, #192
 4740              		.loc 1 3240 31
 4741 003a 3B68     		ldr	r3, [r7]
 4742 003c 9A60     		str	r2, [r3, #8]
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->MessageIndex = (hfdcan->Instance->HPMS & FDCAN_HPMS_BIDX);
 4743              		.loc 1 3241 38
 4744 003e 7B68     		ldr	r3, [r7, #4]
 4745 0040 1B68     		ldr	r3, [r3]
 4746              		.loc 1 3241 48
 4747 0042 D3F89430 		ldr	r3, [r3, #148]
 4748              		.loc 1 3241 55
 4749 0046 03F03F02 		and	r2, r3, #63
 4750              		.loc 1 3241 29
 4751 004a 3B68     		ldr	r3, [r7]
 4752 004c DA60     		str	r2, [r3, #12]
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 4753              		.loc 1 3244 10
 4754 004e 0023     		movs	r3, #0
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 160


 4755              		.loc 1 3245 1
 4756 0050 1846     		mov	r0, r3
 4757 0052 0C37     		adds	r7, r7, #12
 4758              	.LCFI249:
 4759              		.cfi_def_cfa_offset 4
 4760 0054 BD46     		mov	sp, r7
 4761              	.LCFI250:
 4762              		.cfi_def_cfa_register 13
 4763              		@ sp needed
 4764 0056 5DF8047B 		ldr	r7, [sp], #4
 4765              	.LCFI251:
 4766              		.cfi_restore 7
 4767              		.cfi_def_cfa_offset 0
 4768 005a 7047     		bx	lr
 4769              		.cfi_endproc
 4770              	.LFE186:
 4772              		.section	.text.HAL_FDCAN_GetProtocolStatus,"ax",%progbits
 4773              		.align	1
 4774              		.global	HAL_FDCAN_GetProtocolStatus
 4775              		.syntax unified
 4776              		.thumb
 4777              		.thumb_func
 4779              	HAL_FDCAN_GetProtocolStatus:
 4780              	.LFB187:
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get protocol status.
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ProtocolStatus pointer to an FDCAN_ProtocolStatusTypeDef structure.
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetProtocolStatus(const FDCAN_HandleTypeDef *hfdcan,
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                               FDCAN_ProtocolStatusTypeDef *ProtocolStatus)
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4781              		.loc 1 3256 1
 4782              		.cfi_startproc
 4783              		@ args = 0, pretend = 0, frame = 16
 4784              		@ frame_needed = 1, uses_anonymous_args = 0
 4785              		@ link register save eliminated.
 4786 0000 80B4     		push	{r7}
 4787              	.LCFI252:
 4788              		.cfi_def_cfa_offset 4
 4789              		.cfi_offset 7, -4
 4790 0002 85B0     		sub	sp, sp, #20
 4791              	.LCFI253:
 4792              		.cfi_def_cfa_offset 24
 4793 0004 00AF     		add	r7, sp, #0
 4794              	.LCFI254:
 4795              		.cfi_def_cfa_register 7
 4796 0006 7860     		str	r0, [r7, #4]
 4797 0008 3960     		str	r1, [r7]
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StatusReg;
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the protocol status register */
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StatusReg = READ_REG(hfdcan->Instance->PSR);
 4798              		.loc 1 3260 15
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 161


 4799 000a 7B68     		ldr	r3, [r7, #4]
 4800 000c 1B68     		ldr	r3, [r3]
 4801              		.loc 1 3260 13
 4802 000e 5B6C     		ldr	r3, [r3, #68]
 4803 0010 FB60     		str	r3, [r7, #12]
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the protocol status structure */
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->LastErrorCode = (StatusReg & FDCAN_PSR_LEC);
 4804              		.loc 1 3263 46
 4805 0012 FB68     		ldr	r3, [r7, #12]
 4806 0014 03F00702 		and	r2, r3, #7
 4807              		.loc 1 3263 33
 4808 0018 3B68     		ldr	r3, [r7]
 4809 001a 1A60     		str	r2, [r3]
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->DataLastErrorCode = ((StatusReg & FDCAN_PSR_DLEC) >> FDCAN_PSR_DLEC_Pos);
 4810              		.loc 1 3264 69
 4811 001c FB68     		ldr	r3, [r7, #12]
 4812 001e 1B0A     		lsrs	r3, r3, #8
 4813 0020 03F00702 		and	r2, r3, #7
 4814              		.loc 1 3264 37
 4815 0024 3B68     		ldr	r3, [r7]
 4816 0026 5A60     		str	r2, [r3, #4]
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->Activity = (StatusReg & FDCAN_PSR_ACT);
 4817              		.loc 1 3265 41
 4818 0028 FB68     		ldr	r3, [r7, #12]
 4819 002a 03F01802 		and	r2, r3, #24
 4820              		.loc 1 3265 28
 4821 002e 3B68     		ldr	r3, [r7]
 4822 0030 9A60     		str	r2, [r3, #8]
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->ErrorPassive = ((StatusReg & FDCAN_PSR_EP) >> FDCAN_PSR_EP_Pos);
 4823              		.loc 1 3266 62
 4824 0032 FB68     		ldr	r3, [r7, #12]
 4825 0034 5B09     		lsrs	r3, r3, #5
 4826 0036 03F00102 		and	r2, r3, #1
 4827              		.loc 1 3266 32
 4828 003a 3B68     		ldr	r3, [r7]
 4829 003c DA60     		str	r2, [r3, #12]
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->Warning = ((StatusReg & FDCAN_PSR_EW) >> FDCAN_PSR_EW_Pos);
 4830              		.loc 1 3267 57
 4831 003e FB68     		ldr	r3, [r7, #12]
 4832 0040 9B09     		lsrs	r3, r3, #6
 4833 0042 03F00102 		and	r2, r3, #1
 4834              		.loc 1 3267 27
 4835 0046 3B68     		ldr	r3, [r7]
 4836 0048 1A61     		str	r2, [r3, #16]
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->BusOff = ((StatusReg & FDCAN_PSR_BO) >> FDCAN_PSR_BO_Pos);
 4837              		.loc 1 3268 56
 4838 004a FB68     		ldr	r3, [r7, #12]
 4839 004c DB09     		lsrs	r3, r3, #7
 4840 004e 03F00102 		and	r2, r3, #1
 4841              		.loc 1 3268 26
 4842 0052 3B68     		ldr	r3, [r7]
 4843 0054 5A61     		str	r2, [r3, #20]
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxESIflag = ((StatusReg & FDCAN_PSR_RESI) >> FDCAN_PSR_RESI_Pos);
 4844              		.loc 1 3269 61
 4845 0056 FB68     		ldr	r3, [r7, #12]
 4846 0058 DB0A     		lsrs	r3, r3, #11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 162


 4847 005a 03F00102 		and	r2, r3, #1
 4848              		.loc 1 3269 29
 4849 005e 3B68     		ldr	r3, [r7]
 4850 0060 9A61     		str	r2, [r3, #24]
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxBRSflag = ((StatusReg & FDCAN_PSR_RBRS) >> FDCAN_PSR_RBRS_Pos);
 4851              		.loc 1 3270 61
 4852 0062 FB68     		ldr	r3, [r7, #12]
 4853 0064 1B0B     		lsrs	r3, r3, #12
 4854 0066 03F00102 		and	r2, r3, #1
 4855              		.loc 1 3270 29
 4856 006a 3B68     		ldr	r3, [r7]
 4857 006c DA61     		str	r2, [r3, #28]
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxFDFflag = ((StatusReg & FDCAN_PSR_REDL) >> FDCAN_PSR_REDL_Pos);
 4858              		.loc 1 3271 61
 4859 006e FB68     		ldr	r3, [r7, #12]
 4860 0070 5B0B     		lsrs	r3, r3, #13
 4861 0072 03F00102 		and	r2, r3, #1
 4862              		.loc 1 3271 29
 4863 0076 3B68     		ldr	r3, [r7]
 4864 0078 1A62     		str	r2, [r3, #32]
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->ProtocolException = ((StatusReg & FDCAN_PSR_PXE) >> FDCAN_PSR_PXE_Pos);
 4865              		.loc 1 3272 68
 4866 007a FB68     		ldr	r3, [r7, #12]
 4867 007c 9B0B     		lsrs	r3, r3, #14
 4868 007e 03F00102 		and	r2, r3, #1
 4869              		.loc 1 3272 37
 4870 0082 3B68     		ldr	r3, [r7]
 4871 0084 5A62     		str	r2, [r3, #36]
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->TDCvalue = ((StatusReg & FDCAN_PSR_TDCV) >> FDCAN_PSR_TDCV_Pos);
 4872              		.loc 1 3273 60
 4873 0086 FB68     		ldr	r3, [r7, #12]
 4874 0088 1B0C     		lsrs	r3, r3, #16
 4875 008a 03F07F02 		and	r2, r3, #127
 4876              		.loc 1 3273 28
 4877 008e 3B68     		ldr	r3, [r7]
 4878 0090 9A62     		str	r2, [r3, #40]
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 4879              		.loc 1 3276 10
 4880 0092 0023     		movs	r3, #0
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4881              		.loc 1 3277 1
 4882 0094 1846     		mov	r0, r3
 4883 0096 1437     		adds	r7, r7, #20
 4884              	.LCFI255:
 4885              		.cfi_def_cfa_offset 4
 4886 0098 BD46     		mov	sp, r7
 4887              	.LCFI256:
 4888              		.cfi_def_cfa_register 13
 4889              		@ sp needed
 4890 009a 5DF8047B 		ldr	r7, [sp], #4
 4891              	.LCFI257:
 4892              		.cfi_restore 7
 4893              		.cfi_def_cfa_offset 0
 4894 009e 7047     		bx	lr
 4895              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 163


 4896              	.LFE187:
 4898              		.section	.text.HAL_FDCAN_GetErrorCounters,"ax",%progbits
 4899              		.align	1
 4900              		.global	HAL_FDCAN_GetErrorCounters
 4901              		.syntax unified
 4902              		.thumb
 4903              		.thumb_func
 4905              	HAL_FDCAN_GetErrorCounters:
 4906              	.LFB188:
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get error counter values.
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ErrorCounters pointer to an FDCAN_ErrorCountersTypeDef structure.
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetErrorCounters(const FDCAN_HandleTypeDef *hfdcan,
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                              FDCAN_ErrorCountersTypeDef *ErrorCounters)
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4907              		.loc 1 3288 1
 4908              		.cfi_startproc
 4909              		@ args = 0, pretend = 0, frame = 16
 4910              		@ frame_needed = 1, uses_anonymous_args = 0
 4911              		@ link register save eliminated.
 4912 0000 80B4     		push	{r7}
 4913              	.LCFI258:
 4914              		.cfi_def_cfa_offset 4
 4915              		.cfi_offset 7, -4
 4916 0002 85B0     		sub	sp, sp, #20
 4917              	.LCFI259:
 4918              		.cfi_def_cfa_offset 24
 4919 0004 00AF     		add	r7, sp, #0
 4920              	.LCFI260:
 4921              		.cfi_def_cfa_register 7
 4922 0006 7860     		str	r0, [r7, #4]
 4923 0008 3960     		str	r1, [r7]
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CountersReg;
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the error counters register */
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CountersReg = READ_REG(hfdcan->Instance->ECR);
 4924              		.loc 1 3292 17
 4925 000a 7B68     		ldr	r3, [r7, #4]
 4926 000c 1B68     		ldr	r3, [r3]
 4927              		.loc 1 3292 15
 4928 000e 1B6C     		ldr	r3, [r3, #64]
 4929 0010 FB60     		str	r3, [r7, #12]
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the error counters structure */
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->TxErrorCnt = ((CountersReg & FDCAN_ECR_TEC) >> FDCAN_ECR_TEC_Pos);
 4930              		.loc 1 3295 62
 4931 0012 FB68     		ldr	r3, [r7, #12]
 4932 0014 DAB2     		uxtb	r2, r3
 4933              		.loc 1 3295 29
 4934 0016 3B68     		ldr	r3, [r7]
 4935 0018 1A60     		str	r2, [r3]
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->RxErrorCnt = ((CountersReg & FDCAN_ECR_REC) >> FDCAN_ECR_REC_Pos);
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 164


 4936              		.loc 1 3296 62
 4937 001a FB68     		ldr	r3, [r7, #12]
 4938 001c 1B0A     		lsrs	r3, r3, #8
 4939 001e 03F07F02 		and	r2, r3, #127
 4940              		.loc 1 3296 29
 4941 0022 3B68     		ldr	r3, [r7]
 4942 0024 5A60     		str	r2, [r3, #4]
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->RxErrorPassive = ((CountersReg & FDCAN_ECR_RP) >> FDCAN_ECR_RP_Pos);
 4943              		.loc 1 3297 65
 4944 0026 FB68     		ldr	r3, [r7, #12]
 4945 0028 DB0B     		lsrs	r3, r3, #15
 4946 002a 03F00102 		and	r2, r3, #1
 4947              		.loc 1 3297 33
 4948 002e 3B68     		ldr	r3, [r7]
 4949 0030 9A60     		str	r2, [r3, #8]
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->ErrorLogging = ((CountersReg & FDCAN_ECR_CEL) >> FDCAN_ECR_CEL_Pos);
 4950              		.loc 1 3298 64
 4951 0032 FB68     		ldr	r3, [r7, #12]
 4952 0034 1B0C     		lsrs	r3, r3, #16
 4953 0036 DAB2     		uxtb	r2, r3
 4954              		.loc 1 3298 31
 4955 0038 3B68     		ldr	r3, [r7]
 4956 003a DA60     		str	r2, [r3, #12]
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 4957              		.loc 1 3301 10
 4958 003c 0023     		movs	r3, #0
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4959              		.loc 1 3302 1
 4960 003e 1846     		mov	r0, r3
 4961 0040 1437     		adds	r7, r7, #20
 4962              	.LCFI261:
 4963              		.cfi_def_cfa_offset 4
 4964 0042 BD46     		mov	sp, r7
 4965              	.LCFI262:
 4966              		.cfi_def_cfa_register 13
 4967              		@ sp needed
 4968 0044 5DF8047B 		ldr	r7, [sp], #4
 4969              	.LCFI263:
 4970              		.cfi_restore 7
 4971              		.cfi_def_cfa_offset 0
 4972 0048 7047     		bx	lr
 4973              		.cfi_endproc
 4974              	.LFE188:
 4976              		.section	.text.HAL_FDCAN_IsRxBufferMessageAvailable,"ax",%progbits
 4977              		.align	1
 4978              		.global	HAL_FDCAN_IsRxBufferMessageAvailable
 4979              		.syntax unified
 4980              		.thumb
 4981              		.thumb_func
 4983              	HAL_FDCAN_IsRxBufferMessageAvailable:
 4984              	.LFB189:
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if a new message is received in the selected Rx buffer.
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 165


3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxBufferIndex Rx buffer index.
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 63.
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : No new message on RxBufferIndex.
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : New message received on RxBufferIndex.
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsRxBufferMessageAvailable(FDCAN_HandleTypeDef *hfdcan, uint32_t RxBufferIndex)
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4985              		.loc 1 3315 1
 4986              		.cfi_startproc
 4987              		@ args = 0, pretend = 0, frame = 16
 4988              		@ frame_needed = 1, uses_anonymous_args = 0
 4989              		@ link register save eliminated.
 4990 0000 80B4     		push	{r7}
 4991              	.LCFI264:
 4992              		.cfi_def_cfa_offset 4
 4993              		.cfi_offset 7, -4
 4994 0002 85B0     		sub	sp, sp, #20
 4995              	.LCFI265:
 4996              		.cfi_def_cfa_offset 24
 4997 0004 00AF     		add	r7, sp, #0
 4998              	.LCFI266:
 4999              		.cfi_def_cfa_register 7
 5000 0006 7860     		str	r0, [r7, #4]
 5001 0008 3960     		str	r1, [r7]
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(RxBufferIndex, 63U));
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t NewData1 = hfdcan->Instance->NDAT1;
 5002              		.loc 1 3318 29
 5003 000a 7B68     		ldr	r3, [r7, #4]
 5004 000c 1B68     		ldr	r3, [r3]
 5005              		.loc 1 3318 12
 5006 000e D3F89830 		ldr	r3, [r3, #152]
 5007 0012 FB60     		str	r3, [r7, #12]
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t NewData2 = hfdcan->Instance->NDAT2;
 5008              		.loc 1 3319 29
 5009 0014 7B68     		ldr	r3, [r7, #4]
 5010 0016 1B68     		ldr	r3, [r3]
 5011              		.loc 1 3319 12
 5012 0018 D3F89C30 		ldr	r3, [r3, #156]
 5013 001c BB60     		str	r3, [r7, #8]
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check new message reception on the selected buffer */
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (((RxBufferIndex < 32U) && ((NewData1 & (uint32_t)((uint32_t)1 << RxBufferIndex)) == 0U)) ||
 5014              		.loc 1 3322 6
 5015 001e 3B68     		ldr	r3, [r7]
 5016 0020 1F2B     		cmp	r3, #31
 5017 0022 07D8     		bhi	.L222
 5018              		.loc 1 3322 88 discriminator 1
 5019 0024 FA68     		ldr	r2, [r7, #12]
 5020 0026 3B68     		ldr	r3, [r7]
 5021 0028 22FA03F3 		lsr	r3, r2, r3
 5022 002c 03F00103 		and	r3, r3, #1
 5023              		.loc 1 3322 30 discriminator 1
 5024 0030 002B     		cmp	r3, #0
 5025 0032 0CD0     		beq	.L223
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 166


 5026              	.L222:
 5027              		.loc 1 3322 96 discriminator 3
 5028 0034 3B68     		ldr	r3, [r7]
 5029 0036 1F2B     		cmp	r3, #31
 5030 0038 0BD9     		bls	.L224
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ((RxBufferIndex >= 32U) && ((NewData2 & (uint32_t)((uint32_t)1 << (RxBufferIndex & 0x1FU))) =
 5031              		.loc 1 3323 88
 5032 003a 3B68     		ldr	r3, [r7]
 5033 003c 03F01F03 		and	r3, r3, #31
 5034              		.loc 1 3323 99
 5035 0040 BA68     		ldr	r2, [r7, #8]
 5036 0042 22FA03F3 		lsr	r3, r2, r3
 5037 0046 03F00103 		and	r3, r3, #1
 5038              		.loc 1 3323 31
 5039 004a 002B     		cmp	r3, #0
 5040 004c 01D1     		bne	.L224
 5041              	.L223:
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return 0;
 5042              		.loc 1 3325 12
 5043 004e 0023     		movs	r3, #0
 5044 0050 16E0     		b	.L225
 5045              	.L224:
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Clear the New Data flag of the current Rx buffer */
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxBufferIndex < 32U)
 5046              		.loc 1 3329 6
 5047 0052 3B68     		ldr	r3, [r7]
 5048 0054 1F2B     		cmp	r3, #31
 5049 0056 08D8     		bhi	.L226
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxBufferIndex);
 5050              		.loc 1 3331 11
 5051 0058 7B68     		ldr	r3, [r7, #4]
 5052 005a 1B68     		ldr	r3, [r3]
 5053              		.loc 1 3331 44
 5054 005c 0121     		movs	r1, #1
 5055 005e 3A68     		ldr	r2, [r7]
 5056 0060 01FA02F2 		lsl	r2, r1, r2
 5057              		.loc 1 3331 29
 5058 0064 C3F89820 		str	r2, [r3, #152]
 5059 0068 09E0     		b	.L227
 5060              	.L226:
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* 32 <= RxBufferIndex <= 63 */
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxBufferIndex & 0x1FU));
 5061              		.loc 1 3335 62
 5062 006a 3B68     		ldr	r3, [r7]
 5063 006c 03F01F02 		and	r2, r3, #31
 5064              		.loc 1 3335 11
 5065 0070 7B68     		ldr	r3, [r7, #4]
 5066 0072 1B68     		ldr	r3, [r3]
 5067              		.loc 1 3335 44
 5068 0074 0121     		movs	r1, #1
 5069 0076 01FA02F2 		lsl	r2, r1, r2
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 167


 5070              		.loc 1 3335 29
 5071 007a C3F89C20 		str	r2, [r3, #156]
 5072              	.L227:
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return 1;
 5073              		.loc 1 3338 10
 5074 007e 0123     		movs	r3, #1
 5075              	.L225:
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5076              		.loc 1 3339 1
 5077 0080 1846     		mov	r0, r3
 5078 0082 1437     		adds	r7, r7, #20
 5079              	.LCFI267:
 5080              		.cfi_def_cfa_offset 4
 5081 0084 BD46     		mov	sp, r7
 5082              	.LCFI268:
 5083              		.cfi_def_cfa_register 13
 5084              		@ sp needed
 5085 0086 5DF8047B 		ldr	r7, [sp], #4
 5086              	.LCFI269:
 5087              		.cfi_restore 7
 5088              		.cfi_def_cfa_offset 0
 5089 008a 7047     		bx	lr
 5090              		.cfi_endproc
 5091              	.LFE189:
 5093              		.section	.text.HAL_FDCAN_IsTxBufferMessagePending,"ax",%progbits
 5094              		.align	1
 5095              		.global	HAL_FDCAN_IsTxBufferMessagePending
 5096              		.syntax unified
 5097              		.thumb
 5098              		.thumb_func
 5100              	HAL_FDCAN_IsTxBufferMessagePending:
 5101              	.LFB190:
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if a transmission request is pending on the selected Tx buffer.
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TxBufferIndex Tx buffer index.
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : No pending transmission request on TxBufferIndex.
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : Pending transmission request on TxBufferIndex.
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsTxBufferMessagePending(const FDCAN_HandleTypeDef *hfdcan, uint32_t TxBufferInd
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5102              		.loc 1 3352 1
 5103              		.cfi_startproc
 5104              		@ args = 0, pretend = 0, frame = 8
 5105              		@ frame_needed = 1, uses_anonymous_args = 0
 5106              		@ link register save eliminated.
 5107 0000 80B4     		push	{r7}
 5108              	.LCFI270:
 5109              		.cfi_def_cfa_offset 4
 5110              		.cfi_offset 7, -4
 5111 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 168


 5112              	.LCFI271:
 5113              		.cfi_def_cfa_offset 16
 5114 0004 00AF     		add	r7, sp, #0
 5115              	.LCFI272:
 5116              		.cfi_def_cfa_register 7
 5117 0006 7860     		str	r0, [r7, #4]
 5118 0008 3960     		str	r1, [r7]
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check pending transmission request on the selected buffer */
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TXBRP & TxBufferIndex) == 0U)
 5119              		.loc 1 3354 14
 5120 000a 7B68     		ldr	r3, [r7, #4]
 5121 000c 1B68     		ldr	r3, [r3]
 5122              		.loc 1 3354 24
 5123 000e D3F8CC20 		ldr	r2, [r3, #204]
 5124              		.loc 1 3354 32
 5125 0012 3B68     		ldr	r3, [r7]
 5126 0014 1340     		ands	r3, r3, r2
 5127              		.loc 1 3354 6
 5128 0016 002B     		cmp	r3, #0
 5129 0018 01D1     		bne	.L229
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return 0;
 5130              		.loc 1 3356 12
 5131 001a 0023     		movs	r3, #0
 5132 001c 00E0     		b	.L230
 5133              	.L229:
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return 1;
 5134              		.loc 1 3358 10
 5135 001e 0123     		movs	r3, #1
 5136              	.L230:
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5137              		.loc 1 3359 1
 5138 0020 1846     		mov	r0, r3
 5139 0022 0C37     		adds	r7, r7, #12
 5140              	.LCFI273:
 5141              		.cfi_def_cfa_offset 4
 5142 0024 BD46     		mov	sp, r7
 5143              	.LCFI274:
 5144              		.cfi_def_cfa_register 13
 5145              		@ sp needed
 5146 0026 5DF8047B 		ldr	r7, [sp], #4
 5147              	.LCFI275:
 5148              		.cfi_restore 7
 5149              		.cfi_def_cfa_offset 0
 5150 002a 7047     		bx	lr
 5151              		.cfi_endproc
 5152              	.LFE190:
 5154              		.section	.text.HAL_FDCAN_GetRxFifoFillLevel,"ax",%progbits
 5155              		.align	1
 5156              		.global	HAL_FDCAN_GetRxFifoFillLevel
 5157              		.syntax unified
 5158              		.thumb
 5159              		.thumb_func
 5161              	HAL_FDCAN_GetRxFifoFillLevel:
 5162              	.LFB191:
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 169


3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return Rx FIFO fill level.
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo Rx FIFO.
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO0: Rx FIFO 0
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO1: Rx FIFO 1
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Rx FIFO fill level.
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetRxFifoFillLevel(const FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo)
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5163              		.loc 1 3372 1
 5164              		.cfi_startproc
 5165              		@ args = 0, pretend = 0, frame = 16
 5166              		@ frame_needed = 1, uses_anonymous_args = 0
 5167              		@ link register save eliminated.
 5168 0000 80B4     		push	{r7}
 5169              	.LCFI276:
 5170              		.cfi_def_cfa_offset 4
 5171              		.cfi_offset 7, -4
 5172 0002 85B0     		sub	sp, sp, #20
 5173              	.LCFI277:
 5174              		.cfi_def_cfa_offset 24
 5175 0004 00AF     		add	r7, sp, #0
 5176              	.LCFI278:
 5177              		.cfi_def_cfa_register 7
 5178 0006 7860     		str	r0, [r7, #4]
 5179 0008 3960     		str	r1, [r7]
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FillLevel;
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO(RxFifo));
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo == FDCAN_RX_FIFO0)
 5180              		.loc 1 3378 6
 5181 000a 3B68     		ldr	r3, [r7]
 5182 000c 402B     		cmp	r3, #64
 5183 000e 07D1     		bne	.L232
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     FillLevel = hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL;
 5184              		.loc 1 3380 23
 5185 0010 7B68     		ldr	r3, [r7, #4]
 5186 0012 1B68     		ldr	r3, [r3]
 5187              		.loc 1 3380 33
 5188 0014 D3F8A430 		ldr	r3, [r3, #164]
 5189              		.loc 1 3380 15
 5190 0018 03F07F03 		and	r3, r3, #127
 5191 001c FB60     		str	r3, [r7, #12]
 5192 001e 06E0     		b	.L233
 5193              	.L232:
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* RxFifo == FDCAN_RX_FIFO1 */
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     FillLevel = hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL;
 5194              		.loc 1 3384 23
 5195 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 170


 5196 0022 1B68     		ldr	r3, [r3]
 5197              		.loc 1 3384 33
 5198 0024 D3F8B430 		ldr	r3, [r3, #180]
 5199              		.loc 1 3384 15
 5200 0028 03F07F03 		and	r3, r3, #127
 5201 002c FB60     		str	r3, [r7, #12]
 5202              	.L233:
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Rx FIFO fill level */
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return FillLevel;
 5203              		.loc 1 3388 10
 5204 002e FB68     		ldr	r3, [r7, #12]
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5205              		.loc 1 3389 1
 5206 0030 1846     		mov	r0, r3
 5207 0032 1437     		adds	r7, r7, #20
 5208              	.LCFI279:
 5209              		.cfi_def_cfa_offset 4
 5210 0034 BD46     		mov	sp, r7
 5211              	.LCFI280:
 5212              		.cfi_def_cfa_register 13
 5213              		@ sp needed
 5214 0036 5DF8047B 		ldr	r7, [sp], #4
 5215              	.LCFI281:
 5216              		.cfi_restore 7
 5217              		.cfi_def_cfa_offset 0
 5218 003a 7047     		bx	lr
 5219              		.cfi_endproc
 5220              	.LFE191:
 5222              		.section	.text.HAL_FDCAN_GetTxFifoFreeLevel,"ax",%progbits
 5223              		.align	1
 5224              		.global	HAL_FDCAN_GetTxFifoFreeLevel
 5225              		.syntax unified
 5226              		.thumb
 5227              		.thumb_func
 5229              	HAL_FDCAN_GetTxFifoFreeLevel:
 5230              	.LFB192:
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return Tx FIFO free level: number of consecutive free Tx FIFO
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         elements starting from Tx FIFO GetIndex.
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Tx FIFO free level.
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetTxFifoFreeLevel(const FDCAN_HandleTypeDef *hfdcan)
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5231              		.loc 1 3399 1
 5232              		.cfi_startproc
 5233              		@ args = 0, pretend = 0, frame = 16
 5234              		@ frame_needed = 1, uses_anonymous_args = 0
 5235              		@ link register save eliminated.
 5236 0000 80B4     		push	{r7}
 5237              	.LCFI282:
 5238              		.cfi_def_cfa_offset 4
 5239              		.cfi_offset 7, -4
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 171


 5240 0002 85B0     		sub	sp, sp, #20
 5241              	.LCFI283:
 5242              		.cfi_def_cfa_offset 24
 5243 0004 00AF     		add	r7, sp, #0
 5244              	.LCFI284:
 5245              		.cfi_def_cfa_register 7
 5246 0006 7860     		str	r0, [r7, #4]
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FreeLevel;
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   FreeLevel = hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFFL;
 5247              		.loc 1 3402 21
 5248 0008 7B68     		ldr	r3, [r7, #4]
 5249 000a 1B68     		ldr	r3, [r3]
 5250              		.loc 1 3402 31
 5251 000c D3F8C430 		ldr	r3, [r3, #196]
 5252              		.loc 1 3402 13
 5253 0010 03F03F03 		and	r3, r3, #63
 5254 0014 FB60     		str	r3, [r7, #12]
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Tx FIFO free level */
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return FreeLevel;
 5255              		.loc 1 3405 10
 5256 0016 FB68     		ldr	r3, [r7, #12]
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5257              		.loc 1 3406 1
 5258 0018 1846     		mov	r0, r3
 5259 001a 1437     		adds	r7, r7, #20
 5260              	.LCFI285:
 5261              		.cfi_def_cfa_offset 4
 5262 001c BD46     		mov	sp, r7
 5263              	.LCFI286:
 5264              		.cfi_def_cfa_register 13
 5265              		@ sp needed
 5266 001e 5DF8047B 		ldr	r7, [sp], #4
 5267              	.LCFI287:
 5268              		.cfi_restore 7
 5269              		.cfi_def_cfa_offset 0
 5270 0022 7047     		bx	lr
 5271              		.cfi_endproc
 5272              	.LFE192:
 5274              		.section	.text.HAL_FDCAN_IsRestrictedOperationMode,"ax",%progbits
 5275              		.align	1
 5276              		.global	HAL_FDCAN_IsRestrictedOperationMode
 5277              		.syntax unified
 5278              		.thumb
 5279              		.thumb_func
 5281              	HAL_FDCAN_IsRestrictedOperationMode:
 5282              	.LFB193:
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if the FDCAN peripheral entered Restricted Operation Mode.
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : Normal FDCAN operation.
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : Restricted Operation Mode active.
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 172


3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsRestrictedOperationMode(const FDCAN_HandleTypeDef *hfdcan)
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5283              		.loc 1 3417 1
 5284              		.cfi_startproc
 5285              		@ args = 0, pretend = 0, frame = 16
 5286              		@ frame_needed = 1, uses_anonymous_args = 0
 5287              		@ link register save eliminated.
 5288 0000 80B4     		push	{r7}
 5289              	.LCFI288:
 5290              		.cfi_def_cfa_offset 4
 5291              		.cfi_offset 7, -4
 5292 0002 85B0     		sub	sp, sp, #20
 5293              	.LCFI289:
 5294              		.cfi_def_cfa_offset 24
 5295 0004 00AF     		add	r7, sp, #0
 5296              	.LCFI290:
 5297              		.cfi_def_cfa_register 7
 5298 0006 7860     		str	r0, [r7, #4]
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t OperationMode;
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get Operation Mode */
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   OperationMode = ((hfdcan->Instance->CCCR & FDCAN_CCCR_ASM) >> FDCAN_CCCR_ASM_Pos);
 5299              		.loc 1 3421 27
 5300 0008 7B68     		ldr	r3, [r7, #4]
 5301 000a 1B68     		ldr	r3, [r3]
 5302              		.loc 1 3421 37
 5303 000c 9B69     		ldr	r3, [r3, #24]
 5304              		.loc 1 3421 62
 5305 000e 9B08     		lsrs	r3, r3, #2
 5306              		.loc 1 3421 17
 5307 0010 03F00103 		and	r3, r3, #1
 5308 0014 FB60     		str	r3, [r7, #12]
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return OperationMode;
 5309              		.loc 1 3423 10
 5310 0016 FB68     		ldr	r3, [r7, #12]
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5311              		.loc 1 3424 1
 5312 0018 1846     		mov	r0, r3
 5313 001a 1437     		adds	r7, r7, #20
 5314              	.LCFI291:
 5315              		.cfi_def_cfa_offset 4
 5316 001c BD46     		mov	sp, r7
 5317              	.LCFI292:
 5318              		.cfi_def_cfa_register 13
 5319              		@ sp needed
 5320 001e 5DF8047B 		ldr	r7, [sp], #4
 5321              	.LCFI293:
 5322              		.cfi_restore 7
 5323              		.cfi_def_cfa_offset 0
 5324 0022 7047     		bx	lr
 5325              		.cfi_endproc
 5326              	.LFE193:
 5328              		.section	.text.HAL_FDCAN_ExitRestrictedOperationMode,"ax",%progbits
 5329              		.align	1
 5330              		.global	HAL_FDCAN_ExitRestrictedOperationMode
 5331              		.syntax unified
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 173


 5332              		.thumb
 5333              		.thumb_func
 5335              	HAL_FDCAN_ExitRestrictedOperationMode:
 5336              	.LFB194:
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Exit Restricted Operation Mode.
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ExitRestrictedOperationMode(FDCAN_HandleTypeDef *hfdcan)
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5337              		.loc 1 3433 1
 5338              		.cfi_startproc
 5339              		@ args = 0, pretend = 0, frame = 16
 5340              		@ frame_needed = 1, uses_anonymous_args = 0
 5341              		@ link register save eliminated.
 5342 0000 80B4     		push	{r7}
 5343              	.LCFI294:
 5344              		.cfi_def_cfa_offset 4
 5345              		.cfi_offset 7, -4
 5346 0002 85B0     		sub	sp, sp, #20
 5347              	.LCFI295:
 5348              		.cfi_def_cfa_offset 24
 5349 0004 00AF     		add	r7, sp, #0
 5350              	.LCFI296:
 5351              		.cfi_def_cfa_register 7
 5352 0006 7860     		str	r0, [r7, #4]
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 5353              		.loc 1 3434 26
 5354 0008 7B68     		ldr	r3, [r7, #4]
 5355 000a 93F89830 		ldrb	r3, [r3, #152]
 5356 000e FB73     		strb	r3, [r7, #15]
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 5357              		.loc 1 3436 6
 5358 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5359 0012 012B     		cmp	r3, #1
 5360 0014 02D0     		beq	.L240
 5361              		.loc 1 3436 40 discriminator 1
 5362 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5363 0018 022B     		cmp	r3, #2
 5364 001a 09D1     		bne	.L241
 5365              	.L240:
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Exit Restricted Operation mode */
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_ASM);
 5366              		.loc 1 3439 5
 5367 001c 7B68     		ldr	r3, [r7, #4]
 5368 001e 1B68     		ldr	r3, [r3]
 5369 0020 9A69     		ldr	r2, [r3, #24]
 5370 0022 7B68     		ldr	r3, [r7, #4]
 5371 0024 1B68     		ldr	r3, [r3]
 5372 0026 22F00402 		bic	r2, r2, #4
 5373 002a 9A61     		str	r2, [r3, #24]
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 174


3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5374              		.loc 1 3442 12
 5375 002c 0023     		movs	r3, #0
 5376 002e 08E0     		b	.L242
 5377              	.L241:
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 5378              		.loc 1 3447 11
 5379 0030 7B68     		ldr	r3, [r7, #4]
 5380 0032 D3F89C30 		ldr	r3, [r3, #156]
 5381              		.loc 1 3447 23
 5382 0036 43F00202 		orr	r2, r3, #2
 5383 003a 7B68     		ldr	r3, [r7, #4]
 5384 003c C3F89C20 		str	r2, [r3, #156]
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5385              		.loc 1 3449 12
 5386 0040 0123     		movs	r3, #1
 5387              	.L242:
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5388              		.loc 1 3451 1
 5389 0042 1846     		mov	r0, r3
 5390 0044 1437     		adds	r7, r7, #20
 5391              	.LCFI297:
 5392              		.cfi_def_cfa_offset 4
 5393 0046 BD46     		mov	sp, r7
 5394              	.LCFI298:
 5395              		.cfi_def_cfa_register 13
 5396              		@ sp needed
 5397 0048 5DF8047B 		ldr	r7, [sp], #4
 5398              	.LCFI299:
 5399              		.cfi_restore 7
 5400              		.cfi_def_cfa_offset 0
 5401 004c 7047     		bx	lr
 5402              		.cfi_endproc
 5403              	.LFE194:
 5405              		.section	.text.HAL_FDCAN_TT_ConfigOperation,"ax",%progbits
 5406              		.align	1
 5407              		.global	HAL_FDCAN_TT_ConfigOperation
 5408              		.syntax unified
 5409              		.thumb
 5410              		.thumb_func
 5412              	HAL_FDCAN_TT_ConfigOperation:
 5413              	.LFB195:
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group4 TT Configuration and control functions
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief    TT Configuration and control functions
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 175


3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### TT Configuration and control functions #####
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigOperation                  : Initialize TT operation parameters
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigReferenceMessage           : Configure the reference message
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigTrigger                    : Configure the FDCAN trigger
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetGlobalTime                    : Schedule global time adjustment
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetClockSynchronization          : Schedule TUR numerator update
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigStopWatch                  : Configure stop watch source and polarity
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigRegisterTimeMark           : Configure register time mark pulse genera
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_EnableRegisterTimeMarkPulse      : Enable register time mark pulse generat
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_DisableRegisterTimeMarkPulse     : Disable register time mark pulse genera
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableTriggerTimeMarkPulse       : Enable trigger time mark pulse generation
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableTriggerTimeMarkPulse      : Disable trigger time mark pulse generatio
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableHardwareGapControl         : Enable gap control by input pin fdcan1_ev
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableHardwareGapControl        : Disable gap control by input pin fdcan1_e
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableTimeMarkGapControl         : Enable gap control (finish only) by regis
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableTimeMarkGapControl        : Disable gap control by register time mark
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetNextIsGap                     : Transmit next reference message with Next
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetEndOfGap                      : Finish a Gap by requesting start of refer
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigExternalSyncPhase          : Configure target phase used for external 
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_EnableExternalSynchronization    : Synchronize the phase of the FDCAN sche
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                             schedule
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_DisableExternalSynchronization   : Disable external schedule synchronizati
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_GetOperationStatus               : Get TT operation status
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initialize TT operation parameters.
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTTParams pointer to a FDCAN_TT_ConfigTypeDef structure.
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigOperation(FDCAN_HandleTypeDef *hfdcan, const FDCAN_TT_ConfigTy
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5414              		.loc 1 3500 1
 5415              		.cfi_startproc
 5416              		@ args = 0, pretend = 0, frame = 24
 5417              		@ frame_needed = 1, uses_anonymous_args = 0
 5418 0000 80B5     		push	{r7, lr}
 5419              	.LCFI300:
 5420              		.cfi_def_cfa_offset 8
 5421              		.cfi_offset 7, -8
 5422              		.cfi_offset 14, -4
 5423 0002 86B0     		sub	sp, sp, #24
 5424              	.LCFI301:
 5425              		.cfi_def_cfa_offset 32
 5426 0004 00AF     		add	r7, sp, #0
 5427              	.LCFI302:
 5428              		.cfi_def_cfa_register 7
 5429 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 176


 5430 0008 3960     		str	r1, [r7]
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RAMcounter;
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StartAddress;
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_NUMERATOR(pTTParams->TURNumerator));
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_DENOMINATOR(pTTParams->TURDenominator));
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TIME_MASTER(pTTParams->TimeMaster));
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->SyncDevLimit, 7U));
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->InitRefTrigOffset, 127U));
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->TriggerMemoryNbr, 64U));
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_CYCLE_START_SYNC(pTTParams->CycleStartSync));
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_TRIGGER(pTTParams->StopWatchTrigSel));
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_EVENT_TRIGGER(pTTParams->EventTrigSel));
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->TimeMaster == FDCAN_TT_POTENTIAL_MASTER)
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_BASIC_CYCLES_NUMBER(pTTParams->BasicCyclesNbr));
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_OPERATION(pTTParams->GapEnable));
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTTParams->AppWdgLimit, 255U));
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_EVENT_TRIGGER_POLARITY(pTTParams->EvtTrigPolarity));
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TX_ENABLE_WINDOW(pTTParams->TxEnableWindow));
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTTParams->ExpTxTrigNbr, 4095U));
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL1)
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TUR_LEVEL_0_2(pTTParams->TURNumerator, pTTParams->TURDenominator));
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_EXTERNAL_CLK_SYNC(pTTParams->ExternalClkSync));
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_GLOBAL_TIME_FILTERING(pTTParams->GlobalTimeFilter));
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_AUTO_CLK_CALIBRATION(pTTParams->ClockCalibration));
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TUR_LEVEL_1(pTTParams->TURNumerator, pTTParams->TURDenominator));
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5431              		.loc 1 3540 13
 5432 000a 7B68     		ldr	r3, [r7, #4]
 5433 000c 93F89830 		ldrb	r3, [r3, #152]
 5434 0010 DBB2     		uxtb	r3, r3
 5435              		.loc 1 3540 6
 5436 0012 012B     		cmp	r3, #1
 5437 0014 40F01081 		bne	.L244
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Stop local time in order to enable write access to the other bits of TURCF register */
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TURCF, FDCAN_TURCF_ELT);
 5438              		.loc 1 3543 5
 5439 0018 7B68     		ldr	r3, [r7, #4]
 5440 001a 5B68     		ldr	r3, [r3, #4]
 5441 001c 1A69     		ldr	r2, [r3, #16]
 5442 001e 7B68     		ldr	r3, [r7, #4]
 5443 0020 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 177


 5444 0022 22F00042 		bic	r2, r2, #-2147483648
 5445 0026 1A61     		str	r2, [r3, #16]
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Get tick */
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     tickstart = HAL_GetTick();
 5446              		.loc 1 3546 17
 5447 0028 FFF7FEFF 		bl	HAL_GetTick
 5448 002c 3861     		str	r0, [r7, #16]
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the ELT bit into TURCF register is reset */
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TURCF & FDCAN_TURCF_ELT) != 0U)
 5449              		.loc 1 3549 11
 5450 002e 14E0     		b	.L245
 5451              	.L247:
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 5452              		.loc 1 3552 12
 5453 0030 FFF7FEFF 		bl	HAL_GetTick
 5454 0034 0246     		mov	r2, r0
 5455              		.loc 1 3552 26 discriminator 1
 5456 0036 3B69     		ldr	r3, [r7, #16]
 5457 0038 D31A     		subs	r3, r2, r3
 5458              		.loc 1 3552 10 discriminator 1
 5459 003a 0A2B     		cmp	r3, #10
 5460 003c 0DD9     		bls	.L245
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 5461              		.loc 1 3555 15
 5462 003e 7B68     		ldr	r3, [r7, #4]
 5463 0040 D3F89C30 		ldr	r3, [r3, #156]
 5464              		.loc 1 3555 27
 5465 0044 43F00102 		orr	r2, r3, #1
 5466 0048 7B68     		ldr	r3, [r7, #4]
 5467 004a C3F89C20 		str	r2, [r3, #156]
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 5468              		.loc 1 3558 23
 5469 004e 7B68     		ldr	r3, [r7, #4]
 5470 0050 0322     		movs	r2, #3
 5471 0052 83F89820 		strb	r2, [r3, #152]
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 5472              		.loc 1 3560 16
 5473 0056 0123     		movs	r3, #1
 5474 0058 F7E0     		b	.L246
 5475              	.L245:
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5476              		.loc 1 3549 19
 5477 005a 7B68     		ldr	r3, [r7, #4]
 5478 005c 5B68     		ldr	r3, [r3, #4]
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5479              		.loc 1 3549 26
 5480 005e 1B69     		ldr	r3, [r3, #16]
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 178


 5481              		.loc 1 3549 53
 5482 0060 002B     		cmp	r3, #0
 5483 0062 E5DB     		blt	.L247
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TUR (Time Unit Ratio) */
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TURCF,
 5484              		.loc 1 3565 5
 5485 0064 7B68     		ldr	r3, [r7, #4]
 5486 0066 5B68     		ldr	r3, [r3, #4]
 5487 0068 1B69     		ldr	r3, [r3, #16]
 5488 006a 03F04041 		and	r1, r3, #-1073741824
 5489 006e 3B68     		ldr	r3, [r7]
 5490 0070 9B6B     		ldr	r3, [r3, #56]
 5491 0072 A3F58032 		sub	r2, r3, #65536
 5492 0076 3B68     		ldr	r3, [r7]
 5493 0078 DB6B     		ldr	r3, [r3, #60]
 5494 007a 1B04     		lsls	r3, r3, #16
 5495 007c 1A43     		orrs	r2, r2, r3
 5496 007e 7B68     		ldr	r3, [r7, #4]
 5497 0080 5B68     		ldr	r3, [r3, #4]
 5498 0082 0A43     		orrs	r2, r2, r1
 5499 0084 1A61     		str	r2, [r3, #16]
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TURCF_NCL | FDCAN_TURCF_DC),
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (((pTTParams->TURNumerator - 0x10000U) << FDCAN_TURCF_NCL_Pos) |
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 (pTTParams->TURDenominator << FDCAN_TURCF_DC_Pos)));
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable local time */
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TURCF, FDCAN_TURCF_ELT);
 5500              		.loc 1 3571 5
 5501 0086 7B68     		ldr	r3, [r7, #4]
 5502 0088 5B68     		ldr	r3, [r3, #4]
 5503 008a 1A69     		ldr	r2, [r3, #16]
 5504 008c 7B68     		ldr	r3, [r7, #4]
 5505 008e 5B68     		ldr	r3, [r3, #4]
 5506 0090 42F00042 		orr	r2, r2, #-2147483648
 5507 0094 1A61     		str	r2, [r3, #16]
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TT operation */
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTOCF,
 5508              		.loc 1 3574 5
 5509 0096 7B68     		ldr	r3, [r7, #4]
 5510 0098 5B68     		ldr	r3, [r3, #4]
 5511 009a 9A68     		ldr	r2, [r3, #8]
 5512 009c 6D4B     		ldr	r3, .L255
 5513 009e 1340     		ands	r3, r3, r2
 5514 00a0 3A68     		ldr	r2, [r7]
 5515 00a2 1168     		ldr	r1, [r2]
 5516 00a4 3A68     		ldr	r2, [r7]
 5517 00a6 9268     		ldr	r2, [r2, #8]
 5518 00a8 1143     		orrs	r1, r1, r2
 5519 00aa 3A68     		ldr	r2, [r7]
 5520 00ac D268     		ldr	r2, [r2, #12]
 5521 00ae 5201     		lsls	r2, r2, #5
 5522 00b0 1143     		orrs	r1, r1, r2
 5523 00b2 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 179


 5524 00b4 1269     		ldr	r2, [r2, #16]
 5525 00b6 1202     		lsls	r2, r2, #8
 5526 00b8 1143     		orrs	r1, r1, r2
 5527 00ba 7A68     		ldr	r2, [r7, #4]
 5528 00bc 5268     		ldr	r2, [r2, #4]
 5529 00be 0B43     		orrs	r3, r3, r1
 5530 00c0 9360     		str	r3, [r2, #8]
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TTOCF_OM | FDCAN_TTOCF_TM | FDCAN_TTOCF_LDSDL | FDCAN_TTOCF_IRTO),
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (pTTParams->OperationMode                           | \
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 pTTParams->TimeMaster                              | \
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 (pTTParams->SyncDevLimit << FDCAN_TTOCF_LDSDL_Pos) | \
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 (pTTParams->InitRefTrigOffset << FDCAN_TTOCF_IRTO_Pos)));
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
 5531              		.loc 1 3580 18
 5532 00c2 3B68     		ldr	r3, [r7]
 5533 00c4 1B68     		ldr	r3, [r3]
 5534              		.loc 1 3580 8
 5535 00c6 032B     		cmp	r3, #3
 5536 00c8 11D0     		beq	.L248
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCF,
 5537              		.loc 1 3582 7
 5538 00ca 7B68     		ldr	r3, [r7, #4]
 5539 00cc 5B68     		ldr	r3, [r3, #4]
 5540 00ce 9A68     		ldr	r2, [r3, #8]
 5541 00d0 614B     		ldr	r3, .L255+4
 5542 00d2 1340     		ands	r3, r3, r2
 5543 00d4 3A68     		ldr	r2, [r7]
 5544 00d6 5168     		ldr	r1, [r2, #4]
 5545 00d8 3A68     		ldr	r2, [r7]
 5546 00da 9269     		ldr	r2, [r2, #24]
 5547 00dc 1204     		lsls	r2, r2, #16
 5548 00de 1143     		orrs	r1, r1, r2
 5549 00e0 3A68     		ldr	r2, [r7]
 5550 00e2 526A     		ldr	r2, [r2, #36]
 5551 00e4 1143     		orrs	r1, r1, r2
 5552 00e6 7A68     		ldr	r2, [r7, #4]
 5553 00e8 5268     		ldr	r2, [r2, #4]
 5554 00ea 0B43     		orrs	r3, r3, r1
 5555 00ec 9360     		str	r3, [r2, #8]
 5556              	.L248:
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTOCF_GEN | FDCAN_TTOCF_AWL | FDCAN_TTOCF_EVTP),
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (pTTParams->GapEnable                            | \
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   (pTTParams->AppWdgLimit << FDCAN_TTOCF_AWL_Pos) | \
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->EvtTrigPolarity));
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL1)
 5557              		.loc 1 3588 18
 5558 00ee 3B68     		ldr	r3, [r7]
 5559 00f0 1B68     		ldr	r3, [r3]
 5560              		.loc 1 3588 8
 5561 00f2 012B     		cmp	r3, #1
 5562 00f4 10D0     		beq	.L249
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCF,
 5563              		.loc 1 3590 7
 5564 00f6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 180


 5565 00f8 5B68     		ldr	r3, [r3, #4]
 5566 00fa 9A68     		ldr	r2, [r3, #8]
 5567 00fc 574B     		ldr	r3, .L255+8
 5568 00fe 1340     		ands	r3, r3, r2
 5569 0100 3A68     		ldr	r2, [r7]
 5570 0102 5169     		ldr	r1, [r2, #20]
 5571 0104 3A68     		ldr	r2, [r7]
 5572 0106 D269     		ldr	r2, [r2, #28]
 5573 0108 1143     		orrs	r1, r1, r2
 5574 010a 3A68     		ldr	r2, [r7]
 5575 010c 126A     		ldr	r2, [r2, #32]
 5576 010e 1143     		orrs	r1, r1, r2
 5577 0110 7A68     		ldr	r2, [r7, #4]
 5578 0112 5268     		ldr	r2, [r2, #4]
 5579 0114 0B43     		orrs	r3, r3, r1
 5580 0116 9360     		str	r3, [r2, #8]
 5581              	.L249:
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTOCF_EECS | FDCAN_TTOCF_EGTF | FDCAN_TTOCF_ECC),
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (pTTParams->ExternalClkSync  | \
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->GlobalTimeFilter | \
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->ClockCalibration));
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure system matrix limits */
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTMLM, FDCAN_TTMLM_CSS, pTTParams->CycleStartSync);
 5582              		.loc 1 3598 5
 5583 0118 7B68     		ldr	r3, [r7, #4]
 5584 011a 5B68     		ldr	r3, [r3, #4]
 5585 011c DB68     		ldr	r3, [r3, #12]
 5586 011e 23F0C001 		bic	r1, r3, #192
 5587 0122 3B68     		ldr	r3, [r7]
 5588 0124 DA6A     		ldr	r2, [r3, #44]
 5589 0126 7B68     		ldr	r3, [r7, #4]
 5590 0128 5B68     		ldr	r3, [r3, #4]
 5591 012a 0A43     		orrs	r2, r2, r1
 5592 012c DA60     		str	r2, [r3, #12]
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
 5593              		.loc 1 3599 18
 5594 012e 3B68     		ldr	r3, [r7]
 5595 0130 1B68     		ldr	r3, [r3]
 5596              		.loc 1 3599 8
 5597 0132 032B     		cmp	r3, #3
 5598 0134 10D0     		beq	.L250
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTMLM,
 5599              		.loc 1 3601 7
 5600 0136 7B68     		ldr	r3, [r7, #4]
 5601 0138 5B68     		ldr	r3, [r3, #4]
 5602 013a DA68     		ldr	r2, [r3, #12]
 5603 013c 484B     		ldr	r3, .L255+12
 5604 013e 1340     		ands	r3, r3, r2
 5605 0140 3A68     		ldr	r2, [r7]
 5606 0142 126B     		ldr	r2, [r2, #48]
 5607 0144 013A     		subs	r2, r2, #1
 5608 0146 1102     		lsls	r1, r2, #8
 5609 0148 3A68     		ldr	r2, [r7]
 5610 014a 526B     		ldr	r2, [r2, #52]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 181


 5611 014c 1204     		lsls	r2, r2, #16
 5612 014e 1143     		orrs	r1, r1, r2
 5613 0150 7A68     		ldr	r2, [r7, #4]
 5614 0152 5268     		ldr	r2, [r2, #4]
 5615 0154 0B43     		orrs	r3, r3, r1
 5616 0156 D360     		str	r3, [r2, #12]
 5617              	.L250:
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTMLM_TXEW | FDCAN_TTMLM_ENTT),
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (((pTTParams->TxEnableWindow - 1U) << FDCAN_TTMLM_TXEW_Pos) |
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   (pTTParams->ExpTxTrigNbr << FDCAN_TTMLM_ENTT_Pos)));
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->TimeMaster == FDCAN_TT_POTENTIAL_MASTER)
 5618              		.loc 1 3606 18
 5619 0158 3B68     		ldr	r3, [r7]
 5620 015a 9B68     		ldr	r3, [r3, #8]
 5621              		.loc 1 3606 8
 5622 015c 102B     		cmp	r3, #16
 5623 015e 0AD1     		bne	.L251
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTMLM, FDCAN_TTMLM_CCM, pTTParams->BasicCyclesNbr);
 5624              		.loc 1 3608 7
 5625 0160 7B68     		ldr	r3, [r7, #4]
 5626 0162 5B68     		ldr	r3, [r3, #4]
 5627 0164 DB68     		ldr	r3, [r3, #12]
 5628 0166 23F03F01 		bic	r1, r3, #63
 5629 016a 3B68     		ldr	r3, [r7]
 5630 016c 9A6A     		ldr	r2, [r3, #40]
 5631 016e 7B68     		ldr	r3, [r7, #4]
 5632 0170 5B68     		ldr	r3, [r3, #4]
 5633 0172 0A43     		orrs	r2, r2, r1
 5634 0174 DA60     		str	r2, [r3, #12]
 5635              	.L251:
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure input triggers: Stop watch and Event */
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTS,
 5636              		.loc 1 3612 5
 5637 0176 7B68     		ldr	r3, [r7, #4]
 5638 0178 5B68     		ldr	r3, [r3, #4]
 5639 017a D3F80032 		ldr	r3, [r3, #512]
 5640 017e 23F03301 		bic	r1, r3, #51
 5641 0182 3B68     		ldr	r3, [r7]
 5642 0184 5A6C     		ldr	r2, [r3, #68]
 5643 0186 3B68     		ldr	r3, [r7]
 5644 0188 9B6C     		ldr	r3, [r3, #72]
 5645 018a 1A43     		orrs	r2, r2, r3
 5646 018c 7B68     		ldr	r3, [r7, #4]
 5647 018e 5B68     		ldr	r3, [r3, #4]
 5648 0190 0A43     		orrs	r2, r2, r1
 5649 0192 C3F80022 		str	r2, [r3, #512]
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TTTS_SWTSEL | FDCAN_TTTS_EVTSEL),
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (pTTParams->StopWatchTrigSel | pTTParams->EventTrigSel));
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure trigger memory start address */
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     StartAddress = (hfdcan->msgRam.EndAddress - SRAMCAN_BASE) / 4U;
 5650              		.loc 1 3617 35
 5651 0196 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 182


 5652 0198 D3F89020 		ldr	r2, [r3, #144]
 5653              		.loc 1 3617 47
 5654 019c 314B     		ldr	r3, .L255+16
 5655 019e 1344     		add	r3, r3, r2
 5656              		.loc 1 3617 18
 5657 01a0 9B08     		lsrs	r3, r3, #2
 5658 01a2 FB60     		str	r3, [r7, #12]
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTMC, FDCAN_TTTMC_TMSA, (StartAddress << FDCAN_TTTMC_TMSA_Pos));
 5659              		.loc 1 3618 5
 5660 01a4 7B68     		ldr	r3, [r7, #4]
 5661 01a6 5B68     		ldr	r3, [r3, #4]
 5662 01a8 1A68     		ldr	r2, [r3]
 5663 01aa 2F4B     		ldr	r3, .L255+20
 5664 01ac 1340     		ands	r3, r3, r2
 5665 01ae FA68     		ldr	r2, [r7, #12]
 5666 01b0 9100     		lsls	r1, r2, #2
 5667 01b2 7A68     		ldr	r2, [r7, #4]
 5668 01b4 5268     		ldr	r2, [r2, #4]
 5669 01b6 0B43     		orrs	r3, r3, r1
 5670 01b8 1360     		str	r3, [r2]
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Trigger memory elements number */
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTMC, FDCAN_TTTMC_TME, (pTTParams->TriggerMemoryNbr << FDCAN_TTTMC_T
 5671              		.loc 1 3621 5
 5672 01ba 7B68     		ldr	r3, [r7, #4]
 5673 01bc 5B68     		ldr	r3, [r3, #4]
 5674 01be 1B68     		ldr	r3, [r3]
 5675 01c0 23F4FE01 		bic	r1, r3, #8323072
 5676 01c4 3B68     		ldr	r3, [r7]
 5677 01c6 1B6C     		ldr	r3, [r3, #64]
 5678 01c8 1A04     		lsls	r2, r3, #16
 5679 01ca 7B68     		ldr	r3, [r7, #4]
 5680 01cc 5B68     		ldr	r3, [r3, #4]
 5681 01ce 0A43     		orrs	r2, r2, r1
 5682 01d0 1A60     		str	r2, [r3]
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Recalculate End Address */
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->msgRam.TTMemorySA = hfdcan->msgRam.EndAddress;
 5683              		.loc 1 3624 47
 5684 01d2 7B68     		ldr	r3, [r7, #4]
 5685 01d4 D3F89020 		ldr	r2, [r3, #144]
 5686              		.loc 1 3624 31
 5687 01d8 7B68     		ldr	r3, [r7, #4]
 5688 01da C3F88C20 		str	r2, [r3, #140]
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->msgRam.EndAddress = hfdcan->msgRam.TTMemorySA + (pTTParams->TriggerMemoryNbr * 2U * 4U)
 5689              		.loc 1 3625 47
 5690 01de 7B68     		ldr	r3, [r7, #4]
 5691 01e0 D3F88C20 		ldr	r2, [r3, #140]
 5692              		.loc 1 3625 71
 5693 01e4 3B68     		ldr	r3, [r7]
 5694 01e6 1B6C     		ldr	r3, [r3, #64]
 5695              		.loc 1 3625 95
 5696 01e8 DB00     		lsls	r3, r3, #3
 5697              		.loc 1 3625 59
 5698 01ea 1A44     		add	r2, r2, r3
 5699              		.loc 1 3625 31
 5700 01ec 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 183


 5701 01ee C3F89020 		str	r2, [r3, #144]
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message R
 5702              		.loc 1 3627 23
 5703 01f2 7B68     		ldr	r3, [r7, #4]
 5704 01f4 D3F89030 		ldr	r3, [r3, #144]
 5705              		.loc 1 3627 8
 5706 01f8 1C4A     		ldr	r2, .L255+24
 5707 01fa 9342     		cmp	r3, r2
 5708 01fc 09D9     		bls	.L252
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Message RAM overflow */
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 5709              		.loc 1 3631 13
 5710 01fe 7B68     		ldr	r3, [r7, #4]
 5711 0200 D3F89C30 		ldr	r3, [r3, #156]
 5712              		.loc 1 3631 25
 5713 0204 43F02002 		orr	r2, r3, #32
 5714 0208 7B68     		ldr	r3, [r7, #4]
 5715 020a C3F89C20 		str	r2, [r3, #156]
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 5716              		.loc 1 3633 14
 5717 020e 0123     		movs	r3, #1
 5718 0210 1BE0     		b	.L246
 5719              	.L252:
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Flush the allocated Message RAM area */
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       for (RAMcounter = hfdcan->msgRam.TTMemorySA; RAMcounter < hfdcan->msgRam.EndAddress; RAMcount
 5720              		.loc 1 3638 23
 5721 0212 7B68     		ldr	r3, [r7, #4]
 5722 0214 D3F88C30 		ldr	r3, [r3, #140]
 5723 0218 7B61     		str	r3, [r7, #20]
 5724              		.loc 1 3638 7
 5725 021a 05E0     		b	.L253
 5726              	.L254:
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         *(uint32_t *)(RAMcounter) = 0x00000000;
 5727              		.loc 1 3640 10
 5728 021c 7B69     		ldr	r3, [r7, #20]
 5729              		.loc 1 3640 35
 5730 021e 0022     		movs	r2, #0
 5731 0220 1A60     		str	r2, [r3]
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 5732              		.loc 1 3638 103 discriminator 3
 5733 0222 7B69     		ldr	r3, [r7, #20]
 5734 0224 0433     		adds	r3, r3, #4
 5735 0226 7B61     		str	r3, [r7, #20]
 5736              	.L253:
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 5737              		.loc 1 3638 79 discriminator 1
 5738 0228 7B68     		ldr	r3, [r7, #4]
 5739 022a D3F89030 		ldr	r3, [r3, #144]
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 184


 5740              		.loc 1 3638 63 discriminator 1
 5741 022e 7A69     		ldr	r2, [r7, #20]
 5742 0230 9A42     		cmp	r2, r3
 5743 0232 F3D3     		bcc	.L254
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5744              		.loc 1 3645 12
 5745 0234 0023     		movs	r3, #0
 5746 0236 08E0     		b	.L246
 5747              	.L244:
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5748              		.loc 1 3650 11
 5749 0238 7B68     		ldr	r3, [r7, #4]
 5750 023a D3F89C30 		ldr	r3, [r3, #156]
 5751              		.loc 1 3650 23
 5752 023e 43F00402 		orr	r2, r3, #4
 5753 0242 7B68     		ldr	r3, [r7, #4]
 5754 0244 C3F89C20 		str	r2, [r3, #156]
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5755              		.loc 1 3652 12
 5756 0248 0123     		movs	r3, #1
 5757              	.L246:
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5758              		.loc 1 3654 1
 5759 024a 1846     		mov	r0, r3
 5760 024c 1837     		adds	r7, r7, #24
 5761              	.LCFI303:
 5762              		.cfi_def_cfa_offset 8
 5763 024e BD46     		mov	sp, r7
 5764              	.LCFI304:
 5765              		.cfi_def_cfa_register 13
 5766              		@ sp needed
 5767 0250 80BD     		pop	{r7, pc}
 5768              	.L256:
 5769 0252 00BF     		.align	2
 5770              	.L255:
 5771 0254 0C80FFFF 		.word	-32756
 5772 0258 F7FF00FB 		.word	-83820553
 5773 025c FF7FFFFC 		.word	-50364417
 5774 0260 FFF000F0 		.word	-268373761
 5775 0264 0054FFBF 		.word	-1073785856
 5776 0268 0300FFFF 		.word	-65533
 5777 026c FCD30040 		.word	1073796092
 5778              		.cfi_endproc
 5779              	.LFE195:
 5781              		.section	.text.HAL_FDCAN_TT_ConfigReferenceMessage,"ax",%progbits
 5782              		.align	1
 5783              		.global	HAL_FDCAN_TT_ConfigReferenceMessage
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 185


 5784              		.syntax unified
 5785              		.thumb
 5786              		.thumb_func
 5788              	HAL_FDCAN_TT_ConfigReferenceMessage:
 5789              	.LFB196:
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the reference message.
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  IdType Identifier Type.
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_id_type.
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Identifier Reference Identifier.
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 0x7FF, if IdType is FDCAN_STANDARD_ID
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 0x1FFFFFFF, if IdType is FDCAN_EXTENDED_ID
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Payload Enable or disable the additional payload.
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_Reference_Message_Payload.
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored in case of time slaves.
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         If this parameter is set to FDCAN_TT_REF_MESSAGE_ADD_PAYLOAD, the
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         following elements are taken from Tx Buffer 0:
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - MessageMarker
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - TxEventFifoControl
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - DataLength
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - Data Bytes (payload):
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *             - bytes 2-8, for Level 1
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *             - bytes 5-8, for Level 0 and Level 2
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigReferenceMessage(FDCAN_HandleTypeDef *hfdcan, uint32_t IdType,
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t Identifier, uint32_t Payload)
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5790              		.loc 1 3681 1
 5791              		.cfi_startproc
 5792              		@ args = 0, pretend = 0, frame = 16
 5793              		@ frame_needed = 1, uses_anonymous_args = 0
 5794              		@ link register save eliminated.
 5795 0000 80B4     		push	{r7}
 5796              	.LCFI305:
 5797              		.cfi_def_cfa_offset 4
 5798              		.cfi_offset 7, -4
 5799 0002 85B0     		sub	sp, sp, #20
 5800              	.LCFI306:
 5801              		.cfi_def_cfa_offset 24
 5802 0004 00AF     		add	r7, sp, #0
 5803              	.LCFI307:
 5804              		.cfi_def_cfa_register 7
 5805 0006 F860     		str	r0, [r7, #12]
 5806 0008 B960     		str	r1, [r7, #8]
 5807 000a 7A60     		str	r2, [r7, #4]
 5808 000c 3B60     		str	r3, [r7]
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(IdType));
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (IdType == FDCAN_STANDARD_ID)
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Identifier, 0x7FFU));
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 186


3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* IdType == FDCAN_EXTENDED_ID */
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Identifier, 0x1FFFFFFFU));
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REFERENCE_MESSAGE_PAYLOAD(Payload));
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5809              		.loc 1 3695 13
 5810 000e FB68     		ldr	r3, [r7, #12]
 5811 0010 93F89830 		ldrb	r3, [r3, #152]
 5812 0014 DBB2     		uxtb	r3, r3
 5813              		.loc 1 3695 6
 5814 0016 012B     		cmp	r3, #1
 5815 0018 23D1     		bne	.L258
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure reference message identifier type, identifier and payload */
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (IdType == FDCAN_EXTENDED_ID)
 5816              		.loc 1 3698 8
 5817 001a BB68     		ldr	r3, [r7, #8]
 5818 001c B3F1804F 		cmp	r3, #1073741824
 5819 0020 0ED1     		bne	.L259
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTRMC, (FDCAN_TTRMC_RID | FDCAN_TTRMC_XTD | FDCAN_TTRMC_RMPS),
 5820              		.loc 1 3700 7
 5821 0022 FB68     		ldr	r3, [r7, #12]
 5822 0024 5B68     		ldr	r3, [r3, #4]
 5823 0026 5B68     		ldr	r3, [r3, #4]
 5824 0028 03F00051 		and	r1, r3, #536870912
 5825 002c 3A68     		ldr	r2, [r7]
 5826 002e BB68     		ldr	r3, [r7, #8]
 5827 0030 1A43     		orrs	r2, r2, r3
 5828 0032 7B68     		ldr	r3, [r7, #4]
 5829 0034 1A43     		orrs	r2, r2, r3
 5830 0036 FB68     		ldr	r3, [r7, #12]
 5831 0038 5B68     		ldr	r3, [r3, #4]
 5832 003a 0A43     		orrs	r2, r2, r1
 5833 003c 5A60     		str	r2, [r3, #4]
 5834 003e 0EE0     		b	.L260
 5835              	.L259:
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (Payload | IdType | Identifier));
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* IdType == FDCAN_STANDARD_ID */
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTRMC, (FDCAN_TTRMC_RID | FDCAN_TTRMC_XTD | FDCAN_TTRMC_RMPS),
 5836              		.loc 1 3705 7
 5837 0040 FB68     		ldr	r3, [r7, #12]
 5838 0042 5B68     		ldr	r3, [r3, #4]
 5839 0044 5B68     		ldr	r3, [r3, #4]
 5840 0046 03F00051 		and	r1, r3, #536870912
 5841 004a 3A68     		ldr	r2, [r7]
 5842 004c BB68     		ldr	r3, [r7, #8]
 5843 004e 1A43     		orrs	r2, r2, r3
 5844 0050 7B68     		ldr	r3, [r7, #4]
 5845 0052 9B04     		lsls	r3, r3, #18
 5846 0054 1A43     		orrs	r2, r2, r3
 5847 0056 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 187


 5848 0058 5B68     		ldr	r3, [r3, #4]
 5849 005a 0A43     		orrs	r2, r2, r1
 5850 005c 5A60     		str	r2, [r3, #4]
 5851              	.L260:
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (Payload | IdType | (Identifier << 18)));
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5852              		.loc 1 3710 12
 5853 005e 0023     		movs	r3, #0
 5854 0060 08E0     		b	.L261
 5855              	.L258:
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5856              		.loc 1 3715 11
 5857 0062 FB68     		ldr	r3, [r7, #12]
 5858 0064 D3F89C30 		ldr	r3, [r3, #156]
 5859              		.loc 1 3715 23
 5860 0068 43F00402 		orr	r2, r3, #4
 5861 006c FB68     		ldr	r3, [r7, #12]
 5862 006e C3F89C20 		str	r2, [r3, #156]
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5863              		.loc 1 3717 12
 5864 0072 0123     		movs	r3, #1
 5865              	.L261:
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5866              		.loc 1 3719 1
 5867 0074 1846     		mov	r0, r3
 5868 0076 1437     		adds	r7, r7, #20
 5869              	.LCFI308:
 5870              		.cfi_def_cfa_offset 4
 5871 0078 BD46     		mov	sp, r7
 5872              	.LCFI309:
 5873              		.cfi_def_cfa_register 13
 5874              		@ sp needed
 5875 007a 5DF8047B 		ldr	r7, [sp], #4
 5876              	.LCFI310:
 5877              		.cfi_restore 7
 5878              		.cfi_def_cfa_offset 0
 5879 007e 7047     		bx	lr
 5880              		.cfi_endproc
 5881              	.LFE196:
 5883              		.section	.text.HAL_FDCAN_TT_ConfigTrigger,"ax",%progbits
 5884              		.align	1
 5885              		.global	HAL_FDCAN_TT_ConfigTrigger
 5886              		.syntax unified
 5887              		.thumb
 5888              		.thumb_func
 5890              	HAL_FDCAN_TT_ConfigTrigger:
 5891              	.LFB197:
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 188


3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN trigger according to the specified
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_TriggerTypeDef structure.
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sTriggerConfig pointer to an FDCAN_TriggerTypeDef structure that
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the trigger configuration information
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigTrigger(FDCAN_HandleTypeDef *hfdcan, const FDCAN_TriggerTypeDe
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5892              		.loc 1 3731 1
 5893              		.cfi_startproc
 5894              		@ args = 0, pretend = 0, frame = 40
 5895              		@ frame_needed = 1, uses_anonymous_args = 0
 5896              		@ link register save eliminated.
 5897 0000 80B4     		push	{r7}
 5898              	.LCFI311:
 5899              		.cfi_def_cfa_offset 4
 5900              		.cfi_offset 7, -4
 5901 0002 8BB0     		sub	sp, sp, #44
 5902              	.LCFI312:
 5903              		.cfi_def_cfa_offset 48
 5904 0004 00AF     		add	r7, sp, #0
 5905              	.LCFI313:
 5906              		.cfi_def_cfa_register 7
 5907 0006 7860     		str	r0, [r7, #4]
 5908 0008 3960     		str	r1, [r7]
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CycleCode;
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t MessageNumber;
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TriggerElementW1;
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TriggerElementW2;
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TriggerAddress;
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->TriggerIndex, 63U));
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->TimeMark, 0xFFFFU));
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REPEAT_FACTOR(sTriggerConfig->RepeatFactor));
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sTriggerConfig->RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE)
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->StartCycle, (sTriggerConfig->RepeatFactor - 1U)
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TM_EVENT_INTERNAL(sTriggerConfig->TmEventInt));
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TM_EVENT_EXTERNAL(sTriggerConfig->TmEventExt));
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TRIGGER_TYPE(sTriggerConfig->TriggerType));
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(sTriggerConfig->FilterType));
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_SINGLE) ||
 5909              		.loc 1 3751 22
 5910 000a 3B68     		ldr	r3, [r7]
 5911 000c 9B69     		ldr	r3, [r3, #24]
 5912              		.loc 1 3751 6
 5913 000e 022B     		cmp	r3, #2
 5914 0010 06D0     		beq	.L263
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 5915              		.loc 1 3752 22
 5916 0012 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 189


 5917 0014 9B69     		ldr	r3, [r3, #24]
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 5918              		.loc 1 3751 67 discriminator 1
 5919 0016 032B     		cmp	r3, #3
 5920 0018 02D0     		beq	.L263
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 5921              		.loc 1 3753 22
 5922 001a 3B68     		ldr	r3, [r7]
 5923 001c 9B69     		ldr	r3, [r3, #24]
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 5924              		.loc 1 3752 71
 5925 001e 042B     		cmp	r3, #4
 5926              	.L263:
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_MERGED))
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TX_LOCATION(sTriggerConfig->TxBufferIndex));
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sTriggerConfig->TriggerType == FDCAN_TT_RX_TRIGGER)
 5927              		.loc 1 3758 21
 5928 0020 3B68     		ldr	r3, [r7]
 5929 0022 9B69     		ldr	r3, [r3, #24]
 5930              		.loc 1 3758 6
 5931 0024 082B     		cmp	r3, #8
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->FilterType == FDCAN_STANDARD_ID)
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->FilterIndex, 63U));
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sTriggerConfig->FilterType == FDCAN_EXTENDED_ID */
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->FilterIndex, 127U));
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5932              		.loc 1 3770 13
 5933 0026 7B68     		ldr	r3, [r7, #4]
 5934 0028 93F89830 		ldrb	r3, [r3, #152]
 5935 002c DBB2     		uxtb	r3, r3
 5936              		.loc 1 3770 6
 5937 002e 012B     		cmp	r3, #1
 5938 0030 64D1     		bne	.L265
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate cycle code */
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->RepeatFactor == FDCAN_TT_REPEAT_EVERY_CYCLE)
 5939              		.loc 1 3773 23
 5940 0032 3B68     		ldr	r3, [r7]
 5941 0034 9B68     		ldr	r3, [r3, #8]
 5942              		.loc 1 3773 8
 5943 0036 002B     		cmp	r3, #0
 5944 0038 02D1     		bne	.L266
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CycleCode = FDCAN_TT_REPEAT_EVERY_CYCLE;
 5945              		.loc 1 3775 17
 5946 003a 0023     		movs	r3, #0
 5947 003c 7B62     		str	r3, [r7, #36]
 5948 003e 05E0     		b	.L267
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 190


 5949              	.L266:
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sTriggerConfig->RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE */
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CycleCode = sTriggerConfig->RepeatFactor + sTriggerConfig->StartCycle;
 5950              		.loc 1 3779 33
 5951 0040 3B68     		ldr	r3, [r7]
 5952 0042 9A68     		ldr	r2, [r3, #8]
 5953              		.loc 1 3779 64
 5954 0044 3B68     		ldr	r3, [r7]
 5955 0046 DB68     		ldr	r3, [r3, #12]
 5956              		.loc 1 3779 17
 5957 0048 1344     		add	r3, r3, r2
 5958 004a 7B62     		str	r3, [r7, #36]
 5959              	.L267:
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Build first word of trigger element */
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerElementW1 = ((sTriggerConfig->TimeMark << 16) | \
 5960              		.loc 1 3783 40
 5961 004c 3B68     		ldr	r3, [r7]
 5962 004e 5B68     		ldr	r3, [r3, #4]
 5963              		.loc 1 3783 51
 5964 0050 1A04     		lsls	r2, r3, #16
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 5965              		.loc 1 3784 36
 5966 0052 7B6A     		ldr	r3, [r7, #36]
 5967 0054 1B02     		lsls	r3, r3, #8
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 5968              		.loc 1 3783 58
 5969 0056 1A43     		orrs	r2, r2, r3
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventInt       | \
 5970              		.loc 1 3785 39
 5971 0058 3B68     		ldr	r3, [r7]
 5972 005a 1B69     		ldr	r3, [r3, #16]
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 5973              		.loc 1 3784 58
 5974 005c 1A43     		orrs	r2, r2, r3
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventExt       | \
 5975              		.loc 1 3786 39
 5976 005e 3B68     		ldr	r3, [r7]
 5977 0060 5B69     		ldr	r3, [r3, #20]
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventInt       | \
 5978              		.loc 1 3785 58
 5979 0062 1A43     		orrs	r2, r2, r3
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TriggerType);
 5980              		.loc 1 3787 39
 5981 0064 3B68     		ldr	r3, [r7]
 5982 0066 9B69     		ldr	r3, [r3, #24]
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 5983              		.loc 1 3783 22
 5984 0068 1343     		orrs	r3, r3, r2
 5985 006a FB61     		str	r3, [r7, #28]
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select message number depending on trigger type (transmission or reception) */
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->TriggerType == FDCAN_TT_RX_TRIGGER)
 5986              		.loc 1 3790 23
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 191


 5987 006c 3B68     		ldr	r3, [r7]
 5988 006e 9B69     		ldr	r3, [r3, #24]
 5989              		.loc 1 3790 8
 5990 0070 082B     		cmp	r3, #8
 5991 0072 03D1     		bne	.L268
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = sTriggerConfig->FilterIndex;
 5992              		.loc 1 3792 21
 5993 0074 3B68     		ldr	r3, [r7]
 5994 0076 5B6A     		ldr	r3, [r3, #36]
 5995 0078 3B62     		str	r3, [r7, #32]
 5996 007a 25E0     		b	.L269
 5997              	.L268:
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_SINGLE) ||
 5998              		.loc 1 3794 29
 5999 007c 3B68     		ldr	r3, [r7]
 6000 007e 9B69     		ldr	r3, [r3, #24]
 6001              		.loc 1 3794 13
 6002 0080 022B     		cmp	r3, #2
 6003 0082 0BD0     		beq	.L270
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 6004              		.loc 1 3795 29
 6005 0084 3B68     		ldr	r3, [r7]
 6006 0086 9B69     		ldr	r3, [r3, #24]
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 6007              		.loc 1 3794 74 discriminator 1
 6008 0088 032B     		cmp	r3, #3
 6009 008a 07D0     		beq	.L270
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 6010              		.loc 1 3796 29
 6011 008c 3B68     		ldr	r3, [r7]
 6012 008e 9B69     		ldr	r3, [r3, #24]
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 6013              		.loc 1 3795 78
 6014 0090 042B     		cmp	r3, #4
 6015 0092 03D0     		beq	.L270
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_MERGED))
 6016              		.loc 1 3797 29
 6017 0094 3B68     		ldr	r3, [r7]
 6018 0096 9B69     		ldr	r3, [r3, #24]
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 6019              		.loc 1 3796 79
 6020 0098 052B     		cmp	r3, #5
 6021 009a 13D1     		bne	.L271
 6022              	.L270:
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = POSITION_VAL(sTriggerConfig->TxBufferIndex);
 6023              		.loc 1 3799 23
 6024 009c 3B68     		ldr	r3, [r7]
 6025 009e 1B6A     		ldr	r3, [r3, #32]
 6026 00a0 FB60     		str	r3, [r7, #12]
 6027              	.LBB22:
 6028              	.LBB23:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6029              		.loc 2 1055 4
 6030 00a2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 192


 6031              		.syntax unified
 6032              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6033 00a4 93FAA3F3 		rbit r3, r3
 6034              	@ 0 "" 2
 6035              		.thumb
 6036              		.syntax unified
 6037 00a8 BB60     		str	r3, [r7, #8]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6038              		.loc 2 1068 10
 6039 00aa BB68     		ldr	r3, [r7, #8]
 6040 00ac 3B61     		str	r3, [r7, #16]
 6041              	.LBE23:
 6042              	.LBE22:
 6043              	.LBB24:
 6044              	.LBB25:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6045              		.loc 2 1089 6
 6046 00ae 3B69     		ldr	r3, [r7, #16]
 6047 00b0 002B     		cmp	r3, #0
 6048 00b2 01D1     		bne	.L273
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6049              		.loc 2 1091 12
 6050 00b4 2023     		movs	r3, #32
 6051 00b6 03E0     		b	.L274
 6052              	.L273:
 6053              		.loc 2 1093 10
 6054 00b8 3B69     		ldr	r3, [r7, #16]
 6055 00ba B3FA83F3 		clz	r3, r3
 6056              		.loc 2 1093 10 is_stmt 0 discriminator 1
 6057 00be DBB2     		uxtb	r3, r3
 6058              	.L274:
 6059              	.LBE25:
 6060              	.LBE24:
 6061              		.loc 1 3799 21 is_stmt 1 discriminator 2
 6062 00c0 3B62     		str	r3, [r7, #32]
 6063              		.loc 1 3799 21 is_stmt 0
 6064 00c2 01E0     		b	.L269
 6065              	.L271:
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = 0U;
 6066              		.loc 1 3803 21 is_stmt 1
 6067 00c4 0023     		movs	r3, #0
 6068 00c6 3B62     		str	r3, [r7, #32]
 6069              	.L269:
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Build second word of trigger element */
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerElementW2 = ((sTriggerConfig->FilterType >> 7) | (MessageNumber << 16));
 6070              		.loc 1 3807 40
 6071 00c8 3B68     		ldr	r3, [r7]
 6072 00ca DB69     		ldr	r3, [r3, #28]
 6073              		.loc 1 3807 53
 6074 00cc DA09     		lsrs	r2, r3, #7
 6075              		.loc 1 3807 76
 6076 00ce 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 193


 6077 00d0 1B04     		lsls	r3, r3, #16
 6078              		.loc 1 3807 22
 6079 00d2 1343     		orrs	r3, r3, r2
 6080 00d4 BB61     		str	r3, [r7, #24]
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate trigger address */
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerAddress = (uint32_t *)(hfdcan->msgRam.TTMemorySA + (sTriggerConfig->TriggerIndex * 4U * 
 6081              		.loc 1 3810 49
 6082 00d6 7B68     		ldr	r3, [r7, #4]
 6083 00d8 D3F88C20 		ldr	r2, [r3, #140]
 6084              		.loc 1 3810 78
 6085 00dc 3B68     		ldr	r3, [r7]
 6086 00de 1B68     		ldr	r3, [r3]
 6087              		.loc 1 3810 98
 6088 00e0 DB00     		lsls	r3, r3, #3
 6089              		.loc 1 3810 61
 6090 00e2 1344     		add	r3, r3, r2
 6091              		.loc 1 3810 20
 6092 00e4 7B61     		str	r3, [r7, #20]
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Write trigger element to the message RAM */
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TriggerAddress = TriggerElementW1;
 6093              		.loc 1 3813 21
 6094 00e6 7B69     		ldr	r3, [r7, #20]
 6095 00e8 FA69     		ldr	r2, [r7, #28]
 6096 00ea 1A60     		str	r2, [r3]
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerAddress++;
 6097              		.loc 1 3814 19
 6098 00ec 7B69     		ldr	r3, [r7, #20]
 6099 00ee 0433     		adds	r3, r3, #4
 6100 00f0 7B61     		str	r3, [r7, #20]
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TriggerAddress = TriggerElementW2;
 6101              		.loc 1 3815 21
 6102 00f2 7B69     		ldr	r3, [r7, #20]
 6103 00f4 BA69     		ldr	r2, [r7, #24]
 6104 00f6 1A60     		str	r2, [r3]
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6105              		.loc 1 3818 12
 6106 00f8 0023     		movs	r3, #0
 6107 00fa 08E0     		b	.L275
 6108              	.L265:
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 6109              		.loc 1 3823 11
 6110 00fc 7B68     		ldr	r3, [r7, #4]
 6111 00fe D3F89C30 		ldr	r3, [r3, #156]
 6112              		.loc 1 3823 23
 6113 0102 43F00402 		orr	r2, r3, #4
 6114 0106 7B68     		ldr	r3, [r7, #4]
 6115 0108 C3F89C20 		str	r2, [r3, #156]
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 194


 6116              		.loc 1 3825 12
 6117 010c 0123     		movs	r3, #1
 6118              	.L275:
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6119              		.loc 1 3827 1
 6120 010e 1846     		mov	r0, r3
 6121 0110 2C37     		adds	r7, r7, #44
 6122              	.LCFI314:
 6123              		.cfi_def_cfa_offset 4
 6124 0112 BD46     		mov	sp, r7
 6125              	.LCFI315:
 6126              		.cfi_def_cfa_register 13
 6127              		@ sp needed
 6128 0114 5DF8047B 		ldr	r7, [sp], #4
 6129              	.LCFI316:
 6130              		.cfi_restore 7
 6131              		.cfi_def_cfa_offset 0
 6132 0118 7047     		bx	lr
 6133              		.cfi_endproc
 6134              	.LFE197:
 6136              		.section	.text.HAL_FDCAN_TT_SetGlobalTime,"ax",%progbits
 6137              		.align	1
 6138              		.global	HAL_FDCAN_TT_SetGlobalTime
 6139              		.syntax unified
 6140              		.thumb
 6141              		.thumb_func
 6143              	HAL_FDCAN_TT_SetGlobalTime:
 6144              	.LFB198:
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Schedule global time adjustment for the next reference message.
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimePreset time preset value.
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0x0000 and 0x7FFF, Next_Master_Ref_Mark = Current_Master_Ref_Mark + TimePreset
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           or
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0x8001 and 0xFFFF, Next_Master_Ref_Mark = Current_Master_Ref_Mark - (0x10000 - Time
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetGlobalTime(FDCAN_HandleTypeDef *hfdcan, uint32_t TimePreset)
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6145              		.loc 1 3841 1
 6146              		.cfi_startproc
 6147              		@ args = 0, pretend = 0, frame = 16
 6148              		@ frame_needed = 1, uses_anonymous_args = 0
 6149              		@ link register save eliminated.
 6150 0000 80B4     		push	{r7}
 6151              	.LCFI317:
 6152              		.cfi_def_cfa_offset 4
 6153              		.cfi_offset 7, -4
 6154 0002 85B0     		sub	sp, sp, #20
 6155              	.LCFI318:
 6156              		.cfi_def_cfa_offset 24
 6157 0004 00AF     		add	r7, sp, #0
 6158              	.LCFI319:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 195


 6159              		.cfi_def_cfa_register 7
 6160 0006 7860     		str	r0, [r7, #4]
 6161 0008 3960     		str	r1, [r7]
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6162              		.loc 1 3842 12
 6163 000a 0023     		movs	r3, #0
 6164 000c FB60     		str	r3, [r7, #12]
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6165              		.loc 1 3843 26
 6166 000e 7B68     		ldr	r3, [r7, #4]
 6167 0010 93F89830 		ldrb	r3, [r3, #152]
 6168 0014 FB72     		strb	r3, [r7, #11]
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TIME_PRESET(TimePreset));
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6169              		.loc 1 3849 6
 6170 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6171 0018 012B     		cmp	r3, #1
 6172 001a 02D0     		beq	.L277
 6173              		.loc 1 3849 40 discriminator 1
 6174 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6175 001e 022B     		cmp	r3, #2
 6176 0020 53D1     		bne	.L278
 6177              	.L277:
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the external clock synchronization is enabled */
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_EECS) != FDCAN_TTOCF_EECS)
 6178              		.loc 1 3852 16
 6179 0022 7B68     		ldr	r3, [r7, #4]
 6180 0024 5B68     		ldr	r3, [r3, #4]
 6181              		.loc 1 3852 23
 6182 0026 9B68     		ldr	r3, [r3, #8]
 6183              		.loc 1 3852 31
 6184 0028 03F40043 		and	r3, r3, #32768
 6185              		.loc 1 3852 8
 6186 002c B3F5004F 		cmp	r3, #32768
 6187 0030 09D0     		beq	.L279
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 6188              		.loc 1 3855 13
 6189 0032 7B68     		ldr	r3, [r7, #4]
 6190 0034 D3F89C30 		ldr	r3, [r3, #156]
 6191              		.loc 1 3855 25
 6192 0038 43F01002 		orr	r2, r3, #16
 6193 003c 7B68     		ldr	r3, [r7, #4]
 6194 003e C3F89C20 		str	r2, [r3, #156]
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6195              		.loc 1 3857 14
 6196 0042 0123     		movs	r3, #1
 6197 0044 4AE0     		b	.L280
 6198              	.L279:
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 196


3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no global time preset is pending */
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOST & FDCAN_TTOST_WGTD) == FDCAN_TTOST_WGTD)
 6199              		.loc 1 3861 16
 6200 0046 7B68     		ldr	r3, [r7, #4]
 6201 0048 5B68     		ldr	r3, [r3, #4]
 6202              		.loc 1 3861 23
 6203 004a DB6A     		ldr	r3, [r3, #44]
 6204              		.loc 1 3861 31
 6205 004c 03F48003 		and	r3, r3, #4194304
 6206              		.loc 1 3861 8
 6207 0050 B3F5800F 		cmp	r3, #4194304
 6208 0054 09D1     		bne	.L281
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 6209              		.loc 1 3864 13
 6210 0056 7B68     		ldr	r3, [r7, #4]
 6211 0058 D3F89C30 		ldr	r3, [r3, #156]
 6212              		.loc 1 3864 25
 6213 005c 43F04002 		orr	r2, r3, #64
 6214 0060 7B68     		ldr	r3, [r7, #4]
 6215 0062 C3F89C20 		str	r2, [r3, #156]
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6216              		.loc 1 3866 14
 6217 0066 0123     		movs	r3, #1
 6218 0068 38E0     		b	.L280
 6219              	.L281:
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure time preset */
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTGTP, FDCAN_TTGTP_TP, (TimePreset << FDCAN_TTGTP_TP_Pos));
 6220              		.loc 1 3870 5
 6221 006a 7B68     		ldr	r3, [r7, #4]
 6222 006c 5B68     		ldr	r3, [r3, #4]
 6223 006e 9A69     		ldr	r2, [r3, #24]
 6224 0070 1D4B     		ldr	r3, .L285
 6225 0072 1340     		ands	r3, r3, r2
 6226 0074 7A68     		ldr	r2, [r7, #4]
 6227 0076 5268     		ldr	r2, [r2, #4]
 6228 0078 3968     		ldr	r1, [r7]
 6229 007a 0B43     		orrs	r3, r3, r1
 6230 007c 9361     		str	r3, [r2, #24]
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6231              		.loc 1 3873 11
 6232 007e 13E0     		b	.L282
 6233              	.L284:
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 6234              		.loc 1 3876 10
 6235 0080 FB68     		ldr	r3, [r7, #12]
 6236 0082 322B     		cmp	r3, #50
 6237 0084 0DD9     		bls	.L283
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 197


3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6238              		.loc 1 3879 15
 6239 0086 7B68     		ldr	r3, [r7, #4]
 6240 0088 D3F89C30 		ldr	r3, [r3, #156]
 6241              		.loc 1 3879 27
 6242 008c 43F00102 		orr	r2, r3, #1
 6243 0090 7B68     		ldr	r3, [r7, #4]
 6244 0092 C3F89C20 		str	r2, [r3, #156]
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6245              		.loc 1 3882 23
 6246 0096 7B68     		ldr	r3, [r7, #4]
 6247 0098 0322     		movs	r2, #3
 6248 009a 83F89820 		strb	r2, [r3, #152]
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6249              		.loc 1 3884 16
 6250 009e 0123     		movs	r3, #1
 6251 00a0 1CE0     		b	.L280
 6252              	.L283:
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 6253              		.loc 1 3888 14
 6254 00a2 FB68     		ldr	r3, [r7, #12]
 6255 00a4 0133     		adds	r3, r3, #1
 6256 00a6 FB60     		str	r3, [r7, #12]
 6257              	.L282:
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6258              		.loc 1 3873 19
 6259 00a8 7B68     		ldr	r3, [r7, #4]
 6260 00aa 5B68     		ldr	r3, [r3, #4]
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6261              		.loc 1 3873 26
 6262 00ac 5B69     		ldr	r3, [r3, #20]
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6263              		.loc 1 3873 34
 6264 00ae 03F40043 		and	r3, r3, #32768
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6265              		.loc 1 3873 54
 6266 00b2 002B     		cmp	r3, #0
 6267 00b4 E4D1     		bne	.L284
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Schedule time preset to take effect by the next reference message */
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_SGT);
 6268              		.loc 1 3892 5
 6269 00b6 7B68     		ldr	r3, [r7, #4]
 6270 00b8 5B68     		ldr	r3, [r3, #4]
 6271 00ba 5A69     		ldr	r2, [r3, #20]
 6272 00bc 7B68     		ldr	r3, [r7, #4]
 6273 00be 5B68     		ldr	r3, [r3, #4]
 6274 00c0 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 198


 6275 00c4 5A61     		str	r2, [r3, #20]
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6276              		.loc 1 3895 12
 6277 00c6 0023     		movs	r3, #0
 6278 00c8 08E0     		b	.L280
 6279              	.L278:
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 6280              		.loc 1 3900 11
 6281 00ca 7B68     		ldr	r3, [r7, #4]
 6282 00cc D3F89C30 		ldr	r3, [r3, #156]
 6283              		.loc 1 3900 23
 6284 00d0 43F00202 		orr	r2, r3, #2
 6285 00d4 7B68     		ldr	r3, [r7, #4]
 6286 00d6 C3F89C20 		str	r2, [r3, #156]
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6287              		.loc 1 3902 12
 6288 00da 0123     		movs	r3, #1
 6289              	.L280:
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6290              		.loc 1 3904 1
 6291 00dc 1846     		mov	r0, r3
 6292 00de 1437     		adds	r7, r7, #20
 6293              	.LCFI320:
 6294              		.cfi_def_cfa_offset 4
 6295 00e0 BD46     		mov	sp, r7
 6296              	.LCFI321:
 6297              		.cfi_def_cfa_register 13
 6298              		@ sp needed
 6299 00e2 5DF8047B 		ldr	r7, [sp], #4
 6300              	.LCFI322:
 6301              		.cfi_restore 7
 6302              		.cfi_def_cfa_offset 0
 6303 00e6 7047     		bx	lr
 6304              	.L286:
 6305              		.align	2
 6306              	.L285:
 6307 00e8 0000FFFF 		.word	-65536
 6308              		.cfi_endproc
 6309              	.LFE198:
 6311              		.section	.text.HAL_FDCAN_TT_SetClockSynchronization,"ax",%progbits
 6312              		.align	1
 6313              		.global	HAL_FDCAN_TT_SetClockSynchronization
 6314              		.syntax unified
 6315              		.thumb
 6316              		.thumb_func
 6318              	HAL_FDCAN_TT_SetClockSynchronization:
 6319              	.LFB199:
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 199


3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Schedule TUR numerator update for the next reference message.
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NewTURNumerator new value of the TUR numerator.
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x10000 and 0x1FFFF.
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetClockSynchronization(FDCAN_HandleTypeDef *hfdcan, uint32_t NewTUR
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6320              		.loc 1 3915 1
 6321              		.cfi_startproc
 6322              		@ args = 0, pretend = 0, frame = 16
 6323              		@ frame_needed = 1, uses_anonymous_args = 0
 6324              		@ link register save eliminated.
 6325 0000 80B4     		push	{r7}
 6326              	.LCFI323:
 6327              		.cfi_def_cfa_offset 4
 6328              		.cfi_offset 7, -4
 6329 0002 85B0     		sub	sp, sp, #20
 6330              	.LCFI324:
 6331              		.cfi_def_cfa_offset 24
 6332 0004 00AF     		add	r7, sp, #0
 6333              	.LCFI325:
 6334              		.cfi_def_cfa_register 7
 6335 0006 7860     		str	r0, [r7, #4]
 6336 0008 3960     		str	r1, [r7]
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6337              		.loc 1 3916 12
 6338 000a 0023     		movs	r3, #0
 6339 000c FB60     		str	r3, [r7, #12]
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6340              		.loc 1 3917 26
 6341 000e 7B68     		ldr	r3, [r7, #4]
 6342 0010 93F89830 		ldrb	r3, [r3, #152]
 6343 0014 FB72     		strb	r3, [r7, #11]
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_NUMERATOR(NewTURNumerator));
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6344              		.loc 1 3923 6
 6345 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6346 0018 012B     		cmp	r3, #1
 6347 001a 02D0     		beq	.L288
 6348              		.loc 1 3923 40 discriminator 1
 6349 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6350 001e 022B     		cmp	r3, #2
 6351 0020 55D1     		bne	.L289
 6352              	.L288:
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the external clock synchronization is enabled */
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_EECS) != FDCAN_TTOCF_EECS)
 6353              		.loc 1 3926 16
 6354 0022 7B68     		ldr	r3, [r7, #4]
 6355 0024 5B68     		ldr	r3, [r3, #4]
 6356              		.loc 1 3926 23
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 200


 6357 0026 9B68     		ldr	r3, [r3, #8]
 6358              		.loc 1 3926 31
 6359 0028 03F40043 		and	r3, r3, #32768
 6360              		.loc 1 3926 8
 6361 002c B3F5004F 		cmp	r3, #32768
 6362 0030 09D0     		beq	.L290
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 6363              		.loc 1 3929 13
 6364 0032 7B68     		ldr	r3, [r7, #4]
 6365 0034 D3F89C30 		ldr	r3, [r3, #156]
 6366              		.loc 1 3929 25
 6367 0038 43F01002 		orr	r2, r3, #16
 6368 003c 7B68     		ldr	r3, [r7, #4]
 6369 003e C3F89C20 		str	r2, [r3, #156]
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6370              		.loc 1 3931 14
 6371 0042 0123     		movs	r3, #1
 6372 0044 4CE0     		b	.L291
 6373              	.L290:
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no external clock synchronization is pending */
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOST & FDCAN_TTOST_WECS) == FDCAN_TTOST_WECS)
 6374              		.loc 1 3935 16
 6375 0046 7B68     		ldr	r3, [r7, #4]
 6376 0048 5B68     		ldr	r3, [r3, #4]
 6377              		.loc 1 3935 23
 6378 004a DB6A     		ldr	r3, [r3, #44]
 6379              		.loc 1 3935 31
 6380 004c 03F08043 		and	r3, r3, #1073741824
 6381              		.loc 1 3935 8
 6382 0050 B3F1804F 		cmp	r3, #1073741824
 6383 0054 09D1     		bne	.L292
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 6384              		.loc 1 3938 13
 6385 0056 7B68     		ldr	r3, [r7, #4]
 6386 0058 D3F89C30 		ldr	r3, [r3, #156]
 6387              		.loc 1 3938 25
 6388 005c 43F04002 		orr	r2, r3, #64
 6389 0060 7B68     		ldr	r3, [r7, #4]
 6390 0062 C3F89C20 		str	r2, [r3, #156]
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6391              		.loc 1 3940 14
 6392 0066 0123     		movs	r3, #1
 6393 0068 3AE0     		b	.L291
 6394              	.L292:
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure new TUR numerator */
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TURCF, FDCAN_TURCF_NCL, (NewTURNumerator - 0x10000U));
 6395              		.loc 1 3944 5
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 201


 6396 006a 7B68     		ldr	r3, [r7, #4]
 6397 006c 5B68     		ldr	r3, [r3, #4]
 6398 006e 1A69     		ldr	r2, [r3, #16]
 6399 0070 1E4B     		ldr	r3, .L296
 6400 0072 1340     		ands	r3, r3, r2
 6401 0074 3A68     		ldr	r2, [r7]
 6402 0076 A2F58031 		sub	r1, r2, #65536
 6403 007a 7A68     		ldr	r2, [r7, #4]
 6404 007c 5268     		ldr	r2, [r2, #4]
 6405 007e 0B43     		orrs	r3, r3, r1
 6406 0080 1361     		str	r3, [r2, #16]
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6407              		.loc 1 3947 11
 6408 0082 13E0     		b	.L293
 6409              	.L295:
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 6410              		.loc 1 3950 10
 6411 0084 FB68     		ldr	r3, [r7, #12]
 6412 0086 322B     		cmp	r3, #50
 6413 0088 0DD9     		bls	.L294
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6414              		.loc 1 3953 15
 6415 008a 7B68     		ldr	r3, [r7, #4]
 6416 008c D3F89C30 		ldr	r3, [r3, #156]
 6417              		.loc 1 3953 27
 6418 0090 43F00102 		orr	r2, r3, #1
 6419 0094 7B68     		ldr	r3, [r7, #4]
 6420 0096 C3F89C20 		str	r2, [r3, #156]
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6421              		.loc 1 3956 23
 6422 009a 7B68     		ldr	r3, [r7, #4]
 6423 009c 0322     		movs	r2, #3
 6424 009e 83F89820 		strb	r2, [r3, #152]
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6425              		.loc 1 3958 16
 6426 00a2 0123     		movs	r3, #1
 6427 00a4 1CE0     		b	.L291
 6428              	.L294:
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 6429              		.loc 1 3962 14
 6430 00a6 FB68     		ldr	r3, [r7, #12]
 6431 00a8 0133     		adds	r3, r3, #1
 6432 00aa FB60     		str	r3, [r7, #12]
 6433              	.L293:
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 202


 6434              		.loc 1 3947 19
 6435 00ac 7B68     		ldr	r3, [r7, #4]
 6436 00ae 5B68     		ldr	r3, [r3, #4]
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6437              		.loc 1 3947 26
 6438 00b0 5B69     		ldr	r3, [r3, #20]
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6439              		.loc 1 3947 34
 6440 00b2 03F40043 		and	r3, r3, #32768
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6441              		.loc 1 3947 54
 6442 00b6 002B     		cmp	r3, #0
 6443 00b8 E4D1     		bne	.L295
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Schedule TUR numerator update by the next reference message */
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ECS);
 6444              		.loc 1 3966 5
 6445 00ba 7B68     		ldr	r3, [r7, #4]
 6446 00bc 5B68     		ldr	r3, [r3, #4]
 6447 00be 5A69     		ldr	r2, [r3, #20]
 6448 00c0 7B68     		ldr	r3, [r7, #4]
 6449 00c2 5B68     		ldr	r3, [r3, #4]
 6450 00c4 42F00202 		orr	r2, r2, #2
 6451 00c8 5A61     		str	r2, [r3, #20]
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6452              		.loc 1 3969 12
 6453 00ca 0023     		movs	r3, #0
 6454 00cc 08E0     		b	.L291
 6455              	.L289:
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 6456              		.loc 1 3974 11
 6457 00ce 7B68     		ldr	r3, [r7, #4]
 6458 00d0 D3F89C30 		ldr	r3, [r3, #156]
 6459              		.loc 1 3974 23
 6460 00d4 43F00202 		orr	r2, r3, #2
 6461 00d8 7B68     		ldr	r3, [r7, #4]
 6462 00da C3F89C20 		str	r2, [r3, #156]
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6463              		.loc 1 3976 12
 6464 00de 0123     		movs	r3, #1
 6465              	.L291:
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6466              		.loc 1 3978 1
 6467 00e0 1846     		mov	r0, r3
 6468 00e2 1437     		adds	r7, r7, #20
 6469              	.LCFI326:
 6470              		.cfi_def_cfa_offset 4
 6471 00e4 BD46     		mov	sp, r7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 203


 6472              	.LCFI327:
 6473              		.cfi_def_cfa_register 13
 6474              		@ sp needed
 6475 00e6 5DF8047B 		ldr	r7, [sp], #4
 6476              	.LCFI328:
 6477              		.cfi_restore 7
 6478              		.cfi_def_cfa_offset 0
 6479 00ea 7047     		bx	lr
 6480              	.L297:
 6481              		.align	2
 6482              	.L296:
 6483 00ec 0000FFFF 		.word	-65536
 6484              		.cfi_endproc
 6485              	.LFE199:
 6487              		.section	.text.HAL_FDCAN_TT_ConfigStopWatch,"ax",%progbits
 6488              		.align	1
 6489              		.global	HAL_FDCAN_TT_ConfigStopWatch
 6490              		.syntax unified
 6491              		.thumb
 6492              		.thumb_func
 6494              	HAL_FDCAN_TT_ConfigStopWatch:
 6495              	.LFB200:
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure stop watch source and polarity.
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Source stop watch source.
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_stop_watch_source.
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Polarity stop watch polarity.
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_stop_watch_polarity.
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigStopWatch(FDCAN_HandleTypeDef *hfdcan, uint32_t Source, uint32
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6496              		.loc 1 3991 1
 6497              		.cfi_startproc
 6498              		@ args = 0, pretend = 0, frame = 24
 6499              		@ frame_needed = 1, uses_anonymous_args = 0
 6500              		@ link register save eliminated.
 6501 0000 80B4     		push	{r7}
 6502              	.LCFI329:
 6503              		.cfi_def_cfa_offset 4
 6504              		.cfi_offset 7, -4
 6505 0002 87B0     		sub	sp, sp, #28
 6506              	.LCFI330:
 6507              		.cfi_def_cfa_offset 32
 6508 0004 00AF     		add	r7, sp, #0
 6509              	.LCFI331:
 6510              		.cfi_def_cfa_register 7
 6511 0006 F860     		str	r0, [r7, #12]
 6512 0008 B960     		str	r1, [r7, #8]
 6513 000a 7A60     		str	r2, [r7, #4]
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6514              		.loc 1 3992 12
 6515 000c 0023     		movs	r3, #0
 6516 000e 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 204


3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6517              		.loc 1 3993 26
 6518 0010 FB68     		ldr	r3, [r7, #12]
 6519 0012 93F89830 		ldrb	r3, [r3, #152]
 6520 0016 FB74     		strb	r3, [r7, #19]
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_SOURCE(Source));
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_POLARITY(Polarity));
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6521              		.loc 1 4000 6
 6522 0018 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6523 001a 012B     		cmp	r3, #1
 6524 001c 17D0     		beq	.L301
 6525              		.loc 1 4000 40 discriminator 1
 6526 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6527 0020 022B     		cmp	r3, #2
 6528 0022 29D1     		bne	.L300
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6529              		.loc 1 4003 11
 6530 0024 13E0     		b	.L301
 6531              	.L304:
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 6532              		.loc 1 4006 10
 6533 0026 7B69     		ldr	r3, [r7, #20]
 6534 0028 322B     		cmp	r3, #50
 6535 002a 0DD9     		bls	.L302
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6536              		.loc 1 4009 15
 6537 002c FB68     		ldr	r3, [r7, #12]
 6538 002e D3F89C30 		ldr	r3, [r3, #156]
 6539              		.loc 1 4009 27
 6540 0032 43F00102 		orr	r2, r3, #1
 6541 0036 FB68     		ldr	r3, [r7, #12]
 6542 0038 C3F89C20 		str	r2, [r3, #156]
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6543              		.loc 1 4012 23
 6544 003c FB68     		ldr	r3, [r7, #12]
 6545 003e 0322     		movs	r2, #3
 6546 0040 83F89820 		strb	r2, [r3, #152]
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6547              		.loc 1 4014 16
 6548 0044 0123     		movs	r3, #1
 6549 0046 20E0     		b	.L303
 6550              	.L302:
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 205


4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 6551              		.loc 1 4018 14
 6552 0048 7B69     		ldr	r3, [r7, #20]
 6553 004a 0133     		adds	r3, r3, #1
 6554 004c 7B61     		str	r3, [r7, #20]
 6555              	.L301:
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6556              		.loc 1 4003 19
 6557 004e FB68     		ldr	r3, [r7, #12]
 6558 0050 5B68     		ldr	r3, [r3, #4]
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6559              		.loc 1 4003 26
 6560 0052 5B69     		ldr	r3, [r3, #20]
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6561              		.loc 1 4003 34
 6562 0054 03F40043 		and	r3, r3, #32768
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6563              		.loc 1 4003 54
 6564 0058 002B     		cmp	r3, #0
 6565 005a E4D1     		bne	.L304
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select stop watch source and polarity */
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTOCN, (FDCAN_TTOCN_SWS | FDCAN_TTOCN_SWP), (Source | Polarity));
 6566              		.loc 1 4022 5
 6567 005c FB68     		ldr	r3, [r7, #12]
 6568 005e 5B68     		ldr	r3, [r3, #4]
 6569 0060 5B69     		ldr	r3, [r3, #20]
 6570 0062 23F01C01 		bic	r1, r3, #28
 6571 0066 BA68     		ldr	r2, [r7, #8]
 6572 0068 7B68     		ldr	r3, [r7, #4]
 6573 006a 1A43     		orrs	r2, r2, r3
 6574 006c FB68     		ldr	r3, [r7, #12]
 6575 006e 5B68     		ldr	r3, [r3, #4]
 6576 0070 0A43     		orrs	r2, r2, r1
 6577 0072 5A61     		str	r2, [r3, #20]
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6578              		.loc 1 4025 12
 6579 0074 0023     		movs	r3, #0
 6580 0076 08E0     		b	.L303
 6581              	.L300:
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 6582              		.loc 1 4030 11
 6583 0078 FB68     		ldr	r3, [r7, #12]
 6584 007a D3F89C30 		ldr	r3, [r3, #156]
 6585              		.loc 1 4030 23
 6586 007e 43F00202 		orr	r2, r3, #2
 6587 0082 FB68     		ldr	r3, [r7, #12]
 6588 0084 C3F89C20 		str	r2, [r3, #156]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 206


4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6589              		.loc 1 4032 12
 6590 0088 0123     		movs	r3, #1
 6591              	.L303:
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6592              		.loc 1 4034 1
 6593 008a 1846     		mov	r0, r3
 6594 008c 1C37     		adds	r7, r7, #28
 6595              	.LCFI332:
 6596              		.cfi_def_cfa_offset 4
 6597 008e BD46     		mov	sp, r7
 6598              	.LCFI333:
 6599              		.cfi_def_cfa_register 13
 6600              		@ sp needed
 6601 0090 5DF8047B 		ldr	r7, [sp], #4
 6602              	.LCFI334:
 6603              		.cfi_restore 7
 6604              		.cfi_def_cfa_offset 0
 6605 0094 7047     		bx	lr
 6606              		.cfi_endproc
 6607              	.LFE200:
 6609              		.section	.text.HAL_FDCAN_TT_ConfigRegisterTimeMark,"ax",%progbits
 6610              		.align	1
 6611              		.global	HAL_FDCAN_TT_ConfigRegisterTimeMark
 6612              		.syntax unified
 6613              		.thumb
 6614              		.thumb_func
 6616              	HAL_FDCAN_TT_ConfigRegisterTimeMark:
 6617              	.LFB201:
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure register time mark pulse generation.
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeMarkSource time mark source.
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_time_mark_source.
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeMarkValue time mark value (reference).
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0xFFFF.
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RepeatFactor repeat factor of the cycle for which the time mark is valid.
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_Repeat_Factor.
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  StartCycle index of the first cycle in which the time mark becomes valid.
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored if RepeatFactor is set to FDCAN_TT_REPEAT_EVERY_CYCLE.
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and RepeatFactor.
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigRegisterTimeMark(FDCAN_HandleTypeDef *hfdcan,
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t TimeMarkSource, uint32_t TimeMarkVal
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t RepeatFactor, uint32_t StartCycle)
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6618              		.loc 1 4054 1
 6619              		.cfi_startproc
 6620              		@ args = 4, pretend = 0, frame = 32
 6621              		@ frame_needed = 1, uses_anonymous_args = 0
 6622              		@ link register save eliminated.
 6623 0000 80B4     		push	{r7}
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 207


 6624              	.LCFI335:
 6625              		.cfi_def_cfa_offset 4
 6626              		.cfi_offset 7, -4
 6627 0002 89B0     		sub	sp, sp, #36
 6628              	.LCFI336:
 6629              		.cfi_def_cfa_offset 40
 6630 0004 00AF     		add	r7, sp, #0
 6631              	.LCFI337:
 6632              		.cfi_def_cfa_register 7
 6633 0006 F860     		str	r0, [r7, #12]
 6634 0008 B960     		str	r1, [r7, #8]
 6635 000a 7A60     		str	r2, [r7, #4]
 6636 000c 3B60     		str	r3, [r7]
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6637              		.loc 1 4055 12
 6638 000e 0023     		movs	r3, #0
 6639 0010 FB61     		str	r3, [r7, #28]
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CycleCode;
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6640              		.loc 1 4057 26
 6641 0012 FB68     		ldr	r3, [r7, #12]
 6642 0014 93F89830 		ldrb	r3, [r3, #152]
 6643 0018 FB75     		strb	r3, [r7, #23]
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REGISTER_TIME_MARK_SOURCE(TimeMarkSource));
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TimeMarkValue, 0xFFFFU));
4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REPEAT_FACTOR(RepeatFactor));
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE)
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(StartCycle, (RepeatFactor - 1U)));
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6644              		.loc 1 4069 6
 6645 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6646 001c 012B     		cmp	r3, #1
 6647 001e 17D0     		beq	.L308
 6648              		.loc 1 4069 40 discriminator 1
 6649 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6650 0022 022B     		cmp	r3, #2
 6651 0024 7DD1     		bne	.L307
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6652              		.loc 1 4072 11
 6653 0026 13E0     		b	.L308
 6654              	.L311:
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 6655              		.loc 1 4075 10
 6656 0028 FB69     		ldr	r3, [r7, #28]
 6657 002a 322B     		cmp	r3, #50
 6658 002c 0DD9     		bls	.L309
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 208


4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6659              		.loc 1 4078 15
 6660 002e FB68     		ldr	r3, [r7, #12]
 6661 0030 D3F89C30 		ldr	r3, [r3, #156]
 6662              		.loc 1 4078 27
 6663 0034 43F00102 		orr	r2, r3, #1
 6664 0038 FB68     		ldr	r3, [r7, #12]
 6665 003a C3F89C20 		str	r2, [r3, #156]
4079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6666              		.loc 1 4081 23
 6667 003e FB68     		ldr	r3, [r7, #12]
 6668 0040 0322     		movs	r2, #3
 6669 0042 83F89820 		strb	r2, [r3, #152]
4082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6670              		.loc 1 4083 16
 6671 0046 0123     		movs	r3, #1
 6672 0048 74E0     		b	.L310
 6673              	.L309:
4084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 6674              		.loc 1 4087 14
 6675 004a FB69     		ldr	r3, [r7, #28]
 6676 004c 0133     		adds	r3, r3, #1
 6677 004e FB61     		str	r3, [r7, #28]
 6678              	.L308:
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6679              		.loc 1 4072 19
 6680 0050 FB68     		ldr	r3, [r7, #12]
 6681 0052 5B68     		ldr	r3, [r3, #4]
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6682              		.loc 1 4072 26
 6683 0054 5B69     		ldr	r3, [r3, #20]
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6684              		.loc 1 4072 34
 6685 0056 03F40043 		and	r3, r3, #32768
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6686              		.loc 1 4072 54
 6687 005a 002B     		cmp	r3, #0
 6688 005c E4D1     		bne	.L311
4088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the time mark compare function */
4091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMC);
 6689              		.loc 1 4091 5
 6690 005e FB68     		ldr	r3, [r7, #12]
 6691 0060 5B68     		ldr	r3, [r3, #4]
 6692 0062 5A69     		ldr	r2, [r3, #20]
 6693 0064 FB68     		ldr	r3, [r7, #12]
 6694 0066 5B68     		ldr	r3, [r3, #4]
 6695 0068 22F0C002 		bic	r2, r2, #192
 6696 006c 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 209


4092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (TimeMarkSource != FDCAN_TT_REG_TIMEMARK_DIABLED)
 6697              		.loc 1 4093 8
 6698 006e BB68     		ldr	r3, [r7, #8]
 6699 0070 002B     		cmp	r3, #0
 6700 0072 54D0     		beq	.L312
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate cycle code */
4096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RepeatFactor == FDCAN_TT_REPEAT_EVERY_CYCLE)
 6701              		.loc 1 4096 10
 6702 0074 3B68     		ldr	r3, [r7]
 6703 0076 002B     		cmp	r3, #0
 6704 0078 02D1     		bne	.L313
4097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         CycleCode = FDCAN_TT_REPEAT_EVERY_CYCLE;
 6705              		.loc 1 4098 19
 6706 007a 0023     		movs	r3, #0
 6707 007c BB61     		str	r3, [r7, #24]
 6708 007e 03E0     		b	.L314
 6709              	.L313:
4099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else /* RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE */
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         CycleCode = RepeatFactor + StartCycle;
 6710              		.loc 1 4102 19
 6711 0080 3A68     		ldr	r2, [r7]
 6712 0082 BB6A     		ldr	r3, [r7, #40]
 6713 0084 1344     		add	r3, r3, r2
 6714 0086 BB61     		str	r3, [r7, #24]
 6715              	.L314:
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter = 0U;
 6716              		.loc 1 4105 15
 6717 0088 0023     		movs	r3, #0
 6718 008a FB61     		str	r3, [r7, #28]
4106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKM bit into TTTMK register is reset */
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTTMK & FDCAN_TTTMK_LCKM) != 0U)
 6719              		.loc 1 4108 13
 6720 008c 13E0     		b	.L315
 6721              	.L317:
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 6722              		.loc 1 4111 12
 6723 008e FB69     		ldr	r3, [r7, #28]
 6724 0090 322B     		cmp	r3, #50
 6725 0092 0DD9     		bls	.L316
4112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6726              		.loc 1 4114 17
 6727 0094 FB68     		ldr	r3, [r7, #12]
 6728 0096 D3F89C30 		ldr	r3, [r3, #156]
 6729              		.loc 1 4114 29
 6730 009a 43F00102 		orr	r2, r3, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 210


 6731 009e FB68     		ldr	r3, [r7, #12]
 6732 00a0 C3F89C20 		str	r2, [r3, #156]
4115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6733              		.loc 1 4117 25
 6734 00a4 FB68     		ldr	r3, [r7, #12]
 6735 00a6 0322     		movs	r2, #3
 6736 00a8 83F89820 		strb	r2, [r3, #152]
4118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 6737              		.loc 1 4119 18
 6738 00ac 0123     		movs	r3, #1
 6739 00ae 41E0     		b	.L310
 6740              	.L316:
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 6741              		.loc 1 4123 16
 6742 00b0 FB69     		ldr	r3, [r7, #28]
 6743 00b2 0133     		adds	r3, r3, #1
 6744 00b4 FB61     		str	r3, [r7, #28]
 6745              	.L315:
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6746              		.loc 1 4108 21
 6747 00b6 FB68     		ldr	r3, [r7, #12]
 6748 00b8 5B68     		ldr	r3, [r3, #4]
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6749              		.loc 1 4108 28
 6750 00ba DB69     		ldr	r3, [r3, #28]
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6751              		.loc 1 4108 56
 6752 00bc 002B     		cmp	r3, #0
 6753 00be E6DB     		blt	.L317
4124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure time mark value and cycle code */
4127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ttcan->TTTMK = ((TimeMarkValue << FDCAN_TTTMK_TM_Pos) | (CycleCode << FDCAN_TTTMK_TIC
 6754              		.loc 1 4127 82
 6755 00c0 BB69     		ldr	r3, [r7, #24]
 6756 00c2 1904     		lsls	r1, r3, #16
 6757              		.loc 1 4127 13
 6758 00c4 FB68     		ldr	r3, [r7, #12]
 6759 00c6 5B68     		ldr	r3, [r3, #4]
 6760              		.loc 1 4127 69
 6761 00c8 7A68     		ldr	r2, [r7, #4]
 6762 00ca 0A43     		orrs	r2, r2, r1
 6763              		.loc 1 4127 28
 6764 00cc DA61     		str	r2, [r3, #28]
4128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter = 0U;
 6765              		.loc 1 4129 15
 6766 00ce 0023     		movs	r3, #0
 6767 00d0 FB61     		str	r3, [r7, #28]
4130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 211


4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6768              		.loc 1 4132 13
 6769 00d2 13E0     		b	.L318
 6770              	.L320:
4133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 6771              		.loc 1 4135 12
 6772 00d4 FB69     		ldr	r3, [r7, #28]
 6773 00d6 322B     		cmp	r3, #50
 6774 00d8 0DD9     		bls	.L319
4136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6775              		.loc 1 4138 17
 6776 00da FB68     		ldr	r3, [r7, #12]
 6777 00dc D3F89C30 		ldr	r3, [r3, #156]
 6778              		.loc 1 4138 29
 6779 00e0 43F00102 		orr	r2, r3, #1
 6780 00e4 FB68     		ldr	r3, [r7, #12]
 6781 00e6 C3F89C20 		str	r2, [r3, #156]
4139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6782              		.loc 1 4141 25
 6783 00ea FB68     		ldr	r3, [r7, #12]
 6784 00ec 0322     		movs	r2, #3
 6785 00ee 83F89820 		strb	r2, [r3, #152]
4142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 6786              		.loc 1 4143 18
 6787 00f2 0123     		movs	r3, #1
 6788 00f4 1EE0     		b	.L310
 6789              	.L319:
4144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 6790              		.loc 1 4147 16
 6791 00f6 FB69     		ldr	r3, [r7, #28]
 6792 00f8 0133     		adds	r3, r3, #1
 6793 00fa FB61     		str	r3, [r7, #28]
 6794              	.L318:
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6795              		.loc 1 4132 21
 6796 00fc FB68     		ldr	r3, [r7, #12]
 6797 00fe 5B68     		ldr	r3, [r3, #4]
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6798              		.loc 1 4132 28
 6799 0100 5B69     		ldr	r3, [r3, #20]
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6800              		.loc 1 4132 36
 6801 0102 03F40043 		and	r3, r3, #32768
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 6802              		.loc 1 4132 56
 6803 0106 002B     		cmp	r3, #0
 6804 0108 E4D1     		bne	.L320
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 212


4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update the register time mark compare source */
4151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMC, TimeMarkSource);
 6805              		.loc 1 4151 7
 6806 010a FB68     		ldr	r3, [r7, #12]
 6807 010c 5B68     		ldr	r3, [r3, #4]
 6808 010e 5B69     		ldr	r3, [r3, #20]
 6809 0110 23F0C001 		bic	r1, r3, #192
 6810 0114 FB68     		ldr	r3, [r7, #12]
 6811 0116 5B68     		ldr	r3, [r3, #4]
 6812 0118 BA68     		ldr	r2, [r7, #8]
 6813 011a 0A43     		orrs	r2, r2, r1
 6814 011c 5A61     		str	r2, [r3, #20]
 6815              	.L312:
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6816              		.loc 1 4155 12
 6817 011e 0023     		movs	r3, #0
 6818 0120 08E0     		b	.L310
 6819              	.L307:
4156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 6820              		.loc 1 4160 11
 6821 0122 FB68     		ldr	r3, [r7, #12]
 6822 0124 D3F89C30 		ldr	r3, [r3, #156]
 6823              		.loc 1 4160 23
 6824 0128 43F00202 		orr	r2, r3, #2
 6825 012c FB68     		ldr	r3, [r7, #12]
 6826 012e C3F89C20 		str	r2, [r3, #156]
4161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6827              		.loc 1 4162 12
 6828 0132 0123     		movs	r3, #1
 6829              	.L310:
4163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6830              		.loc 1 4164 1
 6831 0134 1846     		mov	r0, r3
 6832 0136 2437     		adds	r7, r7, #36
 6833              	.LCFI338:
 6834              		.cfi_def_cfa_offset 4
 6835 0138 BD46     		mov	sp, r7
 6836              	.LCFI339:
 6837              		.cfi_def_cfa_register 13
 6838              		@ sp needed
 6839 013a 5DF8047B 		ldr	r7, [sp], #4
 6840              	.LCFI340:
 6841              		.cfi_restore 7
 6842              		.cfi_def_cfa_offset 0
 6843 013e 7047     		bx	lr
 6844              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 213


 6845              	.LFE201:
 6847              		.section	.text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse,"ax",%progbits
 6848              		.align	1
 6849              		.global	HAL_FDCAN_TT_EnableRegisterTimeMarkPulse
 6850              		.syntax unified
 6851              		.thumb
 6852              		.thumb_func
 6854              	HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:
 6855              	.LFB202:
4165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable register time mark pulse generation.
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableRegisterTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6856              		.loc 1 4173 1
 6857              		.cfi_startproc
 6858              		@ args = 0, pretend = 0, frame = 16
 6859              		@ frame_needed = 1, uses_anonymous_args = 0
 6860              		@ link register save eliminated.
 6861 0000 80B4     		push	{r7}
 6862              	.LCFI341:
 6863              		.cfi_def_cfa_offset 4
 6864              		.cfi_offset 7, -4
 6865 0002 85B0     		sub	sp, sp, #20
 6866              	.LCFI342:
 6867              		.cfi_def_cfa_offset 24
 6868 0004 00AF     		add	r7, sp, #0
 6869              	.LCFI343:
 6870              		.cfi_def_cfa_register 7
 6871 0006 7860     		str	r0, [r7, #4]
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6872              		.loc 1 4174 12
 6873 0008 0023     		movs	r3, #0
 6874 000a FB60     		str	r3, [r7, #12]
4175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6875              		.loc 1 4175 26
 6876 000c 7B68     		ldr	r3, [r7, #4]
 6877 000e 93F89830 		ldrb	r3, [r3, #152]
 6878 0012 FB72     		strb	r3, [r7, #11]
4176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6879              		.loc 1 4180 6
 6880 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6881 0016 012B     		cmp	r3, #1
 6882 0018 17D0     		beq	.L324
 6883              		.loc 1 4180 40 discriminator 1
 6884 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6885 001c 022B     		cmp	r3, #2
 6886 001e 25D1     		bne	.L323
4181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 214


4182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 6887              		.loc 1 4183 11
 6888 0020 13E0     		b	.L324
 6889              	.L327:
4184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 6890              		.loc 1 4186 10
 6891 0022 FB68     		ldr	r3, [r7, #12]
 6892 0024 322B     		cmp	r3, #50
 6893 0026 0DD9     		bls	.L325
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 6894              		.loc 1 4189 15
 6895 0028 7B68     		ldr	r3, [r7, #4]
 6896 002a D3F89C30 		ldr	r3, [r3, #156]
 6897              		.loc 1 4189 27
 6898 002e 43F00102 		orr	r2, r3, #1
 6899 0032 7B68     		ldr	r3, [r7, #4]
 6900 0034 C3F89C20 		str	r2, [r3, #156]
4190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 6901              		.loc 1 4192 23
 6902 0038 7B68     		ldr	r3, [r7, #4]
 6903 003a 0322     		movs	r2, #3
 6904 003c 83F89820 		strb	r2, [r3, #152]
4193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6905              		.loc 1 4194 16
 6906 0040 0123     		movs	r3, #1
 6907 0042 1CE0     		b	.L326
 6908              	.L325:
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 6909              		.loc 1 4198 14
 6910 0044 FB68     		ldr	r3, [r7, #12]
 6911 0046 0133     		adds	r3, r3, #1
 6912 0048 FB60     		str	r3, [r7, #12]
 6913              	.L324:
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6914              		.loc 1 4183 19
 6915 004a 7B68     		ldr	r3, [r7, #4]
 6916 004c 5B68     		ldr	r3, [r3, #4]
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6917              		.loc 1 4183 26
 6918 004e 5B69     		ldr	r3, [r3, #20]
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6919              		.loc 1 4183 34
 6920 0050 03F40043 		and	r3, r3, #32768
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 6921              		.loc 1 4183 54
 6922 0054 002B     		cmp	r3, #0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 215


 6923 0056 E4D1     		bne	.L327
4199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Register Time Mark Interrupt output on fdcan1_rtp */
4202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_RTIE);
 6924              		.loc 1 4202 5
 6925 0058 7B68     		ldr	r3, [r7, #4]
 6926 005a 5B68     		ldr	r3, [r3, #4]
 6927 005c 5A69     		ldr	r2, [r3, #20]
 6928 005e 7B68     		ldr	r3, [r7, #4]
 6929 0060 5B68     		ldr	r3, [r3, #4]
 6930 0062 42F02002 		orr	r2, r2, #32
 6931 0066 5A61     		str	r2, [r3, #20]
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6932              		.loc 1 4205 12
 6933 0068 0023     		movs	r3, #0
 6934 006a 08E0     		b	.L326
 6935              	.L323:
4206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 6936              		.loc 1 4210 11
 6937 006c 7B68     		ldr	r3, [r7, #4]
 6938 006e D3F89C30 		ldr	r3, [r3, #156]
 6939              		.loc 1 4210 23
 6940 0072 43F00202 		orr	r2, r3, #2
 6941 0076 7B68     		ldr	r3, [r7, #4]
 6942 0078 C3F89C20 		str	r2, [r3, #156]
4211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6943              		.loc 1 4212 12
 6944 007c 0123     		movs	r3, #1
 6945              	.L326:
4213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6946              		.loc 1 4214 1
 6947 007e 1846     		mov	r0, r3
 6948 0080 1437     		adds	r7, r7, #20
 6949              	.LCFI344:
 6950              		.cfi_def_cfa_offset 4
 6951 0082 BD46     		mov	sp, r7
 6952              	.LCFI345:
 6953              		.cfi_def_cfa_register 13
 6954              		@ sp needed
 6955 0084 5DF8047B 		ldr	r7, [sp], #4
 6956              	.LCFI346:
 6957              		.cfi_restore 7
 6958              		.cfi_def_cfa_offset 0
 6959 0088 7047     		bx	lr
 6960              		.cfi_endproc
 6961              	.LFE202:
 6963              		.section	.text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse,"ax",%progbits
 6964              		.align	1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 216


 6965              		.global	HAL_FDCAN_TT_DisableRegisterTimeMarkPulse
 6966              		.syntax unified
 6967              		.thumb
 6968              		.thumb_func
 6970              	HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:
 6971              	.LFB203:
4215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable register time mark pulse generation.
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableRegisterTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6972              		.loc 1 4223 1
 6973              		.cfi_startproc
 6974              		@ args = 0, pretend = 0, frame = 16
 6975              		@ frame_needed = 1, uses_anonymous_args = 0
 6976              		@ link register save eliminated.
 6977 0000 80B4     		push	{r7}
 6978              	.LCFI347:
 6979              		.cfi_def_cfa_offset 4
 6980              		.cfi_offset 7, -4
 6981 0002 85B0     		sub	sp, sp, #20
 6982              	.LCFI348:
 6983              		.cfi_def_cfa_offset 24
 6984 0004 00AF     		add	r7, sp, #0
 6985              	.LCFI349:
 6986              		.cfi_def_cfa_register 7
 6987 0006 7860     		str	r0, [r7, #4]
4224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 6988              		.loc 1 4224 12
 6989 0008 0023     		movs	r3, #0
 6990 000a FB60     		str	r3, [r7, #12]
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6991              		.loc 1 4225 26
 6992 000c 7B68     		ldr	r3, [r7, #4]
 6993 000e 93F89830 		ldrb	r3, [r3, #152]
 6994 0012 FB72     		strb	r3, [r7, #11]
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 6995              		.loc 1 4230 6
 6996 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 6997 0016 012B     		cmp	r3, #1
 6998 0018 17D0     		beq	.L331
 6999              		.loc 1 4230 40 discriminator 1
 7000 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7001 001c 022B     		cmp	r3, #2
 7002 001e 25D1     		bne	.L330
4231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7003              		.loc 1 4233 11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 217


 7004 0020 13E0     		b	.L331
 7005              	.L334:
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 7006              		.loc 1 4236 10
 7007 0022 FB68     		ldr	r3, [r7, #12]
 7008 0024 322B     		cmp	r3, #50
 7009 0026 0DD9     		bls	.L332
4237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7010              		.loc 1 4239 15
 7011 0028 7B68     		ldr	r3, [r7, #4]
 7012 002a D3F89C30 		ldr	r3, [r3, #156]
 7013              		.loc 1 4239 27
 7014 002e 43F00102 		orr	r2, r3, #1
 7015 0032 7B68     		ldr	r3, [r7, #4]
 7016 0034 C3F89C20 		str	r2, [r3, #156]
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7017              		.loc 1 4242 23
 7018 0038 7B68     		ldr	r3, [r7, #4]
 7019 003a 0322     		movs	r2, #3
 7020 003c 83F89820 		strb	r2, [r3, #152]
4243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 7021              		.loc 1 4244 16
 7022 0040 0123     		movs	r3, #1
 7023 0042 1CE0     		b	.L333
 7024              	.L332:
4245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 7025              		.loc 1 4248 14
 7026 0044 FB68     		ldr	r3, [r7, #12]
 7027 0046 0133     		adds	r3, r3, #1
 7028 0048 FB60     		str	r3, [r7, #12]
 7029              	.L331:
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7030              		.loc 1 4233 19
 7031 004a 7B68     		ldr	r3, [r7, #4]
 7032 004c 5B68     		ldr	r3, [r3, #4]
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7033              		.loc 1 4233 26
 7034 004e 5B69     		ldr	r3, [r3, #20]
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7035              		.loc 1 4233 34
 7036 0050 03F40043 		and	r3, r3, #32768
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7037              		.loc 1 4233 54
 7038 0054 002B     		cmp	r3, #0
 7039 0056 E4D1     		bne	.L334
4249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 218


4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable Register Time Mark Interrupt output on fdcan1_rtp */
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_RTIE);
 7040              		.loc 1 4252 5
 7041 0058 7B68     		ldr	r3, [r7, #4]
 7042 005a 5B68     		ldr	r3, [r3, #4]
 7043 005c 5A69     		ldr	r2, [r3, #20]
 7044 005e 7B68     		ldr	r3, [r7, #4]
 7045 0060 5B68     		ldr	r3, [r3, #4]
 7046 0062 22F02002 		bic	r2, r2, #32
 7047 0066 5A61     		str	r2, [r3, #20]
4253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 7048              		.loc 1 4255 12
 7049 0068 0023     		movs	r3, #0
 7050 006a 08E0     		b	.L333
 7051              	.L330:
4256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7052              		.loc 1 4260 11
 7053 006c 7B68     		ldr	r3, [r7, #4]
 7054 006e D3F89C30 		ldr	r3, [r3, #156]
 7055              		.loc 1 4260 23
 7056 0072 43F00202 		orr	r2, r3, #2
 7057 0076 7B68     		ldr	r3, [r7, #4]
 7058 0078 C3F89C20 		str	r2, [r3, #156]
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7059              		.loc 1 4262 12
 7060 007c 0123     		movs	r3, #1
 7061              	.L333:
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7062              		.loc 1 4264 1
 7063 007e 1846     		mov	r0, r3
 7064 0080 1437     		adds	r7, r7, #20
 7065              	.LCFI350:
 7066              		.cfi_def_cfa_offset 4
 7067 0082 BD46     		mov	sp, r7
 7068              	.LCFI351:
 7069              		.cfi_def_cfa_register 13
 7070              		@ sp needed
 7071 0084 5DF8047B 		ldr	r7, [sp], #4
 7072              	.LCFI352:
 7073              		.cfi_restore 7
 7074              		.cfi_def_cfa_offset 0
 7075 0088 7047     		bx	lr
 7076              		.cfi_endproc
 7077              	.LFE203:
 7079              		.section	.text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse,"ax",%progbits
 7080              		.align	1
 7081              		.global	HAL_FDCAN_TT_EnableTriggerTimeMarkPulse
 7082              		.syntax unified
 7083              		.thumb
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 219


 7084              		.thumb_func
 7086              	HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:
 7087              	.LFB204:
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable trigger time mark pulse generation.
4268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableTriggerTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7088              		.loc 1 4273 1
 7089              		.cfi_startproc
 7090              		@ args = 0, pretend = 0, frame = 16
 7091              		@ frame_needed = 1, uses_anonymous_args = 0
 7092              		@ link register save eliminated.
 7093 0000 80B4     		push	{r7}
 7094              	.LCFI353:
 7095              		.cfi_def_cfa_offset 4
 7096              		.cfi_offset 7, -4
 7097 0002 85B0     		sub	sp, sp, #20
 7098              	.LCFI354:
 7099              		.cfi_def_cfa_offset 24
 7100 0004 00AF     		add	r7, sp, #0
 7101              	.LCFI355:
 7102              		.cfi_def_cfa_register 7
 7103 0006 7860     		str	r0, [r7, #4]
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7104              		.loc 1 4274 12
 7105 0008 0023     		movs	r3, #0
 7106 000a FB60     		str	r3, [r7, #12]
4275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7107              		.loc 1 4275 26
 7108 000c 7B68     		ldr	r3, [r7, #4]
 7109 000e 93F89830 		ldrb	r3, [r3, #152]
 7110 0012 FB72     		strb	r3, [r7, #11]
4276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7111              		.loc 1 4280 6
 7112 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7113 0016 012B     		cmp	r3, #1
 7114 0018 02D0     		beq	.L336
 7115              		.loc 1 4280 40 discriminator 1
 7116 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7117 001c 022B     		cmp	r3, #2
 7118 001e 36D1     		bne	.L337
 7119              	.L336:
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7120              		.loc 1 4282 16
 7121 0020 7B68     		ldr	r3, [r7, #4]
 7122 0022 5B68     		ldr	r3, [r3, #4]
 7123              		.loc 1 4282 23
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 220


 7124 0024 9B68     		ldr	r3, [r3, #8]
 7125              		.loc 1 4282 31
 7126 0026 03F00303 		and	r3, r3, #3
 7127              		.loc 1 4282 8
 7128 002a 032B     		cmp	r3, #3
 7129 002c 25D0     		beq	.L338
4283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7130              		.loc 1 4285 13
 7131 002e 13E0     		b	.L339
 7132              	.L342:
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7133              		.loc 1 4288 12
 7134 0030 FB68     		ldr	r3, [r7, #12]
 7135 0032 322B     		cmp	r3, #50
 7136 0034 0DD9     		bls	.L340
4289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7137              		.loc 1 4291 17
 7138 0036 7B68     		ldr	r3, [r7, #4]
 7139 0038 D3F89C30 		ldr	r3, [r3, #156]
 7140              		.loc 1 4291 29
 7141 003c 43F00102 		orr	r2, r3, #1
 7142 0040 7B68     		ldr	r3, [r7, #4]
 7143 0042 C3F89C20 		str	r2, [r3, #156]
4292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7144              		.loc 1 4294 25
 7145 0046 7B68     		ldr	r3, [r7, #4]
 7146 0048 0322     		movs	r2, #3
 7147 004a 83F89820 		strb	r2, [r3, #152]
4295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7148              		.loc 1 4296 18
 7149 004e 0123     		movs	r3, #1
 7150 0050 26E0     		b	.L341
 7151              	.L340:
4297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7152              		.loc 1 4300 16
 7153 0052 FB68     		ldr	r3, [r7, #12]
 7154 0054 0133     		adds	r3, r3, #1
 7155 0056 FB60     		str	r3, [r7, #12]
 7156              	.L339:
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7157              		.loc 1 4285 21
 7158 0058 7B68     		ldr	r3, [r7, #4]
 7159 005a 5B68     		ldr	r3, [r3, #4]
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7160              		.loc 1 4285 28
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 221


 7161 005c 5B69     		ldr	r3, [r3, #20]
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7162              		.loc 1 4285 36
 7163 005e 03F40043 		and	r3, r3, #32768
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7164              		.loc 1 4285 56
 7165 0062 002B     		cmp	r3, #0
 7166 0064 E4D1     		bne	.L342
4301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Trigger Time Mark Interrupt output on fdcan1_tmp */
4304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TTIE);
 7167              		.loc 1 4304 7
 7168 0066 7B68     		ldr	r3, [r7, #4]
 7169 0068 5B68     		ldr	r3, [r3, #4]
 7170 006a 5A69     		ldr	r2, [r3, #20]
 7171 006c 7B68     		ldr	r3, [r7, #4]
 7172 006e 5B68     		ldr	r3, [r3, #4]
 7173 0070 42F48072 		orr	r2, r2, #256
 7174 0074 5A61     		str	r2, [r3, #20]
4305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7175              		.loc 1 4307 14
 7176 0076 0023     		movs	r3, #0
 7177 0078 12E0     		b	.L341
 7178              	.L338:
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7179              		.loc 1 4313 13
 7180 007a 7B68     		ldr	r3, [r7, #4]
 7181 007c D3F89C30 		ldr	r3, [r3, #156]
 7182              		.loc 1 4313 25
 7183 0080 43F01002 		orr	r2, r3, #16
 7184 0084 7B68     		ldr	r3, [r7, #4]
 7185 0086 C3F89C20 		str	r2, [r3, #156]
4314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7186              		.loc 1 4315 14
 7187 008a 0123     		movs	r3, #1
 7188 008c 08E0     		b	.L341
 7189              	.L337:
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7190              		.loc 1 4321 11
 7191 008e 7B68     		ldr	r3, [r7, #4]
 7192 0090 D3F89C30 		ldr	r3, [r3, #156]
 7193              		.loc 1 4321 23
 7194 0094 43F00202 		orr	r2, r3, #2
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 222


 7195 0098 7B68     		ldr	r3, [r7, #4]
 7196 009a C3F89C20 		str	r2, [r3, #156]
4322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7197              		.loc 1 4323 12
 7198 009e 0123     		movs	r3, #1
 7199              	.L341:
4324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7200              		.loc 1 4325 1
 7201 00a0 1846     		mov	r0, r3
 7202 00a2 1437     		adds	r7, r7, #20
 7203              	.LCFI356:
 7204              		.cfi_def_cfa_offset 4
 7205 00a4 BD46     		mov	sp, r7
 7206              	.LCFI357:
 7207              		.cfi_def_cfa_register 13
 7208              		@ sp needed
 7209 00a6 5DF8047B 		ldr	r7, [sp], #4
 7210              	.LCFI358:
 7211              		.cfi_restore 7
 7212              		.cfi_def_cfa_offset 0
 7213 00aa 7047     		bx	lr
 7214              		.cfi_endproc
 7215              	.LFE204:
 7217              		.section	.text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse,"ax",%progbits
 7218              		.align	1
 7219              		.global	HAL_FDCAN_TT_DisableTriggerTimeMarkPulse
 7220              		.syntax unified
 7221              		.thumb
 7222              		.thumb_func
 7224              	HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:
 7225              	.LFB205:
4326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable trigger time mark pulse generation.
4329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableTriggerTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7226              		.loc 1 4334 1
 7227              		.cfi_startproc
 7228              		@ args = 0, pretend = 0, frame = 16
 7229              		@ frame_needed = 1, uses_anonymous_args = 0
 7230              		@ link register save eliminated.
 7231 0000 80B4     		push	{r7}
 7232              	.LCFI359:
 7233              		.cfi_def_cfa_offset 4
 7234              		.cfi_offset 7, -4
 7235 0002 85B0     		sub	sp, sp, #20
 7236              	.LCFI360:
 7237              		.cfi_def_cfa_offset 24
 7238 0004 00AF     		add	r7, sp, #0
 7239              	.LCFI361:
 7240              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 223


 7241 0006 7860     		str	r0, [r7, #4]
4335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7242              		.loc 1 4335 12
 7243 0008 0023     		movs	r3, #0
 7244 000a FB60     		str	r3, [r7, #12]
4336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7245              		.loc 1 4336 26
 7246 000c 7B68     		ldr	r3, [r7, #4]
 7247 000e 93F89830 		ldrb	r3, [r3, #152]
 7248 0012 FB72     		strb	r3, [r7, #11]
4337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7249              		.loc 1 4341 6
 7250 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7251 0016 012B     		cmp	r3, #1
 7252 0018 02D0     		beq	.L344
 7253              		.loc 1 4341 40 discriminator 1
 7254 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7255 001c 022B     		cmp	r3, #2
 7256 001e 36D1     		bne	.L345
 7257              	.L344:
4342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7258              		.loc 1 4343 16
 7259 0020 7B68     		ldr	r3, [r7, #4]
 7260 0022 5B68     		ldr	r3, [r3, #4]
 7261              		.loc 1 4343 23
 7262 0024 9B68     		ldr	r3, [r3, #8]
 7263              		.loc 1 4343 31
 7264 0026 03F00303 		and	r3, r3, #3
 7265              		.loc 1 4343 8
 7266 002a 032B     		cmp	r3, #3
 7267 002c 25D0     		beq	.L346
4344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7268              		.loc 1 4346 13
 7269 002e 13E0     		b	.L347
 7270              	.L350:
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7271              		.loc 1 4349 12
 7272 0030 FB68     		ldr	r3, [r7, #12]
 7273 0032 322B     		cmp	r3, #50
 7274 0034 0DD9     		bls	.L348
4350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7275              		.loc 1 4352 17
 7276 0036 7B68     		ldr	r3, [r7, #4]
 7277 0038 D3F89C30 		ldr	r3, [r3, #156]
 7278              		.loc 1 4352 29
 7279 003c 43F00102 		orr	r2, r3, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 224


 7280 0040 7B68     		ldr	r3, [r7, #4]
 7281 0042 C3F89C20 		str	r2, [r3, #156]
4353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7282              		.loc 1 4355 25
 7283 0046 7B68     		ldr	r3, [r7, #4]
 7284 0048 0322     		movs	r2, #3
 7285 004a 83F89820 		strb	r2, [r3, #152]
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7286              		.loc 1 4357 18
 7287 004e 0123     		movs	r3, #1
 7288 0050 26E0     		b	.L349
 7289              	.L348:
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7290              		.loc 1 4361 16
 7291 0052 FB68     		ldr	r3, [r7, #12]
 7292 0054 0133     		adds	r3, r3, #1
 7293 0056 FB60     		str	r3, [r7, #12]
 7294              	.L347:
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7295              		.loc 1 4346 21
 7296 0058 7B68     		ldr	r3, [r7, #4]
 7297 005a 5B68     		ldr	r3, [r3, #4]
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7298              		.loc 1 4346 28
 7299 005c 5B69     		ldr	r3, [r3, #20]
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7300              		.loc 1 4346 36
 7301 005e 03F40043 		and	r3, r3, #32768
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7302              		.loc 1 4346 56
 7303 0062 002B     		cmp	r3, #0
 7304 0064 E4D1     		bne	.L350
4362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Trigger Time Mark Interrupt output on fdcan1_rtp */
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TTIE);
 7305              		.loc 1 4365 7
 7306 0066 7B68     		ldr	r3, [r7, #4]
 7307 0068 5B68     		ldr	r3, [r3, #4]
 7308 006a 5A69     		ldr	r2, [r3, #20]
 7309 006c 7B68     		ldr	r3, [r7, #4]
 7310 006e 5B68     		ldr	r3, [r3, #4]
 7311 0070 22F48072 		bic	r2, r2, #256
 7312 0074 5A61     		str	r2, [r3, #20]
4366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7313              		.loc 1 4368 14
 7314 0076 0023     		movs	r3, #0
 7315 0078 12E0     		b	.L349
 7316              	.L346:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 225


4369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7317              		.loc 1 4374 13
 7318 007a 7B68     		ldr	r3, [r7, #4]
 7319 007c D3F89C30 		ldr	r3, [r3, #156]
 7320              		.loc 1 4374 25
 7321 0080 43F01002 		orr	r2, r3, #16
 7322 0084 7B68     		ldr	r3, [r7, #4]
 7323 0086 C3F89C20 		str	r2, [r3, #156]
4375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7324              		.loc 1 4376 14
 7325 008a 0123     		movs	r3, #1
 7326 008c 08E0     		b	.L349
 7327              	.L345:
4377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7328              		.loc 1 4382 11
 7329 008e 7B68     		ldr	r3, [r7, #4]
 7330 0090 D3F89C30 		ldr	r3, [r3, #156]
 7331              		.loc 1 4382 23
 7332 0094 43F00202 		orr	r2, r3, #2
 7333 0098 7B68     		ldr	r3, [r7, #4]
 7334 009a C3F89C20 		str	r2, [r3, #156]
4383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7335              		.loc 1 4384 12
 7336 009e 0123     		movs	r3, #1
 7337              	.L349:
4385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7338              		.loc 1 4386 1
 7339 00a0 1846     		mov	r0, r3
 7340 00a2 1437     		adds	r7, r7, #20
 7341              	.LCFI362:
 7342              		.cfi_def_cfa_offset 4
 7343 00a4 BD46     		mov	sp, r7
 7344              	.LCFI363:
 7345              		.cfi_def_cfa_register 13
 7346              		@ sp needed
 7347 00a6 5DF8047B 		ldr	r7, [sp], #4
 7348              	.LCFI364:
 7349              		.cfi_restore 7
 7350              		.cfi_def_cfa_offset 0
 7351 00aa 7047     		bx	lr
 7352              		.cfi_endproc
 7353              	.LFE205:
 7355              		.section	.text.HAL_FDCAN_TT_EnableHardwareGapControl,"ax",%progbits
 7356              		.align	1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 226


 7357              		.global	HAL_FDCAN_TT_EnableHardwareGapControl
 7358              		.syntax unified
 7359              		.thumb
 7360              		.thumb_func
 7362              	HAL_FDCAN_TT_EnableHardwareGapControl:
 7363              	.LFB206:
4387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable gap control by input pin fdcan1_evt.
4390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableHardwareGapControl(FDCAN_HandleTypeDef *hfdcan)
4395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7364              		.loc 1 4395 1
 7365              		.cfi_startproc
 7366              		@ args = 0, pretend = 0, frame = 16
 7367              		@ frame_needed = 1, uses_anonymous_args = 0
 7368              		@ link register save eliminated.
 7369 0000 80B4     		push	{r7}
 7370              	.LCFI365:
 7371              		.cfi_def_cfa_offset 4
 7372              		.cfi_offset 7, -4
 7373 0002 85B0     		sub	sp, sp, #20
 7374              	.LCFI366:
 7375              		.cfi_def_cfa_offset 24
 7376 0004 00AF     		add	r7, sp, #0
 7377              	.LCFI367:
 7378              		.cfi_def_cfa_register 7
 7379 0006 7860     		str	r0, [r7, #4]
4396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7380              		.loc 1 4396 12
 7381 0008 0023     		movs	r3, #0
 7382 000a FB60     		str	r3, [r7, #12]
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7383              		.loc 1 4397 26
 7384 000c 7B68     		ldr	r3, [r7, #4]
 7385 000e 93F89830 		ldrb	r3, [r3, #152]
 7386 0012 FB72     		strb	r3, [r7, #11]
4398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7387              		.loc 1 4402 6
 7388 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7389 0016 012B     		cmp	r3, #1
 7390 0018 02D0     		beq	.L352
 7391              		.loc 1 4402 40 discriminator 1
 7392 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7393 001c 022B     		cmp	r3, #2
 7394 001e 36D1     		bne	.L353
 7395              	.L352:
4403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7396              		.loc 1 4404 16
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 227


 7397 0020 7B68     		ldr	r3, [r7, #4]
 7398 0022 5B68     		ldr	r3, [r3, #4]
 7399              		.loc 1 4404 23
 7400 0024 9B68     		ldr	r3, [r3, #8]
 7401              		.loc 1 4404 31
 7402 0026 03F00303 		and	r3, r3, #3
 7403              		.loc 1 4404 8
 7404 002a 032B     		cmp	r3, #3
 7405 002c 25D0     		beq	.L354
4405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7406              		.loc 1 4407 13
 7407 002e 13E0     		b	.L355
 7408              	.L358:
4408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7409              		.loc 1 4410 12
 7410 0030 FB68     		ldr	r3, [r7, #12]
 7411 0032 322B     		cmp	r3, #50
 7412 0034 0DD9     		bls	.L356
4411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7413              		.loc 1 4413 17
 7414 0036 7B68     		ldr	r3, [r7, #4]
 7415 0038 D3F89C30 		ldr	r3, [r3, #156]
 7416              		.loc 1 4413 29
 7417 003c 43F00102 		orr	r2, r3, #1
 7418 0040 7B68     		ldr	r3, [r7, #4]
 7419 0042 C3F89C20 		str	r2, [r3, #156]
4414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7420              		.loc 1 4416 25
 7421 0046 7B68     		ldr	r3, [r7, #4]
 7422 0048 0322     		movs	r2, #3
 7423 004a 83F89820 		strb	r2, [r3, #152]
4417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7424              		.loc 1 4418 18
 7425 004e 0123     		movs	r3, #1
 7426 0050 26E0     		b	.L357
 7427              	.L356:
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7428              		.loc 1 4422 16
 7429 0052 FB68     		ldr	r3, [r7, #12]
 7430 0054 0133     		adds	r3, r3, #1
 7431 0056 FB60     		str	r3, [r7, #12]
 7432              	.L355:
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7433              		.loc 1 4407 21
 7434 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 228


 7435 005a 5B68     		ldr	r3, [r3, #4]
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7436              		.loc 1 4407 28
 7437 005c 5B69     		ldr	r3, [r3, #20]
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7438              		.loc 1 4407 36
 7439 005e 03F40043 		and	r3, r3, #32768
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7440              		.loc 1 4407 56
 7441 0062 002B     		cmp	r3, #0
 7442 0064 E4D1     		bne	.L358
4423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable gap control by pin fdcan1_evt */
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_GCS);
 7443              		.loc 1 4426 7
 7444 0066 7B68     		ldr	r3, [r7, #4]
 7445 0068 5B68     		ldr	r3, [r3, #4]
 7446 006a 5A69     		ldr	r2, [r3, #20]
 7447 006c 7B68     		ldr	r3, [r7, #4]
 7448 006e 5B68     		ldr	r3, [r3, #4]
 7449 0070 42F40072 		orr	r2, r2, #512
 7450 0074 5A61     		str	r2, [r3, #20]
4427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7451              		.loc 1 4429 14
 7452 0076 0023     		movs	r3, #0
 7453 0078 12E0     		b	.L357
 7454              	.L354:
4430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7455              		.loc 1 4435 13
 7456 007a 7B68     		ldr	r3, [r7, #4]
 7457 007c D3F89C30 		ldr	r3, [r3, #156]
 7458              		.loc 1 4435 25
 7459 0080 43F01002 		orr	r2, r3, #16
 7460 0084 7B68     		ldr	r3, [r7, #4]
 7461 0086 C3F89C20 		str	r2, [r3, #156]
4436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7462              		.loc 1 4437 14
 7463 008a 0123     		movs	r3, #1
 7464 008c 08E0     		b	.L357
 7465              	.L353:
4438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7466              		.loc 1 4443 11
 7467 008e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 229


 7468 0090 D3F89C30 		ldr	r3, [r3, #156]
 7469              		.loc 1 4443 23
 7470 0094 43F00202 		orr	r2, r3, #2
 7471 0098 7B68     		ldr	r3, [r7, #4]
 7472 009a C3F89C20 		str	r2, [r3, #156]
4444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7473              		.loc 1 4445 12
 7474 009e 0123     		movs	r3, #1
 7475              	.L357:
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7476              		.loc 1 4447 1
 7477 00a0 1846     		mov	r0, r3
 7478 00a2 1437     		adds	r7, r7, #20
 7479              	.LCFI368:
 7480              		.cfi_def_cfa_offset 4
 7481 00a4 BD46     		mov	sp, r7
 7482              	.LCFI369:
 7483              		.cfi_def_cfa_register 13
 7484              		@ sp needed
 7485 00a6 5DF8047B 		ldr	r7, [sp], #4
 7486              	.LCFI370:
 7487              		.cfi_restore 7
 7488              		.cfi_def_cfa_offset 0
 7489 00aa 7047     		bx	lr
 7490              		.cfi_endproc
 7491              	.LFE206:
 7493              		.section	.text.HAL_FDCAN_TT_DisableHardwareGapControl,"ax",%progbits
 7494              		.align	1
 7495              		.global	HAL_FDCAN_TT_DisableHardwareGapControl
 7496              		.syntax unified
 7497              		.thumb
 7498              		.thumb_func
 7500              	HAL_FDCAN_TT_DisableHardwareGapControl:
 7501              	.LFB207:
4448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable gap control by input pin fdcan1_evt.
4451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableHardwareGapControl(FDCAN_HandleTypeDef *hfdcan)
4456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7502              		.loc 1 4456 1
 7503              		.cfi_startproc
 7504              		@ args = 0, pretend = 0, frame = 16
 7505              		@ frame_needed = 1, uses_anonymous_args = 0
 7506              		@ link register save eliminated.
 7507 0000 80B4     		push	{r7}
 7508              	.LCFI371:
 7509              		.cfi_def_cfa_offset 4
 7510              		.cfi_offset 7, -4
 7511 0002 85B0     		sub	sp, sp, #20
 7512              	.LCFI372:
 7513              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 230


 7514 0004 00AF     		add	r7, sp, #0
 7515              	.LCFI373:
 7516              		.cfi_def_cfa_register 7
 7517 0006 7860     		str	r0, [r7, #4]
4457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7518              		.loc 1 4457 12
 7519 0008 0023     		movs	r3, #0
 7520 000a FB60     		str	r3, [r7, #12]
4458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7521              		.loc 1 4458 26
 7522 000c 7B68     		ldr	r3, [r7, #4]
 7523 000e 93F89830 		ldrb	r3, [r3, #152]
 7524 0012 FB72     		strb	r3, [r7, #11]
4459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7525              		.loc 1 4463 6
 7526 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7527 0016 012B     		cmp	r3, #1
 7528 0018 02D0     		beq	.L360
 7529              		.loc 1 4463 40 discriminator 1
 7530 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7531 001c 022B     		cmp	r3, #2
 7532 001e 36D1     		bne	.L361
 7533              	.L360:
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7534              		.loc 1 4465 16
 7535 0020 7B68     		ldr	r3, [r7, #4]
 7536 0022 5B68     		ldr	r3, [r3, #4]
 7537              		.loc 1 4465 23
 7538 0024 9B68     		ldr	r3, [r3, #8]
 7539              		.loc 1 4465 31
 7540 0026 03F00303 		and	r3, r3, #3
 7541              		.loc 1 4465 8
 7542 002a 032B     		cmp	r3, #3
 7543 002c 25D0     		beq	.L362
4466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7544              		.loc 1 4468 13
 7545 002e 13E0     		b	.L363
 7546              	.L366:
4469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7547              		.loc 1 4471 12
 7548 0030 FB68     		ldr	r3, [r7, #12]
 7549 0032 322B     		cmp	r3, #50
 7550 0034 0DD9     		bls	.L364
4472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7551              		.loc 1 4474 17
 7552 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 231


 7553 0038 D3F89C30 		ldr	r3, [r3, #156]
 7554              		.loc 1 4474 29
 7555 003c 43F00102 		orr	r2, r3, #1
 7556 0040 7B68     		ldr	r3, [r7, #4]
 7557 0042 C3F89C20 		str	r2, [r3, #156]
4475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7558              		.loc 1 4477 25
 7559 0046 7B68     		ldr	r3, [r7, #4]
 7560 0048 0322     		movs	r2, #3
 7561 004a 83F89820 		strb	r2, [r3, #152]
4478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7562              		.loc 1 4479 18
 7563 004e 0123     		movs	r3, #1
 7564 0050 26E0     		b	.L365
 7565              	.L364:
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7566              		.loc 1 4483 16
 7567 0052 FB68     		ldr	r3, [r7, #12]
 7568 0054 0133     		adds	r3, r3, #1
 7569 0056 FB60     		str	r3, [r7, #12]
 7570              	.L363:
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7571              		.loc 1 4468 21
 7572 0058 7B68     		ldr	r3, [r7, #4]
 7573 005a 5B68     		ldr	r3, [r3, #4]
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7574              		.loc 1 4468 28
 7575 005c 5B69     		ldr	r3, [r3, #20]
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7576              		.loc 1 4468 36
 7577 005e 03F40043 		and	r3, r3, #32768
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7578              		.loc 1 4468 56
 7579 0062 002B     		cmp	r3, #0
 7580 0064 E4D1     		bne	.L366
4484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable gap control by pin fdcan1_evt */
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_GCS);
 7581              		.loc 1 4487 7
 7582 0066 7B68     		ldr	r3, [r7, #4]
 7583 0068 5B68     		ldr	r3, [r3, #4]
 7584 006a 5A69     		ldr	r2, [r3, #20]
 7585 006c 7B68     		ldr	r3, [r7, #4]
 7586 006e 5B68     		ldr	r3, [r3, #4]
 7587 0070 22F40072 		bic	r2, r2, #512
 7588 0074 5A61     		str	r2, [r3, #20]
4488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7589              		.loc 1 4490 14
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 232


 7590 0076 0023     		movs	r3, #0
 7591 0078 12E0     		b	.L365
 7592              	.L362:
4491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7593              		.loc 1 4496 13
 7594 007a 7B68     		ldr	r3, [r7, #4]
 7595 007c D3F89C30 		ldr	r3, [r3, #156]
 7596              		.loc 1 4496 25
 7597 0080 43F01002 		orr	r2, r3, #16
 7598 0084 7B68     		ldr	r3, [r7, #4]
 7599 0086 C3F89C20 		str	r2, [r3, #156]
4497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7600              		.loc 1 4498 14
 7601 008a 0123     		movs	r3, #1
 7602 008c 08E0     		b	.L365
 7603              	.L361:
4499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7604              		.loc 1 4504 11
 7605 008e 7B68     		ldr	r3, [r7, #4]
 7606 0090 D3F89C30 		ldr	r3, [r3, #156]
 7607              		.loc 1 4504 23
 7608 0094 43F00202 		orr	r2, r3, #2
 7609 0098 7B68     		ldr	r3, [r7, #4]
 7610 009a C3F89C20 		str	r2, [r3, #156]
4505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7611              		.loc 1 4506 12
 7612 009e 0123     		movs	r3, #1
 7613              	.L365:
4507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7614              		.loc 1 4508 1
 7615 00a0 1846     		mov	r0, r3
 7616 00a2 1437     		adds	r7, r7, #20
 7617              	.LCFI374:
 7618              		.cfi_def_cfa_offset 4
 7619 00a4 BD46     		mov	sp, r7
 7620              	.LCFI375:
 7621              		.cfi_def_cfa_register 13
 7622              		@ sp needed
 7623 00a6 5DF8047B 		ldr	r7, [sp], #4
 7624              	.LCFI376:
 7625              		.cfi_restore 7
 7626              		.cfi_def_cfa_offset 0
 7627 00aa 7047     		bx	lr
 7628              		.cfi_endproc
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 233


 7629              	.LFE207:
 7631              		.section	.text.HAL_FDCAN_TT_EnableTimeMarkGapControl,"ax",%progbits
 7632              		.align	1
 7633              		.global	HAL_FDCAN_TT_EnableTimeMarkGapControl
 7634              		.syntax unified
 7635              		.thumb
 7636              		.thumb_func
 7638              	HAL_FDCAN_TT_EnableTimeMarkGapControl:
 7639              	.LFB208:
4509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable gap control (finish only) by register time mark interrupt.
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         The next register time mark interrupt (TTIR.RTMI = "1") will finish
4513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the Gap and start the reference message.
4514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableTimeMarkGapControl(FDCAN_HandleTypeDef *hfdcan)
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7640              		.loc 1 4519 1
 7641              		.cfi_startproc
 7642              		@ args = 0, pretend = 0, frame = 16
 7643              		@ frame_needed = 1, uses_anonymous_args = 0
 7644              		@ link register save eliminated.
 7645 0000 80B4     		push	{r7}
 7646              	.LCFI377:
 7647              		.cfi_def_cfa_offset 4
 7648              		.cfi_offset 7, -4
 7649 0002 85B0     		sub	sp, sp, #20
 7650              	.LCFI378:
 7651              		.cfi_def_cfa_offset 24
 7652 0004 00AF     		add	r7, sp, #0
 7653              	.LCFI379:
 7654              		.cfi_def_cfa_register 7
 7655 0006 7860     		str	r0, [r7, #4]
4520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7656              		.loc 1 4520 12
 7657 0008 0023     		movs	r3, #0
 7658 000a FB60     		str	r3, [r7, #12]
4521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7659              		.loc 1 4521 26
 7660 000c 7B68     		ldr	r3, [r7, #4]
 7661 000e 93F89830 		ldrb	r3, [r3, #152]
 7662 0012 FB72     		strb	r3, [r7, #11]
4522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7663              		.loc 1 4526 6
 7664 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7665 0016 012B     		cmp	r3, #1
 7666 0018 02D0     		beq	.L368
 7667              		.loc 1 4526 40 discriminator 1
 7668 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7669 001c 022B     		cmp	r3, #2
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 234


 7670 001e 36D1     		bne	.L369
 7671              	.L368:
4527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7672              		.loc 1 4528 16
 7673 0020 7B68     		ldr	r3, [r7, #4]
 7674 0022 5B68     		ldr	r3, [r3, #4]
 7675              		.loc 1 4528 23
 7676 0024 9B68     		ldr	r3, [r3, #8]
 7677              		.loc 1 4528 31
 7678 0026 03F00303 		and	r3, r3, #3
 7679              		.loc 1 4528 8
 7680 002a 032B     		cmp	r3, #3
 7681 002c 25D0     		beq	.L370
4529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7682              		.loc 1 4531 13
 7683 002e 13E0     		b	.L371
 7684              	.L374:
4532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7685              		.loc 1 4534 12
 7686 0030 FB68     		ldr	r3, [r7, #12]
 7687 0032 322B     		cmp	r3, #50
 7688 0034 0DD9     		bls	.L372
4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7689              		.loc 1 4537 17
 7690 0036 7B68     		ldr	r3, [r7, #4]
 7691 0038 D3F89C30 		ldr	r3, [r3, #156]
 7692              		.loc 1 4537 29
 7693 003c 43F00102 		orr	r2, r3, #1
 7694 0040 7B68     		ldr	r3, [r7, #4]
 7695 0042 C3F89C20 		str	r2, [r3, #156]
4538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7696              		.loc 1 4540 25
 7697 0046 7B68     		ldr	r3, [r7, #4]
 7698 0048 0322     		movs	r2, #3
 7699 004a 83F89820 		strb	r2, [r3, #152]
4541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7700              		.loc 1 4542 18
 7701 004e 0123     		movs	r3, #1
 7702 0050 26E0     		b	.L373
 7703              	.L372:
4543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7704              		.loc 1 4546 16
 7705 0052 FB68     		ldr	r3, [r7, #12]
 7706 0054 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 235


 7707 0056 FB60     		str	r3, [r7, #12]
 7708              	.L371:
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7709              		.loc 1 4531 21
 7710 0058 7B68     		ldr	r3, [r7, #4]
 7711 005a 5B68     		ldr	r3, [r3, #4]
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7712              		.loc 1 4531 28
 7713 005c 5B69     		ldr	r3, [r3, #20]
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7714              		.loc 1 4531 36
 7715 005e 03F40043 		and	r3, r3, #32768
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7716              		.loc 1 4531 56
 7717 0062 002B     		cmp	r3, #0
 7718 0064 E4D1     		bne	.L374
4547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable gap control by register time mark interrupt */
4550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMG);
 7719              		.loc 1 4550 7
 7720 0066 7B68     		ldr	r3, [r7, #4]
 7721 0068 5B68     		ldr	r3, [r3, #4]
 7722 006a 5A69     		ldr	r2, [r3, #20]
 7723 006c 7B68     		ldr	r3, [r7, #4]
 7724 006e 5B68     		ldr	r3, [r3, #4]
 7725 0070 42F40062 		orr	r2, r2, #2048
 7726 0074 5A61     		str	r2, [r3, #20]
4551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7727              		.loc 1 4553 14
 7728 0076 0023     		movs	r3, #0
 7729 0078 12E0     		b	.L373
 7730              	.L370:
4554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7731              		.loc 1 4559 13
 7732 007a 7B68     		ldr	r3, [r7, #4]
 7733 007c D3F89C30 		ldr	r3, [r3, #156]
 7734              		.loc 1 4559 25
 7735 0080 43F01002 		orr	r2, r3, #16
 7736 0084 7B68     		ldr	r3, [r7, #4]
 7737 0086 C3F89C20 		str	r2, [r3, #156]
4560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7738              		.loc 1 4561 14
 7739 008a 0123     		movs	r3, #1
 7740 008c 08E0     		b	.L373
 7741              	.L369:
4562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 236


4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7742              		.loc 1 4567 11
 7743 008e 7B68     		ldr	r3, [r7, #4]
 7744 0090 D3F89C30 		ldr	r3, [r3, #156]
 7745              		.loc 1 4567 23
 7746 0094 43F00202 		orr	r2, r3, #2
 7747 0098 7B68     		ldr	r3, [r7, #4]
 7748 009a C3F89C20 		str	r2, [r3, #156]
4568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7749              		.loc 1 4569 12
 7750 009e 0123     		movs	r3, #1
 7751              	.L373:
4570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7752              		.loc 1 4571 1
 7753 00a0 1846     		mov	r0, r3
 7754 00a2 1437     		adds	r7, r7, #20
 7755              	.LCFI380:
 7756              		.cfi_def_cfa_offset 4
 7757 00a4 BD46     		mov	sp, r7
 7758              	.LCFI381:
 7759              		.cfi_def_cfa_register 13
 7760              		@ sp needed
 7761 00a6 5DF8047B 		ldr	r7, [sp], #4
 7762              	.LCFI382:
 7763              		.cfi_restore 7
 7764              		.cfi_def_cfa_offset 0
 7765 00aa 7047     		bx	lr
 7766              		.cfi_endproc
 7767              	.LFE208:
 7769              		.section	.text.HAL_FDCAN_TT_DisableTimeMarkGapControl,"ax",%progbits
 7770              		.align	1
 7771              		.global	HAL_FDCAN_TT_DisableTimeMarkGapControl
 7772              		.syntax unified
 7773              		.thumb
 7774              		.thumb_func
 7776              	HAL_FDCAN_TT_DisableTimeMarkGapControl:
 7777              	.LFB209:
4572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable gap control by register time mark interrupt.
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableTimeMarkGapControl(FDCAN_HandleTypeDef *hfdcan)
4580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7778              		.loc 1 4580 1
 7779              		.cfi_startproc
 7780              		@ args = 0, pretend = 0, frame = 16
 7781              		@ frame_needed = 1, uses_anonymous_args = 0
 7782              		@ link register save eliminated.
 7783 0000 80B4     		push	{r7}
 7784              	.LCFI383:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 237


 7785              		.cfi_def_cfa_offset 4
 7786              		.cfi_offset 7, -4
 7787 0002 85B0     		sub	sp, sp, #20
 7788              	.LCFI384:
 7789              		.cfi_def_cfa_offset 24
 7790 0004 00AF     		add	r7, sp, #0
 7791              	.LCFI385:
 7792              		.cfi_def_cfa_register 7
 7793 0006 7860     		str	r0, [r7, #4]
4581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7794              		.loc 1 4581 12
 7795 0008 0023     		movs	r3, #0
 7796 000a FB60     		str	r3, [r7, #12]
4582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7797              		.loc 1 4582 26
 7798 000c 7B68     		ldr	r3, [r7, #4]
 7799 000e 93F89830 		ldrb	r3, [r3, #152]
 7800 0012 FB72     		strb	r3, [r7, #11]
4583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7801              		.loc 1 4587 6
 7802 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7803 0016 012B     		cmp	r3, #1
 7804 0018 02D0     		beq	.L376
 7805              		.loc 1 4587 40 discriminator 1
 7806 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7807 001c 022B     		cmp	r3, #2
 7808 001e 36D1     		bne	.L377
 7809              	.L376:
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7810              		.loc 1 4589 16
 7811 0020 7B68     		ldr	r3, [r7, #4]
 7812 0022 5B68     		ldr	r3, [r3, #4]
 7813              		.loc 1 4589 23
 7814 0024 9B68     		ldr	r3, [r3, #8]
 7815              		.loc 1 4589 31
 7816 0026 03F00303 		and	r3, r3, #3
 7817              		.loc 1 4589 8
 7818 002a 032B     		cmp	r3, #3
 7819 002c 25D0     		beq	.L378
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7820              		.loc 1 4592 13
 7821 002e 13E0     		b	.L379
 7822              	.L382:
4593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7823              		.loc 1 4595 12
 7824 0030 FB68     		ldr	r3, [r7, #12]
 7825 0032 322B     		cmp	r3, #50
 7826 0034 0DD9     		bls	.L380
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 238


4596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7827              		.loc 1 4598 17
 7828 0036 7B68     		ldr	r3, [r7, #4]
 7829 0038 D3F89C30 		ldr	r3, [r3, #156]
 7830              		.loc 1 4598 29
 7831 003c 43F00102 		orr	r2, r3, #1
 7832 0040 7B68     		ldr	r3, [r7, #4]
 7833 0042 C3F89C20 		str	r2, [r3, #156]
4599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7834              		.loc 1 4601 25
 7835 0046 7B68     		ldr	r3, [r7, #4]
 7836 0048 0322     		movs	r2, #3
 7837 004a 83F89820 		strb	r2, [r3, #152]
4602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7838              		.loc 1 4603 18
 7839 004e 0123     		movs	r3, #1
 7840 0050 26E0     		b	.L381
 7841              	.L380:
4604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 7842              		.loc 1 4607 16
 7843 0052 FB68     		ldr	r3, [r7, #12]
 7844 0054 0133     		adds	r3, r3, #1
 7845 0056 FB60     		str	r3, [r7, #12]
 7846              	.L379:
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7847              		.loc 1 4592 21
 7848 0058 7B68     		ldr	r3, [r7, #4]
 7849 005a 5B68     		ldr	r3, [r3, #4]
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7850              		.loc 1 4592 28
 7851 005c 5B69     		ldr	r3, [r3, #20]
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7852              		.loc 1 4592 36
 7853 005e 03F40043 		and	r3, r3, #32768
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7854              		.loc 1 4592 56
 7855 0062 002B     		cmp	r3, #0
 7856 0064 E4D1     		bne	.L382
4608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable gap control by register time mark interrupt */
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMG);
 7857              		.loc 1 4611 7
 7858 0066 7B68     		ldr	r3, [r7, #4]
 7859 0068 5B68     		ldr	r3, [r3, #4]
 7860 006a 5A69     		ldr	r2, [r3, #20]
 7861 006c 7B68     		ldr	r3, [r7, #4]
 7862 006e 5B68     		ldr	r3, [r3, #4]
 7863 0070 22F40062 		bic	r2, r2, #2048
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 239


 7864 0074 5A61     		str	r2, [r3, #20]
4612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 7865              		.loc 1 4614 14
 7866 0076 0023     		movs	r3, #0
 7867 0078 12E0     		b	.L381
 7868              	.L378:
4615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7869              		.loc 1 4620 13
 7870 007a 7B68     		ldr	r3, [r7, #4]
 7871 007c D3F89C30 		ldr	r3, [r3, #156]
 7872              		.loc 1 4620 25
 7873 0080 43F01002 		orr	r2, r3, #16
 7874 0084 7B68     		ldr	r3, [r7, #4]
 7875 0086 C3F89C20 		str	r2, [r3, #156]
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7876              		.loc 1 4622 14
 7877 008a 0123     		movs	r3, #1
 7878 008c 08E0     		b	.L381
 7879              	.L377:
4623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7880              		.loc 1 4628 11
 7881 008e 7B68     		ldr	r3, [r7, #4]
 7882 0090 D3F89C30 		ldr	r3, [r3, #156]
 7883              		.loc 1 4628 23
 7884 0094 43F00202 		orr	r2, r3, #2
 7885 0098 7B68     		ldr	r3, [r7, #4]
 7886 009a C3F89C20 		str	r2, [r3, #156]
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7887              		.loc 1 4630 12
 7888 009e 0123     		movs	r3, #1
 7889              	.L381:
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7890              		.loc 1 4632 1
 7891 00a0 1846     		mov	r0, r3
 7892 00a2 1437     		adds	r7, r7, #20
 7893              	.LCFI386:
 7894              		.cfi_def_cfa_offset 4
 7895 00a4 BD46     		mov	sp, r7
 7896              	.LCFI387:
 7897              		.cfi_def_cfa_register 13
 7898              		@ sp needed
 7899 00a6 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 240


 7900              	.LCFI388:
 7901              		.cfi_restore 7
 7902              		.cfi_def_cfa_offset 0
 7903 00aa 7047     		bx	lr
 7904              		.cfi_endproc
 7905              	.LFE209:
 7907              		.section	.text.HAL_FDCAN_TT_SetNextIsGap,"ax",%progbits
 7908              		.align	1
 7909              		.global	HAL_FDCAN_TT_SetNextIsGap
 7910              		.syntax unified
 7911              		.thumb
 7912              		.thumb_func
 7914              	HAL_FDCAN_TT_SetNextIsGap:
 7915              	.LFB210:
4633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmit next reference message with Next_is_Gap = "1".
4636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetNextIsGap(FDCAN_HandleTypeDef *hfdcan)
4641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7916              		.loc 1 4641 1
 7917              		.cfi_startproc
 7918              		@ args = 0, pretend = 0, frame = 16
 7919              		@ frame_needed = 1, uses_anonymous_args = 0
 7920              		@ link register save eliminated.
 7921 0000 80B4     		push	{r7}
 7922              	.LCFI389:
 7923              		.cfi_def_cfa_offset 4
 7924              		.cfi_offset 7, -4
 7925 0002 85B0     		sub	sp, sp, #20
 7926              	.LCFI390:
 7927              		.cfi_def_cfa_offset 24
 7928 0004 00AF     		add	r7, sp, #0
 7929              	.LCFI391:
 7930              		.cfi_def_cfa_register 7
 7931 0006 7860     		str	r0, [r7, #4]
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 7932              		.loc 1 4642 12
 7933 0008 0023     		movs	r3, #0
 7934 000a FB60     		str	r3, [r7, #12]
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7935              		.loc 1 4643 26
 7936 000c 7B68     		ldr	r3, [r7, #4]
 7937 000e 93F89830 		ldrb	r3, [r3, #152]
 7938 0012 FB72     		strb	r3, [r7, #11]
4644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7939              		.loc 1 4648 6
 7940 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7941 0016 012B     		cmp	r3, #1
 7942 0018 02D0     		beq	.L384
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 241


 7943              		.loc 1 4648 40 discriminator 1
 7944 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 7945 001c 022B     		cmp	r3, #2
 7946 001e 47D1     		bne	.L385
 7947              	.L384:
4649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the node is configured for external event-synchronized TT operation */
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_GEN) != FDCAN_TTOCF_GEN)
 7948              		.loc 1 4651 16
 7949 0020 7B68     		ldr	r3, [r7, #4]
 7950 0022 5B68     		ldr	r3, [r3, #4]
 7951              		.loc 1 4651 23
 7952 0024 9B68     		ldr	r3, [r3, #8]
 7953              		.loc 1 4651 31
 7954 0026 03F00803 		and	r3, r3, #8
 7955              		.loc 1 4651 8
 7956 002a 082B     		cmp	r3, #8
 7957 002c 09D0     		beq	.L386
4652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 7958              		.loc 1 4654 13
 7959 002e 7B68     		ldr	r3, [r7, #4]
 7960 0030 D3F89C30 		ldr	r3, [r3, #156]
 7961              		.loc 1 4654 25
 7962 0034 43F01002 		orr	r2, r3, #16
 7963 0038 7B68     		ldr	r3, [r7, #4]
 7964 003a C3F89C20 		str	r2, [r3, #156]
4655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7965              		.loc 1 4656 14
 7966 003e 0123     		movs	r3, #1
 7967 0040 3FE0     		b	.L387
 7968              	.L386:
4657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 7969              		.loc 1 4659 16
 7970 0042 7B68     		ldr	r3, [r7, #4]
 7971 0044 5B68     		ldr	r3, [r3, #4]
 7972              		.loc 1 4659 23
 7973 0046 9B68     		ldr	r3, [r3, #8]
 7974              		.loc 1 4659 31
 7975 0048 03F00303 		and	r3, r3, #3
 7976              		.loc 1 4659 8
 7977 004c 032B     		cmp	r3, #3
 7978 004e 25D0     		beq	.L388
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 7979              		.loc 1 4662 13
 7980 0050 13E0     		b	.L389
 7981              	.L391:
4663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 7982              		.loc 1 4665 12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 242


 7983 0052 FB68     		ldr	r3, [r7, #12]
 7984 0054 322B     		cmp	r3, #50
 7985 0056 0DD9     		bls	.L390
4666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7986              		.loc 1 4668 17
 7987 0058 7B68     		ldr	r3, [r7, #4]
 7988 005a D3F89C30 		ldr	r3, [r3, #156]
 7989              		.loc 1 4668 29
 7990 005e 43F00102 		orr	r2, r3, #1
 7991 0062 7B68     		ldr	r3, [r7, #4]
 7992 0064 C3F89C20 		str	r2, [r3, #156]
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7993              		.loc 1 4671 25
 7994 0068 7B68     		ldr	r3, [r7, #4]
 7995 006a 0322     		movs	r2, #3
 7996 006c 83F89820 		strb	r2, [r3, #152]
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 7997              		.loc 1 4673 18
 7998 0070 0123     		movs	r3, #1
 7999 0072 26E0     		b	.L387
 8000              	.L390:
4674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 8001              		.loc 1 4677 16
 8002 0074 FB68     		ldr	r3, [r7, #12]
 8003 0076 0133     		adds	r3, r3, #1
 8004 0078 FB60     		str	r3, [r7, #12]
 8005              	.L389:
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8006              		.loc 1 4662 21
 8007 007a 7B68     		ldr	r3, [r7, #4]
 8008 007c 5B68     		ldr	r3, [r3, #4]
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8009              		.loc 1 4662 28
 8010 007e 5B69     		ldr	r3, [r3, #20]
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8011              		.loc 1 4662 36
 8012 0080 03F40043 		and	r3, r3, #32768
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8013              		.loc 1 4662 56
 8014 0084 002B     		cmp	r3, #0
 8015 0086 E4D1     		bne	.L391
4678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Set Next is Gap */
4681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_NIG);
 8016              		.loc 1 4681 7
 8017 0088 7B68     		ldr	r3, [r7, #4]
 8018 008a 5B68     		ldr	r3, [r3, #4]
 8019 008c 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 243


 8020 008e 7B68     		ldr	r3, [r7, #4]
 8021 0090 5B68     		ldr	r3, [r3, #4]
 8022 0092 42F48052 		orr	r2, r2, #4096
 8023 0096 5A61     		str	r2, [r3, #20]
4682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 8024              		.loc 1 4684 14
 8025 0098 0023     		movs	r3, #0
 8026 009a 12E0     		b	.L387
 8027              	.L388:
4685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 8028              		.loc 1 4690 13
 8029 009c 7B68     		ldr	r3, [r7, #4]
 8030 009e D3F89C30 		ldr	r3, [r3, #156]
 8031              		.loc 1 4690 25
 8032 00a2 43F01002 		orr	r2, r3, #16
 8033 00a6 7B68     		ldr	r3, [r7, #4]
 8034 00a8 C3F89C20 		str	r2, [r3, #156]
4691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8035              		.loc 1 4692 14
 8036 00ac 0123     		movs	r3, #1
 8037 00ae 08E0     		b	.L387
 8038              	.L385:
4693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8039              		.loc 1 4698 11
 8040 00b0 7B68     		ldr	r3, [r7, #4]
 8041 00b2 D3F89C30 		ldr	r3, [r3, #156]
 8042              		.loc 1 4698 23
 8043 00b6 43F00202 		orr	r2, r3, #2
 8044 00ba 7B68     		ldr	r3, [r7, #4]
 8045 00bc C3F89C20 		str	r2, [r3, #156]
4699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8046              		.loc 1 4700 12
 8047 00c0 0123     		movs	r3, #1
 8048              	.L387:
4701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8049              		.loc 1 4702 1
 8050 00c2 1846     		mov	r0, r3
 8051 00c4 1437     		adds	r7, r7, #20
 8052              	.LCFI392:
 8053              		.cfi_def_cfa_offset 4
 8054 00c6 BD46     		mov	sp, r7
 8055              	.LCFI393:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 244


 8056              		.cfi_def_cfa_register 13
 8057              		@ sp needed
 8058 00c8 5DF8047B 		ldr	r7, [sp], #4
 8059              	.LCFI394:
 8060              		.cfi_restore 7
 8061              		.cfi_def_cfa_offset 0
 8062 00cc 7047     		bx	lr
 8063              		.cfi_endproc
 8064              	.LFE210:
 8066              		.section	.text.HAL_FDCAN_TT_SetEndOfGap,"ax",%progbits
 8067              		.align	1
 8068              		.global	HAL_FDCAN_TT_SetEndOfGap
 8069              		.syntax unified
 8070              		.thumb
 8071              		.thumb_func
 8073              	HAL_FDCAN_TT_SetEndOfGap:
 8074              	.LFB211:
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Finish a Gap by requesting start of reference message.
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetEndOfGap(FDCAN_HandleTypeDef *hfdcan)
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8075              		.loc 1 4711 1
 8076              		.cfi_startproc
 8077              		@ args = 0, pretend = 0, frame = 16
 8078              		@ frame_needed = 1, uses_anonymous_args = 0
 8079              		@ link register save eliminated.
 8080 0000 80B4     		push	{r7}
 8081              	.LCFI395:
 8082              		.cfi_def_cfa_offset 4
 8083              		.cfi_offset 7, -4
 8084 0002 85B0     		sub	sp, sp, #20
 8085              	.LCFI396:
 8086              		.cfi_def_cfa_offset 24
 8087 0004 00AF     		add	r7, sp, #0
 8088              	.LCFI397:
 8089              		.cfi_def_cfa_register 7
 8090 0006 7860     		str	r0, [r7, #4]
4712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8091              		.loc 1 4712 12
 8092 0008 0023     		movs	r3, #0
 8093 000a FB60     		str	r3, [r7, #12]
4713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8094              		.loc 1 4713 26
 8095 000c 7B68     		ldr	r3, [r7, #4]
 8096 000e 93F89830 		ldrb	r3, [r3, #152]
 8097 0012 FB72     		strb	r3, [r7, #11]
4714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8098              		.loc 1 4718 6
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 245


 8099 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8100 0016 012B     		cmp	r3, #1
 8101 0018 02D0     		beq	.L393
 8102              		.loc 1 4718 40 discriminator 1
 8103 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8104 001c 022B     		cmp	r3, #2
 8105 001e 47D1     		bne	.L394
 8106              	.L393:
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the node is configured for external event-synchronized TT operation */
4721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_GEN) != FDCAN_TTOCF_GEN)
 8107              		.loc 1 4721 16
 8108 0020 7B68     		ldr	r3, [r7, #4]
 8109 0022 5B68     		ldr	r3, [r3, #4]
 8110              		.loc 1 4721 23
 8111 0024 9B68     		ldr	r3, [r3, #8]
 8112              		.loc 1 4721 31
 8113 0026 03F00803 		and	r3, r3, #8
 8114              		.loc 1 4721 8
 8115 002a 082B     		cmp	r3, #8
 8116 002c 09D0     		beq	.L395
4722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 8117              		.loc 1 4724 13
 8118 002e 7B68     		ldr	r3, [r7, #4]
 8119 0030 D3F89C30 		ldr	r3, [r3, #156]
 8120              		.loc 1 4724 25
 8121 0034 43F01002 		orr	r2, r3, #16
 8122 0038 7B68     		ldr	r3, [r7, #4]
 8123 003a C3F89C20 		str	r2, [r3, #156]
4725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8124              		.loc 1 4726 14
 8125 003e 0123     		movs	r3, #1
 8126 0040 3FE0     		b	.L396
 8127              	.L395:
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 8128              		.loc 1 4729 16
 8129 0042 7B68     		ldr	r3, [r7, #4]
 8130 0044 5B68     		ldr	r3, [r3, #4]
 8131              		.loc 1 4729 23
 8132 0046 9B68     		ldr	r3, [r3, #8]
 8133              		.loc 1 4729 31
 8134 0048 03F00303 		and	r3, r3, #3
 8135              		.loc 1 4729 8
 8136 004c 032B     		cmp	r3, #3
 8137 004e 25D0     		beq	.L397
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8138              		.loc 1 4732 13
 8139 0050 13E0     		b	.L398
 8140              	.L400:
4733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 246


4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 8141              		.loc 1 4735 12
 8142 0052 FB68     		ldr	r3, [r7, #12]
 8143 0054 322B     		cmp	r3, #50
 8144 0056 0DD9     		bls	.L399
4736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8145              		.loc 1 4738 17
 8146 0058 7B68     		ldr	r3, [r7, #4]
 8147 005a D3F89C30 		ldr	r3, [r3, #156]
 8148              		.loc 1 4738 29
 8149 005e 43F00102 		orr	r2, r3, #1
 8150 0062 7B68     		ldr	r3, [r7, #4]
 8151 0064 C3F89C20 		str	r2, [r3, #156]
4739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8152              		.loc 1 4741 25
 8153 0068 7B68     		ldr	r3, [r7, #4]
 8154 006a 0322     		movs	r2, #3
 8155 006c 83F89820 		strb	r2, [r3, #152]
4742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 8156              		.loc 1 4743 18
 8157 0070 0123     		movs	r3, #1
 8158 0072 26E0     		b	.L396
 8159              	.L399:
4744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 8160              		.loc 1 4747 16
 8161 0074 FB68     		ldr	r3, [r7, #12]
 8162 0076 0133     		adds	r3, r3, #1
 8163 0078 FB60     		str	r3, [r7, #12]
 8164              	.L398:
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8165              		.loc 1 4732 21
 8166 007a 7B68     		ldr	r3, [r7, #4]
 8167 007c 5B68     		ldr	r3, [r3, #4]
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8168              		.loc 1 4732 28
 8169 007e 5B69     		ldr	r3, [r3, #20]
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8170              		.loc 1 4732 36
 8171 0080 03F40043 		and	r3, r3, #32768
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8172              		.loc 1 4732 56
 8173 0084 002B     		cmp	r3, #0
 8174 0086 E4D1     		bne	.L400
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Set Finish Gap */
4751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_FGP);
 8175              		.loc 1 4751 7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 247


 8176 0088 7B68     		ldr	r3, [r7, #4]
 8177 008a 5B68     		ldr	r3, [r3, #4]
 8178 008c 5A69     		ldr	r2, [r3, #20]
 8179 008e 7B68     		ldr	r3, [r7, #4]
 8180 0090 5B68     		ldr	r3, [r3, #4]
 8181 0092 42F48062 		orr	r2, r2, #1024
 8182 0096 5A61     		str	r2, [r3, #20]
4752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 8183              		.loc 1 4754 14
 8184 0098 0023     		movs	r3, #0
 8185 009a 12E0     		b	.L396
 8186              	.L397:
4755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 8187              		.loc 1 4760 13
 8188 009c 7B68     		ldr	r3, [r7, #4]
 8189 009e D3F89C30 		ldr	r3, [r3, #156]
 8190              		.loc 1 4760 25
 8191 00a2 43F01002 		orr	r2, r3, #16
 8192 00a6 7B68     		ldr	r3, [r7, #4]
 8193 00a8 C3F89C20 		str	r2, [r3, #156]
4761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8194              		.loc 1 4762 14
 8195 00ac 0123     		movs	r3, #1
 8196 00ae 08E0     		b	.L396
 8197              	.L394:
4763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8198              		.loc 1 4768 11
 8199 00b0 7B68     		ldr	r3, [r7, #4]
 8200 00b2 D3F89C30 		ldr	r3, [r3, #156]
 8201              		.loc 1 4768 23
 8202 00b6 43F00202 		orr	r2, r3, #2
 8203 00ba 7B68     		ldr	r3, [r7, #4]
 8204 00bc C3F89C20 		str	r2, [r3, #156]
4769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8205              		.loc 1 4770 12
 8206 00c0 0123     		movs	r3, #1
 8207              	.L396:
4771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8208              		.loc 1 4772 1
 8209 00c2 1846     		mov	r0, r3
 8210 00c4 1437     		adds	r7, r7, #20
 8211              	.LCFI398:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 248


 8212              		.cfi_def_cfa_offset 4
 8213 00c6 BD46     		mov	sp, r7
 8214              	.LCFI399:
 8215              		.cfi_def_cfa_register 13
 8216              		@ sp needed
 8217 00c8 5DF8047B 		ldr	r7, [sp], #4
 8218              	.LCFI400:
 8219              		.cfi_restore 7
 8220              		.cfi_def_cfa_offset 0
 8221 00cc 7047     		bx	lr
 8222              		.cfi_endproc
 8223              	.LFE211:
 8225              		.section	.text.HAL_FDCAN_TT_ConfigExternalSyncPhase,"ax",%progbits
 8226              		.align	1
 8227              		.global	HAL_FDCAN_TT_ConfigExternalSyncPhase
 8228              		.syntax unified
 8229              		.thumb
 8230              		.thumb_func
 8232              	HAL_FDCAN_TT_ConfigExternalSyncPhase:
 8233              	.LFB212:
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure target phase used for external synchronization by event
4776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         trigger input pin fdcan1_evt.
4777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TargetPhase defines target value of cycle time when a rising edge
4780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         of fdcan1_evt is expected.
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0xFFFF.
4782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigExternalSyncPhase(FDCAN_HandleTypeDef *hfdcan, uint32_t Target
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8234              		.loc 1 4785 1
 8235              		.cfi_startproc
 8236              		@ args = 0, pretend = 0, frame = 16
 8237              		@ frame_needed = 1, uses_anonymous_args = 0
 8238              		@ link register save eliminated.
 8239 0000 80B4     		push	{r7}
 8240              	.LCFI401:
 8241              		.cfi_def_cfa_offset 4
 8242              		.cfi_offset 7, -4
 8243 0002 85B0     		sub	sp, sp, #20
 8244              	.LCFI402:
 8245              		.cfi_def_cfa_offset 24
 8246 0004 00AF     		add	r7, sp, #0
 8247              	.LCFI403:
 8248              		.cfi_def_cfa_register 7
 8249 0006 7860     		str	r0, [r7, #4]
 8250 0008 3960     		str	r1, [r7]
4786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8251              		.loc 1 4786 26
 8252 000a 7B68     		ldr	r3, [r7, #4]
 8253 000c 93F89830 		ldrb	r3, [r3, #152]
 8254 0010 FB73     		strb	r3, [r7, #15]
4787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 249


4789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TargetPhase, 0xFFFFU));
4791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8255              		.loc 1 4792 6
 8256 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 8257 0014 012B     		cmp	r3, #1
 8258 0016 02D0     		beq	.L402
 8259              		.loc 1 4792 40 discriminator 1
 8260 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 8261 001a 022B     		cmp	r3, #2
 8262 001c 1DD1     		bne	.L403
 8263              	.L402:
4793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no external schedule synchronization is pending */
4795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_ESCN) == FDCAN_TTOCN_ESCN)
 8264              		.loc 1 4795 16
 8265 001e 7B68     		ldr	r3, [r7, #4]
 8266 0020 5B68     		ldr	r3, [r3, #4]
 8267              		.loc 1 4795 23
 8268 0022 5B69     		ldr	r3, [r3, #20]
 8269              		.loc 1 4795 31
 8270 0024 03F40053 		and	r3, r3, #8192
 8271              		.loc 1 4795 8
 8272 0028 B3F5005F 		cmp	r3, #8192
 8273 002c 09D1     		bne	.L404
4796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 8274              		.loc 1 4798 13
 8275 002e 7B68     		ldr	r3, [r7, #4]
 8276 0030 D3F89C30 		ldr	r3, [r3, #156]
 8277              		.loc 1 4798 25
 8278 0034 43F04002 		orr	r2, r3, #64
 8279 0038 7B68     		ldr	r3, [r7, #4]
 8280 003a C3F89C20 		str	r2, [r3, #156]
4799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8281              		.loc 1 4800 14
 8282 003e 0123     		movs	r3, #1
 8283 0040 14E0     		b	.L405
 8284              	.L404:
4801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure cycle time target phase */
4804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTGTP, FDCAN_TTGTP_CTP, (TargetPhase << FDCAN_TTGTP_CTP_Pos));
 8285              		.loc 1 4804 5
 8286 0042 7B68     		ldr	r3, [r7, #4]
 8287 0044 5B68     		ldr	r3, [r3, #4]
 8288 0046 9B69     		ldr	r3, [r3, #24]
 8289 0048 99B2     		uxth	r1, r3
 8290 004a 3B68     		ldr	r3, [r7]
 8291 004c 1A04     		lsls	r2, r3, #16
 8292 004e 7B68     		ldr	r3, [r7, #4]
 8293 0050 5B68     		ldr	r3, [r3, #4]
 8294 0052 0A43     		orrs	r2, r2, r1
 8295 0054 9A61     		str	r2, [r3, #24]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 250


4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8296              		.loc 1 4807 12
 8297 0056 0023     		movs	r3, #0
 8298 0058 08E0     		b	.L405
 8299              	.L403:
4808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8300              		.loc 1 4812 11
 8301 005a 7B68     		ldr	r3, [r7, #4]
 8302 005c D3F89C30 		ldr	r3, [r3, #156]
 8303              		.loc 1 4812 23
 8304 0060 43F00202 		orr	r2, r3, #2
 8305 0064 7B68     		ldr	r3, [r7, #4]
 8306 0066 C3F89C20 		str	r2, [r3, #156]
4813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8307              		.loc 1 4814 12
 8308 006a 0123     		movs	r3, #1
 8309              	.L405:
4815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8310              		.loc 1 4816 1
 8311 006c 1846     		mov	r0, r3
 8312 006e 1437     		adds	r7, r7, #20
 8313              	.LCFI404:
 8314              		.cfi_def_cfa_offset 4
 8315 0070 BD46     		mov	sp, r7
 8316              	.LCFI405:
 8317              		.cfi_def_cfa_register 13
 8318              		@ sp needed
 8319 0072 5DF8047B 		ldr	r7, [sp], #4
 8320              	.LCFI406:
 8321              		.cfi_restore 7
 8322              		.cfi_def_cfa_offset 0
 8323 0076 7047     		bx	lr
 8324              		.cfi_endproc
 8325              	.LFE212:
 8327              		.section	.text.HAL_FDCAN_TT_EnableExternalSynchronization,"ax",%progbits
 8328              		.align	1
 8329              		.global	HAL_FDCAN_TT_EnableExternalSynchronization
 8330              		.syntax unified
 8331              		.thumb
 8332              		.thumb_func
 8334              	HAL_FDCAN_TT_EnableExternalSynchronization:
 8335              	.LFB213:
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Synchronize the phase of the FDCAN schedule to an external schedule
4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         using event trigger input pin fdcan1_evt.
4821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 251


4824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableExternalSynchronization(FDCAN_HandleTypeDef *hfdcan)
4826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8336              		.loc 1 4826 1
 8337              		.cfi_startproc
 8338              		@ args = 0, pretend = 0, frame = 16
 8339              		@ frame_needed = 1, uses_anonymous_args = 0
 8340              		@ link register save eliminated.
 8341 0000 80B4     		push	{r7}
 8342              	.LCFI407:
 8343              		.cfi_def_cfa_offset 4
 8344              		.cfi_offset 7, -4
 8345 0002 85B0     		sub	sp, sp, #20
 8346              	.LCFI408:
 8347              		.cfi_def_cfa_offset 24
 8348 0004 00AF     		add	r7, sp, #0
 8349              	.LCFI409:
 8350              		.cfi_def_cfa_register 7
 8351 0006 7860     		str	r0, [r7, #4]
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8352              		.loc 1 4827 12
 8353 0008 0023     		movs	r3, #0
 8354 000a FB60     		str	r3, [r7, #12]
4828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8355              		.loc 1 4828 26
 8356 000c 7B68     		ldr	r3, [r7, #4]
 8357 000e 93F89830 		ldrb	r3, [r3, #152]
 8358 0012 FB72     		strb	r3, [r7, #11]
4829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8359              		.loc 1 4833 6
 8360 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8361 0016 012B     		cmp	r3, #1
 8362 0018 17D0     		beq	.L409
 8363              		.loc 1 4833 40 discriminator 1
 8364 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8365 001c 022B     		cmp	r3, #2
 8366 001e 25D1     		bne	.L408
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8367              		.loc 1 4836 11
 8368 0020 13E0     		b	.L409
 8369              	.L412:
4837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8370              		.loc 1 4839 10
 8371 0022 FB68     		ldr	r3, [r7, #12]
 8372 0024 322B     		cmp	r3, #50
 8373 0026 0DD9     		bls	.L410
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 252


 8374              		.loc 1 4842 15
 8375 0028 7B68     		ldr	r3, [r7, #4]
 8376 002a D3F89C30 		ldr	r3, [r3, #156]
 8377              		.loc 1 4842 27
 8378 002e 43F00102 		orr	r2, r3, #1
 8379 0032 7B68     		ldr	r3, [r7, #4]
 8380 0034 C3F89C20 		str	r2, [r3, #156]
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8381              		.loc 1 4845 23
 8382 0038 7B68     		ldr	r3, [r7, #4]
 8383 003a 0322     		movs	r2, #3
 8384 003c 83F89820 		strb	r2, [r3, #152]
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8385              		.loc 1 4847 16
 8386 0040 0123     		movs	r3, #1
 8387 0042 1CE0     		b	.L411
 8388              	.L410:
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8389              		.loc 1 4851 14
 8390 0044 FB68     		ldr	r3, [r7, #12]
 8391 0046 0133     		adds	r3, r3, #1
 8392 0048 FB60     		str	r3, [r7, #12]
 8393              	.L409:
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8394              		.loc 1 4836 19
 8395 004a 7B68     		ldr	r3, [r7, #4]
 8396 004c 5B68     		ldr	r3, [r3, #4]
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8397              		.loc 1 4836 26
 8398 004e 5B69     		ldr	r3, [r3, #20]
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8399              		.loc 1 4836 34
 8400 0050 03F40043 		and	r3, r3, #32768
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8401              		.loc 1 4836 54
 8402 0054 002B     		cmp	r3, #0
 8403 0056 E4D1     		bne	.L412
4852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable external synchronization */
4855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ESCN);
 8404              		.loc 1 4855 5
 8405 0058 7B68     		ldr	r3, [r7, #4]
 8406 005a 5B68     		ldr	r3, [r3, #4]
 8407 005c 5A69     		ldr	r2, [r3, #20]
 8408 005e 7B68     		ldr	r3, [r7, #4]
 8409 0060 5B68     		ldr	r3, [r3, #4]
 8410 0062 42F40052 		orr	r2, r2, #8192
 8411 0066 5A61     		str	r2, [r3, #20]
4856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 253


4858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8412              		.loc 1 4858 12
 8413 0068 0023     		movs	r3, #0
 8414 006a 08E0     		b	.L411
 8415              	.L408:
4859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8416              		.loc 1 4863 11
 8417 006c 7B68     		ldr	r3, [r7, #4]
 8418 006e D3F89C30 		ldr	r3, [r3, #156]
 8419              		.loc 1 4863 23
 8420 0072 43F00202 		orr	r2, r3, #2
 8421 0076 7B68     		ldr	r3, [r7, #4]
 8422 0078 C3F89C20 		str	r2, [r3, #156]
4864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8423              		.loc 1 4865 12
 8424 007c 0123     		movs	r3, #1
 8425              	.L411:
4866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8426              		.loc 1 4867 1
 8427 007e 1846     		mov	r0, r3
 8428 0080 1437     		adds	r7, r7, #20
 8429              	.LCFI410:
 8430              		.cfi_def_cfa_offset 4
 8431 0082 BD46     		mov	sp, r7
 8432              	.LCFI411:
 8433              		.cfi_def_cfa_register 13
 8434              		@ sp needed
 8435 0084 5DF8047B 		ldr	r7, [sp], #4
 8436              	.LCFI412:
 8437              		.cfi_restore 7
 8438              		.cfi_def_cfa_offset 0
 8439 0088 7047     		bx	lr
 8440              		.cfi_endproc
 8441              	.LFE213:
 8443              		.section	.text.HAL_FDCAN_TT_DisableExternalSynchronization,"ax",%progbits
 8444              		.align	1
 8445              		.global	HAL_FDCAN_TT_DisableExternalSynchronization
 8446              		.syntax unified
 8447              		.thumb
 8448              		.thumb_func
 8450              	HAL_FDCAN_TT_DisableExternalSynchronization:
 8451              	.LFB214:
4868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable external schedule synchronization.
4871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableExternalSynchronization(FDCAN_HandleTypeDef *hfdcan)
4876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 254


 8452              		.loc 1 4876 1
 8453              		.cfi_startproc
 8454              		@ args = 0, pretend = 0, frame = 16
 8455              		@ frame_needed = 1, uses_anonymous_args = 0
 8456              		@ link register save eliminated.
 8457 0000 80B4     		push	{r7}
 8458              	.LCFI413:
 8459              		.cfi_def_cfa_offset 4
 8460              		.cfi_offset 7, -4
 8461 0002 85B0     		sub	sp, sp, #20
 8462              	.LCFI414:
 8463              		.cfi_def_cfa_offset 24
 8464 0004 00AF     		add	r7, sp, #0
 8465              	.LCFI415:
 8466              		.cfi_def_cfa_register 7
 8467 0006 7860     		str	r0, [r7, #4]
4877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8468              		.loc 1 4877 12
 8469 0008 0023     		movs	r3, #0
 8470 000a FB60     		str	r3, [r7, #12]
4878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8471              		.loc 1 4878 26
 8472 000c 7B68     		ldr	r3, [r7, #4]
 8473 000e 93F89830 		ldrb	r3, [r3, #152]
 8474 0012 FB72     		strb	r3, [r7, #11]
4879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8475              		.loc 1 4883 6
 8476 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8477 0016 012B     		cmp	r3, #1
 8478 0018 17D0     		beq	.L416
 8479              		.loc 1 4883 40 discriminator 1
 8480 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8481 001c 022B     		cmp	r3, #2
 8482 001e 25D1     		bne	.L415
4884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8483              		.loc 1 4886 11
 8484 0020 13E0     		b	.L416
 8485              	.L419:
4887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8486              		.loc 1 4889 10
 8487 0022 FB68     		ldr	r3, [r7, #12]
 8488 0024 322B     		cmp	r3, #50
 8489 0026 0DD9     		bls	.L417
4890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8490              		.loc 1 4892 15
 8491 0028 7B68     		ldr	r3, [r7, #4]
 8492 002a D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 255


 8493              		.loc 1 4892 27
 8494 002e 43F00102 		orr	r2, r3, #1
 8495 0032 7B68     		ldr	r3, [r7, #4]
 8496 0034 C3F89C20 		str	r2, [r3, #156]
4893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8497              		.loc 1 4895 23
 8498 0038 7B68     		ldr	r3, [r7, #4]
 8499 003a 0322     		movs	r2, #3
 8500 003c 83F89820 		strb	r2, [r3, #152]
4896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8501              		.loc 1 4897 16
 8502 0040 0123     		movs	r3, #1
 8503 0042 1CE0     		b	.L418
 8504              	.L417:
4898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8505              		.loc 1 4901 14
 8506 0044 FB68     		ldr	r3, [r7, #12]
 8507 0046 0133     		adds	r3, r3, #1
 8508 0048 FB60     		str	r3, [r7, #12]
 8509              	.L416:
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8510              		.loc 1 4886 19
 8511 004a 7B68     		ldr	r3, [r7, #4]
 8512 004c 5B68     		ldr	r3, [r3, #4]
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8513              		.loc 1 4886 26
 8514 004e 5B69     		ldr	r3, [r3, #20]
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8515              		.loc 1 4886 34
 8516 0050 03F40043 		and	r3, r3, #32768
4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8517              		.loc 1 4886 54
 8518 0054 002B     		cmp	r3, #0
 8519 0056 E4D1     		bne	.L419
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable external synchronization */
4905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ESCN);
 8520              		.loc 1 4905 5
 8521 0058 7B68     		ldr	r3, [r7, #4]
 8522 005a 5B68     		ldr	r3, [r3, #4]
 8523 005c 5A69     		ldr	r2, [r3, #20]
 8524 005e 7B68     		ldr	r3, [r7, #4]
 8525 0060 5B68     		ldr	r3, [r3, #4]
 8526 0062 22F40052 		bic	r2, r2, #8192
 8527 0066 5A61     		str	r2, [r3, #20]
4906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8528              		.loc 1 4908 12
 8529 0068 0023     		movs	r3, #0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 256


 8530 006a 08E0     		b	.L418
 8531              	.L415:
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8532              		.loc 1 4913 11
 8533 006c 7B68     		ldr	r3, [r7, #4]
 8534 006e D3F89C30 		ldr	r3, [r3, #156]
 8535              		.loc 1 4913 23
 8536 0072 43F00202 		orr	r2, r3, #2
 8537 0076 7B68     		ldr	r3, [r7, #4]
 8538 0078 C3F89C20 		str	r2, [r3, #156]
4914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8539              		.loc 1 4915 12
 8540 007c 0123     		movs	r3, #1
 8541              	.L418:
4916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8542              		.loc 1 4917 1
 8543 007e 1846     		mov	r0, r3
 8544 0080 1437     		adds	r7, r7, #20
 8545              	.LCFI416:
 8546              		.cfi_def_cfa_offset 4
 8547 0082 BD46     		mov	sp, r7
 8548              	.LCFI417:
 8549              		.cfi_def_cfa_register 13
 8550              		@ sp needed
 8551 0084 5DF8047B 		ldr	r7, [sp], #4
 8552              	.LCFI418:
 8553              		.cfi_restore 7
 8554              		.cfi_def_cfa_offset 0
 8555 0088 7047     		bx	lr
 8556              		.cfi_endproc
 8557              	.LFE214:
 8559              		.section	.text.HAL_FDCAN_TT_GetOperationStatus,"ax",%progbits
 8560              		.align	1
 8561              		.global	HAL_FDCAN_TT_GetOperationStatus
 8562              		.syntax unified
 8563              		.thumb
 8564              		.thumb_func
 8566              	HAL_FDCAN_TT_GetOperationStatus:
 8567              	.LFB215:
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get TT operation status.
4921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTOpStatus pointer to an FDCAN_TTOperationStatusTypeDef structure.
4924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_GetOperationStatus(const FDCAN_HandleTypeDef *hfdcan,
4927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                   FDCAN_TTOperationStatusTypeDef *TTOpStatus)
4928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8568              		.loc 1 4928 1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 257


 8569              		.cfi_startproc
 8570              		@ args = 0, pretend = 0, frame = 16
 8571              		@ frame_needed = 1, uses_anonymous_args = 0
 8572              		@ link register save eliminated.
 8573 0000 80B4     		push	{r7}
 8574              	.LCFI419:
 8575              		.cfi_def_cfa_offset 4
 8576              		.cfi_offset 7, -4
 8577 0002 85B0     		sub	sp, sp, #20
 8578              	.LCFI420:
 8579              		.cfi_def_cfa_offset 24
 8580 0004 00AF     		add	r7, sp, #0
 8581              	.LCFI421:
 8582              		.cfi_def_cfa_register 7
 8583 0006 7860     		str	r0, [r7, #4]
 8584 0008 3960     		str	r1, [r7]
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTStatusReg;
4930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the TT operation status register */
4935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTStatusReg = READ_REG(hfdcan->ttcan->TTOST);
 8585              		.loc 1 4935 17
 8586 000a 7B68     		ldr	r3, [r7, #4]
 8587 000c 5B68     		ldr	r3, [r3, #4]
 8588              		.loc 1 4935 15
 8589 000e DB6A     		ldr	r3, [r3, #44]
 8590 0010 FB60     		str	r3, [r7, #12]
4936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the TT operation status structure */
4938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ErrorLevel = (TTStatusReg & FDCAN_TTOST_EL);
 8591              		.loc 1 4938 41
 8592 0012 FB68     		ldr	r3, [r7, #12]
 8593 0014 03F00302 		and	r2, r3, #3
 8594              		.loc 1 4938 26
 8595 0018 3B68     		ldr	r3, [r7]
 8596 001a 1A60     		str	r2, [r3]
4939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->MasterState = (TTStatusReg & FDCAN_TTOST_MS);
 8597              		.loc 1 4939 42
 8598 001c FB68     		ldr	r3, [r7, #12]
 8599 001e 03F00C02 		and	r2, r3, #12
 8600              		.loc 1 4939 27
 8601 0022 3B68     		ldr	r3, [r7]
 8602 0024 5A60     		str	r2, [r3, #4]
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->SyncState = (TTStatusReg & FDCAN_TTOST_SYS);
 8603              		.loc 1 4940 40
 8604 0026 FB68     		ldr	r3, [r7, #12]
 8605 0028 03F03002 		and	r2, r3, #48
 8606              		.loc 1 4940 25
 8607 002c 3B68     		ldr	r3, [r7]
 8608 002e 9A60     		str	r2, [r3, #8]
4941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GTimeQuality = ((TTStatusReg & FDCAN_TTOST_QGTP) >> FDCAN_TTOST_QGTP_Pos);
 8609              		.loc 1 4941 64
 8610 0030 FB68     		ldr	r3, [r7, #12]
 8611 0032 9B09     		lsrs	r3, r3, #6
 8612 0034 03F00102 		and	r2, r3, #1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 258


 8613              		.loc 1 4941 28
 8614 0038 3B68     		ldr	r3, [r7]
 8615 003a DA60     		str	r2, [r3, #12]
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ClockQuality = ((TTStatusReg & FDCAN_TTOST_QCS) >> FDCAN_TTOST_QCS_Pos);
 8616              		.loc 1 4942 63
 8617 003c FB68     		ldr	r3, [r7, #12]
 8618 003e DB09     		lsrs	r3, r3, #7
 8619 0040 03F00102 		and	r2, r3, #1
 8620              		.loc 1 4942 28
 8621 0044 3B68     		ldr	r3, [r7]
 8622 0046 1A61     		str	r2, [r3, #16]
4943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->RefTrigOffset = ((TTStatusReg & FDCAN_TTOST_RTO) >> FDCAN_TTOST_RTO_Pos);
 8623              		.loc 1 4943 64
 8624 0048 FB68     		ldr	r3, [r7, #12]
 8625 004a 1B0A     		lsrs	r3, r3, #8
 8626 004c DAB2     		uxtb	r2, r3
 8627              		.loc 1 4943 29
 8628 004e 3B68     		ldr	r3, [r7]
 8629 0050 5A61     		str	r2, [r3, #20]
4944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GTimeDiscPending = ((TTStatusReg & FDCAN_TTOST_WGTD) >> FDCAN_TTOST_WGTD_Pos);
 8630              		.loc 1 4944 68
 8631 0052 FB68     		ldr	r3, [r7, #12]
 8632 0054 9B0D     		lsrs	r3, r3, #22
 8633 0056 03F00102 		and	r2, r3, #1
 8634              		.loc 1 4944 32
 8635 005a 3B68     		ldr	r3, [r7]
 8636 005c 9A61     		str	r2, [r3, #24]
4945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GapFinished = ((TTStatusReg & FDCAN_TTOST_GFI) >> FDCAN_TTOST_GFI_Pos);
 8637              		.loc 1 4945 62
 8638 005e FB68     		ldr	r3, [r7, #12]
 8639 0060 DB0D     		lsrs	r3, r3, #23
 8640 0062 03F00102 		and	r2, r3, #1
 8641              		.loc 1 4945 27
 8642 0066 3B68     		ldr	r3, [r7]
 8643 0068 DA61     		str	r2, [r3, #28]
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->MasterPriority = ((TTStatusReg & FDCAN_TTOST_TMP) >> FDCAN_TTOST_TMP_Pos);
 8644              		.loc 1 4946 65
 8645 006a FB68     		ldr	r3, [r7, #12]
 8646 006c 1B0E     		lsrs	r3, r3, #24
 8647 006e 03F00702 		and	r2, r3, #7
 8648              		.loc 1 4946 30
 8649 0072 3B68     		ldr	r3, [r7]
 8650 0074 1A62     		str	r2, [r3, #32]
4947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GapStarted = ((TTStatusReg & FDCAN_TTOST_GSI) >> FDCAN_TTOST_GSI_Pos);
 8651              		.loc 1 4947 61
 8652 0076 FB68     		ldr	r3, [r7, #12]
 8653 0078 DB0E     		lsrs	r3, r3, #27
 8654 007a 03F00102 		and	r2, r3, #1
 8655              		.loc 1 4947 26
 8656 007e 3B68     		ldr	r3, [r7]
 8657 0080 5A62     		str	r2, [r3, #36]
4948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->WaitForEvt = ((TTStatusReg & FDCAN_TTOST_WFE) >> FDCAN_TTOST_WFE_Pos);
 8658              		.loc 1 4948 61
 8659 0082 FB68     		ldr	r3, [r7, #12]
 8660 0084 1B0F     		lsrs	r3, r3, #28
 8661 0086 03F00102 		and	r2, r3, #1
 8662              		.loc 1 4948 26
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 259


 8663 008a 3B68     		ldr	r3, [r7]
 8664 008c 9A62     		str	r2, [r3, #40]
4949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->AppWdgEvt = ((TTStatusReg & FDCAN_TTOST_AWE) >> FDCAN_TTOST_AWE_Pos);
 8665              		.loc 1 4949 60
 8666 008e FB68     		ldr	r3, [r7, #12]
 8667 0090 5B0F     		lsrs	r3, r3, #29
 8668 0092 03F00102 		and	r2, r3, #1
 8669              		.loc 1 4949 25
 8670 0096 3B68     		ldr	r3, [r7]
 8671 0098 DA62     		str	r2, [r3, #44]
4950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ECSPending = ((TTStatusReg & FDCAN_TTOST_WECS) >> FDCAN_TTOST_WECS_Pos);
 8672              		.loc 1 4950 62
 8673 009a FB68     		ldr	r3, [r7, #12]
 8674 009c 9B0F     		lsrs	r3, r3, #30
 8675 009e 03F00102 		and	r2, r3, #1
 8676              		.loc 1 4950 26
 8677 00a2 3B68     		ldr	r3, [r7]
 8678 00a4 1A63     		str	r2, [r3, #48]
4951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->PhaseLock = ((TTStatusReg & FDCAN_TTOST_SPL) >> FDCAN_TTOST_SPL_Pos);
 8679              		.loc 1 4951 60
 8680 00a6 FB68     		ldr	r3, [r7, #12]
 8681 00a8 DA0F     		lsrs	r2, r3, #31
 8682              		.loc 1 4951 25
 8683 00aa 3B68     		ldr	r3, [r7]
 8684 00ac 5A63     		str	r2, [r3, #52]
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
4954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 8685              		.loc 1 4954 10
 8686 00ae 0023     		movs	r3, #0
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8687              		.loc 1 4955 1
 8688 00b0 1846     		mov	r0, r3
 8689 00b2 1437     		adds	r7, r7, #20
 8690              	.LCFI422:
 8691              		.cfi_def_cfa_offset 4
 8692 00b4 BD46     		mov	sp, r7
 8693              	.LCFI423:
 8694              		.cfi_def_cfa_register 13
 8695              		@ sp needed
 8696 00b6 5DF8047B 		ldr	r7, [sp], #4
 8697              	.LCFI424:
 8698              		.cfi_restore 7
 8699              		.cfi_def_cfa_offset 0
 8700 00ba 7047     		bx	lr
 8701              		.cfi_endproc
 8702              	.LFE215:
 8704              		.section	.text.HAL_FDCAN_ConfigInterruptLines,"ax",%progbits
 8705              		.align	1
 8706              		.global	HAL_FDCAN_ConfigInterruptLines
 8707              		.syntax unified
 8708              		.thumb
 8709              		.thumb_func
 8711              	HAL_FDCAN_ConfigInterruptLines:
 8712              	.LFB216:
4956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 260


4958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
4959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group5 Interrupts management
4962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief    Interrupts management
4963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
4964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
4966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                        ##### Interrupts management #####
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
4968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigInterruptLines      : Assign interrupts to either Interrupt line 0 or 1
4970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigInterruptLines   : Assign TT interrupts to either Interrupt line 0 or 
4971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ActivateNotification      : Enable interrupts
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DeactivateNotification    : Disable interrupts
4973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ActivateNotification   : Enable TT interrupts
4974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DeactivateNotification : Disable TT interrupts
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IRQHandler                : Handles FDCAN interrupt request
4976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
4978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
4979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Assign interrupts to either Interrupt line 0 or 1.
4983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ITList indicates which interrupts will be assigned to the selected interrupt line.
4986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
4987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InterruptLine Interrupt line.
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Interrupt_Line.
4989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigInterruptLines(FDCAN_HandleTypeDef *hfdcan, uint32_t ITList, uint
4992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8713              		.loc 1 4992 1
 8714              		.cfi_startproc
 8715              		@ args = 0, pretend = 0, frame = 24
 8716              		@ frame_needed = 1, uses_anonymous_args = 0
 8717              		@ link register save eliminated.
 8718 0000 80B4     		push	{r7}
 8719              	.LCFI425:
 8720              		.cfi_def_cfa_offset 4
 8721              		.cfi_offset 7, -4
 8722 0002 87B0     		sub	sp, sp, #28
 8723              	.LCFI426:
 8724              		.cfi_def_cfa_offset 32
 8725 0004 00AF     		add	r7, sp, #0
 8726              	.LCFI427:
 8727              		.cfi_def_cfa_register 7
 8728 0006 F860     		str	r0, [r7, #12]
 8729 0008 B960     		str	r1, [r7, #8]
 8730 000a 7A60     		str	r2, [r7, #4]
4993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8731              		.loc 1 4993 26
 8732 000c FB68     		ldr	r3, [r7, #12]
 8733 000e 93F89830 		ldrb	r3, [r3, #152]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 261


 8734 0012 FB75     		strb	r3, [r7, #23]
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(ITList));
4997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT_LINE(InterruptLine));
4998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8735              		.loc 1 4999 6
 8736 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8737 0016 012B     		cmp	r3, #1
 8738 0018 02D0     		beq	.L423
 8739              		.loc 1 4999 40 discriminator 1
 8740 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8741 001c 022B     		cmp	r3, #2
 8742 001e 16D1     		bne	.L424
 8743              	.L423:
5000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Assign list of interrupts to the selected line */
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (InterruptLine == FDCAN_INTERRUPT_LINE0)
 8744              		.loc 1 5002 8
 8745 0020 7B68     		ldr	r3, [r7, #4]
 8746 0022 012B     		cmp	r3, #1
 8747 0024 09D1     		bne	.L425
5003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILS, ITList);
 8748              		.loc 1 5004 7
 8749 0026 FB68     		ldr	r3, [r7, #12]
 8750 0028 1B68     		ldr	r3, [r3]
 8751 002a 996D     		ldr	r1, [r3, #88]
 8752 002c BB68     		ldr	r3, [r7, #8]
 8753 002e DA43     		mvns	r2, r3
 8754 0030 FB68     		ldr	r3, [r7, #12]
 8755 0032 1B68     		ldr	r3, [r3]
 8756 0034 0A40     		ands	r2, r2, r1
 8757 0036 9A65     		str	r2, [r3, #88]
 8758 0038 07E0     		b	.L426
 8759              	.L425:
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* InterruptLine == FDCAN_INTERRUPT_LINE1 */
5007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILS, ITList);
 8760              		.loc 1 5008 7
 8761 003a FB68     		ldr	r3, [r7, #12]
 8762 003c 1B68     		ldr	r3, [r3]
 8763 003e 996D     		ldr	r1, [r3, #88]
 8764 0040 FB68     		ldr	r3, [r7, #12]
 8765 0042 1B68     		ldr	r3, [r3]
 8766 0044 BA68     		ldr	r2, [r7, #8]
 8767 0046 0A43     		orrs	r2, r2, r1
 8768 0048 9A65     		str	r2, [r3, #88]
 8769              	.L426:
5009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8770              		.loc 1 5012 12
 8771 004a 0023     		movs	r3, #0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 262


 8772 004c 08E0     		b	.L427
 8773              	.L424:
5013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8774              		.loc 1 5017 11
 8775 004e FB68     		ldr	r3, [r7, #12]
 8776 0050 D3F89C30 		ldr	r3, [r3, #156]
 8777              		.loc 1 5017 23
 8778 0054 43F00202 		orr	r2, r3, #2
 8779 0058 FB68     		ldr	r3, [r7, #12]
 8780 005a C3F89C20 		str	r2, [r3, #156]
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8781              		.loc 1 5019 12
 8782 005e 0123     		movs	r3, #1
 8783              	.L427:
5020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8784              		.loc 1 5021 1
 8785 0060 1846     		mov	r0, r3
 8786 0062 1C37     		adds	r7, r7, #28
 8787              	.LCFI428:
 8788              		.cfi_def_cfa_offset 4
 8789 0064 BD46     		mov	sp, r7
 8790              	.LCFI429:
 8791              		.cfi_def_cfa_register 13
 8792              		@ sp needed
 8793 0066 5DF8047B 		ldr	r7, [sp], #4
 8794              	.LCFI430:
 8795              		.cfi_restore 7
 8796              		.cfi_def_cfa_offset 0
 8797 006a 7047     		bx	lr
 8798              		.cfi_endproc
 8799              	.LFE216:
 8801              		.section	.text.HAL_FDCAN_TT_ConfigInterruptLines,"ax",%progbits
 8802              		.align	1
 8803              		.global	HAL_FDCAN_TT_ConfigInterruptLines
 8804              		.syntax unified
 8805              		.thumb
 8806              		.thumb_func
 8808              	HAL_FDCAN_TT_ConfigInterruptLines:
 8809              	.LFB217:
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Assign TT interrupts to either Interrupt line 0 or 1.
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTITList indicates which interrupts will be assigned to the selected interrupt line.
5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
5029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InterruptLine Interrupt line.
5030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Interrupt_Line.
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigInterruptLines(FDCAN_HandleTypeDef *hfdcan, uint32_t TTITList,
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 263


5034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                     uint32_t InterruptLine)
5035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8810              		.loc 1 5035 1
 8811              		.cfi_startproc
 8812              		@ args = 0, pretend = 0, frame = 24
 8813              		@ frame_needed = 1, uses_anonymous_args = 0
 8814              		@ link register save eliminated.
 8815 0000 80B4     		push	{r7}
 8816              	.LCFI431:
 8817              		.cfi_def_cfa_offset 4
 8818              		.cfi_offset 7, -4
 8819 0002 87B0     		sub	sp, sp, #28
 8820              	.LCFI432:
 8821              		.cfi_def_cfa_offset 32
 8822 0004 00AF     		add	r7, sp, #0
 8823              	.LCFI433:
 8824              		.cfi_def_cfa_register 7
 8825 0006 F860     		str	r0, [r7, #12]
 8826 0008 B960     		str	r1, [r7, #8]
 8827 000a 7A60     		str	r2, [r7, #4]
5036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8828              		.loc 1 5036 26
 8829 000c FB68     		ldr	r3, [r7, #12]
 8830 000e 93F89830 		ldrb	r3, [r3, #152]
 8831 0012 FB75     		strb	r3, [r7, #23]
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
5040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(TTITList));
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT_LINE(InterruptLine));
5042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8832              		.loc 1 5043 6
 8833 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8834 0016 012B     		cmp	r3, #1
 8835 0018 02D0     		beq	.L429
 8836              		.loc 1 5043 40 discriminator 1
 8837 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8838 001c 022B     		cmp	r3, #2
 8839 001e 16D1     		bne	.L430
 8840              	.L429:
5044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Assign list of interrupts to the selected line */
5046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (InterruptLine == FDCAN_INTERRUPT_LINE0)
 8841              		.loc 1 5046 8
 8842 0020 7B68     		ldr	r3, [r7, #4]
 8843 0022 012B     		cmp	r3, #1
 8844 0024 09D1     		bne	.L431
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTILS, TTITList);
 8845              		.loc 1 5048 7
 8846 0026 FB68     		ldr	r3, [r7, #12]
 8847 0028 5B68     		ldr	r3, [r3, #4]
 8848 002a 996A     		ldr	r1, [r3, #40]
 8849 002c BB68     		ldr	r3, [r7, #8]
 8850 002e DA43     		mvns	r2, r3
 8851 0030 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 264


 8852 0032 5B68     		ldr	r3, [r3, #4]
 8853 0034 0A40     		ands	r2, r2, r1
 8854 0036 9A62     		str	r2, [r3, #40]
 8855 0038 07E0     		b	.L432
 8856              	.L431:
5049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* InterruptLine == FDCAN_INTERRUPT_LINE1 */
5051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTILS, TTITList);
 8857              		.loc 1 5052 7
 8858 003a FB68     		ldr	r3, [r7, #12]
 8859 003c 5B68     		ldr	r3, [r3, #4]
 8860 003e 996A     		ldr	r1, [r3, #40]
 8861 0040 FB68     		ldr	r3, [r7, #12]
 8862 0042 5B68     		ldr	r3, [r3, #4]
 8863 0044 BA68     		ldr	r2, [r7, #8]
 8864 0046 0A43     		orrs	r2, r2, r1
 8865 0048 9A62     		str	r2, [r3, #40]
 8866              	.L432:
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8867              		.loc 1 5056 12
 8868 004a 0023     		movs	r3, #0
 8869 004c 08E0     		b	.L433
 8870              	.L430:
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8871              		.loc 1 5061 11
 8872 004e FB68     		ldr	r3, [r7, #12]
 8873 0050 D3F89C30 		ldr	r3, [r3, #156]
 8874              		.loc 1 5061 23
 8875 0054 43F00202 		orr	r2, r3, #2
 8876 0058 FB68     		ldr	r3, [r7, #12]
 8877 005a C3F89C20 		str	r2, [r3, #156]
5062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8878              		.loc 1 5063 12
 8879 005e 0123     		movs	r3, #1
 8880              	.L433:
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8881              		.loc 1 5065 1
 8882 0060 1846     		mov	r0, r3
 8883 0062 1C37     		adds	r7, r7, #28
 8884              	.LCFI434:
 8885              		.cfi_def_cfa_offset 4
 8886 0064 BD46     		mov	sp, r7
 8887              	.LCFI435:
 8888              		.cfi_def_cfa_register 13
 8889              		@ sp needed
 8890 0066 5DF8047B 		ldr	r7, [sp], #4
 8891              	.LCFI436:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 265


 8892              		.cfi_restore 7
 8893              		.cfi_def_cfa_offset 0
 8894 006a 7047     		bx	lr
 8895              		.cfi_endproc
 8896              	.LFE217:
 8898              		.section	.text.HAL_FDCAN_ActivateNotification,"ax",%progbits
 8899              		.align	1
 8900              		.global	HAL_FDCAN_ActivateNotification
 8901              		.syntax unified
 8902              		.thumb
 8903              		.thumb_func
 8905              	HAL_FDCAN_ActivateNotification:
 8906              	.LFB218:
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable interrupts.
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
5072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
5073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Tx Buffer Indexes.
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
5075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored if ActiveITs does not include one of the following:
5076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - FDCAN_IT_TX_COMPLETE
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - FDCAN_IT_TX_ABORT_COMPLETE
5078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ActivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveITs,
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                  uint32_t BufferIndexes)
5082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8907              		.loc 1 5082 1
 8908              		.cfi_startproc
 8909              		@ args = 0, pretend = 0, frame = 24
 8910              		@ frame_needed = 1, uses_anonymous_args = 0
 8911              		@ link register save eliminated.
 8912 0000 80B4     		push	{r7}
 8913              	.LCFI437:
 8914              		.cfi_def_cfa_offset 4
 8915              		.cfi_offset 7, -4
 8916 0002 87B0     		sub	sp, sp, #28
 8917              	.LCFI438:
 8918              		.cfi_def_cfa_offset 32
 8919 0004 00AF     		add	r7, sp, #0
 8920              	.LCFI439:
 8921              		.cfi_def_cfa_register 7
 8922 0006 F860     		str	r0, [r7, #12]
 8923 0008 B960     		str	r1, [r7, #8]
 8924 000a 7A60     		str	r2, [r7, #4]
5083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8925              		.loc 1 5083 26
 8926 000c FB68     		ldr	r3, [r7, #12]
 8927 000e 93F89830 		ldrb	r3, [r3, #152]
 8928 0012 FB75     		strb	r3, [r7, #23]
5084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(ActiveITs));
5087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 266


5088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8929              		.loc 1 5088 6
 8930 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8931 0016 012B     		cmp	r3, #1
 8932 0018 02D0     		beq	.L435
 8933              		.loc 1 5088 40 discriminator 1
 8934 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8935 001c 022B     		cmp	r3, #2
 8936 001e 55D1     		bne	.L436
 8937              	.L435:
5089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Interrupt lines */
5091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
 8938              		.loc 1 5091 28
 8939 0020 FB68     		ldr	r3, [r7, #12]
 8940 0022 1B68     		ldr	r3, [r3]
 8941              		.loc 1 5091 38
 8942 0024 9A6D     		ldr	r2, [r3, #88]
 8943              		.loc 1 5091 20
 8944 0026 BB68     		ldr	r3, [r7, #8]
 8945 0028 1340     		ands	r3, r3, r2
 8946              		.loc 1 5091 8
 8947 002a 002B     		cmp	r3, #0
 8948 002c 08D1     		bne	.L437
5092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 0 */
5094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 8949              		.loc 1 5094 7
 8950 002e FB68     		ldr	r3, [r7, #12]
 8951 0030 1B68     		ldr	r3, [r3]
 8952 0032 DA6D     		ldr	r2, [r3, #92]
 8953 0034 FB68     		ldr	r3, [r7, #12]
 8954 0036 1B68     		ldr	r3, [r3]
 8955 0038 42F00102 		orr	r2, r2, #1
 8956 003c DA65     		str	r2, [r3, #92]
 8957 003e 14E0     		b	.L438
 8958              	.L437:
5095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((ActiveITs & hfdcan->Instance->ILS) == ActiveITs)
 8959              		.loc 1 5096 33
 8960 0040 FB68     		ldr	r3, [r7, #12]
 8961 0042 1B68     		ldr	r3, [r3]
 8962              		.loc 1 5096 43
 8963 0044 9A6D     		ldr	r2, [r3, #88]
 8964              		.loc 1 5096 25
 8965 0046 BB68     		ldr	r3, [r7, #8]
 8966 0048 1340     		ands	r3, r3, r2
 8967              		.loc 1 5096 13
 8968 004a BA68     		ldr	r2, [r7, #8]
 8969 004c 9A42     		cmp	r2, r3
 8970 004e 08D1     		bne	.L439
5097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 1 */
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 8971              		.loc 1 5099 7
 8972 0050 FB68     		ldr	r3, [r7, #12]
 8973 0052 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 267


 8974 0054 DA6D     		ldr	r2, [r3, #92]
 8975 0056 FB68     		ldr	r3, [r7, #12]
 8976 0058 1B68     		ldr	r3, [r3]
 8977 005a 42F00202 		orr	r2, r2, #2
 8978 005e DA65     		str	r2, [r3, #92]
 8979 0060 03E0     		b	.L438
 8980              	.L439:
5100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
5102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt lines 0 and 1 */
5104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
 8981              		.loc 1 5104 13
 8982 0062 FB68     		ldr	r3, [r7, #12]
 8983 0064 1B68     		ldr	r3, [r3]
 8984              		.loc 1 5104 29
 8985 0066 0322     		movs	r2, #3
 8986 0068 DA65     		str	r2, [r3, #92]
 8987              	.L438:
5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
 8988              		.loc 1 5107 20
 8989 006a BB68     		ldr	r3, [r7, #8]
 8990 006c 03F40073 		and	r3, r3, #512
 8991              		.loc 1 5107 8
 8992 0070 002B     		cmp	r3, #0
 8993 0072 09D0     		beq	.L440
5108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Tx Buffer Transmission Interrupt to set TC flag in IR register,
5110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          but interrupt will only occur if TC is enabled in IE register */
5111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TXBTIE, BufferIndexes);
 8994              		.loc 1 5111 7
 8995 0074 FB68     		ldr	r3, [r7, #12]
 8996 0076 1B68     		ldr	r3, [r3]
 8997 0078 D3F8E010 		ldr	r1, [r3, #224]
 8998 007c FB68     		ldr	r3, [r7, #12]
 8999 007e 1B68     		ldr	r3, [r3]
 9000 0080 7A68     		ldr	r2, [r7, #4]
 9001 0082 0A43     		orrs	r2, r2, r1
 9002 0084 C3F8E020 		str	r2, [r3, #224]
 9003              	.L440:
5112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
 9004              		.loc 1 5114 20
 9005 0088 BB68     		ldr	r3, [r7, #8]
 9006 008a 03F48063 		and	r3, r3, #1024
 9007              		.loc 1 5114 8
 9008 008e 002B     		cmp	r3, #0
 9009 0090 09D0     		beq	.L441
5115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Tx Buffer Cancellation Finished Interrupt to set TCF flag in IR register,
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          but interrupt will only occur if TCF is enabled in IE register */
5118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TXBCIE, BufferIndexes);
 9010              		.loc 1 5118 7
 9011 0092 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 268


 9012 0094 1B68     		ldr	r3, [r3]
 9013 0096 D3F8E410 		ldr	r1, [r3, #228]
 9014 009a FB68     		ldr	r3, [r7, #12]
 9015 009c 1B68     		ldr	r3, [r3]
 9016 009e 7A68     		ldr	r2, [r7, #4]
 9017 00a0 0A43     		orrs	r2, r2, r1
 9018 00a2 C3F8E420 		str	r2, [r3, #228]
 9019              	.L441:
5119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable the selected interrupts */
5122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
 9020              		.loc 1 5122 5
 9021 00a6 FB68     		ldr	r3, [r7, #12]
 9022 00a8 1B68     		ldr	r3, [r3]
 9023 00aa 596D     		ldr	r1, [r3, #84]
 9024 00ac BA68     		ldr	r2, [r7, #8]
 9025 00ae 0F4B     		ldr	r3, .L443
 9026 00b0 1340     		ands	r3, r3, r2
 9027 00b2 FA68     		ldr	r2, [r7, #12]
 9028 00b4 1268     		ldr	r2, [r2]
 9029 00b6 0B43     		orrs	r3, r3, r1
 9030 00b8 5365     		str	r3, [r2, #84]
 9031 00ba 0D4B     		ldr	r3, .L443+4
 9032 00bc 5A69     		ldr	r2, [r3, #20]
 9033 00be BB68     		ldr	r3, [r7, #8]
 9034 00c0 9B0F     		lsrs	r3, r3, #30
 9035 00c2 0B49     		ldr	r1, .L443+4
 9036 00c4 1343     		orrs	r3, r3, r2
 9037 00c6 4B61     		str	r3, [r1, #20]
5123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9038              		.loc 1 5125 12
 9039 00c8 0023     		movs	r3, #0
 9040 00ca 08E0     		b	.L442
 9041              	.L436:
5126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9042              		.loc 1 5130 11
 9043 00cc FB68     		ldr	r3, [r7, #12]
 9044 00ce D3F89C30 		ldr	r3, [r3, #156]
 9045              		.loc 1 5130 23
 9046 00d2 43F00202 		orr	r2, r3, #2
 9047 00d6 FB68     		ldr	r3, [r7, #12]
 9048 00d8 C3F89C20 		str	r2, [r3, #156]
5131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9049              		.loc 1 5132 12
 9050 00dc 0123     		movs	r3, #1
 9051              	.L442:
5133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9052              		.loc 1 5134 1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 269


 9053 00de 1846     		mov	r0, r3
 9054 00e0 1C37     		adds	r7, r7, #28
 9055              	.LCFI440:
 9056              		.cfi_def_cfa_offset 4
 9057 00e2 BD46     		mov	sp, r7
 9058              	.LCFI441:
 9059              		.cfi_def_cfa_register 13
 9060              		@ sp needed
 9061 00e4 5DF8047B 		ldr	r7, [sp], #4
 9062              	.LCFI442:
 9063              		.cfi_restore 7
 9064              		.cfi_def_cfa_offset 0
 9065 00e8 7047     		bx	lr
 9066              	.L444:
 9067 00ea 00BF     		.align	2
 9068              	.L443:
 9069 00ec FFFFCF3F 		.word	1070596095
 9070 00f0 00A80040 		.word	1073784832
 9071              		.cfi_endproc
 9072              	.LFE218:
 9074              		.section	.text.HAL_FDCAN_DeactivateNotification,"ax",%progbits
 9075              		.align	1
 9076              		.global	HAL_FDCAN_DeactivateNotification
 9077              		.syntax unified
 9078              		.thumb
 9079              		.thumb_func
 9081              	HAL_FDCAN_DeactivateNotification:
 9082              	.LFB219:
5135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable interrupts.
5138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
5141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
5142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DeactivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t InactiveIT
5145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9083              		.loc 1 5145 1
 9084              		.cfi_startproc
 9085              		@ args = 0, pretend = 0, frame = 16
 9086              		@ frame_needed = 1, uses_anonymous_args = 0
 9087              		@ link register save eliminated.
 9088 0000 80B4     		push	{r7}
 9089              	.LCFI443:
 9090              		.cfi_def_cfa_offset 4
 9091              		.cfi_offset 7, -4
 9092 0002 85B0     		sub	sp, sp, #20
 9093              	.LCFI444:
 9094              		.cfi_def_cfa_offset 24
 9095 0004 00AF     		add	r7, sp, #0
 9096              	.LCFI445:
 9097              		.cfi_def_cfa_register 7
 9098 0006 7860     		str	r0, [r7, #4]
 9099 0008 3960     		str	r1, [r7]
5146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ITLineSelection;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 270


5147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9100              		.loc 1 5147 26
 9101 000a 7B68     		ldr	r3, [r7, #4]
 9102 000c 93F89830 		ldrb	r3, [r3, #152]
 9103 0010 FB73     		strb	r3, [r7, #15]
5148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(InactiveITs));
5151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9104              		.loc 1 5152 6
 9105 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9106 0014 012B     		cmp	r3, #1
 9107 0016 02D0     		beq	.L446
 9108              		.loc 1 5152 40 discriminator 1
 9109 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9110 001a 022B     		cmp	r3, #2
 9111 001c 4BD1     		bne	.L447
 9112              	.L446:
5153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the selected interrupts */
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_DISABLE_IT(hfdcan, InactiveITs);
 9113              		.loc 1 5155 5
 9114 001e 7B68     		ldr	r3, [r7, #4]
 9115 0020 1B68     		ldr	r3, [r3]
 9116 0022 596D     		ldr	r1, [r3, #84]
 9117 0024 3A68     		ldr	r2, [r7]
 9118 0026 2B4B     		ldr	r3, .L453
 9119 0028 1340     		ands	r3, r3, r2
 9120 002a DA43     		mvns	r2, r3
 9121 002c 7B68     		ldr	r3, [r7, #4]
 9122 002e 1B68     		ldr	r3, [r3]
 9123 0030 0A40     		ands	r2, r2, r1
 9124 0032 5A65     		str	r2, [r3, #84]
 9125 0034 284B     		ldr	r3, .L453+4
 9126 0036 5A69     		ldr	r2, [r3, #20]
 9127 0038 3B68     		ldr	r3, [r7]
 9128 003a 9B0F     		lsrs	r3, r3, #30
 9129 003c DB43     		mvns	r3, r3
 9130 003e 2649     		ldr	r1, .L453+4
 9131 0040 1340     		ands	r3, r3, r2
 9132 0042 4B61     		str	r3, [r1, #20]
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((InactiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
 9133              		.loc 1 5157 22
 9134 0044 3B68     		ldr	r3, [r7]
 9135 0046 03F40073 		and	r3, r3, #512
 9136              		.loc 1 5157 8
 9137 004a 002B     		cmp	r3, #0
 9138 004c 04D0     		beq	.L448
5158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Tx Buffer Transmission Interrupts */
5160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_REG(hfdcan->Instance->TXBTIE);
 9139              		.loc 1 5160 7
 9140 004e 7B68     		ldr	r3, [r7, #4]
 9141 0050 1B68     		ldr	r3, [r3]
 9142 0052 0022     		movs	r2, #0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 271


 9143 0054 C3F8E020 		str	r2, [r3, #224]
 9144              	.L448:
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((InactiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
 9145              		.loc 1 5163 22
 9146 0058 3B68     		ldr	r3, [r7]
 9147 005a 03F48063 		and	r3, r3, #1024
 9148              		.loc 1 5163 8
 9149 005e 002B     		cmp	r3, #0
 9150 0060 04D0     		beq	.L449
5164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Tx Buffer Cancellation Finished Interrupt */
5166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_REG(hfdcan->Instance->TXBCIE);
 9151              		.loc 1 5166 7
 9152 0062 7B68     		ldr	r3, [r7, #4]
 9153 0064 1B68     		ldr	r3, [r3]
 9154 0066 0022     		movs	r2, #0
 9155 0068 C3F8E420 		str	r2, [r3, #228]
 9156              	.L449:
5167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     ITLineSelection = hfdcan->Instance->ILS;
 9157              		.loc 1 5169 29
 9158 006c 7B68     		ldr	r3, [r7, #4]
 9159 006e 1B68     		ldr	r3, [r3]
 9160              		.loc 1 5169 21
 9161 0070 9B6D     		ldr	r3, [r3, #88]
 9162 0072 BB60     		str	r3, [r7, #8]
5170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->IE | ITLineSelection) == ITLineSelection)
 9163              		.loc 1 5171 16
 9164 0074 7B68     		ldr	r3, [r7, #4]
 9165 0076 1B68     		ldr	r3, [r3]
 9166              		.loc 1 5171 26
 9167 0078 5A6D     		ldr	r2, [r3, #84]
 9168              		.loc 1 5171 31
 9169 007a BB68     		ldr	r3, [r7, #8]
 9170 007c 1343     		orrs	r3, r3, r2
 9171              		.loc 1 5171 8
 9172 007e BA68     		ldr	r2, [r7, #8]
 9173 0080 9A42     		cmp	r2, r3
 9174 0082 07D1     		bne	.L450
5172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 0 */
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 9175              		.loc 1 5174 7
 9176 0084 7B68     		ldr	r3, [r7, #4]
 9177 0086 1B68     		ldr	r3, [r3]
 9178 0088 DA6D     		ldr	r2, [r3, #92]
 9179 008a 7B68     		ldr	r3, [r7, #4]
 9180 008c 1B68     		ldr	r3, [r3]
 9181 008e 22F00102 		bic	r2, r2, #1
 9182 0092 DA65     		str	r2, [r3, #92]
 9183              	.L450:
5175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 272


5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->IE & ITLineSelection) == 0U)
 9184              		.loc 1 5177 16
 9185 0094 7B68     		ldr	r3, [r7, #4]
 9186 0096 1B68     		ldr	r3, [r3]
 9187              		.loc 1 5177 26
 9188 0098 5A6D     		ldr	r2, [r3, #84]
 9189              		.loc 1 5177 31
 9190 009a BB68     		ldr	r3, [r7, #8]
 9191 009c 1340     		ands	r3, r3, r2
 9192              		.loc 1 5177 8
 9193 009e 002B     		cmp	r3, #0
 9194 00a0 07D1     		bne	.L451
5178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 1 */
5180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 9195              		.loc 1 5180 7
 9196 00a2 7B68     		ldr	r3, [r7, #4]
 9197 00a4 1B68     		ldr	r3, [r3]
 9198 00a6 DA6D     		ldr	r2, [r3, #92]
 9199 00a8 7B68     		ldr	r3, [r7, #4]
 9200 00aa 1B68     		ldr	r3, [r3]
 9201 00ac 22F00202 		bic	r2, r2, #2
 9202 00b0 DA65     		str	r2, [r3, #92]
 9203              	.L451:
5181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9204              		.loc 1 5184 12
 9205 00b2 0023     		movs	r3, #0
 9206 00b4 08E0     		b	.L452
 9207              	.L447:
5185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9208              		.loc 1 5189 11
 9209 00b6 7B68     		ldr	r3, [r7, #4]
 9210 00b8 D3F89C30 		ldr	r3, [r3, #156]
 9211              		.loc 1 5189 23
 9212 00bc 43F00202 		orr	r2, r3, #2
 9213 00c0 7B68     		ldr	r3, [r7, #4]
 9214 00c2 C3F89C20 		str	r2, [r3, #156]
5190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9215              		.loc 1 5191 12
 9216 00c6 0123     		movs	r3, #1
 9217              	.L452:
5192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9218              		.loc 1 5193 1
 9219 00c8 1846     		mov	r0, r3
 9220 00ca 1437     		adds	r7, r7, #20
 9221              	.LCFI446:
 9222              		.cfi_def_cfa_offset 4
 9223 00cc BD46     		mov	sp, r7
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 273


 9224              	.LCFI447:
 9225              		.cfi_def_cfa_register 13
 9226              		@ sp needed
 9227 00ce 5DF8047B 		ldr	r7, [sp], #4
 9228              	.LCFI448:
 9229              		.cfi_restore 7
 9230              		.cfi_def_cfa_offset 0
 9231 00d2 7047     		bx	lr
 9232              	.L454:
 9233              		.align	2
 9234              	.L453:
 9235 00d4 FFFFCF3F 		.word	1070596095
 9236 00d8 00A80040 		.word	1073784832
 9237              		.cfi_endproc
 9238              	.LFE219:
 9240              		.section	.text.HAL_FDCAN_TT_ActivateNotification,"ax",%progbits
 9241              		.align	1
 9242              		.global	HAL_FDCAN_TT_ActivateNotification
 9243              		.syntax unified
 9244              		.thumb
 9245              		.thumb_func
 9247              	HAL_FDCAN_TT_ActivateNotification:
 9248              	.LFB220:
5194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable TT interrupts.
5197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ActiveTTITs indicates which TT interrupts will be enabled.
5200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
5201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ActivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveTTI
5204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9249              		.loc 1 5204 1
 9250              		.cfi_startproc
 9251              		@ args = 0, pretend = 0, frame = 16
 9252              		@ frame_needed = 1, uses_anonymous_args = 0
 9253              		@ link register save eliminated.
 9254 0000 80B4     		push	{r7}
 9255              	.LCFI449:
 9256              		.cfi_def_cfa_offset 4
 9257              		.cfi_offset 7, -4
 9258 0002 85B0     		sub	sp, sp, #20
 9259              	.LCFI450:
 9260              		.cfi_def_cfa_offset 24
 9261 0004 00AF     		add	r7, sp, #0
 9262              	.LCFI451:
 9263              		.cfi_def_cfa_register 7
 9264 0006 7860     		str	r0, [r7, #4]
 9265 0008 3960     		str	r1, [r7]
5205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9266              		.loc 1 5205 26
 9267 000a 7B68     		ldr	r3, [r7, #4]
 9268 000c 93F89830 		ldrb	r3, [r3, #152]
 9269 0010 FB73     		strb	r3, [r7, #15]
5206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 274


5207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(ActiveTTITs));
5210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9270              		.loc 1 5211 6
 9271 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9272 0014 012B     		cmp	r3, #1
 9273 0016 02D0     		beq	.L456
 9274              		.loc 1 5211 40 discriminator 1
 9275 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9276 001a 022B     		cmp	r3, #2
 9277 001c 2ED1     		bne	.L457
 9278              	.L456:
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Interrupt lines */
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveTTITs & hfdcan->ttcan->TTILS) == 0U)
 9279              		.loc 1 5214 30
 9280 001e 7B68     		ldr	r3, [r7, #4]
 9281 0020 5B68     		ldr	r3, [r3, #4]
 9282              		.loc 1 5214 37
 9283 0022 9A6A     		ldr	r2, [r3, #40]
 9284              		.loc 1 5214 22
 9285 0024 3B68     		ldr	r3, [r7]
 9286 0026 1340     		ands	r3, r3, r2
 9287              		.loc 1 5214 8
 9288 0028 002B     		cmp	r3, #0
 9289 002a 08D1     		bne	.L458
5215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 0 */
5217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 9290              		.loc 1 5217 7
 9291 002c 7B68     		ldr	r3, [r7, #4]
 9292 002e 1B68     		ldr	r3, [r3]
 9293 0030 DA6D     		ldr	r2, [r3, #92]
 9294 0032 7B68     		ldr	r3, [r7, #4]
 9295 0034 1B68     		ldr	r3, [r3]
 9296 0036 42F00102 		orr	r2, r2, #1
 9297 003a DA65     		str	r2, [r3, #92]
 9298 003c 14E0     		b	.L459
 9299              	.L458:
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((ActiveTTITs & hfdcan->ttcan->TTILS) == ActiveTTITs)
 9300              		.loc 1 5219 35
 9301 003e 7B68     		ldr	r3, [r7, #4]
 9302 0040 5B68     		ldr	r3, [r3, #4]
 9303              		.loc 1 5219 42
 9304 0042 9A6A     		ldr	r2, [r3, #40]
 9305              		.loc 1 5219 27
 9306 0044 3B68     		ldr	r3, [r7]
 9307 0046 1340     		ands	r3, r3, r2
 9308              		.loc 1 5219 13
 9309 0048 3A68     		ldr	r2, [r7]
 9310 004a 9A42     		cmp	r2, r3
 9311 004c 08D1     		bne	.L460
5220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 1 */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 275


5222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 9312              		.loc 1 5222 7
 9313 004e 7B68     		ldr	r3, [r7, #4]
 9314 0050 1B68     		ldr	r3, [r3]
 9315 0052 DA6D     		ldr	r2, [r3, #92]
 9316 0054 7B68     		ldr	r3, [r7, #4]
 9317 0056 1B68     		ldr	r3, [r3]
 9318 0058 42F00202 		orr	r2, r2, #2
 9319 005c DA65     		str	r2, [r3, #92]
 9320 005e 03E0     		b	.L459
 9321              	.L460:
5223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
5225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt lines 0 and 1 */
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
 9322              		.loc 1 5227 13
 9323 0060 7B68     		ldr	r3, [r7, #4]
 9324 0062 1B68     		ldr	r3, [r3]
 9325              		.loc 1 5227 29
 9326 0064 0322     		movs	r2, #3
 9327 0066 DA65     		str	r2, [r3, #92]
 9328              	.L459:
5228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable the selected TT interrupts */
5231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_TT_ENABLE_IT(hfdcan, ActiveTTITs);
 9329              		.loc 1 5231 5
 9330 0068 7B68     		ldr	r3, [r7, #4]
 9331 006a 5B68     		ldr	r3, [r3, #4]
 9332 006c 596A     		ldr	r1, [r3, #36]
 9333 006e 7B68     		ldr	r3, [r7, #4]
 9334 0070 5B68     		ldr	r3, [r3, #4]
 9335 0072 3A68     		ldr	r2, [r7]
 9336 0074 0A43     		orrs	r2, r2, r1
 9337 0076 5A62     		str	r2, [r3, #36]
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9338              		.loc 1 5234 12
 9339 0078 0023     		movs	r3, #0
 9340 007a 08E0     		b	.L461
 9341              	.L457:
5235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9342              		.loc 1 5239 11
 9343 007c 7B68     		ldr	r3, [r7, #4]
 9344 007e D3F89C30 		ldr	r3, [r3, #156]
 9345              		.loc 1 5239 23
 9346 0082 43F00202 		orr	r2, r3, #2
 9347 0086 7B68     		ldr	r3, [r7, #4]
 9348 0088 C3F89C20 		str	r2, [r3, #156]
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 276


 9349              		.loc 1 5241 12
 9350 008c 0123     		movs	r3, #1
 9351              	.L461:
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9352              		.loc 1 5243 1
 9353 008e 1846     		mov	r0, r3
 9354 0090 1437     		adds	r7, r7, #20
 9355              	.LCFI452:
 9356              		.cfi_def_cfa_offset 4
 9357 0092 BD46     		mov	sp, r7
 9358              	.LCFI453:
 9359              		.cfi_def_cfa_register 13
 9360              		@ sp needed
 9361 0094 5DF8047B 		ldr	r7, [sp], #4
 9362              	.LCFI454:
 9363              		.cfi_restore 7
 9364              		.cfi_def_cfa_offset 0
 9365 0098 7047     		bx	lr
 9366              		.cfi_endproc
 9367              	.LFE220:
 9369              		.section	.text.HAL_FDCAN_TT_DeactivateNotification,"ax",%progbits
 9370              		.align	1
 9371              		.global	HAL_FDCAN_TT_DeactivateNotification
 9372              		.syntax unified
 9373              		.thumb
 9374              		.thumb_func
 9376              	HAL_FDCAN_TT_DeactivateNotification:
 9377              	.LFB221:
5244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable TT interrupts.
5247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InactiveTTITs indicates which TT interrupts will be disabled.
5250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
5251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DeactivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t Inactiv
5254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9378              		.loc 1 5254 1
 9379              		.cfi_startproc
 9380              		@ args = 0, pretend = 0, frame = 16
 9381              		@ frame_needed = 1, uses_anonymous_args = 0
 9382              		@ link register save eliminated.
 9383 0000 80B4     		push	{r7}
 9384              	.LCFI455:
 9385              		.cfi_def_cfa_offset 4
 9386              		.cfi_offset 7, -4
 9387 0002 85B0     		sub	sp, sp, #20
 9388              	.LCFI456:
 9389              		.cfi_def_cfa_offset 24
 9390 0004 00AF     		add	r7, sp, #0
 9391              	.LCFI457:
 9392              		.cfi_def_cfa_register 7
 9393 0006 7860     		str	r0, [r7, #4]
 9394 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 277


5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ITLineSelection;
5256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9395              		.loc 1 5256 26
 9396 000a 7B68     		ldr	r3, [r7, #4]
 9397 000c 93F89830 		ldrb	r3, [r3, #152]
 9398 0010 FB73     		strb	r3, [r7, #15]
5257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
5260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(InactiveTTITs));
5261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9399              		.loc 1 5262 6
 9400 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9401 0014 012B     		cmp	r3, #1
 9402 0016 02D0     		beq	.L463
 9403              		.loc 1 5262 40 discriminator 1
 9404 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9405 001a 022B     		cmp	r3, #2
 9406 001c 2DD1     		bne	.L464
 9407              	.L463:
5263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the selected TT interrupts */
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_TT_DISABLE_IT(hfdcan, InactiveTTITs);
 9408              		.loc 1 5265 5
 9409 001e 7B68     		ldr	r3, [r7, #4]
 9410 0020 5B68     		ldr	r3, [r3, #4]
 9411 0022 596A     		ldr	r1, [r3, #36]
 9412 0024 3B68     		ldr	r3, [r7]
 9413 0026 DA43     		mvns	r2, r3
 9414 0028 7B68     		ldr	r3, [r7, #4]
 9415 002a 5B68     		ldr	r3, [r3, #4]
 9416 002c 0A40     		ands	r2, r2, r1
 9417 002e 5A62     		str	r2, [r3, #36]
5266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     ITLineSelection = hfdcan->ttcan->TTILS;
 9418              		.loc 1 5267 29
 9419 0030 7B68     		ldr	r3, [r7, #4]
 9420 0032 5B68     		ldr	r3, [r3, #4]
 9421              		.loc 1 5267 21
 9422 0034 9B6A     		ldr	r3, [r3, #40]
 9423 0036 BB60     		str	r3, [r7, #8]
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTIE | ITLineSelection) == ITLineSelection)
 9424              		.loc 1 5269 16
 9425 0038 7B68     		ldr	r3, [r7, #4]
 9426 003a 5B68     		ldr	r3, [r3, #4]
 9427              		.loc 1 5269 23
 9428 003c 5A6A     		ldr	r2, [r3, #36]
 9429              		.loc 1 5269 30
 9430 003e BB68     		ldr	r3, [r7, #8]
 9431 0040 1343     		orrs	r3, r3, r2
 9432              		.loc 1 5269 8
 9433 0042 BA68     		ldr	r2, [r7, #8]
 9434 0044 9A42     		cmp	r2, r3
 9435 0046 07D1     		bne	.L465
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 278


5271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 0 */
5272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 9436              		.loc 1 5272 7
 9437 0048 7B68     		ldr	r3, [r7, #4]
 9438 004a 1B68     		ldr	r3, [r3]
 9439 004c DA6D     		ldr	r2, [r3, #92]
 9440 004e 7B68     		ldr	r3, [r7, #4]
 9441 0050 1B68     		ldr	r3, [r3]
 9442 0052 22F00102 		bic	r2, r2, #1
 9443 0056 DA65     		str	r2, [r3, #92]
 9444              	.L465:
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTIE & ITLineSelection) == 0U)
 9445              		.loc 1 5275 16
 9446 0058 7B68     		ldr	r3, [r7, #4]
 9447 005a 5B68     		ldr	r3, [r3, #4]
 9448              		.loc 1 5275 23
 9449 005c 5A6A     		ldr	r2, [r3, #36]
 9450              		.loc 1 5275 30
 9451 005e BB68     		ldr	r3, [r7, #8]
 9452 0060 1340     		ands	r3, r3, r2
 9453              		.loc 1 5275 8
 9454 0062 002B     		cmp	r3, #0
 9455 0064 07D1     		bne	.L466
5276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable interrupt line 1 */
5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 9456              		.loc 1 5278 7
 9457 0066 7B68     		ldr	r3, [r7, #4]
 9458 0068 1B68     		ldr	r3, [r3]
 9459 006a DA6D     		ldr	r2, [r3, #92]
 9460 006c 7B68     		ldr	r3, [r7, #4]
 9461 006e 1B68     		ldr	r3, [r3]
 9462 0070 22F00202 		bic	r2, r2, #2
 9463 0074 DA65     		str	r2, [r3, #92]
 9464              	.L466:
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9465              		.loc 1 5282 12
 9466 0076 0023     		movs	r3, #0
 9467 0078 08E0     		b	.L467
 9468              	.L464:
5283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9469              		.loc 1 5287 11
 9470 007a 7B68     		ldr	r3, [r7, #4]
 9471 007c D3F89C30 		ldr	r3, [r3, #156]
 9472              		.loc 1 5287 23
 9473 0080 43F00202 		orr	r2, r3, #2
 9474 0084 7B68     		ldr	r3, [r7, #4]
 9475 0086 C3F89C20 		str	r2, [r3, #156]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 279


5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9476              		.loc 1 5289 12
 9477 008a 0123     		movs	r3, #1
 9478              	.L467:
5290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9479              		.loc 1 5291 1
 9480 008c 1846     		mov	r0, r3
 9481 008e 1437     		adds	r7, r7, #20
 9482              	.LCFI458:
 9483              		.cfi_def_cfa_offset 4
 9484 0090 BD46     		mov	sp, r7
 9485              	.LCFI459:
 9486              		.cfi_def_cfa_register 13
 9487              		@ sp needed
 9488 0092 5DF8047B 		ldr	r7, [sp], #4
 9489              	.LCFI460:
 9490              		.cfi_restore 7
 9491              		.cfi_def_cfa_offset 0
 9492 0096 7047     		bx	lr
 9493              		.cfi_endproc
 9494              	.LFE221:
 9496              		.section	.text.HAL_FDCAN_IRQHandler,"ax",%progbits
 9497              		.align	1
 9498              		.global	HAL_FDCAN_IRQHandler
 9499              		.syntax unified
 9500              		.thumb
 9501              		.thumb_func
 9503              	HAL_FDCAN_IRQHandler:
 9504              	.LFB222:
5292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Handles FDCAN interrupt request.
5295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** void HAL_FDCAN_IRQHandler(FDCAN_HandleTypeDef *hfdcan)
5300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9505              		.loc 1 5300 1
 9506              		.cfi_startproc
 9507              		@ args = 0, pretend = 0, frame = 88
 9508              		@ frame_needed = 1, uses_anonymous_args = 0
 9509 0000 80B5     		push	{r7, lr}
 9510              	.LCFI461:
 9511              		.cfi_def_cfa_offset 8
 9512              		.cfi_offset 7, -8
 9513              		.cfi_offset 14, -4
 9514 0002 96B0     		sub	sp, sp, #88
 9515              	.LCFI462:
 9516              		.cfi_def_cfa_offset 96
 9517 0004 00AF     		add	r7, sp, #0
 9518              	.LCFI463:
 9519              		.cfi_def_cfa_register 7
 9520 0006 7860     		str	r0, [r7, #4]
5301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ClkCalibrationITs;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 280


5302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxEventFifoITs;
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RxFifo0ITs;
5304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RxFifo1ITs;
5305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Errors;
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ErrorStatusITs;
5307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TransmittedBuffers;
5308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t AbortedBuffers;
5309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTSchedSyncITs;
5310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTTimeMarkITs;
5311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTGlobTimeITs;
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTDistErrors;
5313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTFatalErrors;
5314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t SWTime;
5315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t SWCycleCount;
5316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itsourceIE;
5317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itsourceTTIE;
5318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itflagIR;
5319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itflagTTIR;
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ClkCalibrationITs = (FDCAN_CCU->IR << 30);
 9521              		.loc 1 5321 33
 9522 0008 9A4B     		ldr	r3, .L491
 9523 000a 1B69     		ldr	r3, [r3, #16]
 9524              		.loc 1 5321 21
 9525 000c 9B07     		lsls	r3, r3, #30
 9526 000e 7B65     		str	r3, [r7, #84]
5322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
 9527              		.loc 1 5322 34
 9528 0010 984B     		ldr	r3, .L491
 9529 0012 5B69     		ldr	r3, [r3, #20]
 9530              		.loc 1 5322 39
 9531 0014 9B07     		lsls	r3, r3, #30
 9532              		.loc 1 5322 21
 9533 0016 7A6D     		ldr	r2, [r7, #84]
 9534 0018 1340     		ands	r3, r3, r2
 9535 001a 7B65     		str	r3, [r7, #84]
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
 9536              		.loc 1 5323 26
 9537 001c 7B68     		ldr	r3, [r7, #4]
 9538 001e 1B68     		ldr	r3, [r3]
 9539              		.loc 1 5323 36
 9540 0020 1B6D     		ldr	r3, [r3, #80]
 9541              		.loc 1 5323 18
 9542 0022 03F47043 		and	r3, r3, #61440
 9543 0026 3B65     		str	r3, [r7, #80]
5324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxEventFifoITs &= hfdcan->Instance->IE;
 9544              		.loc 1 5324 27
 9545 0028 7B68     		ldr	r3, [r7, #4]
 9546 002a 1B68     		ldr	r3, [r3]
 9547              		.loc 1 5324 37
 9548 002c 5B6D     		ldr	r3, [r3, #84]
 9549              		.loc 1 5324 18
 9550 002e 3A6D     		ldr	r2, [r7, #80]
 9551 0030 1340     		ands	r3, r3, r2
 9552 0032 3B65     		str	r3, [r7, #80]
5325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo0ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO0_MASK;
 9553              		.loc 1 5325 22
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 281


 9554 0034 7B68     		ldr	r3, [r7, #4]
 9555 0036 1B68     		ldr	r3, [r3]
 9556              		.loc 1 5325 32
 9557 0038 1B6D     		ldr	r3, [r3, #80]
 9558              		.loc 1 5325 14
 9559 003a 03F00F03 		and	r3, r3, #15
 9560 003e FB64     		str	r3, [r7, #76]
5326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo0ITs &= hfdcan->Instance->IE;
 9561              		.loc 1 5326 23
 9562 0040 7B68     		ldr	r3, [r7, #4]
 9563 0042 1B68     		ldr	r3, [r3]
 9564              		.loc 1 5326 33
 9565 0044 5B6D     		ldr	r3, [r3, #84]
 9566              		.loc 1 5326 14
 9567 0046 FA6C     		ldr	r2, [r7, #76]
 9568 0048 1340     		ands	r3, r3, r2
 9569 004a FB64     		str	r3, [r7, #76]
5327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO1_MASK;
 9570              		.loc 1 5327 22
 9571 004c 7B68     		ldr	r3, [r7, #4]
 9572 004e 1B68     		ldr	r3, [r3]
 9573              		.loc 1 5327 32
 9574 0050 1B6D     		ldr	r3, [r3, #80]
 9575              		.loc 1 5327 14
 9576 0052 03F0F003 		and	r3, r3, #240
 9577 0056 BB64     		str	r3, [r7, #72]
5328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1ITs &= hfdcan->Instance->IE;
 9578              		.loc 1 5328 23
 9579 0058 7B68     		ldr	r3, [r7, #4]
 9580 005a 1B68     		ldr	r3, [r3]
 9581              		.loc 1 5328 33
 9582 005c 5B6D     		ldr	r3, [r3, #84]
 9583              		.loc 1 5328 14
 9584 005e BA6C     		ldr	r2, [r7, #72]
 9585 0060 1340     		ands	r3, r3, r2
 9586 0062 BB64     		str	r3, [r7, #72]
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Errors = hfdcan->Instance->IR & FDCAN_ERROR_MASK;
 9587              		.loc 1 5329 18
 9588 0064 7B68     		ldr	r3, [r7, #4]
 9589 0066 1B68     		ldr	r3, [r3]
 9590              		.loc 1 5329 28
 9591 0068 1B6D     		ldr	r3, [r3, #80]
 9592              		.loc 1 5329 10
 9593 006a 03F07153 		and	r3, r3, #1010827264
 9594 006e 7B64     		str	r3, [r7, #68]
5330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Errors &= hfdcan->Instance->IE;
 9595              		.loc 1 5330 19
 9596 0070 7B68     		ldr	r3, [r7, #4]
 9597 0072 1B68     		ldr	r3, [r3]
 9598              		.loc 1 5330 29
 9599 0074 5B6D     		ldr	r3, [r3, #84]
 9600              		.loc 1 5330 10
 9601 0076 7A6C     		ldr	r2, [r7, #68]
 9602 0078 1340     		ands	r3, r3, r2
 9603 007a 7B64     		str	r3, [r7, #68]
5331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorStatusITs = hfdcan->Instance->IR & FDCAN_ERROR_STATUS_MASK;
 9604              		.loc 1 5331 26
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 282


 9605 007c 7B68     		ldr	r3, [r7, #4]
 9606 007e 1B68     		ldr	r3, [r3]
 9607              		.loc 1 5331 36
 9608 0080 1B6D     		ldr	r3, [r3, #80]
 9609              		.loc 1 5331 18
 9610 0082 03F06073 		and	r3, r3, #58720256
 9611 0086 3B64     		str	r3, [r7, #64]
5332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorStatusITs &= hfdcan->Instance->IE;
 9612              		.loc 1 5332 27
 9613 0088 7B68     		ldr	r3, [r7, #4]
 9614 008a 1B68     		ldr	r3, [r3]
 9615              		.loc 1 5332 37
 9616 008c 5B6D     		ldr	r3, [r3, #84]
 9617              		.loc 1 5332 18
 9618 008e 3A6C     		ldr	r2, [r7, #64]
 9619 0090 1340     		ands	r3, r3, r2
 9620 0092 3B64     		str	r3, [r7, #64]
5333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   itsourceIE = hfdcan->Instance->IE;
 9621              		.loc 1 5333 22
 9622 0094 7B68     		ldr	r3, [r7, #4]
 9623 0096 1B68     		ldr	r3, [r3]
 9624              		.loc 1 5333 14
 9625 0098 5B6D     		ldr	r3, [r3, #84]
 9626 009a FB63     		str	r3, [r7, #60]
5334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   itflagIR = hfdcan->Instance->IR;
 9627              		.loc 1 5334 20
 9628 009c 7B68     		ldr	r3, [r7, #4]
 9629 009e 1B68     		ldr	r3, [r3]
 9630              		.loc 1 5334 12
 9631 00a0 1B6D     		ldr	r3, [r3, #80]
 9632 00a2 BB63     		str	r3, [r7, #56]
5335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* High Priority Message interrupt management *******************************/
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
 9633              		.loc 1 5337 7
 9634 00a4 FB6B     		ldr	r3, [r7, #60]
 9635 00a6 1B0A     		lsrs	r3, r3, #8
 9636 00a8 03F00103 		and	r3, r3, #1
 9637              		.loc 1 5337 6
 9638 00ac 002B     		cmp	r3, #0
 9639 00ae 10D0     		beq	.L469
5338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG) != RESET)
 9640              		.loc 1 5339 9
 9641 00b0 BB6B     		ldr	r3, [r7, #56]
 9642 00b2 1B0A     		lsrs	r3, r3, #8
 9643 00b4 03F00103 		and	r3, r3, #1
 9644              		.loc 1 5339 8
 9645 00b8 002B     		cmp	r3, #0
 9646 00ba 0AD0     		beq	.L469
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the High Priority Message flag */
5342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG);
 9647              		.loc 1 5342 7
 9648 00bc 7B68     		ldr	r3, [r7, #4]
 9649 00be 1B68     		ldr	r3, [r3]
 9650 00c0 4FF48072 		mov	r2, #256
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 283


 9651 00c4 1A65     		str	r2, [r3, #80]
 9652 00c6 6B4B     		ldr	r3, .L491
 9653 00c8 0022     		movs	r2, #0
 9654 00ca 1A61     		str	r2, [r3, #16]
5343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->HighPriorityMessageCallback(hfdcan);
5347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* High Priority Message Callback */
5349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_HighPriorityMessageCallback(hfdcan);
 9655              		.loc 1 5349 7
 9656 00cc 7868     		ldr	r0, [r7, #4]
 9657 00ce FFF7FEFF 		bl	HAL_FDCAN_HighPriorityMessageCallback
 9658              	.L469:
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Transmission Abort interrupt management **********************************/
5355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_ABORT_COMPLETE) != RESET)
 9659              		.loc 1 5355 7
 9660 00d2 FB6B     		ldr	r3, [r7, #60]
 9661 00d4 9B0A     		lsrs	r3, r3, #10
 9662 00d6 03F00103 		and	r3, r3, #1
 9663              		.loc 1 5355 6
 9664 00da 002B     		cmp	r3, #0
 9665 00dc 1DD0     		beq	.L470
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_ABORT_COMPLETE) != RESET)
 9666              		.loc 1 5357 9
 9667 00de BB6B     		ldr	r3, [r7, #56]
 9668 00e0 9B0A     		lsrs	r3, r3, #10
 9669 00e2 03F00103 		and	r3, r3, #1
 9670              		.loc 1 5357 8
 9671 00e6 002B     		cmp	r3, #0
 9672 00e8 17D0     		beq	.L470
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* List of aborted monitored buffers */
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       AbortedBuffers = hfdcan->Instance->TXBCF;
 9673              		.loc 1 5360 30
 9674 00ea 7B68     		ldr	r3, [r7, #4]
 9675 00ec 1B68     		ldr	r3, [r3]
 9676              		.loc 1 5360 22
 9677 00ee D3F8DC30 		ldr	r3, [r3, #220]
 9678 00f2 7B63     		str	r3, [r7, #52]
5361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       AbortedBuffers &= hfdcan->Instance->TXBCIE;
 9679              		.loc 1 5361 31
 9680 00f4 7B68     		ldr	r3, [r7, #4]
 9681 00f6 1B68     		ldr	r3, [r3]
 9682              		.loc 1 5361 41
 9683 00f8 D3F8E430 		ldr	r3, [r3, #228]
 9684              		.loc 1 5361 22
 9685 00fc 7A6B     		ldr	r2, [r7, #52]
 9686 00fe 1340     		ands	r3, r3, r2
 9687 0100 7B63     		str	r3, [r7, #52]
5362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 284


5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Transmission Cancellation flag */
5364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
 9688              		.loc 1 5364 7
 9689 0102 7B68     		ldr	r3, [r7, #4]
 9690 0104 1B68     		ldr	r3, [r3]
 9691 0106 4FF48062 		mov	r2, #1024
 9692 010a 1A65     		str	r2, [r3, #80]
 9693 010c 594B     		ldr	r3, .L491
 9694 010e 0022     		movs	r2, #0
 9695 0110 1A61     		str	r2, [r3, #16]
5365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxBufferAbortCallback(hfdcan, AbortedBuffers);
5369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Transmission Cancellation Callback */
5371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
 9696              		.loc 1 5371 7
 9697 0112 796B     		ldr	r1, [r7, #52]
 9698 0114 7868     		ldr	r0, [r7, #4]
 9699 0116 FFF7FEFF 		bl	HAL_FDCAN_TxBufferAbortCallback
 9700              	.L470:
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Clock calibration unit interrupts management *****************************/
5377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (ClkCalibrationITs != 0U)
 9701              		.loc 1 5377 6
 9702 011a 7B6D     		ldr	r3, [r7, #84]
 9703 011c 002B     		cmp	r3, #0
 9704 011e 0DD0     		beq	.L471
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Clock Calibration flags */
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
 9705              		.loc 1 5380 5
 9706 0120 7B68     		ldr	r3, [r7, #4]
 9707 0122 1A68     		ldr	r2, [r3]
 9708 0124 796D     		ldr	r1, [r7, #84]
 9709 0126 544B     		ldr	r3, .L491+4
 9710 0128 0B40     		ands	r3, r3, r1
 9711 012a 1365     		str	r3, [r2, #80]
 9712 012c 514A     		ldr	r2, .L491
 9713 012e 7B6D     		ldr	r3, [r7, #84]
 9714 0130 9B0F     		lsrs	r3, r3, #30
 9715 0132 1361     		str	r3, [r2, #16]
5381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
5385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clock Calibration Callback */
5387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
 9716              		.loc 1 5387 5
 9717 0134 796D     		ldr	r1, [r7, #84]
 9718 0136 7868     		ldr	r0, [r7, #4]
 9719 0138 FFF7FEFF 		bl	HAL_FDCAN_ClockCalibrationCallback
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 285


 9720              	.L471:
5388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO interrupts management **************************************/
5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (TxEventFifoITs != 0U)
 9721              		.loc 1 5392 6
 9722 013c 3B6D     		ldr	r3, [r7, #80]
 9723 013e 002B     		cmp	r3, #0
 9724 0140 0DD0     		beq	.L472
5393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Tx Event FIFO flags */
5395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
 9725              		.loc 1 5395 5
 9726 0142 7B68     		ldr	r3, [r7, #4]
 9727 0144 1A68     		ldr	r2, [r3]
 9728 0146 396D     		ldr	r1, [r7, #80]
 9729 0148 4B4B     		ldr	r3, .L491+4
 9730 014a 0B40     		ands	r3, r3, r1
 9731 014c 1365     		str	r3, [r2, #80]
 9732 014e 494A     		ldr	r2, .L491
 9733 0150 3B6D     		ldr	r3, [r7, #80]
 9734 0152 9B0F     		lsrs	r3, r3, #30
 9735 0154 1361     		str	r3, [r2, #16]
5396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback(hfdcan, TxEventFifoITs);
5400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Tx Event FIFO Callback */
5402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
 9736              		.loc 1 5402 5
 9737 0156 396D     		ldr	r1, [r7, #80]
 9738 0158 7868     		ldr	r0, [r7, #4]
 9739 015a FFF7FEFF 		bl	HAL_FDCAN_TxEventFifoCallback
 9740              	.L472:
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 interrupts management ******************************************/
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo0ITs != 0U)
 9741              		.loc 1 5407 6
 9742 015e FB6C     		ldr	r3, [r7, #76]
 9743 0160 002B     		cmp	r3, #0
 9744 0162 0DD0     		beq	.L473
5408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Rx FIFO 0 flags */
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
 9745              		.loc 1 5410 5
 9746 0164 7B68     		ldr	r3, [r7, #4]
 9747 0166 1A68     		ldr	r2, [r3]
 9748 0168 F96C     		ldr	r1, [r7, #76]
 9749 016a 434B     		ldr	r3, .L491+4
 9750 016c 0B40     		ands	r3, r3, r1
 9751 016e 1365     		str	r3, [r2, #80]
 9752 0170 404A     		ldr	r2, .L491
 9753 0172 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 286


 9754 0174 9B0F     		lsrs	r3, r3, #30
 9755 0176 1361     		str	r3, [r2, #16]
5411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback(hfdcan, RxFifo0ITs);
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Rx FIFO 0 Callback */
5417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
 9756              		.loc 1 5417 5
 9757 0178 F96C     		ldr	r1, [r7, #76]
 9758 017a 7868     		ldr	r0, [r7, #4]
 9759 017c FFF7FEFF 		bl	HAL_FDCAN_RxFifo0Callback
 9760              	.L473:
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 interrupts management ******************************************/
5422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo1ITs != 0U)
 9761              		.loc 1 5422 6
 9762 0180 BB6C     		ldr	r3, [r7, #72]
 9763 0182 002B     		cmp	r3, #0
 9764 0184 0DD0     		beq	.L474
5423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Rx FIFO 1 flags */
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
 9765              		.loc 1 5425 5
 9766 0186 7B68     		ldr	r3, [r7, #4]
 9767 0188 1A68     		ldr	r2, [r3]
 9768 018a B96C     		ldr	r1, [r7, #72]
 9769 018c 3A4B     		ldr	r3, .L491+4
 9770 018e 0B40     		ands	r3, r3, r1
 9771 0190 1365     		str	r3, [r2, #80]
 9772 0192 384A     		ldr	r2, .L491
 9773 0194 BB6C     		ldr	r3, [r7, #72]
 9774 0196 9B0F     		lsrs	r3, r3, #30
 9775 0198 1361     		str	r3, [r2, #16]
5426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback(hfdcan, RxFifo1ITs);
5430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Rx FIFO 1 Callback */
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
 9776              		.loc 1 5432 5
 9777 019a B96C     		ldr	r1, [r7, #72]
 9778 019c 7868     		ldr	r0, [r7, #4]
 9779 019e FFF7FEFF 		bl	HAL_FDCAN_RxFifo1Callback
 9780              	.L474:
5433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx FIFO empty interrupt management ***************************************/
5437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_FIFO_EMPTY) != RESET)
 9781              		.loc 1 5437 7
 9782 01a2 FB6B     		ldr	r3, [r7, #60]
 9783 01a4 DB0A     		lsrs	r3, r3, #11
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 287


 9784 01a6 03F00103 		and	r3, r3, #1
 9785              		.loc 1 5437 6
 9786 01aa 002B     		cmp	r3, #0
 9787 01ac 10D0     		beq	.L475
5438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_FIFO_EMPTY) != RESET)
 9788              		.loc 1 5439 9
 9789 01ae BB6B     		ldr	r3, [r7, #56]
 9790 01b0 DB0A     		lsrs	r3, r3, #11
 9791 01b2 03F00103 		and	r3, r3, #1
 9792              		.loc 1 5439 8
 9793 01b6 002B     		cmp	r3, #0
 9794 01b8 0AD0     		beq	.L475
5440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Tx FIFO empty flag */
5442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
 9795              		.loc 1 5442 7
 9796 01ba 7B68     		ldr	r3, [r7, #4]
 9797 01bc 1B68     		ldr	r3, [r3]
 9798 01be 4FF40062 		mov	r2, #2048
 9799 01c2 1A65     		str	r2, [r3, #80]
 9800 01c4 2B4B     		ldr	r3, .L491
 9801 01c6 0022     		movs	r2, #0
 9802 01c8 1A61     		str	r2, [r3, #16]
5443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxFifoEmptyCallback(hfdcan);
5447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Tx FIFO empty Callback */
5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
 9803              		.loc 1 5449 7
 9804 01ca 7868     		ldr	r0, [r7, #4]
 9805 01cc FFF7FEFF 		bl	HAL_FDCAN_TxFifoEmptyCallback
 9806              	.L475:
5450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Transmission Complete interrupt management *******************************/
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_COMPLETE) != RESET)
 9807              		.loc 1 5455 7
 9808 01d0 FB6B     		ldr	r3, [r7, #60]
 9809 01d2 5B0A     		lsrs	r3, r3, #9
 9810 01d4 03F00103 		and	r3, r3, #1
 9811              		.loc 1 5455 6
 9812 01d8 002B     		cmp	r3, #0
 9813 01da 1DD0     		beq	.L476
5456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_COMPLETE) != RESET)
 9814              		.loc 1 5457 9
 9815 01dc BB6B     		ldr	r3, [r7, #56]
 9816 01de 5B0A     		lsrs	r3, r3, #9
 9817 01e0 03F00103 		and	r3, r3, #1
 9818              		.loc 1 5457 8
 9819 01e4 002B     		cmp	r3, #0
 9820 01e6 17D0     		beq	.L476
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 288


5458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* List of transmitted monitored buffers */
5460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TransmittedBuffers = hfdcan->Instance->TXBTO;
 9821              		.loc 1 5460 34
 9822 01e8 7B68     		ldr	r3, [r7, #4]
 9823 01ea 1B68     		ldr	r3, [r3]
 9824              		.loc 1 5460 26
 9825 01ec D3F8D830 		ldr	r3, [r3, #216]
 9826 01f0 3B63     		str	r3, [r7, #48]
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TransmittedBuffers &= hfdcan->Instance->TXBTIE;
 9827              		.loc 1 5461 35
 9828 01f2 7B68     		ldr	r3, [r7, #4]
 9829 01f4 1B68     		ldr	r3, [r3]
 9830              		.loc 1 5461 45
 9831 01f6 D3F8E030 		ldr	r3, [r3, #224]
 9832              		.loc 1 5461 26
 9833 01fa 3A6B     		ldr	r2, [r7, #48]
 9834 01fc 1340     		ands	r3, r3, r2
 9835 01fe 3B63     		str	r3, [r7, #48]
5462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Transmission Complete flag */
5464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
 9836              		.loc 1 5464 7
 9837 0200 7B68     		ldr	r3, [r7, #4]
 9838 0202 1B68     		ldr	r3, [r3]
 9839 0204 4FF40072 		mov	r2, #512
 9840 0208 1A65     		str	r2, [r3, #80]
 9841 020a 1A4B     		ldr	r3, .L491
 9842 020c 0022     		movs	r2, #0
 9843 020e 1A61     		str	r2, [r3, #16]
5465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
5469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Transmission Complete Callback */
5471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
 9844              		.loc 1 5471 7
 9845 0210 396B     		ldr	r1, [r7, #48]
 9846 0212 7868     		ldr	r0, [r7, #4]
 9847 0214 FFF7FEFF 		bl	HAL_FDCAN_TxBufferCompleteCallback
 9848              	.L476:
5472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx Buffer New Message interrupt management *******************************/
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_BUFFER_NEW_MESSAGE) != RESET)
 9849              		.loc 1 5477 7
 9850 0218 FB6B     		ldr	r3, [r7, #60]
 9851 021a DB0C     		lsrs	r3, r3, #19
 9852 021c 03F00103 		and	r3, r3, #1
 9853              		.loc 1 5477 6
 9854 0220 002B     		cmp	r3, #0
 9855 0222 10D0     		beq	.L477
5478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE) != RESET)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 289


 9856              		.loc 1 5479 9
 9857 0224 BB6B     		ldr	r3, [r7, #56]
 9858 0226 DB0C     		lsrs	r3, r3, #19
 9859 0228 03F00103 		and	r3, r3, #1
 9860              		.loc 1 5479 8
 9861 022c 002B     		cmp	r3, #0
 9862 022e 0AD0     		beq	.L477
5480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Rx Buffer New Message flag */
5482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
 9863              		.loc 1 5482 7
 9864 0230 7B68     		ldr	r3, [r7, #4]
 9865 0232 1B68     		ldr	r3, [r3]
 9866 0234 4FF40022 		mov	r2, #524288
 9867 0238 1A65     		str	r2, [r3, #80]
 9868 023a 0E4B     		ldr	r3, .L491
 9869 023c 0022     		movs	r2, #0
 9870 023e 1A61     		str	r2, [r3, #16]
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->RxBufferNewMessageCallback(hfdcan);
5487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Rx Buffer New Message Callback */
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
 9871              		.loc 1 5489 7
 9872 0240 7868     		ldr	r0, [r7, #4]
 9873 0242 FFF7FEFF 		bl	HAL_FDCAN_RxBufferNewMessageCallback
 9874              	.L477:
5490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Timestamp Wraparound interrupt management ********************************/
5495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMESTAMP_WRAPAROUND) != RESET)
 9875              		.loc 1 5495 7
 9876 0246 FB6B     		ldr	r3, [r7, #60]
 9877 0248 1B0C     		lsrs	r3, r3, #16
 9878 024a 03F00103 		and	r3, r3, #1
 9879              		.loc 1 5495 6
 9880 024e 002B     		cmp	r3, #0
 9881 0250 16D0     		beq	.L478
5496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMESTAMP_WRAPAROUND) != RESET)
 9882              		.loc 1 5497 9
 9883 0252 BB6B     		ldr	r3, [r7, #56]
 9884 0254 1B0C     		lsrs	r3, r3, #16
 9885 0256 03F00103 		and	r3, r3, #1
 9886              		.loc 1 5497 8
 9887 025a 002B     		cmp	r3, #0
 9888 025c 10D0     		beq	.L478
5498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Timestamp Wraparound flag */
5500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
 9889              		.loc 1 5500 7
 9890 025e 7B68     		ldr	r3, [r7, #4]
 9891 0260 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 290


 9892 0262 4FF48032 		mov	r2, #65536
 9893 0266 1A65     		str	r2, [r3, #80]
 9894 0268 024B     		ldr	r3, .L491
 9895 026a 0022     		movs	r2, #0
 9896 026c 1A61     		str	r2, [r3, #16]
5501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TimestampWraparoundCallback(hfdcan);
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Timestamp Wraparound Callback */
5507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
 9897              		.loc 1 5507 7
 9898 026e 7868     		ldr	r0, [r7, #4]
 9899 0270 04E0     		b	.L492
 9900              	.L493:
 9901 0272 00BF     		.align	2
 9902              	.L491:
 9903 0274 00A80040 		.word	1073784832
 9904 0278 FFFFCF3F 		.word	1070596095
 9905              	.L492:
 9906 027c FFF7FEFF 		bl	HAL_FDCAN_TimestampWraparoundCallback
 9907              	.L478:
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Timeout Occurred interrupt management ************************************/
5513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMEOUT_OCCURRED) != RESET)
 9908              		.loc 1 5513 7
 9909 0280 FB6B     		ldr	r3, [r7, #60]
 9910 0282 9B0C     		lsrs	r3, r3, #18
 9911 0284 03F00103 		and	r3, r3, #1
 9912              		.loc 1 5513 6
 9913 0288 002B     		cmp	r3, #0
 9914 028a 10D0     		beq	.L479
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMEOUT_OCCURRED) != RESET)
 9915              		.loc 1 5515 9
 9916 028c BB6B     		ldr	r3, [r7, #56]
 9917 028e 9B0C     		lsrs	r3, r3, #18
 9918 0290 03F00103 		and	r3, r3, #1
 9919              		.loc 1 5515 8
 9920 0294 002B     		cmp	r3, #0
 9921 0296 0AD0     		beq	.L479
5516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Timeout Occurred flag */
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
 9922              		.loc 1 5518 7
 9923 0298 7B68     		ldr	r3, [r7, #4]
 9924 029a 1B68     		ldr	r3, [r3]
 9925 029c 4FF48022 		mov	r2, #262144
 9926 02a0 1A65     		str	r2, [r3, #80]
 9927 02a2 834B     		ldr	r3, .L494
 9928 02a4 0022     		movs	r2, #0
 9929 02a6 1A61     		str	r2, [r3, #16]
5519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 291


5520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TimeoutOccurredCallback(hfdcan);
5523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Timeout Occurred Callback */
5525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
 9930              		.loc 1 5525 7
 9931 02a8 7868     		ldr	r0, [r7, #4]
 9932 02aa FFF7FEFF 		bl	HAL_FDCAN_TimeoutOccurredCallback
 9933              	.L479:
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Message RAM access failure interrupt management **************************/
5531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RAM_ACCESS_FAILURE) != RESET)
 9934              		.loc 1 5531 7
 9935 02ae FB6B     		ldr	r3, [r7, #60]
 9936 02b0 5B0C     		lsrs	r3, r3, #17
 9937 02b2 03F00103 		and	r3, r3, #1
 9938              		.loc 1 5531 6
 9939 02b6 002B     		cmp	r3, #0
 9940 02b8 15D0     		beq	.L480
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RAM_ACCESS_FAILURE) != RESET)
 9941              		.loc 1 5533 9
 9942 02ba BB6B     		ldr	r3, [r7, #56]
 9943 02bc 5B0C     		lsrs	r3, r3, #17
 9944 02be 03F00103 		and	r3, r3, #1
 9945              		.loc 1 5533 8
 9946 02c2 002B     		cmp	r3, #0
 9947 02c4 0FD0     		beq	.L480
5534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Message RAM access failure flag */
5536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
 9948              		.loc 1 5536 7
 9949 02c6 7B68     		ldr	r3, [r7, #4]
 9950 02c8 1B68     		ldr	r3, [r3]
 9951 02ca 4FF40032 		mov	r2, #131072
 9952 02ce 1A65     		str	r2, [r3, #80]
 9953 02d0 774B     		ldr	r3, .L494
 9954 02d2 0022     		movs	r2, #0
 9955 02d4 1A61     		str	r2, [r3, #16]
5537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
5539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_RAM_ACCESS;
 9956              		.loc 1 5539 13
 9957 02d6 7B68     		ldr	r3, [r7, #4]
 9958 02d8 D3F89C30 		ldr	r3, [r3, #156]
 9959              		.loc 1 5539 25
 9960 02dc 43F08002 		orr	r2, r3, #128
 9961 02e0 7B68     		ldr	r3, [r7, #4]
 9962 02e2 C3F89C20 		str	r2, [r3, #156]
 9963              	.L480:
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 292


5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Error Status interrupts management ***************************************/
5544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (ErrorStatusITs != 0U)
 9964              		.loc 1 5544 6
 9965 02e6 3B6C     		ldr	r3, [r7, #64]
 9966 02e8 002B     		cmp	r3, #0
 9967 02ea 0DD0     		beq	.L481
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Error flags */
5547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
 9968              		.loc 1 5547 5
 9969 02ec 7B68     		ldr	r3, [r7, #4]
 9970 02ee 1A68     		ldr	r2, [r3]
 9971 02f0 396C     		ldr	r1, [r7, #64]
 9972 02f2 704B     		ldr	r3, .L494+4
 9973 02f4 0B40     		ands	r3, r3, r1
 9974 02f6 1365     		str	r3, [r2, #80]
 9975 02f8 6D4A     		ldr	r2, .L494
 9976 02fa 3B6C     		ldr	r3, [r7, #64]
 9977 02fc 9B0F     		lsrs	r3, r3, #30
 9978 02fe 1361     		str	r3, [r2, #16]
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback(hfdcan, ErrorStatusITs);
5552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Error Status Callback */
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
 9979              		.loc 1 5554 5
 9980 0300 396C     		ldr	r1, [r7, #64]
 9981 0302 7868     		ldr	r0, [r7, #4]
 9982 0304 FFF7FEFF 		bl	HAL_FDCAN_ErrorStatusCallback
 9983              	.L481:
5555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Error interrupts management **********************************************/
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (Errors != 0U)
 9984              		.loc 1 5559 6
 9985 0308 7B6C     		ldr	r3, [r7, #68]
 9986 030a 002B     		cmp	r3, #0
 9987 030c 11D0     		beq	.L482
5560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Error flags */
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
 9988              		.loc 1 5562 5
 9989 030e 7B68     		ldr	r3, [r7, #4]
 9990 0310 1A68     		ldr	r2, [r3]
 9991 0312 796C     		ldr	r1, [r7, #68]
 9992 0314 674B     		ldr	r3, .L494+4
 9993 0316 0B40     		ands	r3, r3, r1
 9994 0318 1365     		str	r3, [r2, #80]
 9995 031a 654A     		ldr	r2, .L494
 9996 031c 7B6C     		ldr	r3, [r7, #68]
 9997 031e 9B0F     		lsrs	r3, r3, #30
 9998 0320 1361     		str	r3, [r2, #16]
5563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 293


5565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= Errors;
 9999              		.loc 1 5565 11
 10000 0322 7B68     		ldr	r3, [r7, #4]
 10001 0324 D3F89C20 		ldr	r2, [r3, #156]
 10002              		.loc 1 5565 23
 10003 0328 7B6C     		ldr	r3, [r7, #68]
 10004 032a 1A43     		orrs	r2, r2, r3
 10005 032c 7B68     		ldr	r3, [r7, #4]
 10006 032e C3F89C20 		str	r2, [r3, #156]
 10007              	.L482:
5566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
 10008              		.loc 1 5568 13
 10009 0332 7B68     		ldr	r3, [r7, #4]
 10010 0334 1B68     		ldr	r3, [r3]
 10011              		.loc 1 5568 6
 10012 0336 604A     		ldr	r2, .L494+8
 10013 0338 9342     		cmp	r3, r2
 10014 033a 40F0AC80 		bne	.L483
5569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != 0U)
 10015              		.loc 1 5570 16
 10016 033e 7B68     		ldr	r3, [r7, #4]
 10017 0340 5B68     		ldr	r3, [r3, #4]
 10018              		.loc 1 5570 23
 10019 0342 9B68     		ldr	r3, [r3, #8]
 10020              		.loc 1 5570 31
 10021 0344 03F00303 		and	r3, r3, #3
 10022              		.loc 1 5570 8
 10023 0348 002B     		cmp	r3, #0
 10024 034a 00F0A480 		beq	.L483
5571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTSchedSyncITs = hfdcan->ttcan->TTIR & FDCAN_TT_SCHEDULE_SYNC_MASK;
 10025              		.loc 1 5572 30
 10026 034e 7B68     		ldr	r3, [r7, #4]
 10027 0350 5B68     		ldr	r3, [r3, #4]
 10028              		.loc 1 5572 37
 10029 0352 1B6A     		ldr	r3, [r3, #32]
 10030              		.loc 1 5572 22
 10031 0354 03F00F03 		and	r3, r3, #15
 10032 0358 FB62     		str	r3, [r7, #44]
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTSchedSyncITs &= hfdcan->ttcan->TTIE;
 10033              		.loc 1 5573 31
 10034 035a 7B68     		ldr	r3, [r7, #4]
 10035 035c 5B68     		ldr	r3, [r3, #4]
 10036              		.loc 1 5573 38
 10037 035e 5B6A     		ldr	r3, [r3, #36]
 10038              		.loc 1 5573 22
 10039 0360 FA6A     		ldr	r2, [r7, #44]
 10040 0362 1340     		ands	r3, r3, r2
 10041 0364 FB62     		str	r3, [r7, #44]
5574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTTimeMarkITs = hfdcan->ttcan->TTIR & FDCAN_TT_TIME_MARK_MASK;
 10042              		.loc 1 5574 29
 10043 0366 7B68     		ldr	r3, [r7, #4]
 10044 0368 5B68     		ldr	r3, [r3, #4]
 10045              		.loc 1 5574 36
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 294


 10046 036a 1B6A     		ldr	r3, [r3, #32]
 10047              		.loc 1 5574 21
 10048 036c 03F03003 		and	r3, r3, #48
 10049 0370 BB62     		str	r3, [r7, #40]
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTTimeMarkITs &= hfdcan->ttcan->TTIE;
 10050              		.loc 1 5575 30
 10051 0372 7B68     		ldr	r3, [r7, #4]
 10052 0374 5B68     		ldr	r3, [r3, #4]
 10053              		.loc 1 5575 37
 10054 0376 5B6A     		ldr	r3, [r3, #36]
 10055              		.loc 1 5575 21
 10056 0378 BA6A     		ldr	r2, [r7, #40]
 10057 037a 1340     		ands	r3, r3, r2
 10058 037c BB62     		str	r3, [r7, #40]
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTGlobTimeITs = hfdcan->ttcan->TTIR & FDCAN_TT_GLOBAL_TIME_MASK;
 10059              		.loc 1 5576 29
 10060 037e 7B68     		ldr	r3, [r7, #4]
 10061 0380 5B68     		ldr	r3, [r3, #4]
 10062              		.loc 1 5576 36
 10063 0382 1B6A     		ldr	r3, [r3, #32]
 10064              		.loc 1 5576 21
 10065 0384 03F4C073 		and	r3, r3, #384
 10066 0388 7B62     		str	r3, [r7, #36]
5577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTGlobTimeITs &= hfdcan->ttcan->TTIE;
 10067              		.loc 1 5577 30
 10068 038a 7B68     		ldr	r3, [r7, #4]
 10069 038c 5B68     		ldr	r3, [r3, #4]
 10070              		.loc 1 5577 37
 10071 038e 5B6A     		ldr	r3, [r3, #36]
 10072              		.loc 1 5577 21
 10073 0390 7A6A     		ldr	r2, [r7, #36]
 10074 0392 1340     		ands	r3, r3, r2
 10075 0394 7B62     		str	r3, [r7, #36]
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTDistErrors = hfdcan->ttcan->TTIR & FDCAN_TT_DISTURBING_ERROR_MASK;
 10076              		.loc 1 5578 28
 10077 0396 7B68     		ldr	r3, [r7, #4]
 10078 0398 5B68     		ldr	r3, [r3, #4]
 10079              		.loc 1 5578 35
 10080 039a 1B6A     		ldr	r3, [r3, #32]
 10081              		.loc 1 5578 20
 10082 039c 03F4FC43 		and	r3, r3, #32256
 10083 03a0 3B62     		str	r3, [r7, #32]
5579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTDistErrors &= hfdcan->ttcan->TTIE;
 10084              		.loc 1 5579 29
 10085 03a2 7B68     		ldr	r3, [r7, #4]
 10086 03a4 5B68     		ldr	r3, [r3, #4]
 10087              		.loc 1 5579 36
 10088 03a6 5B6A     		ldr	r3, [r3, #36]
 10089              		.loc 1 5579 20
 10090 03a8 3A6A     		ldr	r2, [r7, #32]
 10091 03aa 1340     		ands	r3, r3, r2
 10092 03ac 3B62     		str	r3, [r7, #32]
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTFatalErrors = hfdcan->ttcan->TTIR & FDCAN_TT_FATAL_ERROR_MASK;
 10093              		.loc 1 5580 29
 10094 03ae 7B68     		ldr	r3, [r7, #4]
 10095 03b0 5B68     		ldr	r3, [r3, #4]
 10096              		.loc 1 5580 36
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 295


 10097 03b2 1B6A     		ldr	r3, [r3, #32]
 10098              		.loc 1 5580 21
 10099 03b4 03F4F023 		and	r3, r3, #491520
 10100 03b8 FB61     		str	r3, [r7, #28]
5581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTFatalErrors &= hfdcan->ttcan->TTIE;
 10101              		.loc 1 5581 30
 10102 03ba 7B68     		ldr	r3, [r7, #4]
 10103 03bc 5B68     		ldr	r3, [r3, #4]
 10104              		.loc 1 5581 37
 10105 03be 5B6A     		ldr	r3, [r3, #36]
 10106              		.loc 1 5581 21
 10107 03c0 FA69     		ldr	r2, [r7, #28]
 10108 03c2 1340     		ands	r3, r3, r2
 10109 03c4 FB61     		str	r3, [r7, #28]
5582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       itsourceTTIE = hfdcan->ttcan->TTIE;
 10110              		.loc 1 5582 28
 10111 03c6 7B68     		ldr	r3, [r7, #4]
 10112 03c8 5B68     		ldr	r3, [r3, #4]
 10113              		.loc 1 5582 20
 10114 03ca 5B6A     		ldr	r3, [r3, #36]
 10115 03cc BB61     		str	r3, [r7, #24]
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       itflagTTIR = hfdcan->ttcan->TTIR;
 10116              		.loc 1 5583 26
 10117 03ce 7B68     		ldr	r3, [r7, #4]
 10118 03d0 5B68     		ldr	r3, [r3, #4]
 10119              		.loc 1 5583 18
 10120 03d2 1B6A     		ldr	r3, [r3, #32]
 10121 03d4 7B61     		str	r3, [r7, #20]
5584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Schedule Synchronization interrupts management **********************/
5586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTSchedSyncITs != 0U)
 10122              		.loc 1 5586 10
 10123 03d6 FB6A     		ldr	r3, [r7, #44]
 10124 03d8 002B     		cmp	r3, #0
 10125 03da 07D0     		beq	.L484
5587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Schedule Synchronization flags */
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTSchedSyncITs);
 10126              		.loc 1 5589 9
 10127 03dc 7B68     		ldr	r3, [r7, #4]
 10128 03de 5B68     		ldr	r3, [r3, #4]
 10129 03e0 FA6A     		ldr	r2, [r7, #44]
 10130 03e2 1A62     		str	r2, [r3, #32]
5590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Schedule Synchronization Callback */
5596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
 10131              		.loc 1 5596 9
 10132 03e4 F96A     		ldr	r1, [r7, #44]
 10133 03e6 7868     		ldr	r0, [r7, #4]
 10134 03e8 FFF7FEFF 		bl	HAL_FDCAN_TT_ScheduleSyncCallback
 10135              	.L484:
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 296


5599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Time Mark interrupts management *************************************/
5601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTTimeMarkITs != 0U)
 10136              		.loc 1 5601 10
 10137 03ec BB6A     		ldr	r3, [r7, #40]
 10138 03ee 002B     		cmp	r3, #0
 10139 03f0 07D0     		beq	.L485
5602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Time Mark flags */
5604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
 10140              		.loc 1 5604 9
 10141 03f2 7B68     		ldr	r3, [r7, #4]
 10142 03f4 5B68     		ldr	r3, [r3, #4]
 10143 03f6 BA6A     		ldr	r2, [r7, #40]
 10144 03f8 1A62     		str	r2, [r3, #32]
5605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
5609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Time Mark Callback */
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
 10145              		.loc 1 5611 9
 10146 03fa B96A     		ldr	r1, [r7, #40]
 10147 03fc 7868     		ldr	r0, [r7, #4]
 10148 03fe FFF7FEFF 		bl	HAL_FDCAN_TT_TimeMarkCallback
 10149              	.L485:
5612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Stop Watch interrupt management *************************************/
5616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (FDCAN_CHECK_IT_SOURCE(itsourceTTIE, FDCAN_TT_IT_STOP_WATCH) != RESET)
 10150              		.loc 1 5616 11
 10151 0402 BB69     		ldr	r3, [r7, #24]
 10152 0404 9B09     		lsrs	r3, r3, #6
 10153 0406 03F00103 		and	r3, r3, #1
 10154              		.loc 1 5616 10
 10155 040a 002B     		cmp	r3, #0
 10156 040c 1AD0     		beq	.L486
5617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (FDCAN_CHECK_FLAG(itflagTTIR, FDCAN_TT_FLAG_STOP_WATCH) != RESET)
 10157              		.loc 1 5618 13
 10158 040e 7B69     		ldr	r3, [r7, #20]
 10159 0410 9B09     		lsrs	r3, r3, #6
 10160 0412 03F00103 		and	r3, r3, #1
 10161              		.loc 1 5618 12
 10162 0416 002B     		cmp	r3, #0
 10163 0418 14D0     		beq	.L486
5619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Retrieve Stop watch Time and Cycle count */
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
 10164              		.loc 1 5621 28
 10165 041a 7B68     		ldr	r3, [r7, #4]
 10166 041c 5B68     		ldr	r3, [r3, #4]
 10167              		.loc 1 5621 35
 10168 041e DB6B     		ldr	r3, [r3, #60]
 10169              		.loc 1 5621 62
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 297


 10170 0420 1B0C     		lsrs	r3, r3, #16
 10171              		.loc 1 5621 18
 10172 0422 9BB2     		uxth	r3, r3
 10173 0424 3B61     		str	r3, [r7, #16]
5622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           SWCycleCount = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_CCV) >> FDCAN_TTCPT_CCV_Pos);
 10174              		.loc 1 5622 34
 10175 0426 7B68     		ldr	r3, [r7, #4]
 10176 0428 5B68     		ldr	r3, [r3, #4]
 10177              		.loc 1 5622 41
 10178 042a DB6B     		ldr	r3, [r3, #60]
 10179              		.loc 1 5622 24
 10180 042c 03F03F03 		and	r3, r3, #63
 10181 0430 FB60     		str	r3, [r7, #12]
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Clear the TT Stop Watch flag */
5625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
 10182              		.loc 1 5625 11
 10183 0432 7B68     		ldr	r3, [r7, #4]
 10184 0434 5B68     		ldr	r3, [r3, #4]
 10185 0436 4022     		movs	r2, #64
 10186 0438 1A62     		str	r2, [r3, #32]
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Call registered callback*/
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
5630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* TT Stop Watch Callback */
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
 10187              		.loc 1 5632 11
 10188 043a FA68     		ldr	r2, [r7, #12]
 10189 043c 3969     		ldr	r1, [r7, #16]
 10190 043e 7868     		ldr	r0, [r7, #4]
 10191 0440 FFF7FEFF 		bl	HAL_FDCAN_TT_StopWatchCallback
 10192              	.L486:
5633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
5635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Global Time interrupts management ***********************************/
5638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTGlobTimeITs != 0U)
 10193              		.loc 1 5638 10
 10194 0444 7B6A     		ldr	r3, [r7, #36]
 10195 0446 002B     		cmp	r3, #0
 10196 0448 07D0     		beq	.L487
5639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Global Time flags */
5641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
 10197              		.loc 1 5641 9
 10198 044a 7B68     		ldr	r3, [r7, #4]
 10199 044c 5B68     		ldr	r3, [r3, #4]
 10200 044e 7A6A     		ldr	r2, [r7, #36]
 10201 0450 1A62     		str	r2, [r3, #32]
5642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
5646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 298


5647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Global Time Callback */
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
 10202              		.loc 1 5648 9
 10203 0452 796A     		ldr	r1, [r7, #36]
 10204 0454 7868     		ldr	r0, [r7, #4]
 10205 0456 FFF7FEFF 		bl	HAL_FDCAN_TT_GlobalTimeCallback
 10206              	.L487:
5649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Disturbing Error interrupts management ******************************/
5653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTDistErrors != 0U)
 10207              		.loc 1 5653 10
 10208 045a 3B6A     		ldr	r3, [r7, #32]
 10209 045c 002B     		cmp	r3, #0
 10210 045e 0BD0     		beq	.L488
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Disturbing Error flags */
5656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTDistErrors);
 10211              		.loc 1 5656 9
 10212 0460 7B68     		ldr	r3, [r7, #4]
 10213 0462 5B68     		ldr	r3, [r3, #4]
 10214 0464 3A6A     		ldr	r2, [r7, #32]
 10215 0466 1A62     		str	r2, [r3, #32]
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= TTDistErrors;
 10216              		.loc 1 5659 15
 10217 0468 7B68     		ldr	r3, [r7, #4]
 10218 046a D3F89C20 		ldr	r2, [r3, #156]
 10219              		.loc 1 5659 27
 10220 046e 3B6A     		ldr	r3, [r7, #32]
 10221 0470 1A43     		orrs	r2, r2, r3
 10222 0472 7B68     		ldr	r3, [r7, #4]
 10223 0474 C3F89C20 		str	r2, [r3, #156]
 10224              	.L488:
5660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Fatal Error interrupts management ***********************************/
5663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTFatalErrors != 0U)
 10225              		.loc 1 5663 10
 10226 0478 FB69     		ldr	r3, [r7, #28]
 10227 047a 002B     		cmp	r3, #0
 10228 047c 0BD0     		beq	.L483
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Fatal Error flags */
5666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTFatalErrors);
 10229              		.loc 1 5666 9
 10230 047e 7B68     		ldr	r3, [r7, #4]
 10231 0480 5B68     		ldr	r3, [r3, #4]
 10232 0482 FA69     		ldr	r2, [r7, #28]
 10233 0484 1A62     		str	r2, [r3, #32]
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= TTFatalErrors;
 10234              		.loc 1 5669 15
 10235 0486 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 299


 10236 0488 D3F89C20 		ldr	r2, [r3, #156]
 10237              		.loc 1 5669 27
 10238 048c FB69     		ldr	r3, [r7, #28]
 10239 048e 1A43     		orrs	r2, r2, r3
 10240 0490 7B68     		ldr	r3, [r7, #4]
 10241 0492 C3F89C20 		str	r2, [r3, #156]
 10242              	.L483:
5670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->ErrorCode != HAL_FDCAN_ERROR_NONE)
 10243              		.loc 1 5674 13
 10244 0496 7B68     		ldr	r3, [r7, #4]
 10245 0498 D3F89C30 		ldr	r3, [r3, #156]
 10246              		.loc 1 5674 6
 10247 049c 002B     		cmp	r3, #0
 10248 049e 02D0     		beq	.L490
5675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCallback(hfdcan);
5679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Error Callback */
5681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ErrorCallback(hfdcan);
 10249              		.loc 1 5681 5
 10250 04a0 7868     		ldr	r0, [r7, #4]
 10251 04a2 FFF7FEFF 		bl	HAL_FDCAN_ErrorCallback
 10252              	.L490:
5682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10253              		.loc 1 5684 1
 10254 04a6 00BF     		nop
 10255 04a8 5837     		adds	r7, r7, #88
 10256              	.LCFI464:
 10257              		.cfi_def_cfa_offset 8
 10258 04aa BD46     		mov	sp, r7
 10259              	.LCFI465:
 10260              		.cfi_def_cfa_register 13
 10261              		@ sp needed
 10262 04ac 80BD     		pop	{r7, pc}
 10263              	.L495:
 10264 04ae 00BF     		.align	2
 10265              	.L494:
 10266 04b0 00A80040 		.word	1073784832
 10267 04b4 FFFFCF3F 		.word	1070596095
 10268 04b8 00A00040 		.word	1073782784
 10269              		.cfi_endproc
 10270              	.LFE222:
 10272              		.section	.text.HAL_FDCAN_ClockCalibrationCallback,"ax",%progbits
 10273              		.align	1
 10274              		.weak	HAL_FDCAN_ClockCalibrationCallback
 10275              		.syntax unified
 10276              		.thumb
 10277              		.thumb_func
 10279              	HAL_FDCAN_ClockCalibrationCallback:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 300


 10280              	.LFB223:
5685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
5688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group6 Callback functions
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief   FDCAN Callback functions
5692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
5695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                           ##### Callback functions #####
5696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
5697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
5698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     This subsection provides the following callback functions:
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ClockCalibrationCallback
5700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxEventFifoCallback
5701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxFifo0Callback
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxFifo1Callback
5703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxFifoEmptyCallback
5704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxBufferCompleteCallback
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxBufferAbortCallback
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxBufferNewMessageCallback
5707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_HighPriorityMessageCallback
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TimestampWraparoundCallback
5709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TimeoutOccurredCallback
5710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ErrorCallback
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ErrorStatusCallback
5712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ScheduleSyncCallback
5713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_TimeMarkCallback
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_StopWatchCallback
5715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_GlobalTimeCallback
5716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
5718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
5719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Clock Calibration callback.
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ClkCalibrationITs indicates which Clock Calibration interrupts are signaled.
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Clock_Calibration_Interrupts.
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t ClkCalibration
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10281              		.loc 1 5730 1
 10282              		.cfi_startproc
 10283              		@ args = 0, pretend = 0, frame = 8
 10284              		@ frame_needed = 1, uses_anonymous_args = 0
 10285              		@ link register save eliminated.
 10286 0000 80B4     		push	{r7}
 10287              	.LCFI466:
 10288              		.cfi_def_cfa_offset 4
 10289              		.cfi_offset 7, -4
 10290 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 301


 10291              	.LCFI467:
 10292              		.cfi_def_cfa_offset 16
 10293 0004 00AF     		add	r7, sp, #0
 10294              	.LCFI468:
 10295              		.cfi_def_cfa_register 7
 10296 0006 7860     		str	r0, [r7, #4]
 10297 0008 3960     		str	r1, [r7]
5731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(ClkCalibrationITs);
5734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ClockCalibrationCallback could be implemented in the user file
5737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10298              		.loc 1 5738 1
 10299 000a 00BF     		nop
 10300 000c 0C37     		adds	r7, r7, #12
 10301              	.LCFI469:
 10302              		.cfi_def_cfa_offset 4
 10303 000e BD46     		mov	sp, r7
 10304              	.LCFI470:
 10305              		.cfi_def_cfa_register 13
 10306              		@ sp needed
 10307 0010 5DF8047B 		ldr	r7, [sp], #4
 10308              	.LCFI471:
 10309              		.cfi_restore 7
 10310              		.cfi_def_cfa_offset 0
 10311 0014 7047     		bx	lr
 10312              		.cfi_endproc
 10313              	.LFE223:
 10315              		.section	.text.HAL_FDCAN_TxEventFifoCallback,"ax",%progbits
 10316              		.align	1
 10317              		.weak	HAL_FDCAN_TxEventFifoCallback
 10318              		.syntax unified
 10319              		.thumb
 10320              		.thumb_func
 10322              	HAL_FDCAN_TxEventFifoCallback:
 10323              	.LFB224:
5739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Tx Event callback.
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TxEventFifoITs indicates which Tx Event FIFO interrupts are signaled.
5745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_Event_Fifo_Interrupts.
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TxEventFifoITs)
5749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10324              		.loc 1 5749 1
 10325              		.cfi_startproc
 10326              		@ args = 0, pretend = 0, frame = 8
 10327              		@ frame_needed = 1, uses_anonymous_args = 0
 10328              		@ link register save eliminated.
 10329 0000 80B4     		push	{r7}
 10330              	.LCFI472:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 302


 10331              		.cfi_def_cfa_offset 4
 10332              		.cfi_offset 7, -4
 10333 0002 83B0     		sub	sp, sp, #12
 10334              	.LCFI473:
 10335              		.cfi_def_cfa_offset 16
 10336 0004 00AF     		add	r7, sp, #0
 10337              	.LCFI474:
 10338              		.cfi_def_cfa_register 7
 10339 0006 7860     		str	r0, [r7, #4]
 10340 0008 3960     		str	r1, [r7]
5750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TxEventFifoITs);
5753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxEventFifoCallback could be implemented in the user file
5756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10341              		.loc 1 5757 1
 10342 000a 00BF     		nop
 10343 000c 0C37     		adds	r7, r7, #12
 10344              	.LCFI475:
 10345              		.cfi_def_cfa_offset 4
 10346 000e BD46     		mov	sp, r7
 10347              	.LCFI476:
 10348              		.cfi_def_cfa_register 13
 10349              		@ sp needed
 10350 0010 5DF8047B 		ldr	r7, [sp], #4
 10351              	.LCFI477:
 10352              		.cfi_restore 7
 10353              		.cfi_def_cfa_offset 0
 10354 0014 7047     		bx	lr
 10355              		.cfi_endproc
 10356              	.LFE224:
 10358              		.section	.text.HAL_FDCAN_RxFifo0Callback,"ax",%progbits
 10359              		.align	1
 10360              		.weak	HAL_FDCAN_RxFifo0Callback
 10361              		.syntax unified
 10362              		.thumb
 10363              		.thumb_func
 10365              	HAL_FDCAN_RxFifo0Callback:
 10366              	.LFB225:
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx FIFO 0 callback.
5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo0ITs indicates which Rx FIFO 0 interrupts are signaled.
5764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Rx_Fifo0_Interrupts.
5765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
5768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10367              		.loc 1 5768 1
 10368              		.cfi_startproc
 10369              		@ args = 0, pretend = 0, frame = 8
 10370              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 303


 10371              		@ link register save eliminated.
 10372 0000 80B4     		push	{r7}
 10373              	.LCFI478:
 10374              		.cfi_def_cfa_offset 4
 10375              		.cfi_offset 7, -4
 10376 0002 83B0     		sub	sp, sp, #12
 10377              	.LCFI479:
 10378              		.cfi_def_cfa_offset 16
 10379 0004 00AF     		add	r7, sp, #0
 10380              	.LCFI480:
 10381              		.cfi_def_cfa_register 7
 10382 0006 7860     		str	r0, [r7, #4]
 10383 0008 3960     		str	r1, [r7]
5769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(RxFifo0ITs);
5772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxFifo0Callback could be implemented in the user file
5775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10384              		.loc 1 5776 1
 10385 000a 00BF     		nop
 10386 000c 0C37     		adds	r7, r7, #12
 10387              	.LCFI481:
 10388              		.cfi_def_cfa_offset 4
 10389 000e BD46     		mov	sp, r7
 10390              	.LCFI482:
 10391              		.cfi_def_cfa_register 13
 10392              		@ sp needed
 10393 0010 5DF8047B 		ldr	r7, [sp], #4
 10394              	.LCFI483:
 10395              		.cfi_restore 7
 10396              		.cfi_def_cfa_offset 0
 10397 0014 7047     		bx	lr
 10398              		.cfi_endproc
 10399              	.LFE225:
 10401              		.section	.text.HAL_FDCAN_RxFifo1Callback,"ax",%progbits
 10402              		.align	1
 10403              		.weak	HAL_FDCAN_RxFifo1Callback
 10404              		.syntax unified
 10405              		.thumb
 10406              		.thumb_func
 10408              	HAL_FDCAN_RxFifo1Callback:
 10409              	.LFB226:
5777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx FIFO 1 callback.
5780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo1ITs indicates which Rx FIFO 1 interrupts are signaled.
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Rx_Fifo1_Interrupts.
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo1ITs)
5787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10410              		.loc 1 5787 1
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 304


 10411              		.cfi_startproc
 10412              		@ args = 0, pretend = 0, frame = 8
 10413              		@ frame_needed = 1, uses_anonymous_args = 0
 10414              		@ link register save eliminated.
 10415 0000 80B4     		push	{r7}
 10416              	.LCFI484:
 10417              		.cfi_def_cfa_offset 4
 10418              		.cfi_offset 7, -4
 10419 0002 83B0     		sub	sp, sp, #12
 10420              	.LCFI485:
 10421              		.cfi_def_cfa_offset 16
 10422 0004 00AF     		add	r7, sp, #0
 10423              	.LCFI486:
 10424              		.cfi_def_cfa_register 7
 10425 0006 7860     		str	r0, [r7, #4]
 10426 0008 3960     		str	r1, [r7]
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(RxFifo1ITs);
5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxFifo1Callback could be implemented in the user file
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10427              		.loc 1 5795 1
 10428 000a 00BF     		nop
 10429 000c 0C37     		adds	r7, r7, #12
 10430              	.LCFI487:
 10431              		.cfi_def_cfa_offset 4
 10432 000e BD46     		mov	sp, r7
 10433              	.LCFI488:
 10434              		.cfi_def_cfa_register 13
 10435              		@ sp needed
 10436 0010 5DF8047B 		ldr	r7, [sp], #4
 10437              	.LCFI489:
 10438              		.cfi_restore 7
 10439              		.cfi_def_cfa_offset 0
 10440 0014 7047     		bx	lr
 10441              		.cfi_endproc
 10442              	.LFE226:
 10444              		.section	.text.HAL_FDCAN_TxFifoEmptyCallback,"ax",%progbits
 10445              		.align	1
 10446              		.weak	HAL_FDCAN_TxFifoEmptyCallback
 10447              		.syntax unified
 10448              		.thumb
 10449              		.thumb_func
 10451              	HAL_FDCAN_TxFifoEmptyCallback:
 10452              	.LFB227:
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Tx FIFO Empty callback.
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxFifoEmptyCallback(FDCAN_HandleTypeDef *hfdcan)
5804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 305


 10453              		.loc 1 5804 1
 10454              		.cfi_startproc
 10455              		@ args = 0, pretend = 0, frame = 8
 10456              		@ frame_needed = 1, uses_anonymous_args = 0
 10457              		@ link register save eliminated.
 10458 0000 80B4     		push	{r7}
 10459              	.LCFI490:
 10460              		.cfi_def_cfa_offset 4
 10461              		.cfi_offset 7, -4
 10462 0002 83B0     		sub	sp, sp, #12
 10463              	.LCFI491:
 10464              		.cfi_def_cfa_offset 16
 10465 0004 00AF     		add	r7, sp, #0
 10466              	.LCFI492:
 10467              		.cfi_def_cfa_register 7
 10468 0006 7860     		str	r0, [r7, #4]
5805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxFifoEmptyCallback could be implemented in the user file
5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10469              		.loc 1 5811 1
 10470 0008 00BF     		nop
 10471 000a 0C37     		adds	r7, r7, #12
 10472              	.LCFI493:
 10473              		.cfi_def_cfa_offset 4
 10474 000c BD46     		mov	sp, r7
 10475              	.LCFI494:
 10476              		.cfi_def_cfa_register 13
 10477              		@ sp needed
 10478 000e 5DF8047B 		ldr	r7, [sp], #4
 10479              	.LCFI495:
 10480              		.cfi_restore 7
 10481              		.cfi_def_cfa_offset 0
 10482 0012 7047     		bx	lr
 10483              		.cfi_endproc
 10484              	.LFE227:
 10486              		.section	.text.HAL_FDCAN_TxBufferCompleteCallback,"ax",%progbits
 10487              		.align	1
 10488              		.weak	HAL_FDCAN_TxBufferCompleteCallback
 10489              		.syntax unified
 10490              		.thumb
 10491              		.thumb_func
 10493              	HAL_FDCAN_TxBufferCompleteCallback:
 10494              	.LFB228:
5812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmission Complete callback.
5815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Indexes of the transmitted buffers.
5818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 306


5822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10495              		.loc 1 5822 1
 10496              		.cfi_startproc
 10497              		@ args = 0, pretend = 0, frame = 8
 10498              		@ frame_needed = 1, uses_anonymous_args = 0
 10499              		@ link register save eliminated.
 10500 0000 80B4     		push	{r7}
 10501              	.LCFI496:
 10502              		.cfi_def_cfa_offset 4
 10503              		.cfi_offset 7, -4
 10504 0002 83B0     		sub	sp, sp, #12
 10505              	.LCFI497:
 10506              		.cfi_def_cfa_offset 16
 10507 0004 00AF     		add	r7, sp, #0
 10508              	.LCFI498:
 10509              		.cfi_def_cfa_register 7
 10510 0006 7860     		str	r0, [r7, #4]
 10511 0008 3960     		str	r1, [r7]
5823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(BufferIndexes);
5826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxBufferCompleteCallback could be implemented in the user file
5829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10512              		.loc 1 5830 1
 10513 000a 00BF     		nop
 10514 000c 0C37     		adds	r7, r7, #12
 10515              	.LCFI499:
 10516              		.cfi_def_cfa_offset 4
 10517 000e BD46     		mov	sp, r7
 10518              	.LCFI500:
 10519              		.cfi_def_cfa_register 13
 10520              		@ sp needed
 10521 0010 5DF8047B 		ldr	r7, [sp], #4
 10522              	.LCFI501:
 10523              		.cfi_restore 7
 10524              		.cfi_def_cfa_offset 0
 10525 0014 7047     		bx	lr
 10526              		.cfi_endproc
 10527              	.LFE228:
 10529              		.section	.text.HAL_FDCAN_TxBufferAbortCallback,"ax",%progbits
 10530              		.align	1
 10531              		.weak	HAL_FDCAN_TxBufferAbortCallback
 10532              		.syntax unified
 10533              		.thumb
 10534              		.thumb_func
 10536              	HAL_FDCAN_TxBufferAbortCallback:
 10537              	.LFB229:
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmission Cancellation callback.
5834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Indexes of the aborted buffers.
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 307


5838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
5841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10538              		.loc 1 5841 1
 10539              		.cfi_startproc
 10540              		@ args = 0, pretend = 0, frame = 8
 10541              		@ frame_needed = 1, uses_anonymous_args = 0
 10542              		@ link register save eliminated.
 10543 0000 80B4     		push	{r7}
 10544              	.LCFI502:
 10545              		.cfi_def_cfa_offset 4
 10546              		.cfi_offset 7, -4
 10547 0002 83B0     		sub	sp, sp, #12
 10548              	.LCFI503:
 10549              		.cfi_def_cfa_offset 16
 10550 0004 00AF     		add	r7, sp, #0
 10551              	.LCFI504:
 10552              		.cfi_def_cfa_register 7
 10553 0006 7860     		str	r0, [r7, #4]
 10554 0008 3960     		str	r1, [r7]
5842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(BufferIndexes);
5845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxBufferAbortCallback could be implemented in the user file
5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10555              		.loc 1 5849 1
 10556 000a 00BF     		nop
 10557 000c 0C37     		adds	r7, r7, #12
 10558              	.LCFI505:
 10559              		.cfi_def_cfa_offset 4
 10560 000e BD46     		mov	sp, r7
 10561              	.LCFI506:
 10562              		.cfi_def_cfa_register 13
 10563              		@ sp needed
 10564 0010 5DF8047B 		ldr	r7, [sp], #4
 10565              	.LCFI507:
 10566              		.cfi_restore 7
 10567              		.cfi_def_cfa_offset 0
 10568 0014 7047     		bx	lr
 10569              		.cfi_endproc
 10570              	.LFE229:
 10572              		.section	.text.HAL_FDCAN_RxBufferNewMessageCallback,"ax",%progbits
 10573              		.align	1
 10574              		.weak	HAL_FDCAN_RxBufferNewMessageCallback
 10575              		.syntax unified
 10576              		.thumb
 10577              		.thumb_func
 10579              	HAL_FDCAN_RxBufferNewMessageCallback:
 10580              	.LFB230:
5850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx Buffer New Message callback.
5853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 308


5854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxBufferNewMessageCallback(FDCAN_HandleTypeDef *hfdcan)
5858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10581              		.loc 1 5858 1
 10582              		.cfi_startproc
 10583              		@ args = 0, pretend = 0, frame = 8
 10584              		@ frame_needed = 1, uses_anonymous_args = 0
 10585              		@ link register save eliminated.
 10586 0000 80B4     		push	{r7}
 10587              	.LCFI508:
 10588              		.cfi_def_cfa_offset 4
 10589              		.cfi_offset 7, -4
 10590 0002 83B0     		sub	sp, sp, #12
 10591              	.LCFI509:
 10592              		.cfi_def_cfa_offset 16
 10593 0004 00AF     		add	r7, sp, #0
 10594              	.LCFI510:
 10595              		.cfi_def_cfa_register 7
 10596 0006 7860     		str	r0, [r7, #4]
5859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxBufferNewMessageCallback could be implemented in the user file
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10597              		.loc 1 5865 1
 10598 0008 00BF     		nop
 10599 000a 0C37     		adds	r7, r7, #12
 10600              	.LCFI511:
 10601              		.cfi_def_cfa_offset 4
 10602 000c BD46     		mov	sp, r7
 10603              	.LCFI512:
 10604              		.cfi_def_cfa_register 13
 10605              		@ sp needed
 10606 000e 5DF8047B 		ldr	r7, [sp], #4
 10607              	.LCFI513:
 10608              		.cfi_restore 7
 10609              		.cfi_def_cfa_offset 0
 10610 0012 7047     		bx	lr
 10611              		.cfi_endproc
 10612              	.LFE230:
 10614              		.section	.text.HAL_FDCAN_TimestampWraparoundCallback,"ax",%progbits
 10615              		.align	1
 10616              		.weak	HAL_FDCAN_TimestampWraparoundCallback
 10617              		.syntax unified
 10618              		.thumb
 10619              		.thumb_func
 10621              	HAL_FDCAN_TimestampWraparoundCallback:
 10622              	.LFB231:
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Timestamp Wraparound callback.
5869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 309


5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TimestampWraparoundCallback(FDCAN_HandleTypeDef *hfdcan)
5874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10623              		.loc 1 5874 1
 10624              		.cfi_startproc
 10625              		@ args = 0, pretend = 0, frame = 8
 10626              		@ frame_needed = 1, uses_anonymous_args = 0
 10627              		@ link register save eliminated.
 10628 0000 80B4     		push	{r7}
 10629              	.LCFI514:
 10630              		.cfi_def_cfa_offset 4
 10631              		.cfi_offset 7, -4
 10632 0002 83B0     		sub	sp, sp, #12
 10633              	.LCFI515:
 10634              		.cfi_def_cfa_offset 16
 10635 0004 00AF     		add	r7, sp, #0
 10636              	.LCFI516:
 10637              		.cfi_def_cfa_register 7
 10638 0006 7860     		str	r0, [r7, #4]
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TimestampWraparoundCallback could be implemented in the user file
5880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10639              		.loc 1 5881 1
 10640 0008 00BF     		nop
 10641 000a 0C37     		adds	r7, r7, #12
 10642              	.LCFI517:
 10643              		.cfi_def_cfa_offset 4
 10644 000c BD46     		mov	sp, r7
 10645              	.LCFI518:
 10646              		.cfi_def_cfa_register 13
 10647              		@ sp needed
 10648 000e 5DF8047B 		ldr	r7, [sp], #4
 10649              	.LCFI519:
 10650              		.cfi_restore 7
 10651              		.cfi_def_cfa_offset 0
 10652 0012 7047     		bx	lr
 10653              		.cfi_endproc
 10654              	.LFE231:
 10656              		.section	.text.HAL_FDCAN_TimeoutOccurredCallback,"ax",%progbits
 10657              		.align	1
 10658              		.weak	HAL_FDCAN_TimeoutOccurredCallback
 10659              		.syntax unified
 10660              		.thumb
 10661              		.thumb_func
 10663              	HAL_FDCAN_TimeoutOccurredCallback:
 10664              	.LFB232:
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Timeout Occurred callback.
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 310


5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TimeoutOccurredCallback(FDCAN_HandleTypeDef *hfdcan)
5890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10665              		.loc 1 5890 1
 10666              		.cfi_startproc
 10667              		@ args = 0, pretend = 0, frame = 8
 10668              		@ frame_needed = 1, uses_anonymous_args = 0
 10669              		@ link register save eliminated.
 10670 0000 80B4     		push	{r7}
 10671              	.LCFI520:
 10672              		.cfi_def_cfa_offset 4
 10673              		.cfi_offset 7, -4
 10674 0002 83B0     		sub	sp, sp, #12
 10675              	.LCFI521:
 10676              		.cfi_def_cfa_offset 16
 10677 0004 00AF     		add	r7, sp, #0
 10678              	.LCFI522:
 10679              		.cfi_def_cfa_register 7
 10680 0006 7860     		str	r0, [r7, #4]
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TimeoutOccurredCallback could be implemented in the user file
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10681              		.loc 1 5897 1
 10682 0008 00BF     		nop
 10683 000a 0C37     		adds	r7, r7, #12
 10684              	.LCFI523:
 10685              		.cfi_def_cfa_offset 4
 10686 000c BD46     		mov	sp, r7
 10687              	.LCFI524:
 10688              		.cfi_def_cfa_register 13
 10689              		@ sp needed
 10690 000e 5DF8047B 		ldr	r7, [sp], #4
 10691              	.LCFI525:
 10692              		.cfi_restore 7
 10693              		.cfi_def_cfa_offset 0
 10694 0012 7047     		bx	lr
 10695              		.cfi_endproc
 10696              	.LFE232:
 10698              		.section	.text.HAL_FDCAN_HighPriorityMessageCallback,"ax",%progbits
 10699              		.align	1
 10700              		.weak	HAL_FDCAN_HighPriorityMessageCallback
 10701              		.syntax unified
 10702              		.thumb
 10703              		.thumb_func
 10705              	HAL_FDCAN_HighPriorityMessageCallback:
 10706              	.LFB233:
5898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  High Priority Message callback.
5901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 311


5905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_HighPriorityMessageCallback(FDCAN_HandleTypeDef *hfdcan)
5906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10707              		.loc 1 5906 1
 10708              		.cfi_startproc
 10709              		@ args = 0, pretend = 0, frame = 8
 10710              		@ frame_needed = 1, uses_anonymous_args = 0
 10711              		@ link register save eliminated.
 10712 0000 80B4     		push	{r7}
 10713              	.LCFI526:
 10714              		.cfi_def_cfa_offset 4
 10715              		.cfi_offset 7, -4
 10716 0002 83B0     		sub	sp, sp, #12
 10717              	.LCFI527:
 10718              		.cfi_def_cfa_offset 16
 10719 0004 00AF     		add	r7, sp, #0
 10720              	.LCFI528:
 10721              		.cfi_def_cfa_register 7
 10722 0006 7860     		str	r0, [r7, #4]
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_HighPriorityMessageCallback could be implemented in the user file
5912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10723              		.loc 1 5913 1
 10724 0008 00BF     		nop
 10725 000a 0C37     		adds	r7, r7, #12
 10726              	.LCFI529:
 10727              		.cfi_def_cfa_offset 4
 10728 000c BD46     		mov	sp, r7
 10729              	.LCFI530:
 10730              		.cfi_def_cfa_register 13
 10731              		@ sp needed
 10732 000e 5DF8047B 		ldr	r7, [sp], #4
 10733              	.LCFI531:
 10734              		.cfi_restore 7
 10735              		.cfi_def_cfa_offset 0
 10736 0012 7047     		bx	lr
 10737              		.cfi_endproc
 10738              	.LFE233:
 10740              		.section	.text.HAL_FDCAN_ErrorCallback,"ax",%progbits
 10741              		.align	1
 10742              		.weak	HAL_FDCAN_ErrorCallback
 10743              		.syntax unified
 10744              		.thumb
 10745              		.thumb_func
 10747              	HAL_FDCAN_ErrorCallback:
 10748              	.LFB234:
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Error callback.
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ErrorCallback(FDCAN_HandleTypeDef *hfdcan)
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 312


5922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10749              		.loc 1 5922 1
 10750              		.cfi_startproc
 10751              		@ args = 0, pretend = 0, frame = 8
 10752              		@ frame_needed = 1, uses_anonymous_args = 0
 10753              		@ link register save eliminated.
 10754 0000 80B4     		push	{r7}
 10755              	.LCFI532:
 10756              		.cfi_def_cfa_offset 4
 10757              		.cfi_offset 7, -4
 10758 0002 83B0     		sub	sp, sp, #12
 10759              	.LCFI533:
 10760              		.cfi_def_cfa_offset 16
 10761 0004 00AF     		add	r7, sp, #0
 10762              	.LCFI534:
 10763              		.cfi_def_cfa_register 7
 10764 0006 7860     		str	r0, [r7, #4]
5923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ErrorCallback could be implemented in the user file
5928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10765              		.loc 1 5929 1
 10766 0008 00BF     		nop
 10767 000a 0C37     		adds	r7, r7, #12
 10768              	.LCFI535:
 10769              		.cfi_def_cfa_offset 4
 10770 000c BD46     		mov	sp, r7
 10771              	.LCFI536:
 10772              		.cfi_def_cfa_register 13
 10773              		@ sp needed
 10774 000e 5DF8047B 		ldr	r7, [sp], #4
 10775              	.LCFI537:
 10776              		.cfi_restore 7
 10777              		.cfi_def_cfa_offset 0
 10778 0012 7047     		bx	lr
 10779              		.cfi_endproc
 10780              	.LFE234:
 10782              		.section	.text.HAL_FDCAN_ErrorStatusCallback,"ax",%progbits
 10783              		.align	1
 10784              		.weak	HAL_FDCAN_ErrorStatusCallback
 10785              		.syntax unified
 10786              		.thumb
 10787              		.thumb_func
 10789              	HAL_FDCAN_ErrorStatusCallback:
 10790              	.LFB235:
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Error status callback.
5933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ErrorStatusITs indicates which Error Status interrupts are signaled.
5936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Error_Status_Interrupts.
5937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 313


5939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t ErrorStatusITs)
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10791              		.loc 1 5940 1
 10792              		.cfi_startproc
 10793              		@ args = 0, pretend = 0, frame = 8
 10794              		@ frame_needed = 1, uses_anonymous_args = 0
 10795              		@ link register save eliminated.
 10796 0000 80B4     		push	{r7}
 10797              	.LCFI538:
 10798              		.cfi_def_cfa_offset 4
 10799              		.cfi_offset 7, -4
 10800 0002 83B0     		sub	sp, sp, #12
 10801              	.LCFI539:
 10802              		.cfi_def_cfa_offset 16
 10803 0004 00AF     		add	r7, sp, #0
 10804              	.LCFI540:
 10805              		.cfi_def_cfa_register 7
 10806 0006 7860     		str	r0, [r7, #4]
 10807 0008 3960     		str	r1, [r7]
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(ErrorStatusITs);
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ErrorStatusCallback could be implemented in the user file
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10808              		.loc 1 5948 1
 10809 000a 00BF     		nop
 10810 000c 0C37     		adds	r7, r7, #12
 10811              	.LCFI541:
 10812              		.cfi_def_cfa_offset 4
 10813 000e BD46     		mov	sp, r7
 10814              	.LCFI542:
 10815              		.cfi_def_cfa_register 13
 10816              		@ sp needed
 10817 0010 5DF8047B 		ldr	r7, [sp], #4
 10818              	.LCFI543:
 10819              		.cfi_restore 7
 10820              		.cfi_def_cfa_offset 0
 10821 0014 7047     		bx	lr
 10822              		.cfi_endproc
 10823              	.LFE235:
 10825              		.section	.text.HAL_FDCAN_TT_ScheduleSyncCallback,"ax",%progbits
 10826              		.align	1
 10827              		.weak	HAL_FDCAN_TT_ScheduleSyncCallback
 10828              		.syntax unified
 10829              		.thumb
 10830              		.thumb_func
 10832              	HAL_FDCAN_TT_ScheduleSyncCallback:
 10833              	.LFB236:
5949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Schedule Synchronization callback.
5952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTSchedSyncITs indicates which TT Schedule Synchronization interrupts are signaled.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 314


5955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTScheduleSynchronization_Interrupt
5956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_ScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTSchedSyncITs)
5959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10834              		.loc 1 5959 1
 10835              		.cfi_startproc
 10836              		@ args = 0, pretend = 0, frame = 8
 10837              		@ frame_needed = 1, uses_anonymous_args = 0
 10838              		@ link register save eliminated.
 10839 0000 80B4     		push	{r7}
 10840              	.LCFI544:
 10841              		.cfi_def_cfa_offset 4
 10842              		.cfi_offset 7, -4
 10843 0002 83B0     		sub	sp, sp, #12
 10844              	.LCFI545:
 10845              		.cfi_def_cfa_offset 16
 10846 0004 00AF     		add	r7, sp, #0
 10847              	.LCFI546:
 10848              		.cfi_def_cfa_register 7
 10849 0006 7860     		str	r0, [r7, #4]
 10850 0008 3960     		str	r1, [r7]
5960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTSchedSyncITs);
5963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_ScheduleSyncCallback could be implemented in the user file
5966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10851              		.loc 1 5967 1
 10852 000a 00BF     		nop
 10853 000c 0C37     		adds	r7, r7, #12
 10854              	.LCFI547:
 10855              		.cfi_def_cfa_offset 4
 10856 000e BD46     		mov	sp, r7
 10857              	.LCFI548:
 10858              		.cfi_def_cfa_register 13
 10859              		@ sp needed
 10860 0010 5DF8047B 		ldr	r7, [sp], #4
 10861              	.LCFI549:
 10862              		.cfi_restore 7
 10863              		.cfi_def_cfa_offset 0
 10864 0014 7047     		bx	lr
 10865              		.cfi_endproc
 10866              	.LFE236:
 10868              		.section	.text.HAL_FDCAN_TT_TimeMarkCallback,"ax",%progbits
 10869              		.align	1
 10870              		.weak	HAL_FDCAN_TT_TimeMarkCallback
 10871              		.syntax unified
 10872              		.thumb
 10873              		.thumb_func
 10875              	HAL_FDCAN_TT_TimeMarkCallback:
 10876              	.LFB237:
5968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Time Mark callback.
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 315


5971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTTimeMarkITs indicates which TT Schedule Synchronization interrupts are signaled.
5974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTTimeMark_Interrupts.
5975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_TimeMarkCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTTimeMarkITs)
5978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10877              		.loc 1 5978 1
 10878              		.cfi_startproc
 10879              		@ args = 0, pretend = 0, frame = 8
 10880              		@ frame_needed = 1, uses_anonymous_args = 0
 10881              		@ link register save eliminated.
 10882 0000 80B4     		push	{r7}
 10883              	.LCFI550:
 10884              		.cfi_def_cfa_offset 4
 10885              		.cfi_offset 7, -4
 10886 0002 83B0     		sub	sp, sp, #12
 10887              	.LCFI551:
 10888              		.cfi_def_cfa_offset 16
 10889 0004 00AF     		add	r7, sp, #0
 10890              	.LCFI552:
 10891              		.cfi_def_cfa_register 7
 10892 0006 7860     		str	r0, [r7, #4]
 10893 0008 3960     		str	r1, [r7]
5979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTTimeMarkITs);
5982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
5984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_TimeMarkCallback could be implemented in the user file
5985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10894              		.loc 1 5986 1
 10895 000a 00BF     		nop
 10896 000c 0C37     		adds	r7, r7, #12
 10897              	.LCFI553:
 10898              		.cfi_def_cfa_offset 4
 10899 000e BD46     		mov	sp, r7
 10900              	.LCFI554:
 10901              		.cfi_def_cfa_register 13
 10902              		@ sp needed
 10903 0010 5DF8047B 		ldr	r7, [sp], #4
 10904              	.LCFI555:
 10905              		.cfi_restore 7
 10906              		.cfi_def_cfa_offset 0
 10907 0014 7047     		bx	lr
 10908              		.cfi_endproc
 10909              	.LFE237:
 10911              		.section	.text.HAL_FDCAN_TT_StopWatchCallback,"ax",%progbits
 10912              		.align	1
 10913              		.weak	HAL_FDCAN_TT_StopWatchCallback
 10914              		.syntax unified
 10915              		.thumb
 10916              		.thumb_func
 10918              	HAL_FDCAN_TT_StopWatchCallback:
 10919              	.LFB238:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 316


5987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Stop Watch callback.
5990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  SWTime Time Value captured at the Stop Watch Trigger pin (fdcan1_swt) falling/rising
5993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         edge (as configured via HAL_FDCAN_TTConfigStopWatch).
5994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is a number between 0 and 0xFFFF.
5995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  SWCycleCount Cycle count value captured together with SWTime.
5996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is a number between 0 and 0x3F.
5997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_StopWatchCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t SWTime, uint32_t S
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10920              		.loc 1 6000 1
 10921              		.cfi_startproc
 10922              		@ args = 0, pretend = 0, frame = 16
 10923              		@ frame_needed = 1, uses_anonymous_args = 0
 10924              		@ link register save eliminated.
 10925 0000 80B4     		push	{r7}
 10926              	.LCFI556:
 10927              		.cfi_def_cfa_offset 4
 10928              		.cfi_offset 7, -4
 10929 0002 85B0     		sub	sp, sp, #20
 10930              	.LCFI557:
 10931              		.cfi_def_cfa_offset 24
 10932 0004 00AF     		add	r7, sp, #0
 10933              	.LCFI558:
 10934              		.cfi_def_cfa_register 7
 10935 0006 F860     		str	r0, [r7, #12]
 10936 0008 B960     		str	r1, [r7, #8]
 10937 000a 7A60     		str	r2, [r7, #4]
6001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
6002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(SWTime);
6004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(SWCycleCount);
6005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
6007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_StopWatchCallback could be implemented in the user file
6008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10938              		.loc 1 6009 1
 10939 000c 00BF     		nop
 10940 000e 1437     		adds	r7, r7, #20
 10941              	.LCFI559:
 10942              		.cfi_def_cfa_offset 4
 10943 0010 BD46     		mov	sp, r7
 10944              	.LCFI560:
 10945              		.cfi_def_cfa_register 13
 10946              		@ sp needed
 10947 0012 5DF8047B 		ldr	r7, [sp], #4
 10948              	.LCFI561:
 10949              		.cfi_restore 7
 10950              		.cfi_def_cfa_offset 0
 10951 0016 7047     		bx	lr
 10952              		.cfi_endproc
 10953              	.LFE238:
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 317


 10955              		.section	.text.HAL_FDCAN_TT_GlobalTimeCallback,"ax",%progbits
 10956              		.align	1
 10957              		.weak	HAL_FDCAN_TT_GlobalTimeCallback
 10958              		.syntax unified
 10959              		.thumb
 10960              		.thumb_func
 10962              	HAL_FDCAN_TT_GlobalTimeCallback:
 10963              	.LFB239:
6010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Global Time callback.
6013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTGlobTimeITs indicates which TT Global Time interrupts are signaled.
6016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTGlobalTime_Interrupts.
6017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_GlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTGlobTimeITs)
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10964              		.loc 1 6020 1
 10965              		.cfi_startproc
 10966              		@ args = 0, pretend = 0, frame = 8
 10967              		@ frame_needed = 1, uses_anonymous_args = 0
 10968              		@ link register save eliminated.
 10969 0000 80B4     		push	{r7}
 10970              	.LCFI562:
 10971              		.cfi_def_cfa_offset 4
 10972              		.cfi_offset 7, -4
 10973 0002 83B0     		sub	sp, sp, #12
 10974              	.LCFI563:
 10975              		.cfi_def_cfa_offset 16
 10976 0004 00AF     		add	r7, sp, #0
 10977              	.LCFI564:
 10978              		.cfi_def_cfa_register 7
 10979 0006 7860     		str	r0, [r7, #4]
 10980 0008 3960     		str	r1, [r7]
6021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
6022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
6023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTGlobTimeITs);
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
6026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_GlobalTimeCallback could be implemented in the user file
6027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10981              		.loc 1 6028 1
 10982 000a 00BF     		nop
 10983 000c 0C37     		adds	r7, r7, #12
 10984              	.LCFI565:
 10985              		.cfi_def_cfa_offset 4
 10986 000e BD46     		mov	sp, r7
 10987              	.LCFI566:
 10988              		.cfi_def_cfa_register 13
 10989              		@ sp needed
 10990 0010 5DF8047B 		ldr	r7, [sp], #4
 10991              	.LCFI567:
 10992              		.cfi_restore 7
 10993              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 318


 10994 0014 7047     		bx	lr
 10995              		.cfi_endproc
 10996              	.LFE239:
 10998              		.section	.text.HAL_FDCAN_GetState,"ax",%progbits
 10999              		.align	1
 11000              		.global	HAL_FDCAN_GetState
 11001              		.syntax unified
 11002              		.thumb
 11003              		.thumb_func
 11005              	HAL_FDCAN_GetState:
 11006              	.LFB240:
6029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
6032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group7 Peripheral State functions
6035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *  @brief   FDCAN Peripheral State functions
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
6037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
6038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
6039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                       ##### Peripheral State functions #####
6040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
6041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
6042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     This subsection provides functions allowing to :
6043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetState()  : Return the FDCAN state.
6044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetError()  : Return the FDCAN error code if any.
6045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return the FDCAN state
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL state
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_FDCAN_StateTypeDef HAL_FDCAN_GetState(const FDCAN_HandleTypeDef *hfdcan)
6056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11007              		.loc 1 6056 1
 11008              		.cfi_startproc
 11009              		@ args = 0, pretend = 0, frame = 8
 11010              		@ frame_needed = 1, uses_anonymous_args = 0
 11011              		@ link register save eliminated.
 11012 0000 80B4     		push	{r7}
 11013              	.LCFI568:
 11014              		.cfi_def_cfa_offset 4
 11015              		.cfi_offset 7, -4
 11016 0002 83B0     		sub	sp, sp, #12
 11017              	.LCFI569:
 11018              		.cfi_def_cfa_offset 16
 11019 0004 00AF     		add	r7, sp, #0
 11020              	.LCFI570:
 11021              		.cfi_def_cfa_register 7
 11022 0006 7860     		str	r0, [r7, #4]
6057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return FDCAN state */
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->State;
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 319


 11023              		.loc 1 6058 16
 11024 0008 7B68     		ldr	r3, [r7, #4]
 11025 000a 93F89830 		ldrb	r3, [r3, #152]
 11026 000e DBB2     		uxtb	r3, r3
6059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11027              		.loc 1 6059 1
 11028 0010 1846     		mov	r0, r3
 11029 0012 0C37     		adds	r7, r7, #12
 11030              	.LCFI571:
 11031              		.cfi_def_cfa_offset 4
 11032 0014 BD46     		mov	sp, r7
 11033              	.LCFI572:
 11034              		.cfi_def_cfa_register 13
 11035              		@ sp needed
 11036 0016 5DF8047B 		ldr	r7, [sp], #4
 11037              	.LCFI573:
 11038              		.cfi_restore 7
 11039              		.cfi_def_cfa_offset 0
 11040 001a 7047     		bx	lr
 11041              		.cfi_endproc
 11042              	.LFE240:
 11044              		.section	.text.HAL_FDCAN_GetError,"ax",%progbits
 11045              		.align	1
 11046              		.global	HAL_FDCAN_GetError
 11047              		.syntax unified
 11048              		.thumb
 11049              		.thumb_func
 11051              	HAL_FDCAN_GetError:
 11052              	.LFB241:
6060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return the FDCAN error code
6063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval FDCAN Error Code
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetError(const FDCAN_HandleTypeDef *hfdcan)
6068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11053              		.loc 1 6068 1
 11054              		.cfi_startproc
 11055              		@ args = 0, pretend = 0, frame = 8
 11056              		@ frame_needed = 1, uses_anonymous_args = 0
 11057              		@ link register save eliminated.
 11058 0000 80B4     		push	{r7}
 11059              	.LCFI574:
 11060              		.cfi_def_cfa_offset 4
 11061              		.cfi_offset 7, -4
 11062 0002 83B0     		sub	sp, sp, #12
 11063              	.LCFI575:
 11064              		.cfi_def_cfa_offset 16
 11065 0004 00AF     		add	r7, sp, #0
 11066              	.LCFI576:
 11067              		.cfi_def_cfa_register 7
 11068 0006 7860     		str	r0, [r7, #4]
6069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return FDCAN error code */
6070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->ErrorCode;
 11069              		.loc 1 6070 16
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 320


 11070 0008 7B68     		ldr	r3, [r7, #4]
 11071 000a D3F89C30 		ldr	r3, [r3, #156]
6071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11072              		.loc 1 6071 1
 11073 000e 1846     		mov	r0, r3
 11074 0010 0C37     		adds	r7, r7, #12
 11075              	.LCFI577:
 11076              		.cfi_def_cfa_offset 4
 11077 0012 BD46     		mov	sp, r7
 11078              	.LCFI578:
 11079              		.cfi_def_cfa_register 13
 11080              		@ sp needed
 11081 0014 5DF8047B 		ldr	r7, [sp], #4
 11082              	.LCFI579:
 11083              		.cfi_restore 7
 11084              		.cfi_def_cfa_offset 0
 11085 0018 7047     		bx	lr
 11086              		.cfi_endproc
 11087              	.LFE241:
 11089              		.section	.text.FDCAN_CalcultateRamBlockAddresses,"ax",%progbits
 11090              		.align	1
 11091              		.syntax unified
 11092              		.thumb
 11093              		.thumb_func
 11095              	FDCAN_CalcultateRamBlockAddresses:
 11096              	.LFB242:
6072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
6079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Private_Functions FDCAN Private Functions
6082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
6083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Calculate each RAM block start address and size
6087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  */
6091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static HAL_StatusTypeDef FDCAN_CalcultateRamBlockAddresses(FDCAN_HandleTypeDef *hfdcan)
6092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11097              		.loc 1 6092 1
 11098              		.cfi_startproc
 11099              		@ args = 0, pretend = 0, frame = 16
 11100              		@ frame_needed = 1, uses_anonymous_args = 0
 11101              		@ link register save eliminated.
 11102 0000 80B4     		push	{r7}
 11103              	.LCFI580:
 11104              		.cfi_def_cfa_offset 4
 11105              		.cfi_offset 7, -4
 11106 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 321


 11107              	.LCFI581:
 11108              		.cfi_def_cfa_offset 24
 11109 0004 00AF     		add	r7, sp, #0
 11110              	.LCFI582:
 11111              		.cfi_def_cfa_register 7
 11112 0006 7860     		str	r0, [r7, #4]
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RAMcounter;
6094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StartAddress;
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress = hfdcan->Init.MessageRAMOffset;
 11113              		.loc 1 6096 16
 11114 0008 7B68     		ldr	r3, [r7, #4]
 11115 000a 5B6B     		ldr	r3, [r3, #52]
 11116 000c BB60     		str	r3, [r7, #8]
6097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Standard filter list start address */
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
 11117              		.loc 1 6099 3
 11118 000e 7B68     		ldr	r3, [r7, #4]
 11119 0010 1B68     		ldr	r3, [r3]
 11120 0012 D3F88420 		ldr	r2, [r3, #132]
 11121 0016 A74B     		ldr	r3, .L522
 11122 0018 1340     		ands	r3, r3, r2
 11123 001a BA68     		ldr	r2, [r7, #8]
 11124 001c 9100     		lsls	r1, r2, #2
 11125 001e 7A68     		ldr	r2, [r7, #4]
 11126 0020 1268     		ldr	r2, [r2]
 11127 0022 0B43     		orrs	r3, r3, r1
 11128 0024 C2F88430 		str	r3, [r2, #132]
6100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Standard filter elements number */
6102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_LSS, (hfdcan->Init.StdFiltersNbr << FDCAN_SIDFC_L
 11129              		.loc 1 6102 3
 11130 0028 7B68     		ldr	r3, [r7, #4]
 11131 002a 1B68     		ldr	r3, [r3]
 11132 002c D3F88430 		ldr	r3, [r3, #132]
 11133 0030 23F47F01 		bic	r1, r3, #16711680
 11134 0034 7B68     		ldr	r3, [r7, #4]
 11135 0036 9B6B     		ldr	r3, [r3, #56]
 11136 0038 1A04     		lsls	r2, r3, #16
 11137 003a 7B68     		ldr	r3, [r7, #4]
 11138 003c 1B68     		ldr	r3, [r3]
 11139 003e 0A43     		orrs	r2, r2, r1
 11140 0040 C3F88420 		str	r2, [r3, #132]
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Extended filter list start address */
6105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += hfdcan->Init.StdFiltersNbr;
 11141              		.loc 1 6105 31
 11142 0044 7B68     		ldr	r3, [r7, #4]
 11143 0046 9B6B     		ldr	r3, [r3, #56]
 11144              		.loc 1 6105 16
 11145 0048 BA68     		ldr	r2, [r7, #8]
 11146 004a 1344     		add	r3, r3, r2
 11147 004c BB60     		str	r3, [r7, #8]
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_FLESA, (StartAddress << FDCAN_XIDFC_FLESA_Pos));
 11148              		.loc 1 6106 3
 11149 004e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 322


 11150 0050 1B68     		ldr	r3, [r3]
 11151 0052 D3F88820 		ldr	r2, [r3, #136]
 11152 0056 974B     		ldr	r3, .L522
 11153 0058 1340     		ands	r3, r3, r2
 11154 005a BA68     		ldr	r2, [r7, #8]
 11155 005c 9100     		lsls	r1, r2, #2
 11156 005e 7A68     		ldr	r2, [r7, #4]
 11157 0060 1268     		ldr	r2, [r2]
 11158 0062 0B43     		orrs	r3, r3, r1
 11159 0064 C2F88830 		str	r3, [r2, #136]
6107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Extended filter elements number */
6109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_LSE, (hfdcan->Init.ExtFiltersNbr << FDCAN_XIDFC_L
 11160              		.loc 1 6109 3
 11161 0068 7B68     		ldr	r3, [r7, #4]
 11162 006a 1B68     		ldr	r3, [r3]
 11163 006c D3F88830 		ldr	r3, [r3, #136]
 11164 0070 23F4FE01 		bic	r1, r3, #8323072
 11165 0074 7B68     		ldr	r3, [r7, #4]
 11166 0076 DB6B     		ldr	r3, [r3, #60]
 11167 0078 1A04     		lsls	r2, r3, #16
 11168 007a 7B68     		ldr	r3, [r7, #4]
 11169 007c 1B68     		ldr	r3, [r3]
 11170 007e 0A43     		orrs	r2, r2, r1
 11171 0080 C3F88820 		str	r2, [r3, #136]
6110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 start address */
6112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.ExtFiltersNbr * 2U);
 11172              		.loc 1 6112 32
 11173 0084 7B68     		ldr	r3, [r7, #4]
 11174 0086 DB6B     		ldr	r3, [r3, #60]
 11175              		.loc 1 6112 47
 11176 0088 5B00     		lsls	r3, r3, #1
 11177              		.loc 1 6112 16
 11178 008a BA68     		ldr	r2, [r7, #8]
 11179 008c 1344     		add	r3, r3, r2
 11180 008e BB60     		str	r3, [r7, #8]
6113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0SA, (StartAddress << FDCAN_RXF0C_F0SA_Pos));
 11181              		.loc 1 6113 3
 11182 0090 7B68     		ldr	r3, [r7, #4]
 11183 0092 1B68     		ldr	r3, [r3]
 11184 0094 D3F8A020 		ldr	r2, [r3, #160]
 11185 0098 864B     		ldr	r3, .L522
 11186 009a 1340     		ands	r3, r3, r2
 11187 009c BA68     		ldr	r2, [r7, #8]
 11188 009e 9100     		lsls	r1, r2, #2
 11189 00a0 7A68     		ldr	r2, [r7, #4]
 11190 00a2 1268     		ldr	r2, [r2]
 11191 00a4 0B43     		orrs	r3, r3, r1
 11192 00a6 C2F8A030 		str	r3, [r2, #160]
6114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 elements number */
6116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0S, (hfdcan->Init.RxFifo0ElmtsNbr << FDCAN_RXF0C
 11193              		.loc 1 6116 3
 11194 00aa 7B68     		ldr	r3, [r7, #4]
 11195 00ac 1B68     		ldr	r3, [r3]
 11196 00ae D3F8A030 		ldr	r3, [r3, #160]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 323


 11197 00b2 23F4FE01 		bic	r1, r3, #8323072
 11198 00b6 7B68     		ldr	r3, [r7, #4]
 11199 00b8 1B6C     		ldr	r3, [r3, #64]
 11200 00ba 1A04     		lsls	r2, r3, #16
 11201 00bc 7B68     		ldr	r3, [r7, #4]
 11202 00be 1B68     		ldr	r3, [r3]
 11203 00c0 0A43     		orrs	r2, r2, r1
 11204 00c2 C3F8A020 		str	r2, [r3, #160]
6117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 start address */
6119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize);
 11205              		.loc 1 6119 32
 11206 00c6 7B68     		ldr	r3, [r7, #4]
 11207 00c8 1B6C     		ldr	r3, [r3, #64]
 11208              		.loc 1 6119 63
 11209 00ca 7A68     		ldr	r2, [r7, #4]
 11210 00cc 526C     		ldr	r2, [r2, #68]
 11211              		.loc 1 6119 49
 11212 00ce 02FB03F3 		mul	r3, r2, r3
 11213              		.loc 1 6119 16
 11214 00d2 BA68     		ldr	r2, [r7, #8]
 11215 00d4 1344     		add	r3, r3, r2
 11216 00d6 BB60     		str	r3, [r7, #8]
6120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1SA, (StartAddress << FDCAN_RXF1C_F1SA_Pos));
 11217              		.loc 1 6120 3
 11218 00d8 7B68     		ldr	r3, [r7, #4]
 11219 00da 1B68     		ldr	r3, [r3]
 11220 00dc D3F8B020 		ldr	r2, [r3, #176]
 11221 00e0 744B     		ldr	r3, .L522
 11222 00e2 1340     		ands	r3, r3, r2
 11223 00e4 BA68     		ldr	r2, [r7, #8]
 11224 00e6 9100     		lsls	r1, r2, #2
 11225 00e8 7A68     		ldr	r2, [r7, #4]
 11226 00ea 1268     		ldr	r2, [r2]
 11227 00ec 0B43     		orrs	r3, r3, r1
 11228 00ee C2F8B030 		str	r3, [r2, #176]
6121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 elements number */
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1S, (hfdcan->Init.RxFifo1ElmtsNbr << FDCAN_RXF1C
 11229              		.loc 1 6123 3
 11230 00f2 7B68     		ldr	r3, [r7, #4]
 11231 00f4 1B68     		ldr	r3, [r3]
 11232 00f6 D3F8B030 		ldr	r3, [r3, #176]
 11233 00fa 23F4FE01 		bic	r1, r3, #8323072
 11234 00fe 7B68     		ldr	r3, [r7, #4]
 11235 0100 9B6C     		ldr	r3, [r3, #72]
 11236 0102 1A04     		lsls	r2, r3, #16
 11237 0104 7B68     		ldr	r3, [r7, #4]
 11238 0106 1B68     		ldr	r3, [r3]
 11239 0108 0A43     		orrs	r2, r2, r1
 11240 010a C3F8B020 		str	r2, [r3, #176]
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx buffer list start address */
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize);
 11241              		.loc 1 6126 32
 11242 010e 7B68     		ldr	r3, [r7, #4]
 11243 0110 9B6C     		ldr	r3, [r3, #72]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 324


 11244              		.loc 1 6126 63
 11245 0112 7A68     		ldr	r2, [r7, #4]
 11246 0114 D26C     		ldr	r2, [r2, #76]
 11247              		.loc 1 6126 49
 11248 0116 02FB03F3 		mul	r3, r2, r3
 11249              		.loc 1 6126 16
 11250 011a BA68     		ldr	r2, [r7, #8]
 11251 011c 1344     		add	r3, r3, r2
 11252 011e BB60     		str	r3, [r7, #8]
6127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXBC, FDCAN_RXBC_RBSA, (StartAddress << FDCAN_RXBC_RBSA_Pos));
 11253              		.loc 1 6127 3
 11254 0120 7B68     		ldr	r3, [r7, #4]
 11255 0122 1B68     		ldr	r3, [r3]
 11256 0124 D3F8AC20 		ldr	r2, [r3, #172]
 11257 0128 624B     		ldr	r3, .L522
 11258 012a 1340     		ands	r3, r3, r2
 11259 012c BA68     		ldr	r2, [r7, #8]
 11260 012e 9100     		lsls	r1, r2, #2
 11261 0130 7A68     		ldr	r2, [r7, #4]
 11262 0132 1268     		ldr	r2, [r2]
 11263 0134 0B43     		orrs	r3, r3, r1
 11264 0136 C2F8AC30 		str	r3, [r2, #172]
6128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO start address */
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
 11265              		.loc 1 6130 32
 11266 013a 7B68     		ldr	r3, [r7, #4]
 11267 013c 1B6D     		ldr	r3, [r3, #80]
 11268              		.loc 1 6130 60
 11269 013e 7A68     		ldr	r2, [r7, #4]
 11270 0140 526D     		ldr	r2, [r2, #84]
 11271              		.loc 1 6130 46
 11272 0142 02FB03F3 		mul	r3, r2, r3
 11273              		.loc 1 6130 16
 11274 0146 BA68     		ldr	r2, [r7, #8]
 11275 0148 1344     		add	r3, r3, r2
 11276 014a BB60     		str	r3, [r7, #8]
6131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFSA, (StartAddress << FDCAN_TXEFC_EFSA_Pos));
 11277              		.loc 1 6131 3
 11278 014c 7B68     		ldr	r3, [r7, #4]
 11279 014e 1B68     		ldr	r3, [r3]
 11280 0150 D3F8F020 		ldr	r2, [r3, #240]
 11281 0154 574B     		ldr	r3, .L522
 11282 0156 1340     		ands	r3, r3, r2
 11283 0158 BA68     		ldr	r2, [r7, #8]
 11284 015a 9100     		lsls	r1, r2, #2
 11285 015c 7A68     		ldr	r2, [r7, #4]
 11286 015e 1268     		ldr	r2, [r2]
 11287 0160 0B43     		orrs	r3, r3, r1
 11288 0162 C2F8F030 		str	r3, [r2, #240]
6132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO elements number */
6134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFS, (hfdcan->Init.TxEventsNbr << FDCAN_TXEFC_EFS
 11289              		.loc 1 6134 3
 11290 0166 7B68     		ldr	r3, [r7, #4]
 11291 0168 1B68     		ldr	r3, [r3]
 11292 016a D3F8F030 		ldr	r3, [r3, #240]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 325


 11293 016e 23F47C11 		bic	r1, r3, #4128768
 11294 0172 7B68     		ldr	r3, [r7, #4]
 11295 0174 9B6D     		ldr	r3, [r3, #88]
 11296 0176 1A04     		lsls	r2, r3, #16
 11297 0178 7B68     		ldr	r3, [r7, #4]
 11298 017a 1B68     		ldr	r3, [r3]
 11299 017c 0A43     		orrs	r2, r2, r1
 11300 017e C3F8F020 		str	r2, [r3, #240]
6135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx buffer list start address */
6137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.TxEventsNbr * 2U);
 11301              		.loc 1 6137 32
 11302 0182 7B68     		ldr	r3, [r7, #4]
 11303 0184 9B6D     		ldr	r3, [r3, #88]
 11304              		.loc 1 6137 45
 11305 0186 5B00     		lsls	r3, r3, #1
 11306              		.loc 1 6137 16
 11307 0188 BA68     		ldr	r2, [r7, #8]
 11308 018a 1344     		add	r3, r3, r2
 11309 018c BB60     		str	r3, [r7, #8]
6138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TBSA, (StartAddress << FDCAN_TXBC_TBSA_Pos));
 11310              		.loc 1 6138 3
 11311 018e 7B68     		ldr	r3, [r7, #4]
 11312 0190 1B68     		ldr	r3, [r3]
 11313 0192 D3F8C020 		ldr	r2, [r3, #192]
 11314 0196 474B     		ldr	r3, .L522
 11315 0198 1340     		ands	r3, r3, r2
 11316 019a BA68     		ldr	r2, [r7, #8]
 11317 019c 9100     		lsls	r1, r2, #2
 11318 019e 7A68     		ldr	r2, [r7, #4]
 11319 01a0 1268     		ldr	r2, [r2]
 11320 01a2 0B43     		orrs	r3, r3, r1
 11321 01a4 C2F8C030 		str	r3, [r2, #192]
6139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Dedicated Tx buffers number */
6141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_NDTB, (hfdcan->Init.TxBuffersNbr << FDCAN_TXBC_NDTB
 11322              		.loc 1 6141 3
 11323 01a8 7B68     		ldr	r3, [r7, #4]
 11324 01aa 1B68     		ldr	r3, [r3]
 11325 01ac D3F8C030 		ldr	r3, [r3, #192]
 11326 01b0 23F47C11 		bic	r1, r3, #4128768
 11327 01b4 7B68     		ldr	r3, [r7, #4]
 11328 01b6 DB6D     		ldr	r3, [r3, #92]
 11329 01b8 1A04     		lsls	r2, r3, #16
 11330 01ba 7B68     		ldr	r3, [r7, #4]
 11331 01bc 1B68     		ldr	r3, [r3]
 11332 01be 0A43     		orrs	r2, r2, r1
 11333 01c0 C3F8C020 		str	r2, [r3, #192]
6142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx FIFO/queue elements number */
6144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TFQS, (hfdcan->Init.TxFifoQueueElmtsNbr << FDCAN_TX
 11334              		.loc 1 6144 3
 11335 01c4 7B68     		ldr	r3, [r7, #4]
 11336 01c6 1B68     		ldr	r3, [r3]
 11337 01c8 D3F8C030 		ldr	r3, [r3, #192]
 11338 01cc 23F07C51 		bic	r1, r3, #1056964608
 11339 01d0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 326


 11340 01d2 1B6E     		ldr	r3, [r3, #96]
 11341 01d4 1A06     		lsls	r2, r3, #24
 11342 01d6 7B68     		ldr	r3, [r7, #4]
 11343 01d8 1B68     		ldr	r3, [r3]
 11344 01da 0A43     		orrs	r2, r2, r1
 11345 01dc C3F8C020 		str	r2, [r3, #192]
6145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.StandardFilterSA = SRAMCAN_BASE + (hfdcan->Init.MessageRAMOffset * 4U);
 11346              		.loc 1 6146 65
 11347 01e0 7B68     		ldr	r3, [r7, #4]
 11348 01e2 5A6B     		ldr	r2, [r3, #52]
 11349              		.loc 1 6146 50
 11350 01e4 344B     		ldr	r3, .L522+4
 11351 01e6 1344     		add	r3, r3, r2
 11352 01e8 9A00     		lsls	r2, r3, #2
 11353              		.loc 1 6146 35
 11354 01ea 7B68     		ldr	r3, [r7, #4]
 11355 01ec DA66     		str	r2, [r3, #108]
6147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.ExtendedFilterSA = hfdcan->msgRam.StandardFilterSA + (hfdcan->Init.StdFiltersNbr *
 11356              		.loc 1 6147 51
 11357 01ee 7B68     		ldr	r3, [r7, #4]
 11358 01f0 DA6E     		ldr	r2, [r3, #108]
 11359              		.loc 1 6147 84
 11360 01f2 7B68     		ldr	r3, [r7, #4]
 11361 01f4 9B6B     		ldr	r3, [r3, #56]
 11362              		.loc 1 6147 99
 11363 01f6 9B00     		lsls	r3, r3, #2
 11364              		.loc 1 6147 69
 11365 01f8 1A44     		add	r2, r2, r3
 11366              		.loc 1 6147 35
 11367 01fa 7B68     		ldr	r3, [r7, #4]
 11368 01fc 1A67     		str	r2, [r3, #112]
6148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO0SA = hfdcan->msgRam.ExtendedFilterSA + (hfdcan->Init.ExtFiltersNbr * 2U * 4
 11369              		.loc 1 6148 44
 11370 01fe 7B68     		ldr	r3, [r7, #4]
 11371 0200 1A6F     		ldr	r2, [r3, #112]
 11372              		.loc 1 6148 77
 11373 0202 7B68     		ldr	r3, [r7, #4]
 11374 0204 DB6B     		ldr	r3, [r3, #60]
 11375              		.loc 1 6148 97
 11376 0206 DB00     		lsls	r3, r3, #3
 11377              		.loc 1 6148 62
 11378 0208 1A44     		add	r2, r2, r3
 11379              		.loc 1 6148 28
 11380 020a 7B68     		ldr	r3, [r7, #4]
 11381 020c 5A67     		str	r2, [r3, #116]
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO1SA = hfdcan->msgRam.RxFIFO0SA +
 11382              		.loc 1 6149 44
 11383 020e 7B68     		ldr	r3, [r7, #4]
 11384 0210 5A6F     		ldr	r2, [r3, #116]
6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize * 4U);
 11385              		.loc 1 6150 43
 11386 0212 7B68     		ldr	r3, [r7, #4]
 11387 0214 1B6C     		ldr	r3, [r3, #64]
 11388              		.loc 1 6150 74
 11389 0216 7968     		ldr	r1, [r7, #4]
 11390 0218 496C     		ldr	r1, [r1, #68]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 327


 11391              		.loc 1 6150 60
 11392 021a 01FB03F3 		mul	r3, r1, r3
 11393              		.loc 1 6150 91
 11394 021e 9B00     		lsls	r3, r3, #2
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO1SA = hfdcan->msgRam.RxFIFO0SA +
 11395              		.loc 1 6149 55
 11396 0220 1A44     		add	r2, r2, r3
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO1SA = hfdcan->msgRam.RxFIFO0SA +
 11397              		.loc 1 6149 28
 11398 0222 7B68     		ldr	r3, [r7, #4]
 11399 0224 9A67     		str	r2, [r3, #120]
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA +
 11400              		.loc 1 6151 45
 11401 0226 7B68     		ldr	r3, [r7, #4]
 11402 0228 9A6F     		ldr	r2, [r3, #120]
6152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize * 4U);
 11403              		.loc 1 6152 44
 11404 022a 7B68     		ldr	r3, [r7, #4]
 11405 022c 9B6C     		ldr	r3, [r3, #72]
 11406              		.loc 1 6152 75
 11407 022e 7968     		ldr	r1, [r7, #4]
 11408 0230 C96C     		ldr	r1, [r1, #76]
 11409              		.loc 1 6152 61
 11410 0232 01FB03F3 		mul	r3, r1, r3
 11411              		.loc 1 6152 92
 11412 0236 9B00     		lsls	r3, r3, #2
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA +
 11413              		.loc 1 6151 56
 11414 0238 1A44     		add	r2, r2, r3
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA +
 11415              		.loc 1 6151 29
 11416 023a 7B68     		ldr	r3, [r7, #4]
 11417 023c DA67     		str	r2, [r3, #124]
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxEventFIFOSA = hfdcan->msgRam.RxBufferSA +
 11418              		.loc 1 6153 48
 11419 023e 7B68     		ldr	r3, [r7, #4]
 11420 0240 DA6F     		ldr	r2, [r3, #124]
6154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                  (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize * 4U);
 11421              		.loc 1 6154 47
 11422 0242 7B68     		ldr	r3, [r7, #4]
 11423 0244 1B6D     		ldr	r3, [r3, #80]
 11424              		.loc 1 6154 75
 11425 0246 7968     		ldr	r1, [r7, #4]
 11426 0248 496D     		ldr	r1, [r1, #84]
 11427              		.loc 1 6154 61
 11428 024a 01FB03F3 		mul	r3, r1, r3
 11429              		.loc 1 6154 89
 11430 024e 9B00     		lsls	r3, r3, #2
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxEventFIFOSA = hfdcan->msgRam.RxBufferSA +
 11431              		.loc 1 6153 60
 11432 0250 1A44     		add	r2, r2, r3
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxEventFIFOSA = hfdcan->msgRam.RxBufferSA +
 11433              		.loc 1 6153 32
 11434 0252 7B68     		ldr	r3, [r7, #4]
 11435 0254 C3F88020 		str	r2, [r3, #128]
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxBufferSA = hfdcan->msgRam.TxEventFIFOSA + (hfdcan->Init.TxEventsNbr * 2U * 4U);
 11436              		.loc 1 6155 45
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 328


 11437 0258 7B68     		ldr	r3, [r7, #4]
 11438 025a D3F88020 		ldr	r2, [r3, #128]
 11439              		.loc 1 6155 75
 11440 025e 7B68     		ldr	r3, [r7, #4]
 11441 0260 9B6D     		ldr	r3, [r3, #88]
 11442              		.loc 1 6155 93
 11443 0262 DB00     		lsls	r3, r3, #3
 11444              		.loc 1 6155 60
 11445 0264 1A44     		add	r2, r2, r3
 11446              		.loc 1 6155 29
 11447 0266 7B68     		ldr	r3, [r7, #4]
 11448 0268 C3F88420 		str	r2, [r3, #132]
6156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.
 11449              		.loc 1 6156 44
 11450 026c 7B68     		ldr	r3, [r7, #4]
 11451 026e D3F88420 		ldr	r2, [r3, #132]
 11452              		.loc 1 6156 71
 11453 0272 7B68     		ldr	r3, [r7, #4]
 11454 0274 DB6D     		ldr	r3, [r3, #92]
 11455              		.loc 1 6156 99
 11456 0276 7968     		ldr	r1, [r7, #4]
 11457 0278 896E     		ldr	r1, [r1, #104]
 11458              		.loc 1 6156 85
 11459 027a 01FB03F3 		mul	r3, r1, r3
 11460              		.loc 1 6156 111
 11461 027e 9B00     		lsls	r3, r3, #2
 11462              		.loc 1 6156 56
 11463 0280 1A44     		add	r2, r2, r3
 11464              		.loc 1 6156 28
 11465 0282 7B68     		ldr	r3, [r7, #4]
 11466 0284 C3F88820 		str	r2, [r3, #136]
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.EndAddress = hfdcan->msgRam.TxFIFOQSA +
 11467              		.loc 1 6158 45
 11468 0288 7B68     		ldr	r3, [r7, #4]
 11469 028a D3F88820 		ldr	r2, [r3, #136]
6159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
 11470              		.loc 1 6159 44
 11471 028e 7B68     		ldr	r3, [r7, #4]
 11472 0290 1B6E     		ldr	r3, [r3, #96]
 11473              		.loc 1 6159 79
 11474 0292 7968     		ldr	r1, [r7, #4]
 11475 0294 896E     		ldr	r1, [r1, #104]
 11476              		.loc 1 6159 65
 11477 0296 01FB03F3 		mul	r3, r1, r3
 11478              		.loc 1 6159 91
 11479 029a 9B00     		lsls	r3, r3, #2
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
 11480              		.loc 1 6158 56
 11481 029c 1A44     		add	r2, r2, r3
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan->Init.TxElmtSize * 4U);
 11482              		.loc 1 6158 29
 11483 029e 7B68     		ldr	r3, [r7, #4]
 11484 02a0 C3F89020 		str	r2, [r3, #144]
6160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message RAM
 11485              		.loc 1 6161 21
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 329


 11486 02a4 7B68     		ldr	r3, [r7, #4]
 11487 02a6 D3F89030 		ldr	r3, [r3, #144]
 11488              		.loc 1 6161 6
 11489 02aa 044A     		ldr	r2, .L522+8
 11490 02ac 9342     		cmp	r3, r2
 11491 02ae 15D9     		bls	.L518
 11492 02b0 06E0     		b	.L523
 11493              	.L524:
 11494 02b2 00BF     		.align	2
 11495              	.L522:
 11496 02b4 0300FFFF 		.word	-65533
 11497 02b8 002B0010 		.word	268446464
 11498 02bc FCD30040 		.word	1073796092
 11499              	.L523:
6162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
6164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Message RAM overflow */
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 11500              		.loc 1 6165 11
 11501 02c0 7B68     		ldr	r3, [r7, #4]
 11502 02c2 D3F89C30 		ldr	r3, [r3, #156]
 11503              		.loc 1 6165 23
 11504 02c6 43F02002 		orr	r2, r3, #32
 11505 02ca 7B68     		ldr	r3, [r7, #4]
 11506 02cc C3F89C20 		str	r2, [r3, #156]
6166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN state */
6168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_ERROR;
 11507              		.loc 1 6168 19
 11508 02d0 7B68     		ldr	r3, [r7, #4]
 11509 02d2 0322     		movs	r2, #3
 11510 02d4 83F89820 		strb	r2, [r3, #152]
6169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11511              		.loc 1 6170 12
 11512 02d8 0123     		movs	r3, #1
 11513 02da 10E0     		b	.L519
 11514              	.L518:
6171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Flush the allocated Message RAM area */
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (RAMcounter = hfdcan->msgRam.StandardFilterSA; RAMcounter < hfdcan->msgRam.EndAddress; RAMc
 11515              		.loc 1 6175 21
 11516 02dc 7B68     		ldr	r3, [r7, #4]
 11517 02de DB6E     		ldr	r3, [r3, #108]
 11518 02e0 FB60     		str	r3, [r7, #12]
 11519              		.loc 1 6175 5
 11520 02e2 05E0     		b	.L520
 11521              	.L521:
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
6177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *(uint32_t *)(RAMcounter) = 0x00000000;
 11522              		.loc 1 6177 8
 11523 02e4 FB68     		ldr	r3, [r7, #12]
 11524              		.loc 1 6177 33
 11525 02e6 0022     		movs	r2, #0
 11526 02e8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 330


6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 11527              		.loc 1 6175 107 discriminator 3
 11528 02ea FB68     		ldr	r3, [r7, #12]
 11529 02ec 0433     		adds	r3, r3, #4
 11530 02ee FB60     		str	r3, [r7, #12]
 11531              	.L520:
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 11532              		.loc 1 6175 83 discriminator 1
 11533 02f0 7B68     		ldr	r3, [r7, #4]
 11534 02f2 D3F89030 		ldr	r3, [r3, #144]
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 11535              		.loc 1 6175 67 discriminator 1
 11536 02f6 FA68     		ldr	r2, [r7, #12]
 11537 02f8 9A42     		cmp	r2, r3
 11538 02fa F3D3     		bcc	.L521
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
6179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
6182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 11539              		.loc 1 6182 10
 11540 02fc 0023     		movs	r3, #0
 11541              	.L519:
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11542              		.loc 1 6183 1
 11543 02fe 1846     		mov	r0, r3
 11544 0300 1437     		adds	r7, r7, #20
 11545              	.LCFI583:
 11546              		.cfi_def_cfa_offset 4
 11547 0302 BD46     		mov	sp, r7
 11548              	.LCFI584:
 11549              		.cfi_def_cfa_register 13
 11550              		@ sp needed
 11551 0304 5DF8047B 		ldr	r7, [sp], #4
 11552              	.LCFI585:
 11553              		.cfi_restore 7
 11554              		.cfi_def_cfa_offset 0
 11555 0308 7047     		bx	lr
 11556              		.cfi_endproc
 11557              	.LFE242:
 11559 030a 00BF     		.section	.text.FDCAN_CopyMessageToRAM,"ax",%progbits
 11560              		.align	1
 11561              		.syntax unified
 11562              		.thumb
 11563              		.thumb_func
 11565              	FDCAN_CopyMessageToRAM:
 11566              	.LFB243:
6184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Copy Tx message to the message RAM.
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
6190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
6191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex index of the buffer to be configured.
6192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval none
6193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  */
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 331


6194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static void FDCAN_CopyMessageToRAM(const FDCAN_HandleTypeDef *hfdcan, const FDCAN_TxHeaderTypeDef *
6195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                    const uint8_t *pTxData, uint32_t BufferIndex)
6196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11567              		.loc 1 6196 1
 11568              		.cfi_startproc
 11569              		@ args = 0, pretend = 0, frame = 32
 11570              		@ frame_needed = 1, uses_anonymous_args = 0
 11571              		@ link register save eliminated.
 11572 0000 80B4     		push	{r7}
 11573              	.LCFI586:
 11574              		.cfi_def_cfa_offset 4
 11575              		.cfi_offset 7, -4
 11576 0002 89B0     		sub	sp, sp, #36
 11577              	.LCFI587:
 11578              		.cfi_def_cfa_offset 40
 11579 0004 00AF     		add	r7, sp, #0
 11580              	.LCFI588:
 11581              		.cfi_def_cfa_register 7
 11582 0006 F860     		str	r0, [r7, #12]
 11583 0008 B960     		str	r1, [r7, #8]
 11584 000a 7A60     		str	r2, [r7, #4]
 11585 000c 3B60     		str	r3, [r7]
6197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxElementW1;
6198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxElementW2;
6199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TxAddress;
6200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ByteCounter;
6201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Build first word of Tx header element */
6203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
 11586              		.loc 1 6203 16
 11587 000e BB68     		ldr	r3, [r7, #8]
 11588 0010 5B68     		ldr	r3, [r3, #4]
 11589              		.loc 1 6203 6
 11590 0012 002B     		cmp	r3, #0
 11591 0014 0AD1     		bne	.L526
6204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxElementW1 = (pTxHeader->ErrorStateIndicator |
 11592              		.loc 1 6205 29
 11593 0016 BB68     		ldr	r3, [r7, #8]
 11594 0018 1A69     		ldr	r2, [r3, #16]
6206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
6207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->TxFrameType |
 11595              		.loc 1 6207 29
 11596 001a BB68     		ldr	r3, [r7, #8]
 11597 001c 9B68     		ldr	r3, [r3, #8]
6206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
 11598              		.loc 1 6206 38
 11599 001e 1A43     		orrs	r2, r2, r3
6208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    (pTxHeader->Identifier << 18U));
 11600              		.loc 1 6208 30
 11601 0020 BB68     		ldr	r3, [r7, #8]
 11602 0022 1B68     		ldr	r3, [r3]
 11603              		.loc 1 6208 43
 11604 0024 9B04     		lsls	r3, r3, #18
6205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
 11605              		.loc 1 6205 17
 11606 0026 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 332


 11607 0028 FB61     		str	r3, [r7, #28]
 11608 002a 0AE0     		b	.L527
 11609              	.L526:
6209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
6211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxElementW1 = (pTxHeader->ErrorStateIndicator |
 11610              		.loc 1 6212 29
 11611 002c BB68     		ldr	r3, [r7, #8]
 11612 002e 1A69     		ldr	r2, [r3, #16]
6213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->TxFrameType |
 11613              		.loc 1 6214 29
 11614 0030 BB68     		ldr	r3, [r7, #8]
 11615 0032 9B68     		ldr	r3, [r3, #8]
6213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
 11616              		.loc 1 6213 38
 11617 0034 1A43     		orrs	r2, r2, r3
6215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->Identifier);
 11618              		.loc 1 6215 29
 11619 0036 BB68     		ldr	r3, [r7, #8]
 11620 0038 1B68     		ldr	r3, [r3]
6214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->Identifier);
 11621              		.loc 1 6214 43
 11622 003a 1343     		orrs	r3, r3, r2
6212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
 11623              		.loc 1 6212 17
 11624 003c 43F08043 		orr	r3, r3, #1073741824
 11625 0040 FB61     		str	r3, [r7, #28]
 11626              	.L527:
6216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Build second word of Tx header element */
6219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxElementW2 = ((pTxHeader->MessageMarker << 24U) |
 11627              		.loc 1 6219 28
 11628 0042 BB68     		ldr	r3, [r7, #8]
 11629 0044 1B6A     		ldr	r3, [r3, #32]
 11630              		.loc 1 6219 44
 11631 0046 1A06     		lsls	r2, r3, #24
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 11632              		.loc 1 6220 27
 11633 0048 BB68     		ldr	r3, [r7, #8]
 11634 004a DB69     		ldr	r3, [r3, #28]
6219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 11635              		.loc 1 6219 52
 11636 004c 1A43     		orrs	r2, r2, r3
6221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->FDFormat |
 11637              		.loc 1 6221 27
 11638 004e BB68     		ldr	r3, [r7, #8]
 11639 0050 9B69     		ldr	r3, [r3, #24]
6220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 11640              		.loc 1 6220 48
 11641 0052 1A43     		orrs	r2, r2, r3
6222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->BitRateSwitch |
 11642              		.loc 1 6222 27
 11643 0054 BB68     		ldr	r3, [r7, #8]
 11644 0056 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 333


6221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->FDFormat |
 11645              		.loc 1 6221 38
 11646 0058 1A43     		orrs	r2, r2, r3
6223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (pTxHeader->DataLength << 16U));
 11647              		.loc 1 6223 28
 11648 005a BB68     		ldr	r3, [r7, #8]
 11649 005c DB68     		ldr	r3, [r3, #12]
 11650              		.loc 1 6223 41
 11651 005e 1B04     		lsls	r3, r3, #16
6219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 11652              		.loc 1 6219 15
 11653 0060 1343     		orrs	r3, r3, r2
 11654 0062 3B61     		str	r3, [r7, #16]
6224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Calculate Tx element address */
6226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress = (uint32_t *)(hfdcan->msgRam.TxBufferSA + (BufferIndex * hfdcan->Init.TxElmtSize * 4U)
 11655              		.loc 1 6226 42
 11656 0064 FB68     		ldr	r3, [r7, #12]
 11657 0066 D3F88420 		ldr	r2, [r3, #132]
 11658              		.loc 1 6226 83
 11659 006a FB68     		ldr	r3, [r7, #12]
 11660 006c 9B6E     		ldr	r3, [r3, #104]
 11661              		.loc 1 6226 69
 11662 006e 3968     		ldr	r1, [r7]
 11663 0070 01FB03F3 		mul	r3, r1, r3
 11664              		.loc 1 6226 95
 11665 0074 9B00     		lsls	r3, r3, #2
 11666              		.loc 1 6226 54
 11667 0076 1344     		add	r3, r3, r2
 11668              		.loc 1 6226 13
 11669 0078 BB61     		str	r3, [r7, #24]
6227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Write Tx element header to the message RAM */
6229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *TxAddress = TxElementW1;
 11670              		.loc 1 6229 14
 11671 007a BB69     		ldr	r3, [r7, #24]
 11672 007c FA69     		ldr	r2, [r7, #28]
 11673 007e 1A60     		str	r2, [r3]
6230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress++;
 11674              		.loc 1 6230 12
 11675 0080 BB69     		ldr	r3, [r7, #24]
 11676 0082 0433     		adds	r3, r3, #4
 11677 0084 BB61     		str	r3, [r7, #24]
6231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *TxAddress = TxElementW2;
 11678              		.loc 1 6231 14
 11679 0086 BB69     		ldr	r3, [r7, #24]
 11680 0088 3A69     		ldr	r2, [r7, #16]
 11681 008a 1A60     		str	r2, [r3]
6232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress++;
 11682              		.loc 1 6232 12
 11683 008c BB69     		ldr	r3, [r7, #24]
 11684 008e 0433     		adds	r3, r3, #4
 11685 0090 BB61     		str	r3, [r7, #24]
6233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Write Tx payload to the message RAM */
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength]; ByteCounter += 4U)
 11686              		.loc 1 6235 20
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 334


 11687 0092 0023     		movs	r3, #0
 11688 0094 7B61     		str	r3, [r7, #20]
 11689              		.loc 1 6235 3
 11690 0096 20E0     		b	.L528
 11691              	.L529:
6236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24U) |
 11692              		.loc 1 6237 37
 11693 0098 7B69     		ldr	r3, [r7, #20]
 11694 009a 0333     		adds	r3, r3, #3
 11695 009c 7A68     		ldr	r2, [r7, #4]
 11696 009e 1344     		add	r3, r3, r2
 11697 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11698              		.loc 1 6237 56
 11699 00a2 1A06     		lsls	r2, r3, #24
6238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16U) |
 11700              		.loc 1 6238 37
 11701 00a4 7B69     		ldr	r3, [r7, #20]
 11702 00a6 0233     		adds	r3, r3, #2
 11703 00a8 7968     		ldr	r1, [r7, #4]
 11704 00aa 0B44     		add	r3, r3, r1
 11705 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11706              		.loc 1 6238 56
 11707 00ae 1B04     		lsls	r3, r3, #16
6237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16U) |
 11708              		.loc 1 6237 64
 11709 00b0 1A43     		orrs	r2, r2, r3
6239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 1U] << 8U)  |
 11710              		.loc 1 6239 37
 11711 00b2 7B69     		ldr	r3, [r7, #20]
 11712 00b4 0133     		adds	r3, r3, #1
 11713 00b6 7968     		ldr	r1, [r7, #4]
 11714 00b8 0B44     		add	r3, r3, r1
 11715 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11716              		.loc 1 6239 56
 11717 00bc 1B02     		lsls	r3, r3, #8
6238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16U) |
 11718              		.loc 1 6238 64
 11719 00be 1343     		orrs	r3, r3, r2
6240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   (uint32_t)pTxData[ByteCounter]);
 11720              		.loc 1 6240 36
 11721 00c0 7968     		ldr	r1, [r7, #4]
 11722 00c2 7A69     		ldr	r2, [r7, #20]
 11723 00c4 0A44     		add	r2, r2, r1
 11724 00c6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
6239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 1U] << 8U)  |
 11725              		.loc 1 6239 64
 11726 00c8 1A43     		orrs	r2, r2, r3
6237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16U) |
 11727              		.loc 1 6237 16
 11728 00ca BB69     		ldr	r3, [r7, #24]
 11729 00cc 1A60     		str	r2, [r3]
6241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxAddress++;
 11730              		.loc 1 6241 14
 11731 00ce BB69     		ldr	r3, [r7, #24]
 11732 00d0 0433     		adds	r3, r3, #4
 11733 00d2 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 335


6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 11734              		.loc 1 6235 86 discriminator 3
 11735 00d4 7B69     		ldr	r3, [r7, #20]
 11736 00d6 0433     		adds	r3, r3, #4
 11737 00d8 7B61     		str	r3, [r7, #20]
 11738              	.L528:
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 11739              		.loc 1 6235 59 discriminator 1
 11740 00da BB68     		ldr	r3, [r7, #8]
 11741 00dc DB68     		ldr	r3, [r3, #12]
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 11742              		.loc 1 6235 49 discriminator 1
 11743 00de 064A     		ldr	r2, .L530
 11744 00e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11745 00e2 1A46     		mov	r2, r3
6235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 11746              		.loc 1 6235 37 discriminator 1
 11747 00e4 7B69     		ldr	r3, [r7, #20]
 11748 00e6 9342     		cmp	r3, r2
 11749 00e8 D6D3     		bcc	.L529
6242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11750              		.loc 1 6243 1
 11751 00ea 00BF     		nop
 11752 00ec 00BF     		nop
 11753 00ee 2437     		adds	r7, r7, #36
 11754              	.LCFI589:
 11755              		.cfi_def_cfa_offset 4
 11756 00f0 BD46     		mov	sp, r7
 11757              	.LCFI590:
 11758              		.cfi_def_cfa_register 13
 11759              		@ sp needed
 11760 00f2 5DF8047B 		ldr	r7, [sp], #4
 11761              	.LCFI591:
 11762              		.cfi_restore 7
 11763              		.cfi_def_cfa_offset 0
 11764 00f6 7047     		bx	lr
 11765              	.L531:
 11766              		.align	2
 11767              	.L530:
 11768 00f8 00000000 		.word	DLCtoBytes
 11769              		.cfi_endproc
 11770              	.LFE243:
 11772              		.text
 11773              	.Letext0:
 11774              		.file 3 "C:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 11775              		.file 4 "C:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 11776              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 11777              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 11778              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 11779              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 11780              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 336


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_fdcan.c
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:20     .rodata.DLCtoBytes:00000000 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:23     .rodata.DLCtoBytes:00000000 DLCtoBytes
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:27     .rodata:00000000 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:49     .text.HAL_FDCAN_Init:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:55     .text.HAL_FDCAN_Init:00000000 HAL_FDCAN_Init
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:725    .text.HAL_FDCAN_MspInit:00000000 HAL_FDCAN_MspInit
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:389    .text.HAL_FDCAN_Init:0000021c $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:393    .text.HAL_FDCAN_Init:00000224 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11095  .text.FDCAN_CalcultateRamBlockAddresses:00000000 FDCAN_CalcultateRamBlockAddresses
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:643    .text.HAL_FDCAN_Init:000003b8 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:648    .text.HAL_FDCAN_DeInit:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:654    .text.HAL_FDCAN_DeInit:00000000 HAL_FDCAN_DeInit
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3267   .text.HAL_FDCAN_Stop:00000000 HAL_FDCAN_Stop
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:767    .text.HAL_FDCAN_MspDeInit:00000000 HAL_FDCAN_MspDeInit
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:719    .text.HAL_FDCAN_MspInit:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:761    .text.HAL_FDCAN_MspDeInit:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:803    .text.HAL_FDCAN_EnterPowerDownMode:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:809    .text.HAL_FDCAN_EnterPowerDownMode:00000000 HAL_FDCAN_EnterPowerDownMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:892    .text.HAL_FDCAN_ExitPowerDownMode:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:898    .text.HAL_FDCAN_ExitPowerDownMode:00000000 HAL_FDCAN_ExitPowerDownMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:989    .text.HAL_FDCAN_ConfigClockCalibration:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:995    .text.HAL_FDCAN_ConfigClockCalibration:00000000 HAL_FDCAN_ConfigClockCalibration
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1128   .text.HAL_FDCAN_ConfigClockCalibration:000000c0 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1136   .text.HAL_FDCAN_GetClockCalibrationState:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1142   .text.HAL_FDCAN_GetClockCalibrationState:00000000 HAL_FDCAN_GetClockCalibrationState
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1182   .text.HAL_FDCAN_GetClockCalibrationState:0000001c $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1187   .text.HAL_FDCAN_ResetClockCalibrationState:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1193   .text.HAL_FDCAN_ResetClockCalibrationState:00000000 HAL_FDCAN_ResetClockCalibrationState
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1273   .text.HAL_FDCAN_ResetClockCalibrationState:00000060 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1279   .text.HAL_FDCAN_GetClockCalibrationCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1285   .text.HAL_FDCAN_GetClockCalibrationCounter:00000000 HAL_FDCAN_GetClockCalibrationCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1351   .text.HAL_FDCAN_GetClockCalibrationCounter:00000040 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1356   .text.HAL_FDCAN_ConfigFilter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1362   .text.HAL_FDCAN_ConfigFilter:00000000 HAL_FDCAN_ConfigFilter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1564   .text.HAL_FDCAN_ConfigGlobalFilter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1570   .text.HAL_FDCAN_ConfigGlobalFilter:00000000 HAL_FDCAN_ConfigGlobalFilter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1651   .text.HAL_FDCAN_ConfigExtendedIdMask:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1657   .text.HAL_FDCAN_ConfigExtendedIdMask:00000000 HAL_FDCAN_ConfigExtendedIdMask
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1721   .text.HAL_FDCAN_ConfigRxFifoOverwrite:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1727   .text.HAL_FDCAN_ConfigRxFifoOverwrite:00000000 HAL_FDCAN_ConfigRxFifoOverwrite
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1815   .text.HAL_FDCAN_ConfigFifoWatermark:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1821   .text.HAL_FDCAN_ConfigFifoWatermark:00000000 HAL_FDCAN_ConfigFifoWatermark
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1926   .text.HAL_FDCAN_ConfigRamWatchdog:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:1932   .text.HAL_FDCAN_ConfigRamWatchdog:00000000 HAL_FDCAN_ConfigRamWatchdog
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2000   .text.HAL_FDCAN_ConfigTimestampCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2006   .text.HAL_FDCAN_ConfigTimestampCounter:00000000 HAL_FDCAN_ConfigTimestampCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2074   .text.HAL_FDCAN_EnableTimestampCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2080   .text.HAL_FDCAN_EnableTimestampCounter:00000000 HAL_FDCAN_EnableTimestampCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2148   .text.HAL_FDCAN_DisableTimestampCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2154   .text.HAL_FDCAN_DisableTimestampCounter:00000000 HAL_FDCAN_DisableTimestampCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2219   .text.HAL_FDCAN_GetTimestampCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2225   .text.HAL_FDCAN_GetTimestampCounter:00000000 HAL_FDCAN_GetTimestampCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2268   .text.HAL_FDCAN_ResetTimestampCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2274   .text.HAL_FDCAN_ResetTimestampCounter:00000000 HAL_FDCAN_ResetTimestampCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2339   .text.HAL_FDCAN_ConfigTimeoutCounter:00000000 $t
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 337


C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2345   .text.HAL_FDCAN_ConfigTimeoutCounter:00000000 HAL_FDCAN_ConfigTimeoutCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2418   .text.HAL_FDCAN_EnableTimeoutCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2424   .text.HAL_FDCAN_EnableTimeoutCounter:00000000 HAL_FDCAN_EnableTimeoutCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2489   .text.HAL_FDCAN_DisableTimeoutCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2495   .text.HAL_FDCAN_DisableTimeoutCounter:00000000 HAL_FDCAN_DisableTimeoutCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2560   .text.HAL_FDCAN_GetTimeoutCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2566   .text.HAL_FDCAN_GetTimeoutCounter:00000000 HAL_FDCAN_GetTimeoutCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2609   .text.HAL_FDCAN_ResetTimeoutCounter:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2615   .text.HAL_FDCAN_ResetTimeoutCounter:00000000 HAL_FDCAN_ResetTimeoutCounter
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2680   .text.HAL_FDCAN_ConfigTxDelayCompensation:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2686   .text.HAL_FDCAN_ConfigTxDelayCompensation:00000000 HAL_FDCAN_ConfigTxDelayCompensation
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2756   .text.HAL_FDCAN_EnableTxDelayCompensation:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2762   .text.HAL_FDCAN_EnableTxDelayCompensation:00000000 HAL_FDCAN_EnableTxDelayCompensation
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2827   .text.HAL_FDCAN_DisableTxDelayCompensation:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2833   .text.HAL_FDCAN_DisableTxDelayCompensation:00000000 HAL_FDCAN_DisableTxDelayCompensation
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2898   .text.HAL_FDCAN_EnableISOMode:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2904   .text.HAL_FDCAN_EnableISOMode:00000000 HAL_FDCAN_EnableISOMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2969   .text.HAL_FDCAN_DisableISOMode:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:2975   .text.HAL_FDCAN_DisableISOMode:00000000 HAL_FDCAN_DisableISOMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3040   .text.HAL_FDCAN_EnableEdgeFiltering:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3046   .text.HAL_FDCAN_EnableEdgeFiltering:00000000 HAL_FDCAN_EnableEdgeFiltering
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3111   .text.HAL_FDCAN_DisableEdgeFiltering:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3117   .text.HAL_FDCAN_DisableEdgeFiltering:00000000 HAL_FDCAN_DisableEdgeFiltering
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3182   .text.HAL_FDCAN_Start:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3188   .text.HAL_FDCAN_Start:00000000 HAL_FDCAN_Start
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3261   .text.HAL_FDCAN_Stop:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3436   .text.HAL_FDCAN_AddMessageToTxFifoQ:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3442   .text.HAL_FDCAN_AddMessageToTxFifoQ:00000000 HAL_FDCAN_AddMessageToTxFifoQ
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11565  .text.FDCAN_CopyMessageToRAM:00000000 FDCAN_CopyMessageToRAM
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3571   .text.HAL_FDCAN_AddMessageToTxBuffer:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3577   .text.HAL_FDCAN_AddMessageToTxBuffer:00000000 HAL_FDCAN_AddMessageToTxBuffer
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3763   .text.HAL_FDCAN_EnableTxBufferRequest:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3769   .text.HAL_FDCAN_EnableTxBufferRequest:00000000 HAL_FDCAN_EnableTxBufferRequest
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3833   .text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3839   .text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer:00000000 HAL_FDCAN_GetLatestTxFifoQRequestBuffer
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3878   .text.HAL_FDCAN_AbortTxRequest:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3884   .text.HAL_FDCAN_AbortTxRequest:00000000 HAL_FDCAN_AbortTxRequest
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3948   .text.HAL_FDCAN_GetRxMessage:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:3954   .text.HAL_FDCAN_GetRxMessage:00000000 HAL_FDCAN_GetRxMessage
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4445   .text.HAL_FDCAN_GetRxMessage:000002d4 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4450   .text.HAL_FDCAN_GetTxEvent:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4456   .text.HAL_FDCAN_GetTxEvent:00000000 HAL_FDCAN_GetTxEvent
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4686   .text.HAL_FDCAN_GetHighPriorityMessageStatus:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4692   .text.HAL_FDCAN_GetHighPriorityMessageStatus:00000000 HAL_FDCAN_GetHighPriorityMessageStatus
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4773   .text.HAL_FDCAN_GetProtocolStatus:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4779   .text.HAL_FDCAN_GetProtocolStatus:00000000 HAL_FDCAN_GetProtocolStatus
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4899   .text.HAL_FDCAN_GetErrorCounters:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4905   .text.HAL_FDCAN_GetErrorCounters:00000000 HAL_FDCAN_GetErrorCounters
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4977   .text.HAL_FDCAN_IsRxBufferMessageAvailable:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:4983   .text.HAL_FDCAN_IsRxBufferMessageAvailable:00000000 HAL_FDCAN_IsRxBufferMessageAvailable
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5094   .text.HAL_FDCAN_IsTxBufferMessagePending:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5100   .text.HAL_FDCAN_IsTxBufferMessagePending:00000000 HAL_FDCAN_IsTxBufferMessagePending
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5155   .text.HAL_FDCAN_GetRxFifoFillLevel:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5161   .text.HAL_FDCAN_GetRxFifoFillLevel:00000000 HAL_FDCAN_GetRxFifoFillLevel
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5223   .text.HAL_FDCAN_GetTxFifoFreeLevel:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5229   .text.HAL_FDCAN_GetTxFifoFreeLevel:00000000 HAL_FDCAN_GetTxFifoFreeLevel
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5275   .text.HAL_FDCAN_IsRestrictedOperationMode:00000000 $t
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 338


C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5281   .text.HAL_FDCAN_IsRestrictedOperationMode:00000000 HAL_FDCAN_IsRestrictedOperationMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5329   .text.HAL_FDCAN_ExitRestrictedOperationMode:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5335   .text.HAL_FDCAN_ExitRestrictedOperationMode:00000000 HAL_FDCAN_ExitRestrictedOperationMode
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5406   .text.HAL_FDCAN_TT_ConfigOperation:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5412   .text.HAL_FDCAN_TT_ConfigOperation:00000000 HAL_FDCAN_TT_ConfigOperation
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5771   .text.HAL_FDCAN_TT_ConfigOperation:00000254 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5782   .text.HAL_FDCAN_TT_ConfigReferenceMessage:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5788   .text.HAL_FDCAN_TT_ConfigReferenceMessage:00000000 HAL_FDCAN_TT_ConfigReferenceMessage
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5884   .text.HAL_FDCAN_TT_ConfigTrigger:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:5890   .text.HAL_FDCAN_TT_ConfigTrigger:00000000 HAL_FDCAN_TT_ConfigTrigger
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6137   .text.HAL_FDCAN_TT_SetGlobalTime:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6143   .text.HAL_FDCAN_TT_SetGlobalTime:00000000 HAL_FDCAN_TT_SetGlobalTime
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6307   .text.HAL_FDCAN_TT_SetGlobalTime:000000e8 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6312   .text.HAL_FDCAN_TT_SetClockSynchronization:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6318   .text.HAL_FDCAN_TT_SetClockSynchronization:00000000 HAL_FDCAN_TT_SetClockSynchronization
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6483   .text.HAL_FDCAN_TT_SetClockSynchronization:000000ec $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6488   .text.HAL_FDCAN_TT_ConfigStopWatch:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6494   .text.HAL_FDCAN_TT_ConfigStopWatch:00000000 HAL_FDCAN_TT_ConfigStopWatch
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6610   .text.HAL_FDCAN_TT_ConfigRegisterTimeMark:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6616   .text.HAL_FDCAN_TT_ConfigRegisterTimeMark:00000000 HAL_FDCAN_TT_ConfigRegisterTimeMark
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6848   .text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6854   .text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:00000000 HAL_FDCAN_TT_EnableRegisterTimeMarkPulse
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6964   .text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:6970   .text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:00000000 HAL_FDCAN_TT_DisableRegisterTimeMarkPulse
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7080   .text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7086   .text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:00000000 HAL_FDCAN_TT_EnableTriggerTimeMarkPulse
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7218   .text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7224   .text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:00000000 HAL_FDCAN_TT_DisableTriggerTimeMarkPulse
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7356   .text.HAL_FDCAN_TT_EnableHardwareGapControl:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7362   .text.HAL_FDCAN_TT_EnableHardwareGapControl:00000000 HAL_FDCAN_TT_EnableHardwareGapControl
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7494   .text.HAL_FDCAN_TT_DisableHardwareGapControl:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7500   .text.HAL_FDCAN_TT_DisableHardwareGapControl:00000000 HAL_FDCAN_TT_DisableHardwareGapControl
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7632   .text.HAL_FDCAN_TT_EnableTimeMarkGapControl:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7638   .text.HAL_FDCAN_TT_EnableTimeMarkGapControl:00000000 HAL_FDCAN_TT_EnableTimeMarkGapControl
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7770   .text.HAL_FDCAN_TT_DisableTimeMarkGapControl:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7776   .text.HAL_FDCAN_TT_DisableTimeMarkGapControl:00000000 HAL_FDCAN_TT_DisableTimeMarkGapControl
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7908   .text.HAL_FDCAN_TT_SetNextIsGap:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:7914   .text.HAL_FDCAN_TT_SetNextIsGap:00000000 HAL_FDCAN_TT_SetNextIsGap
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8067   .text.HAL_FDCAN_TT_SetEndOfGap:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8073   .text.HAL_FDCAN_TT_SetEndOfGap:00000000 HAL_FDCAN_TT_SetEndOfGap
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8226   .text.HAL_FDCAN_TT_ConfigExternalSyncPhase:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8232   .text.HAL_FDCAN_TT_ConfigExternalSyncPhase:00000000 HAL_FDCAN_TT_ConfigExternalSyncPhase
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8328   .text.HAL_FDCAN_TT_EnableExternalSynchronization:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8334   .text.HAL_FDCAN_TT_EnableExternalSynchronization:00000000 HAL_FDCAN_TT_EnableExternalSynchronization
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8444   .text.HAL_FDCAN_TT_DisableExternalSynchronization:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8450   .text.HAL_FDCAN_TT_DisableExternalSynchronization:00000000 HAL_FDCAN_TT_DisableExternalSynchronization
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8560   .text.HAL_FDCAN_TT_GetOperationStatus:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8566   .text.HAL_FDCAN_TT_GetOperationStatus:00000000 HAL_FDCAN_TT_GetOperationStatus
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8705   .text.HAL_FDCAN_ConfigInterruptLines:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8711   .text.HAL_FDCAN_ConfigInterruptLines:00000000 HAL_FDCAN_ConfigInterruptLines
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8802   .text.HAL_FDCAN_TT_ConfigInterruptLines:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8808   .text.HAL_FDCAN_TT_ConfigInterruptLines:00000000 HAL_FDCAN_TT_ConfigInterruptLines
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8899   .text.HAL_FDCAN_ActivateNotification:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:8905   .text.HAL_FDCAN_ActivateNotification:00000000 HAL_FDCAN_ActivateNotification
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9069   .text.HAL_FDCAN_ActivateNotification:000000ec $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9075   .text.HAL_FDCAN_DeactivateNotification:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9081   .text.HAL_FDCAN_DeactivateNotification:00000000 HAL_FDCAN_DeactivateNotification
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 339


C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9235   .text.HAL_FDCAN_DeactivateNotification:000000d4 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9241   .text.HAL_FDCAN_TT_ActivateNotification:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9247   .text.HAL_FDCAN_TT_ActivateNotification:00000000 HAL_FDCAN_TT_ActivateNotification
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9370   .text.HAL_FDCAN_TT_DeactivateNotification:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9376   .text.HAL_FDCAN_TT_DeactivateNotification:00000000 HAL_FDCAN_TT_DeactivateNotification
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9497   .text.HAL_FDCAN_IRQHandler:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9503   .text.HAL_FDCAN_IRQHandler:00000000 HAL_FDCAN_IRQHandler
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10705  .text.HAL_FDCAN_HighPriorityMessageCallback:00000000 HAL_FDCAN_HighPriorityMessageCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10536  .text.HAL_FDCAN_TxBufferAbortCallback:00000000 HAL_FDCAN_TxBufferAbortCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10279  .text.HAL_FDCAN_ClockCalibrationCallback:00000000 HAL_FDCAN_ClockCalibrationCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10322  .text.HAL_FDCAN_TxEventFifoCallback:00000000 HAL_FDCAN_TxEventFifoCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10365  .text.HAL_FDCAN_RxFifo0Callback:00000000 HAL_FDCAN_RxFifo0Callback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10408  .text.HAL_FDCAN_RxFifo1Callback:00000000 HAL_FDCAN_RxFifo1Callback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10451  .text.HAL_FDCAN_TxFifoEmptyCallback:00000000 HAL_FDCAN_TxFifoEmptyCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10493  .text.HAL_FDCAN_TxBufferCompleteCallback:00000000 HAL_FDCAN_TxBufferCompleteCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10579  .text.HAL_FDCAN_RxBufferNewMessageCallback:00000000 HAL_FDCAN_RxBufferNewMessageCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9903   .text.HAL_FDCAN_IRQHandler:00000274 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10621  .text.HAL_FDCAN_TimestampWraparoundCallback:00000000 HAL_FDCAN_TimestampWraparoundCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:9906   .text.HAL_FDCAN_IRQHandler:0000027c $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10663  .text.HAL_FDCAN_TimeoutOccurredCallback:00000000 HAL_FDCAN_TimeoutOccurredCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10789  .text.HAL_FDCAN_ErrorStatusCallback:00000000 HAL_FDCAN_ErrorStatusCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10832  .text.HAL_FDCAN_TT_ScheduleSyncCallback:00000000 HAL_FDCAN_TT_ScheduleSyncCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10875  .text.HAL_FDCAN_TT_TimeMarkCallback:00000000 HAL_FDCAN_TT_TimeMarkCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10918  .text.HAL_FDCAN_TT_StopWatchCallback:00000000 HAL_FDCAN_TT_StopWatchCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10962  .text.HAL_FDCAN_TT_GlobalTimeCallback:00000000 HAL_FDCAN_TT_GlobalTimeCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10747  .text.HAL_FDCAN_ErrorCallback:00000000 HAL_FDCAN_ErrorCallback
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10266  .text.HAL_FDCAN_IRQHandler:000004b0 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10273  .text.HAL_FDCAN_ClockCalibrationCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10316  .text.HAL_FDCAN_TxEventFifoCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10359  .text.HAL_FDCAN_RxFifo0Callback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10402  .text.HAL_FDCAN_RxFifo1Callback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10445  .text.HAL_FDCAN_TxFifoEmptyCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10487  .text.HAL_FDCAN_TxBufferCompleteCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10530  .text.HAL_FDCAN_TxBufferAbortCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10573  .text.HAL_FDCAN_RxBufferNewMessageCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10615  .text.HAL_FDCAN_TimestampWraparoundCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10657  .text.HAL_FDCAN_TimeoutOccurredCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10699  .text.HAL_FDCAN_HighPriorityMessageCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10741  .text.HAL_FDCAN_ErrorCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10783  .text.HAL_FDCAN_ErrorStatusCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10826  .text.HAL_FDCAN_TT_ScheduleSyncCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10869  .text.HAL_FDCAN_TT_TimeMarkCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10912  .text.HAL_FDCAN_TT_StopWatchCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10956  .text.HAL_FDCAN_TT_GlobalTimeCallback:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:10999  .text.HAL_FDCAN_GetState:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11005  .text.HAL_FDCAN_GetState:00000000 HAL_FDCAN_GetState
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11045  .text.HAL_FDCAN_GetError:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11051  .text.HAL_FDCAN_GetError:00000000 HAL_FDCAN_GetError
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11090  .text.FDCAN_CalcultateRamBlockAddresses:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11496  .text.FDCAN_CalcultateRamBlockAddresses:000002b4 $d
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11501  .text.FDCAN_CalcultateRamBlockAddresses:000002c0 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11560  .text.FDCAN_CopyMessageToRAM:00000000 $t
C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s:11768  .text.FDCAN_CopyMessageToRAM:000000f8 $d

UNDEFINED SYMBOLS
memcpy
HAL_GetTick
ARM GAS  C:\Users\fffff\AppData\Local\Temp\ccRejkcV.s 			page 340


